

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 27 16:44:08 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK7,global,class=BANK7,space=1,delta=1,noexec
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	text29,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1
    78                           	psect	text51,global,reloc=2,class=CODE,delta=1
    79                           	psect	text52,global,reloc=2,class=CODE,delta=1
    80                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text55,global,reloc=2,class=CODE,delta=1
    83                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text57,global,reloc=2,class=CODE,delta=1
    85                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=2,class=CODE,delta=1
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1
   118                           	psect	text91,global,reloc=2,class=CODE,delta=1
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1
   121                           	psect	text94,global,reloc=2,class=CODE,delta=1
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	text97,global,reloc=2,class=CODE,delta=1
   125                           	psect	text98,global,reloc=2,class=CODE,delta=1
   126                           	psect	text99,global,reloc=2,class=CODE,delta=1
   127                           	psect	text100,global,reloc=2,class=CODE,delta=1
   128                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text102,global,reloc=2,class=CODE,delta=1
   130                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text104,global,reloc=2,class=CODE,delta=1
   132                           	psect	text105,global,reloc=2,class=CODE,delta=1
   133                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text107,global,reloc=2,class=CODE,delta=1
   135                           	psect	text108,global,reloc=2,class=CODE,delta=1
   136                           	psect	text109,global,reloc=2,class=CODE,delta=1
   137                           	psect	text110,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	text117,global,reloc=2,class=CODE,delta=1
   145                           	psect	text118,global,reloc=2,class=CODE,delta=1
   146                           	psect	text119,global,reloc=2,class=CODE,delta=1
   147                           	psect	text120,global,reloc=2,class=CODE,delta=1
   148                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   149                           	psect	text122,global,reloc=2,class=CODE,delta=1
   150                           	psect	text123,global,reloc=2,class=CODE,delta=1
   151                           	psect	text124,global,reloc=2,class=CODE,delta=1
   152                           	psect	text125,global,reloc=2,class=CODE,delta=1
   153                           	psect	text126,global,reloc=2,class=CODE,delta=1
   154                           	psect	text127,global,reloc=2,class=CODE,delta=1
   155                           	psect	text128,global,reloc=2,class=CODE,delta=1
   156                           	psect	text129,global,reloc=2,class=CODE,delta=1
   157                           	psect	text130,global,reloc=2,class=CODE,delta=1
   158                           	psect	text131,global,reloc=2,class=CODE,delta=1
   159                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   160                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   161                           	psect	text133,global,reloc=2,class=CODE,delta=1
   162                           	psect	text134,global,reloc=2,class=CODE,delta=1
   163                           	psect	text135,global,reloc=2,class=CODE,delta=1
   164                           	psect	text136,global,reloc=2,class=CODE,delta=1
   165                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   166                           	psect	text137,global,reloc=2,class=CODE,delta=1
   167                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   168                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   169                           	dabs	1,0x400,48,_BDT
   170                           	dabs	1,0x438,8,_CtrlTrfData
   171                           	dabs	1,0x430,8,_SetupPkt
   172  0000                     
   173                           ; Version 1.45
   174                           ; Generated 16/11/2017 GMT
   175                           ; 
   176                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   177                           ; All rights reserved.
   178                           ; 
   179                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   180                           ; 
   181                           ; Redistribution and use in source and binary forms, with or without modification, are
   182                           ; permitted provided that the following conditions are met:
   183                           ; 
   184                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   185                           ;        conditions and the following disclaimer.
   186                           ; 
   187                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   188                           ;        of conditions and the following disclaimer in the documentation and/or other
   189                           ;        materials provided with the distribution.
   190                           ; 
   191                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   192                           ;        software without specific prior written permission.
   193                           ; 
   194                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   195                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   196                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   197                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   198                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   199                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   200                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   201                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   202                           ; 
   203                           ; 
   204                           ; Code-generator required, PIC18F46J50 Definitions
   205                           ; 
   206                           ; SFR Addresses
   207  0000                     
   208                           	psect	idataBANK0
   209  004474                     __pidataBANK0:
   210                           	opt stack 0
   211                           
   212                           ;initializer for _MainSystemTimebaseFlag
   213  004474  01                 	db	1
   214                           
   215                           	psect	idataBANK2
   216  004475                     __pidataBANK2:
   217                           	opt stack 0
   218                           
   219                           ;initializer for Terminal@EchoOption
   220  004475  01                 	db	1
   221                           
   222                           	psect	idataBANK3
   223  003D0A                     __pidataBANK3:
   224                           	opt stack 0
   225                           
   226                           ;initializer for _TaskTable
   227  003D0A  C8                 	db	low _I2cSlv_MainTask
   228  003D0B  39                 	db	high _I2cSlv_MainTask
   229  003D0C  00                 	db	0
   230  003D0D  0000               	dw	0
   231  003D0F  0001               	dw	1
   232  003D11  00                 	db	0
   233  003D12  3A                 	db	low _UsbDevice_MainTask
   234  003D13  41                 	db	high _UsbDevice_MainTask
   235  003D14  00                 	db	0
   236  003D15  0000               	dw	0
   237  003D17  0001               	dw	1
   238  003D19  00                 	db	0
   239  003D1A  5E                 	db	low _Wdg_MainTask
   240  003D1B  41                 	db	high _Wdg_MainTask
   241  003D1C  00                 	db	0
   242  003D1D  0000               	dw	0
   243  003D1F  0064               	dw	100
   244  003D21  00                 	db	0
   245  003D22  AC                 	db	low _Led_MainTask
   246  003D23  22                 	db	high _Led_MainTask
   247  003D24  00                 	db	0
   248  003D25  0000               	dw	0
   249  003D27  0032               	dw	50
   250  003D29  00                 	db	0
   251  003D2A  70                 	db	low _Rtcm_MainTask
   252  003D2B  32                 	db	high _Rtcm_MainTask
   253  003D2C  00                 	db	0
   254  003D2D  0000               	dw	0
   255  003D2F  0064               	dw	100
   256  003D31  00                 	db	0
   257  003D32  DA                 	db	low _Term_MainTask
   258  003D33  42                 	db	high _Term_MainTask
   259  003D34  00                 	db	0
   260  003D35  0000               	dw	0
   261  003D37  0001               	dw	1
   262  003D39  00                 	db	0
   263  003D3A  B8                 	db	low _MyApp_Task
   264  003D3B  3E                 	db	high _MyApp_Task
   265  003D3C  00                 	db	0
   266  003D3D  0000               	dw	0
   267  003D3F  0032               	dw	50
   268  003D41  00                 	db	0
   269                           
   270                           ;initializer for Term_MainSm@TermDelay
   271  003D42  01                 	db	1
   272  003D43  01                 	db	1
   273  003D44  0000               	dw	0
   274  003D46  0000               	dw	0
   275  003D48  0000               	dw	0
   276  003D4A  0000               	dw	0
   277  003D4C  00                 	db	0
   278                           
   279                           	psect	mediumconst
   280  00FD5E                     __pmediumconst:
   281                           	opt stack 0
   282  00FD5E  00                 	db	0
   283  00FD5F                     _USB_SD_Ptr:
   284                           	opt stack 0
   285  00FD5F  8E                 	db	low _sd000
   286  00FD60  FF                 	db	high _sd000
   287  00FD61  47                 	db	low _sd001
   288  00FD62  FF                 	db	high _sd001
   289  00FD63  21                 	db	low _sd002
   290  00FD64  FF                 	db	high _sd002
   291  00FD65                     __end_of_USB_SD_Ptr:
   292                           	opt stack 0
   293  00FD65                     _USB_CD_Ptr:
   294                           	opt stack 0
   295  00FD65  DE                 	db	low _configDescriptor1
   296  00FD66  FE                 	db	high _configDescriptor1
   297  00FD67                     __end_of_USB_CD_Ptr:
   298                           	opt stack 0
   299  00FD67                     _TaskNumber:
   300                           	opt stack 0
   301  00FD67  0007               	dw	7
   302  00FD69                     __end_of_TaskNumber:
   303                           	opt stack 0
   304  00FD69                     _MsgFormat:
   305                           	opt stack 0
   306  00FD69  48                 	db	72
   307  00FD6A  6F                 	db	111
   308  00FD6B  73                 	db	115
   309  00FD6C  74                 	db	116
   310  00FD6D  20                 	db	32
   311  00FD6E  6D                 	db	109
   312  00FD6F  65                 	db	101
   313  00FD70  73                 	db	115
   314  00FD71  73                 	db	115
   315  00FD72  61                 	db	97
   316  00FD73  67                 	db	103
   317  00FD74  65                 	db	101
   318  00FD75  20                 	db	32
   319  00FD76  66                 	db	102
   320  00FD77  6F                 	db	111
   321  00FD78  72                 	db	114
   322  00FD79  6D                 	db	109
   323  00FD7A  61                 	db	97
   324  00FD7B  74                 	db	116
   325  00FD7C  3A                 	db	58
   326  00FD7D  20                 	db	32
   327  00FD7E  0D                 	db	13
   328  00FD7F  0A                 	db	10
   329  00FD80  5B                 	db	91
   330  00FD81  6F                 	db	111
   331  00FD82  70                 	db	112
   332  00FD83  5F                 	db	95
   333  00FD84  74                 	db	116
   334  00FD85  79                 	db	121
   335  00FD86  70                 	db	112
   336  00FD87  65                 	db	101
   337  00FD88  5D                 	db	93
   338  00FD89  3A                 	db	58
   339  00FD8A  5B                 	db	91
   340  00FD8B  6F                 	db	111
   341  00FD8C  70                 	db	112
   342  00FD8D  5D                 	db	93
   343  00FD8E  3A                 	db	58
   344  00FD8F  5B                 	db	91
   345  00FD90  6C                 	db	108
   346  00FD91  65                 	db	101
   347  00FD92  6E                 	db	110
   348  00FD93  5D                 	db	93
   349  00FD94  3A                 	db	58
   350  00FD95  5B                 	db	91
   351  00FD96  61                 	db	97
   352  00FD97  64                 	db	100
   353  00FD98  64                 	db	100
   354  00FD99  72                 	db	114
   355  00FD9A  5D                 	db	93
   356  00FD9B  3A                 	db	58
   357  00FD9C  5B                 	db	91
   358  00FD9D  70                 	db	112
   359  00FD9E  61                 	db	97
   360  00FD9F  79                 	db	121
   361  00FDA0  6C                 	db	108
   362  00FDA1  6F                 	db	111
   363  00FDA2  61                 	db	97
   364  00FDA3  64                 	db	100
   365  00FDA4  5D                 	db	93
   366  00FDA5  0D                 	db	13
   367  00FDA6  0A                 	db	10
   368  00FDA7  0D                 	db	13
   369  00FDA8  0A                 	db	10
   370  00FDA9  5B                 	db	91
   371  00FDAA  6F                 	db	111
   372  00FDAB  70                 	db	112
   373  00FDAC  5F                 	db	95
   374  00FDAD  74                 	db	116
   375  00FDAE  79                 	db	121
   376  00FDAF  70                 	db	112
   377  00FDB0  65                 	db	101
   378  00FDB1  5D                 	db	93
   379  00FDB2  20                 	db	32
   380  00FDB3  3D                 	db	61
   381  00FDB4  20                 	db	32
   382  00FDB5  53                 	db	83
   383  00FDB6  4F                 	db	79
   384  00FDB7  2C                 	db	44
   385  00FDB8  53                 	db	83
   386  00FDB9  42                 	db	66
   387  00FDBA  0D                 	db	13
   388  00FDBB  0A                 	db	10
   389  00FDBC  5B                 	db	91
   390  00FDBD  6F                 	db	111
   391  00FDBE  70                 	db	112
   392  00FDBF  5D                 	db	93
   393  00FDC0  20                 	db	32
   394  00FDC1  3D                 	db	61
   395  00FDC2  20                 	db	32
   396  00FDC3  52                 	db	82
   397  00FDC4  3A                 	db	58
   398  00FDC5  20                 	db	32
   399  00FDC6  72                 	db	114
   400  00FDC7  65                 	db	101
   401  00FDC8  61                 	db	97
   402  00FDC9  64                 	db	100
   403  00FDCA  2C                 	db	44
   404  00FDCB  57                 	db	87
   405  00FDCC  3A                 	db	58
   406  00FDCD  20                 	db	32
   407  00FDCE  77                 	db	119
   408  00FDCF  72                 	db	114
   409  00FDD0  69                 	db	105
   410  00FDD1  74                 	db	116
   411  00FDD2  65                 	db	101
   412  00FDD3  0D                 	db	13
   413  00FDD4  0A                 	db	10
   414  00FDD5  5B                 	db	91
   415  00FDD6  6C                 	db	108
   416  00FDD7  65                 	db	101
   417  00FDD8  6E                 	db	110
   418  00FDD9  5D                 	db	93
   419  00FDDA  20                 	db	32
   420  00FDDB  3D                 	db	61
   421  00FDDC  20                 	db	32
   422  00FDDD  32                 	db	50
   423  00FDDE  20                 	db	32
   424  00FDDF  62                 	db	98
   425  00FDE0  79                 	db	121
   426  00FDE1  74                 	db	116
   427  00FDE2  65                 	db	101
   428  00FDE3  20                 	db	32
   429  00FDE4  41                 	db	65
   430  00FDE5  53                 	db	83
   431  00FDE6  43                 	db	67
   432  00FDE7  49                 	db	73
   433  00FDE8  49                 	db	73
   434  00FDE9  0D                 	db	13
   435  00FDEA  0A                 	db	10
   436  00FDEB  5B                 	db	91
   437  00FDEC  61                 	db	97
   438  00FDED  64                 	db	100
   439  00FDEE  64                 	db	100
   440  00FDEF  72                 	db	114
   441  00FDF0  5D                 	db	93
   442  00FDF1  20                 	db	32
   443  00FDF2  3D                 	db	61
   444  00FDF3  20                 	db	32
   445  00FDF4  32                 	db	50
   446  00FDF5  20                 	db	32
   447  00FDF6  62                 	db	98
   448  00FDF7  79                 	db	121
   449  00FDF8  74                 	db	116
   450  00FDF9  65                 	db	101
   451  00FDFA  20                 	db	32
   452  00FDFB  41                 	db	65
   453  00FDFC  53                 	db	83
   454  00FDFD  43                 	db	67
   455  00FDFE  49                 	db	73
   456  00FDFF  49                 	db	73
   457  00FE00  0D                 	db	13
   458  00FE01  0A                 	db	10
   459  00FE02  5B                 	db	91
   460  00FE03  70                 	db	112
   461  00FE04  61                 	db	97
   462  00FE05  79                 	db	121
   463  00FE06  6C                 	db	108
   464  00FE07  6F                 	db	111
   465  00FE08  61                 	db	97
   466  00FE09  64                 	db	100
   467  00FE0A  5D                 	db	93
   468  00FE0B  20                 	db	32
   469  00FE0C  3D                 	db	61
   470  00FE0D  20                 	db	32
   471  00FE0E  6D                 	db	109
   472  00FE0F  61                 	db	97
   473  00FE10  78                 	db	120
   474  00FE11  20                 	db	32
   475  00FE12  32                 	db	50
   476  00FE13  30                 	db	48
   477  00FE14  20                 	db	32
   478  00FE15  62                 	db	98
   479  00FE16  79                 	db	121
   480  00FE17  74                 	db	116
   481  00FE18  65                 	db	101
   482  00FE19  20                 	db	32
   483  00FE1A  41                 	db	65
   484  00FE1B  53                 	db	83
   485  00FE1C  43                 	db	67
   486  00FE1D  49                 	db	73
   487  00FE1E  49                 	db	73
   488  00FE1F  0D                 	db	13
   489  00FE20  0A                 	db	10
   490  00FE21  0D                 	db	13
   491  00FE22  0A                 	db	10
   492  00FE23  54                 	db	84
   493  00FE24  65                 	db	101
   494  00FE25  72                 	db	114
   495  00FE26  6D                 	db	109
   496  00FE27  69                 	db	105
   497  00FE28  6E                 	db	110
   498  00FE29  61                 	db	97
   499  00FE2A  6C                 	db	108
   500  00FE2B  20                 	db	32
   501  00FE2C  4D                 	db	77
   502  00FE2D  6F                 	db	111
   503  00FE2E  64                 	db	100
   504  00FE2F  65                 	db	101
   505  00FE30  3A                 	db	58
   506  00FE31  20                 	db	32
   507  00FE32  43                 	db	67
   508  00FE33  4F                 	db	79
   509  00FE34  4D                 	db	77
   510  00FE35  4D                 	db	77
   511  00FE36  41                 	db	65
   512  00FE37  4E                 	db	78
   513  00FE38  44                 	db	68
   514  00FE39  20                 	db	32
   515  00FE3A  4D                 	db	77
   516  00FE3B  4F                 	db	79
   517  00FE3C  44                 	db	68
   518  00FE3D  45                 	db	69
   519  00FE3E  0D                 	db	13
   520  00FE3F  0A                 	db	10
   521  00FE40  4D                 	db	77
   522  00FE41  6F                 	db	111
   523  00FE42  64                 	db	100
   524  00FE43  65                 	db	101
   525  00FE44  6D                 	db	109
   526  00FE45  20                 	db	32
   527  00FE46  54                 	db	84
   528  00FE47  79                 	db	121
   529  00FE48  70                 	db	112
   530  00FE49  65                 	db	101
   531  00FE4A  3A                 	db	58
   532  00FE4B  20                 	db	32
   533  00FE4C  4E                 	db	78
   534  00FE4D  6F                 	db	111
   535  00FE4E  6E                 	db	110
   536  00FE4F  65                 	db	101
   537  00FE50  0D                 	db	13
   538  00FE51  0A                 	db	10
   539  00FE52  0D                 	db	13
   540  00FE53  0A                 	db	10
   541  00FE54  00                 	db	0
   542  00FE55                     __end_of_MsgFormat:
   543                           	opt stack 0
   544  00FE55                     _Welcome:
   545                           	opt stack 0
   546  00FE55  2A                 	db	42
   547  00FE56  2A                 	db	42
   548  00FE57  2A                 	db	42
   549  00FE58  2A                 	db	42
   550  00FE59  2A                 	db	42
   551  00FE5A  2A                 	db	42
   552  00FE5B  2A                 	db	42
   553  00FE5C  2A                 	db	42
   554  00FE5D  2A                 	db	42
   555  00FE5E  2A                 	db	42
   556  00FE5F  2A                 	db	42
   557  00FE60  2A                 	db	42
   558  00FE61  2A                 	db	42
   559  00FE62  2A                 	db	42
   560  00FE63  2A                 	db	42
   561  00FE64  2A                 	db	42
   562  00FE65  2A                 	db	42
   563  00FE66  2A                 	db	42
   564  00FE67  2A                 	db	42
   565  00FE68  2A                 	db	42
   566  00FE69  2A                 	db	42
   567  00FE6A  2A                 	db	42
   568  00FE6B  2A                 	db	42
   569  00FE6C  2A                 	db	42
   570  00FE6D  2A                 	db	42
   571  00FE6E  2A                 	db	42
   572  00FE6F  2A                 	db	42
   573  00FE70  2A                 	db	42
   574  00FE71  2A                 	db	42
   575  00FE72  2A                 	db	42
   576  00FE73  2A                 	db	42
   577  00FE74  2A                 	db	42
   578  00FE75  2A                 	db	42
   579  00FE76  2A                 	db	42
   580  00FE77  2A                 	db	42
   581  00FE78  2A                 	db	42
   582  00FE79  2A                 	db	42
   583  00FE7A  2A                 	db	42
   584  00FE7B  2A                 	db	42
   585  00FE7C  2A                 	db	42
   586  00FE7D  2A                 	db	42
   587  00FE7E  2A                 	db	42
   588  00FE7F  2A                 	db	42
   589  00FE80  2A                 	db	42
   590  00FE81  2A                 	db	42
   591  00FE82  2A                 	db	42
   592  00FE83  2A                 	db	42
   593  00FE84  2A                 	db	42
   594  00FE85  2A                 	db	42
   595  00FE86  0D                 	db	13
   596  00FE87  0A                 	db	10
   597  00FE88  20                 	db	32
   598  00FE89  20                 	db	32
   599  00FE8A  20                 	db	32
   600  00FE8B  20                 	db	32
   601  00FE8C  20                 	db	32
   602  00FE8D  20                 	db	32
   603  00FE8E  20                 	db	32
   604  00FE8F  20                 	db	32
   605  00FE90  20                 	db	32
   606  00FE91  20                 	db	32
   607  00FE92  20                 	db	32
   608  00FE93  20                 	db	32
   609  00FE94  20                 	db	32
   610  00FE95  20                 	db	32
   611  00FE96  20                 	db	32
   612  00FE97  20                 	db	32
   613  00FE98  20                 	db	32
   614  00FE99  20                 	db	32
   615  00FE9A  4D                 	db	77
   616  00FE9B  45                 	db	69
   617  00FE9C  52                 	db	82
   618  00FE9D  43                 	db	67
   619  00FE9E  55                 	db	85
   620  00FE9F  52                 	db	82
   621  00FEA0  59                 	db	89
   622  00FEA1  20                 	db	32
   623  00FEA2  53                 	db	83
   624  00FEA3  59                 	db	89
   625  00FEA4  53                 	db	83
   626  00FEA5  54                 	db	84
   627  00FEA6  45                 	db	69
   628  00FEA7  4D                 	db	77
   629  00FEA8  0D                 	db	13
   630  00FEA9  0A                 	db	10
   631  00FEAA  2A                 	db	42
   632  00FEAB  2A                 	db	42
   633  00FEAC  2A                 	db	42
   634  00FEAD  2A                 	db	42
   635  00FEAE  2A                 	db	42
   636  00FEAF  2A                 	db	42
   637  00FEB0  2A                 	db	42
   638  00FEB1  2A                 	db	42
   639  00FEB2  2A                 	db	42
   640  00FEB3  2A                 	db	42
   641  00FEB4  2A                 	db	42
   642  00FEB5  2A                 	db	42
   643  00FEB6  2A                 	db	42
   644  00FEB7  2A                 	db	42
   645  00FEB8  2A                 	db	42
   646  00FEB9  2A                 	db	42
   647  00FEBA  2A                 	db	42
   648  00FEBB  2A                 	db	42
   649  00FEBC  2A                 	db	42
   650  00FEBD  2A                 	db	42
   651  00FEBE  2A                 	db	42
   652  00FEBF  2A                 	db	42
   653  00FEC0  2A                 	db	42
   654  00FEC1  2A                 	db	42
   655  00FEC2  2A                 	db	42
   656  00FEC3  2A                 	db	42
   657  00FEC4  2A                 	db	42
   658  00FEC5  2A                 	db	42
   659  00FEC6  2A                 	db	42
   660  00FEC7  2A                 	db	42
   661  00FEC8  2A                 	db	42
   662  00FEC9  2A                 	db	42
   663  00FECA  2A                 	db	42
   664  00FECB  2A                 	db	42
   665  00FECC  2A                 	db	42
   666  00FECD  2A                 	db	42
   667  00FECE  2A                 	db	42
   668  00FECF  2A                 	db	42
   669  00FED0  2A                 	db	42
   670  00FED1  2A                 	db	42
   671  00FED2  2A                 	db	42
   672  00FED3  2A                 	db	42
   673  00FED4  2A                 	db	42
   674  00FED5  2A                 	db	42
   675  00FED6  2A                 	db	42
   676  00FED7  2A                 	db	42
   677  00FED8  2A                 	db	42
   678  00FED9  2A                 	db	42
   679  00FEDA  2A                 	db	42
   680  00FEDB  0D                 	db	13
   681  00FEDC  0A                 	db	10
   682  00FEDD  00                 	db	0
   683  00FEDE                     __end_of_Welcome:
   684                           	opt stack 0
   685  00FEDE                     _configDescriptor1:
   686                           	opt stack 0
   687  00FEDE  09                 	db	9
   688  00FEDF  02                 	db	2
   689  00FEE0  43                 	db	67
   690  00FEE1  00                 	db	0
   691  00FEE2  02                 	db	2
   692  00FEE3  01                 	db	1
   693  00FEE4  00                 	db	0
   694  00FEE5  C0                 	db	192
   695  00FEE6  32                 	db	50
   696  00FEE7  09                 	db	9
   697  00FEE8  04                 	db	4
   698  00FEE9  00                 	db	0
   699  00FEEA  00                 	db	0
   700  00FEEB  01                 	db	1
   701  00FEEC  02                 	db	2
   702  00FEED  02                 	db	2
   703  00FEEE  01                 	db	1
   704  00FEEF  00                 	db	0
   705  00FEF0  05                 	db	5
   706  00FEF1  24                 	db	36
   707  00FEF2  00                 	db	0
   708  00FEF3  10                 	db	16
   709  00FEF4  01                 	db	1
   710  00FEF5  04                 	db	4
   711  00FEF6  24                 	db	36
   712  00FEF7  02                 	db	2
   713  00FEF8  02                 	db	2
   714  00FEF9  05                 	db	5
   715  00FEFA  24                 	db	36
   716  00FEFB  06                 	db	6
   717  00FEFC  00                 	db	0
   718  00FEFD  01                 	db	1
   719  00FEFE  05                 	db	5
   720  00FEFF  24                 	db	36
   721  00FF00  01                 	db	1
   722  00FF01  00                 	db	0
   723  00FF02  01                 	db	1
   724  00FF03  07                 	db	7
   725  00FF04  05                 	db	5
   726  00FF05  81                 	db	129
   727  00FF06  03                 	db	3
   728  00FF07  08                 	db	8
   729  00FF08  00                 	db	0
   730  00FF09  02                 	db	2
   731  00FF0A  09                 	db	9
   732  00FF0B  04                 	db	4
   733  00FF0C  01                 	db	1
   734  00FF0D  00                 	db	0
   735  00FF0E  02                 	db	2
   736  00FF0F  0A                 	db	10
   737  00FF10  00                 	db	0
   738  00FF11  00                 	db	0
   739  00FF12  00                 	db	0
   740  00FF13  07                 	db	7
   741  00FF14  05                 	db	5
   742  00FF15  02                 	db	2
   743  00FF16  02                 	db	2
   744  00FF17  40                 	db	64
   745  00FF18  00                 	db	0
   746  00FF19  00                 	db	0
   747  00FF1A  07                 	db	7
   748  00FF1B  05                 	db	5
   749  00FF1C  82                 	db	130
   750  00FF1D  02                 	db	2
   751  00FF1E  40                 	db	64
   752  00FF1F  00                 	db	0
   753  00FF20  00                 	db	0
   754  00FF21                     __end_of_configDescriptor1:
   755                           	opt stack 0
   756  00FF21                     _sd002:
   757                           	opt stack 0
   758  00FF21  26                 	db	38
   759  00FF22  03                 	db	3
   760  00FF23  0054               	dw	84
   761  00FF25  0065               	dw	101
   762  00FF27  0072               	dw	114
   763  00FF29  006D               	dw	109
   764  00FF2B  0069               	dw	105
   765  00FF2D  006E               	dw	110
   766  00FF2F  0061               	dw	97
   767  00FF31  006C               	dw	108
   768  00FF33  0020               	dw	32
   769  00FF35  0049               	dw	73
   770  00FF37  006E               	dw	110
   771  00FF39  0074               	dw	116
   772  00FF3B  0065               	dw	101
   773  00FF3D  0072               	dw	114
   774  00FF3F  0066               	dw	102
   775  00FF41  0061               	dw	97
   776  00FF43  0063               	dw	99
   777  00FF45  0065               	dw	101
   778  00FF47                     __end_of_sd002:
   779                           	opt stack 0
   780  00FF47                     _sd001:
   781                           	opt stack 0
   782  00FF47  1E                 	db	30
   783  00FF48  03                 	db	3
   784  00FF49  004D               	dw	77
   785  00FF4B  0065               	dw	101
   786  00FF4D  0072               	dw	114
   787  00FF4F  0063               	dw	99
   788  00FF51  0075               	dw	117
   789  00FF53  0072               	dw	114
   790  00FF55  0079               	dw	121
   791  00FF57  0020               	dw	32
   792  00FF59  0053               	dw	83
   793  00FF5B  0079               	dw	121
   794  00FF5D  0073               	dw	115
   795  00FF5F  0074               	dw	116
   796  00FF61  0065               	dw	101
   797  00FF63  006D               	dw	109
   798  00FF65                     __end_of_sd001:
   799                           	opt stack 0
   800  00FF65                     _MsgReady:
   801                           	opt stack 0
   802  00FF65  0D                 	db	13
   803  00FF66  0A                 	db	10
   804  00FF67  53                 	db	83
   805  00FF68  79                 	db	121
   806  00FF69  73                 	db	115
   807  00FF6A  74                 	db	116
   808  00FF6B  65                 	db	101
   809  00FF6C  6D                 	db	109
   810  00FF6D  20                 	db	32
   811  00FF6E  52                 	db	82
   812  00FF6F  65                 	db	101
   813  00FF70  61                 	db	97
   814  00FF71  64                 	db	100
   815  00FF72  79                 	db	121
   816  00FF73  2E                 	db	46
   817  00FF74  2E                 	db	46
   818  00FF75  2E                 	db	46
   819  00FF76  20                 	db	32
   820  00FF77  0D                 	db	13
   821  00FF78  0A                 	db	10
   822  00FF79  0D                 	db	13
   823  00FF7A  0A                 	db	10
   824  00FF7B  00                 	db	0
   825  00FF7C                     __end_of_MsgReady:
   826                           	opt stack 0
   827  00FF7C                     _device_dsc:
   828                           	opt stack 0
   829  00FF7C  12                 	db	18
   830  00FF7D  01                 	db	1
   831  00FF7E  0200               	dw	512
   832  00FF80  02                 	db	2
   833  00FF81  00                 	db	0
   834  00FF82  00                 	db	0
   835  00FF83  08                 	db	8
   836  00FF84  04D8               	dw	1240
   837  00FF86  000A               	dw	10
   838  00FF88  0100               	dw	256
   839  00FF8A  01                 	db	1
   840  00FF8B  02                 	db	2
   841  00FF8C  00                 	db	0
   842  00FF8D  01                 	db	1
   843  00FF8E                     __end_of_device_dsc:
   844                           	opt stack 0
   845  00FF8E                     _sd000:
   846                           	opt stack 0
   847  00FF8E  04                 	db	4
   848  00FF8F  03                 	db	3
   849  00FF90  0409               	dw	1033
   850  00FF92                     __end_of_sd000:
   851                           	opt stack 0
   852  0000                     _RPINR1	set	3815
   853  0000                     _UEP0bits	set	3878
   854  0000                     _UIEbits	set	3894
   855  0000                     _UADDR	set	3896
   856  0000                     _UIE	set	3894
   857  0000                     _UEIE	set	3895
   858  0000                     _UCFG	set	3897
   859  0000                     _RTCCAL	set	3902
   860  0000                     _PADCFG1bits	set	3900
   861  0000                     _RTCCFGbits	set	3903
   862  0000                     _DSCONLbits	set	3916
   863  0000                     _DSGPR1	set	3919
   864  0000                     _DSGPR0	set	3918
   865  0000                     _DSCONHbits	set	3917
   866  0000                     _ANCON1bits	set	3913
   867  0000                     _UEP1	set	3879
   868  0000                     _UEP0	set	3878
   869  0000                     _T1CONbits	set	4045
   870  0000                     _PORTDbits	set	3971
   871  0000                     _USTAT	set	3940
   872  0000                     _PIR2bits	set	4001
   873  0000                     _UCON	set	3941
   874  0000                     _UIRbits	set	3938
   875  0000                     _UCONbits	set	3941
   876  0000                     _UIR	set	3938
   877  0000                     _UEIR	set	3939
   878  0000                     _PIE2bits	set	4000
   879  0000                     _BAUDCON2	set	3964
   880  0000                     _RCSTA2	set	3996
   881  0000                     _BAUDCON1	set	3966
   882  0000                     _RCSTA1	set	4012
   883  0000                     _TRISCbits	set	3988
   884  0000                     _TXSTA2	set	4008
   885  0000                     _TXSTA1	set	4013
   886  0000                     _RCREG2	set	4010
   887  0000                     _RCREG1	set	4015
   888  0000                     _TXREG2	set	4009
   889  0000                     _TXREG1	set	4014
   890  0000                     _SPBRG2	set	4011
   891  0000                     _SPBRGH2	set	3965
   892  0000                     _SPBRG1	set	4016
   893  0000                     _SPBRGH1	set	3967
   894  0000                     _PR4	set	3959
   895  0000                     _PR2	set	4043
   896  0000                     _PIE1bits	set	3997
   897  0000                     _IPR1bits	set	3999
   898  0000                     _T4CONbits	set	3958
   899  0000                     _T2CONbits	set	4042
   900  0000                     _ALRMVALL	set	3982
   901  0000                     _ALRMVALH	set	3983
   902  0000                     _RTCVALH	set	3993
   903  0000                     _RTCVALL	set	3992
   904  0000                     _ALRMRPTbits	set	3984
   905  0000                     _ALRMCFGbits	set	3985
   906  0000                     _PIE3bits	set	4003
   907  0000                     _IPR3bits	set	4005
   908  0000                     _OSCCONbits	set	4051
   909  0000                     _WDTCONbits	set	4032
   910  0000                     _INTCON2bits	set	4081
   911  0000                     _TRISBbits	set	3987
   912  0000                     _OSCTUNEbits	set	3995
   913  0000                     _SSP2CON1	set	3954
   914  0000                     _TRISDbits	set	3989
   915  0000                     _SSP2BUF	set	3957
   916  0000                     _SSP2CON2bits	set	3953
   917  0000                     _SSP2STAT	set	3955
   918  0000                     _SSP2CON2	set	3953
   919  0000                     _SSP2ADD	set	3956
   920  0000                     _PIR1bits	set	3998
   921  0000                     _PIR3bits	set	4004
   922  0000                     _INTCON3bits	set	4080
   923  0000                     _INTCONbits	set	4082
   924  0000                     _RCONbits	set	4048
   925  00FF92                     STR_1:
   926  00FF92  20                 	db	32
   927  00FF93  4C                 	db	76	;'L'
   928  00FF94  61                 	db	97	;'a'
   929  00FF95  7A                 	db	122	;'z'
   930  00FF96  79                 	db	121	;'y'
   931  00FF97  20                 	db	32
   932  00FF98  64                 	db	100	;'d'
   933  00FF99  65                 	db	101	;'e'
   934  00FF9A  76                 	db	118	;'v'
   935  00FF9B  69                 	db	105	;'i'
   936  00FF9C  63                 	db	99	;'c'
   937  00FF9D  65                 	db	101	;'e'
   938  00FF9E  2E                 	db	46
   939  00FF9F  2E                 	db	46
   940  00FFA0  2E                 	db	46
   941  00FFA1  79                 	db	121	;'y'
   942  00FFA2  6F                 	db	111	;'o'
   943  00FFA3  75                 	db	117	;'u'
   944  00FFA4  27                 	db	39
   945  00FFA5  76                 	db	118	;'v'
   946  00FFA6  65                 	db	101	;'e'
   947  00FFA7  20                 	db	32
   948  00FFA8  62                 	db	98	;'b'
   949  00FFA9  65                 	db	101	;'e'
   950  00FFAA  65                 	db	101	;'e'
   951  00FFAB  6E                 	db	110	;'n'
   952  00FFAC  20                 	db	32
   953  00FFAD  74                 	db	116	;'t'
   954  00FFAE  69                 	db	105	;'i'
   955  00FFAF  6D                 	db	109	;'m'
   956  00FFB0  65                 	db	101	;'e'
   957  00FFB1  64                 	db	100	;'d'
   958  00FFB2  2D                 	db	45
   959  00FFB3  6F                 	db	111	;'o'
   960  00FFB4  75                 	db	117	;'u'
   961  00FFB5  74                 	db	116	;'t'
   962  00FFB6  21                 	db	33
   963  00FFB7  21                 	db	33
   964  00FFB8  21                 	db	33
   965  00FFB9  0D                 	db	13
   966  00FFBA  0A                 	db	10
   967  00FFBB  00                 	db	0
   968  00FFBC                     STR_3:
   969  00FFBC  46                 	db	70	;'F'
   970  00FFBD  72                 	db	114	;'r'
   971  00FFBE  61                 	db	97	;'a'
   972  00FFBF  6D                 	db	109	;'m'
   973  00FFC0  65                 	db	101	;'e'
   974  00FFC1  77                 	db	119	;'w'
   975  00FFC2  6F                 	db	111	;'o'
   976  00FFC3  72                 	db	114	;'r'
   977  00FFC4  6B                 	db	107	;'k'
   978  00FFC5  20                 	db	32
   979  00FFC6  56                 	db	86	;'V'
   980  00FFC7  65                 	db	101	;'e'
   981  00FFC8  72                 	db	114	;'r'
   982  00FFC9  73                 	db	115	;'s'
   983  00FFCA  69                 	db	105	;'i'
   984  00FFCB  6F                 	db	111	;'o'
   985  00FFCC  6E                 	db	110	;'n'
   986  00FFCD  3A                 	db	58	;':'
   987  00FFCE  20                 	db	32
   988  00FFCF  00                 	db	0
   989  00FFD0                     STR_7:
   990  00FFD0  42                 	db	66	;'B'
   991  00FFD1  75                 	db	117	;'u'
   992  00FFD2  69                 	db	105	;'i'
   993  00FFD3  6C                 	db	108	;'l'
   994  00FFD4  64                 	db	100	;'d'
   995  00FFD5  20                 	db	32
   996  00FFD6  44                 	db	68	;'D'
   997  00FFD7  61                 	db	97	;'a'
   998  00FFD8  74                 	db	116	;'t'
   999  00FFD9  65                 	db	101	;'e'
  1000  00FFDA  3A                 	db	58	;':'
  1001  00FFDB  20                 	db	32
  1002  00FFDC  25                 	db	37
  1003  00FFDD  73                 	db	115	;'s'
  1004  00FFDE  0D                 	db	13
  1005  00FFDF  0A                 	db	10
  1006  00FFE0  00                 	db	0
  1007  00FFE1                     STR_8:
  1008  00FFE1  4D                 	db	77	;'M'
  1009  00FFE2  61                 	db	97	;'a'
  1010  00FFE3  72                 	db	114	;'r'
  1011  00FFE4  20                 	db	32
  1012  00FFE5  32                 	db	50	;'2'
  1013  00FFE6  37                 	db	55	;'7'
  1014  00FFE7  20                 	db	32
  1015  00FFE8  32                 	db	50	;'2'
  1016  00FFE9  30                 	db	48	;'0'
  1017  00FFEA  32                 	db	50	;'2'
  1018  00FFEB  30                 	db	48	;'0'
  1019  00FFEC  00                 	db	0
  1020  00FFED                     STR_9:
  1021  00FFED  28                 	db	40
  1022  00FFEE  6E                 	db	110	;'n'
  1023  00FFEF  75                 	db	117	;'u'
  1024  00FFF0  6C                 	db	108	;'l'
  1025  00FFF1  6C                 	db	108	;'l'
  1026  00FFF2  29                 	db	41
  1027  00FFF3  00                 	db	0
  1028  00FFF4                     STR_4:
  1029  00FFF4  2E                 	db	46
  1030  00FFF5  00                 	db	0
  1031  0000                     
  1032                           ; #config settings
  1033  00FFF6  00                 	db	0	; dummy byte at the end
  1034  0000                     
  1035                           	psect	cinit
  1036  00269C                     __pcinit:
  1037                           	opt stack 0
  1038  00269C                     start_initialization:
  1039                           	opt stack 0
  1040  00269C                     __initialization:
  1041                           	opt stack 0
  1042                           
  1043                           ; Initialize objects allocated to BANK3 (67 bytes)
  1044                           ; load TBLPTR registers with __pidataBANK3
  1045  00269C  0E0A               	movlw	low __pidataBANK3
  1046  00269E  6EF6               	movwf	tblptrl,c
  1047  0026A0  0E3D               	movlw	high __pidataBANK3
  1048  0026A2  6EF7               	movwf	tblptrh,c
  1049  0026A4  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1050  0026A6  6EF8               	movwf	tblptru,c
  1051  0026A8  EE03  F08F         	lfsr	0,__pdataBANK3
  1052  0026AC  EE10 F043          	lfsr	1,67
  1053  0026B0                     copy_data0:
  1054  0026B0  0009               	tblrd		*+
  1055  0026B2  CFF5 FFEE          	movff	tablat,postinc0
  1056  0026B6  50E5               	movf	postdec1,w,c
  1057  0026B8  50E1               	movf	fsr1l,w,c
  1058  0026BA  E1FA               	bnz	copy_data0
  1059                           
  1060                           ; Initialize objects allocated to BANK2 (1 bytes)
  1061                           ; load TBLPTR registers with __pidataBANK2
  1062  0026BC  0E75               	movlw	low __pidataBANK2
  1063  0026BE  6EF6               	movwf	tblptrl,c
  1064  0026C0  0E44               	movlw	high __pidataBANK2
  1065  0026C2  6EF7               	movwf	tblptrh,c
  1066  0026C4  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1067  0026C6  6EF8               	movwf	tblptru,c
  1068  0026C8  0009               	tblrd		*+	;fetch initializer
  1069  0026CA  CFF5 F2FE          	movff	tablat,__pdataBANK2
  1070                           
  1071                           ; Initialize objects allocated to BANK0 (1 bytes)
  1072                           ; load TBLPTR registers with __pidataBANK0
  1073  0026CE  0E74               	movlw	low __pidataBANK0
  1074  0026D0  6EF6               	movwf	tblptrl,c
  1075  0026D2  0E44               	movlw	high __pidataBANK0
  1076  0026D4  6EF7               	movwf	tblptrh,c
  1077  0026D6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1078  0026D8  6EF8               	movwf	tblptru,c
  1079  0026DA  0009               	tblrd		*+	;fetch initializer
  1080  0026DC  CFF5 F0E2          	movff	tablat,__pdataBANK0
  1081                           
  1082                           ; Clear objects allocated to BIGRAMl (400 bytes)
  1083  0026E0  EE07  F0C8         	lfsr	0,__pbssBIGRAMl
  1084  0026E4  EE11 F090          	lfsr	1,400
  1085  0026E8                     clear_0:
  1086  0026E8  6AEE               	clrf	postinc0,c
  1087  0026EA  50E5               	movf	postdec1,w,c
  1088  0026EC  50E1               	movf	fsr1l,w,c
  1089  0026EE  E1FC               	bnz	clear_0
  1090  0026F0  50E2               	movf	fsr1h,w,c
  1091  0026F2  E1FA               	bnz	clear_0
  1092                           
  1093                           ; Clear objects allocated to BANK6 (80 bytes)
  1094  0026F4  EE06  F000         	lfsr	0,__pbssBANK6
  1095  0026F8  0E50               	movlw	80
  1096  0026FA                     clear_1:
  1097  0026FA  6AEE               	clrf	postinc0,c
  1098  0026FC  06E8               	decf	wreg,f,c
  1099  0026FE  E1FD               	bnz	clear_1
  1100                           
  1101                           ; Clear objects allocated to BANK5 (220 bytes)
  1102  002700  EE05  F000         	lfsr	0,__pbssBANK5
  1103  002704  0EDC               	movlw	220
  1104  002706                     clear_2:
  1105  002706  6AEE               	clrf	postinc0,c
  1106  002708  06E8               	decf	wreg,f,c
  1107  00270A  E1FD               	bnz	clear_2
  1108                           
  1109                           ; Clear objects allocated to BANK3 (143 bytes)
  1110  00270C  EE03  F000         	lfsr	0,__pbssBANK3
  1111  002710  0E8F               	movlw	143
  1112  002712                     clear_3:
  1113  002712  6AEE               	clrf	postinc0,c
  1114  002714  06E8               	decf	wreg,f,c
  1115  002716  E1FD               	bnz	clear_3
  1116                           
  1117                           ; Clear objects allocated to BANK2 (54 bytes)
  1118  002718  EE02  F0C8         	lfsr	0,__pbssBANK2
  1119  00271C  0E36               	movlw	54
  1120  00271E                     clear_4:
  1121  00271E  6AEE               	clrf	postinc0,c
  1122  002720  06E8               	decf	wreg,f,c
  1123  002722  E1FD               	bnz	clear_4
  1124                           
  1125                           ; Clear objects allocated to BANK1 (56 bytes)
  1126  002724  EE01  F000         	lfsr	0,__pbssBANK1
  1127  002728  0E38               	movlw	56
  1128  00272A                     clear_5:
  1129  00272A  6AEE               	clrf	postinc0,c
  1130  00272C  06E8               	decf	wreg,f,c
  1131  00272E  E1FD               	bnz	clear_5
  1132                           
  1133                           ; Clear objects allocated to BANK4 (178 bytes)
  1134  002730  EE04  F040         	lfsr	0,__pbssBANK4
  1135  002734  0EB2               	movlw	178
  1136  002736                     clear_6:
  1137  002736  6AEE               	clrf	postinc0,c
  1138  002738  06E8               	decf	wreg,f,c
  1139  00273A  E1FD               	bnz	clear_6
  1140                           
  1141                           ; Clear objects allocated to BANK0 (51 bytes)
  1142  00273C  EE00  F0AF         	lfsr	0,__pbssBANK0
  1143  002740  0E33               	movlw	51
  1144  002742                     clear_7:
  1145  002742  6AEE               	clrf	postinc0,c
  1146  002744  06E8               	decf	wreg,f,c
  1147  002746  E1FD               	bnz	clear_7
  1148                           
  1149                           ; Clear objects allocated to COMRAM (37 bytes)
  1150  002748  EE00  F001         	lfsr	0,__pbssCOMRAM
  1151  00274C  0E25               	movlw	37
  1152  00274E                     clear_8:
  1153  00274E  6AEE               	clrf	postinc0,c
  1154  002750  06E8               	decf	wreg,f,c
  1155  002752  E1FD               	bnz	clear_8
  1156  002754                     end_of_initialization:
  1157                           	opt stack 0
  1158  002754                     __end_of__initialization:
  1159                           	opt stack 0
  1160  002754  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1161  002756  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1162  002758  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1163  00275A  6EF8               	movwf	tblptru,c
  1164  00275C  0100               	movlb	0
  1165  00275E  EF07  F022         	goto	_main	;jump to C main() function
  1166                           tblptru	equ	0xFF8
  1167                           tblptrh	equ	0xFF7
  1168                           tblptrl	equ	0xFF6
  1169                           tablat	equ	0xFF5
  1170                           postinc0	equ	0xFEE
  1171                           wreg	equ	0xFE8
  1172                           postdec1	equ	0xFE5
  1173                           fsr1h	equ	0xFE2
  1174                           fsr1l	equ	0xFE1
  1175                           
  1176                           	psect	bssCOMRAM
  1177  000001                     __pbssCOMRAM:
  1178                           	opt stack 0
  1179  000001                     _outPipes:
  1180                           	opt stack 0
  1181  000001                     	ds	8
  1182  000009                     _ep_data_out:
  1183                           	opt stack 0
  1184  000009                     	ds	3
  1185  00000C                     _ep_data_in:
  1186                           	opt stack 0
  1187  00000C                     	ds	3
  1188  00000F                     _CDCDataInHandle:
  1189                           	opt stack 0
  1190  00000F                     	ds	2
  1191  000011                     _pDst:
  1192                           	opt stack 0
  1193  000011                     	ds	2
  1194  000013                     _Tmr4IsrCallback:
  1195                           	opt stack 0
  1196  000013                     	ds	2
  1197  000015                     _Tmr2IsrCallback:
  1198                           	opt stack 0
  1199  000015                     	ds	2
  1200  000017                     _control_signal_bitmap:
  1201                           	opt stack 0
  1202  000017                     	ds	1
  1203  000018                     _cdc_mem_type:
  1204                           	opt stack 0
  1205  000018                     	ds	1
  1206  000019                     I2cSlv_QueryI2cData@Ret:
  1207                           	opt stack 0
  1208  000019                     	ds	1
  1209  00001A                     _I2cBusStatus:
  1210                           	opt stack 0
  1211  00001A                     	ds	1
  1212  00001B                     Uart_Uart1RxIsr@UartRxData:
  1213                           	opt stack 0
  1214  00001B                     	ds	1
  1215  00001C                     _USBAlternateInterface:
  1216                           	opt stack 0
  1217  00001C                     	ds	2
  1218  00001E                     _AlarmEvent:
  1219                           	opt stack 0
  1220  00001E                     	ds	1
  1221  00001F                     _Led3OutSts:
  1222                           	opt stack 0
  1223  00001F                     	ds	1
  1224  000020                     _Led3Sts:
  1225                           	opt stack 0
  1226  000020                     	ds	1
  1227  000021                     _Led2OutSts:
  1228                           	opt stack 0
  1229  000021                     	ds	1
  1230  000022                     _Led2Sts:
  1231                           	opt stack 0
  1232  000022                     	ds	1
  1233  000023                     _Led1OutSts:
  1234                           	opt stack 0
  1235  000023                     	ds	1
  1236  000024                     _Led1Sts:
  1237                           	opt stack 0
  1238  000024                     	ds	1
  1239  000025                     I2cDummyTx@DummyBuffer:
  1240                           	opt stack 0
  1241  000025                     	ds	1
  1242                           tblptru	equ	0xFF8
  1243                           tblptrh	equ	0xFF7
  1244                           tblptrl	equ	0xFF6
  1245                           tablat	equ	0xFF5
  1246                           postinc0	equ	0xFEE
  1247                           wreg	equ	0xFE8
  1248                           postdec1	equ	0xFE5
  1249                           fsr1h	equ	0xFE2
  1250                           fsr1l	equ	0xFE1
  1251                           
  1252                           	psect	bssBANK0
  1253  0000AF                     __pbssBANK0:
  1254                           	opt stack 0
  1255  0000AF                     _inPipes:
  1256                           	opt stack 0
  1257  0000AF                     	ds	6
  1258  0000B5                     _pBDTEntryIn:
  1259                           	opt stack 0
  1260  0000B5                     	ds	6
  1261  0000BB                     _CDCDataOutHandle:
  1262                           	opt stack 0
  1263  0000BB                     	ds	2
  1264  0000BD                     _pBDTEntryEP0OutNext:
  1265                           	opt stack 0
  1266  0000BD                     	ds	2
  1267  0000BF                     _pBDTEntryEP0OutCurrent:
  1268                           	opt stack 0
  1269  0000BF                     	ds	2
  1270  0000C1                     _cdc_tx_len:
  1271                           	opt stack 0
  1272  0000C1                     	ds	1
  1273  0000C2                     _cdc_trf_state:
  1274                           	opt stack 0
  1275  0000C2                     	ds	1
  1276  0000C3                     _cdc_rx_len:
  1277                           	opt stack 0
  1278  0000C3                     	ds	1
  1279  0000C4                     _USBTicksSinceSuspendEnd:
  1280                           	opt stack 0
  1281  0000C4                     	ds	1
  1282  0000C5                     _USBDeferOUTDataStagePackets:
  1283                           	opt stack 0
  1284  0000C5                     	ds	1
  1285  0000C6                     _USBDeferINDataStagePackets:
  1286                           	opt stack 0
  1287  0000C6                     	ds	1
  1288  0000C7                     _USBStatusStageEnabledFlag2:
  1289                           	opt stack 0
  1290  0000C7                     	ds	1
  1291  0000C8                     _USBStatusStageEnabledFlag1:
  1292                           	opt stack 0
  1293  0000C8                     	ds	1
  1294  0000C9                     _USBDeferStatusStagePacket:
  1295                           	opt stack 0
  1296  0000C9                     	ds	1
  1297  0000CA                     _USBStatusStageTimeoutCounter:
  1298                           	opt stack 0
  1299  0000CA                     	ds	1
  1300  0000CB                     _BothEP0OutUOWNsSet:
  1301                           	opt stack 0
  1302  0000CB                     	ds	1
  1303  0000CC                     _endpoint_number:
  1304                           	opt stack 0
  1305  0000CC                     	ds	1
  1306  0000CD                     _USBBusIsSuspended:
  1307                           	opt stack 0
  1308  0000CD                     	ds	1
  1309  0000CE                     _RemoteWakeup:
  1310                           	opt stack 0
  1311  0000CE                     	ds	1
  1312  0000CF                     _controlTransferState:
  1313                           	opt stack 0
  1314  0000CF                     	ds	1
  1315  0000D0                     _shortPacketStatus:
  1316                           	opt stack 0
  1317  0000D0                     	ds	1
  1318  0000D1                     _USBDeviceState:
  1319                           	opt stack 0
  1320  0000D1                     	ds	1
  1321  0000D2                     I2cSlv_QueryI2cData@I2cOpState:
  1322                           	opt stack 0
  1323  0000D2                     	ds	1
  1324  0000D3                     I2cSendMsgSm@I2cComState:
  1325                           	opt stack 0
  1326  0000D3                     	ds	1
  1327  0000D4                     _I2cComSts:
  1328                           	opt stack 0
  1329  0000D4                     	ds	1
  1330  0000D5                     _SystemState:
  1331                           	opt stack 0
  1332  0000D5                     	ds	1
  1333  0000D6                     I2c_ReadData@ReadStatus:
  1334                           	opt stack 0
  1335  0000D6                     	ds	1
  1336  0000D7                     I2c_ReadData@TentativeCounter:
  1337                           	opt stack 0
  1338  0000D7                     	ds	1
  1339  0000D8                     I2c_ReadData@DataCounter:
  1340                           	opt stack 0
  1341  0000D8                     	ds	1
  1342  0000D9                     I2c_ReadData@I2cReadState:
  1343                           	opt stack 0
  1344  0000D9                     	ds	1
  1345  0000DA                     I2c_WriteData@WriteStatus:
  1346                           	opt stack 0
  1347  0000DA                     	ds	1
  1348  0000DB                     I2c_WriteData@TentativeCounter:
  1349                           	opt stack 0
  1350  0000DB                     	ds	1
  1351  0000DC                     I2c_WriteData@I2cNextState:
  1352                           	opt stack 0
  1353  0000DC                     	ds	1
  1354  0000DD                     I2c_WriteData@I2cWriteState:
  1355                           	opt stack 0
  1356  0000DD                     	ds	1
  1357  0000DE                     _USTATcopy:
  1358                           	opt stack 0
  1359  0000DE                     	ds	1
  1360  0000DF                     _USBActiveConfiguration:
  1361                           	opt stack 0
  1362  0000DF                     	ds	1
  1363  0000E0                     _I2cReadDataEvt:
  1364                           	opt stack 0
  1365  0000E0                     	ds	1
  1366  0000E1                     _I2cWriteDataEvt:
  1367                           	opt stack 0
  1368  0000E1                     	ds	1
  1369                           tblptru	equ	0xFF8
  1370                           tblptrh	equ	0xFF7
  1371                           tblptrl	equ	0xFF6
  1372                           tablat	equ	0xFF5
  1373                           postinc0	equ	0xFEE
  1374                           wreg	equ	0xFE8
  1375                           postdec1	equ	0xFE5
  1376                           fsr1h	equ	0xFE2
  1377                           fsr1l	equ	0xFE1
  1378                           
  1379                           	psect	dataBANK0
  1380  0000E2                     __pdataBANK0:
  1381                           	opt stack 0
  1382  0000E2                     _MainSystemTimebaseFlag:
  1383                           	opt stack 0
  1384  0000E2                     	ds	1
  1385                           tblptru	equ	0xFF8
  1386                           tblptrh	equ	0xFF7
  1387                           tblptrl	equ	0xFF6
  1388                           tablat	equ	0xFF5
  1389                           postinc0	equ	0xFEE
  1390                           wreg	equ	0xFE8
  1391                           postdec1	equ	0xFE5
  1392                           fsr1h	equ	0xFE2
  1393                           fsr1l	equ	0xFE1
  1394                           
  1395                           	psect	bssBANK1
  1396  000100                     __pbssBANK1:
  1397                           	opt stack 0
  1398  000100                     _pBDTEntryOut:
  1399                           	opt stack 0
  1400  000100                     	ds	6
  1401  000106                     _OsTmr_OsTickCounter:
  1402                           	opt stack 0
  1403  000106                     	ds	4
  1404  00010A                     _pCDCDst:
  1405                           	opt stack 0
  1406  00010A                     	ds	3
  1407  00010D                     _pCDCSrc:
  1408                           	opt stack 0
  1409  00010D                     	ds	3
  1410  000110                     UpdateSchFlag@InterruptCounter:
  1411                           	opt stack 0
  1412  000110                     	ds	2
  1413  000112                     _RxLen:
  1414                           	opt stack 0
  1415  000112                     	ds	2
  1416  000114                     _ExtInt1IsrCallback:
  1417                           	opt stack 0
  1418  000114                     	ds	2
  1419  000116                     _ExtInt0IsrCallback:
  1420                           	opt stack 0
  1421  000116                     	ds	2
  1422  000118                     _RtccIsrCallback:
  1423                           	opt stack 0
  1424  000118                     	ds	2
  1425  00011A                     _I2cConfig:
  1426                           	opt stack 0
  1427  00011A                     	ds	10
  1428  000124                     _line_coding:
  1429                           	opt stack 0
  1430  000124                     	ds	7
  1431  00012B                     _I2cTxPacket:
  1432                           	opt stack 0
  1433  00012B                     	ds	5
  1434  000130                     _AlCfg:
  1435                           	opt stack 0
  1436  000130                     	ds	4
  1437  000134                     _RtcConfig:
  1438                           	opt stack 0
  1439  000134                     	ds	4
  1440                           tblptru	equ	0xFF8
  1441                           tblptrh	equ	0xFF7
  1442                           tblptrl	equ	0xFF6
  1443                           tablat	equ	0xFF5
  1444                           postinc0	equ	0xFEE
  1445                           wreg	equ	0xFE8
  1446                           postdec1	equ	0xFE5
  1447                           fsr1h	equ	0xFE2
  1448                           fsr1l	equ	0xFE1
  1449                           
  1450                           	psect	bssBANK2
  1451  0002C8                     __pbssBANK2:
  1452                           	opt stack 0
  1453  0002C8                     _BaudRateGen:
  1454                           	opt stack 0
  1455  0002C8                     	ds	4
  1456  0002CC                     _USB1msTickCount:
  1457                           	opt stack 0
  1458  0002CC                     	ds	4
  1459  0002D0                     Term_MainSm@TermMainSmState:
  1460                           	opt stack 0
  1461  0002D0                     	ds	1
  1462  0002D1                     Terminal@FormatOption:
  1463                           	opt stack 0
  1464  0002D1                     	ds	1
  1465  0002D2                     Terminal@SlaveAddr:
  1466                           	opt stack 0
  1467  0002D2                     	ds	1
  1468  0002D3                     Terminal@PackageLen:
  1469                           	opt stack 0
  1470  0002D3                     	ds	1
  1471  0002D4                     Terminal@TermState:
  1472                           	opt stack 0
  1473  0002D4                     	ds	1
  1474  0002D5                     _Led2Blink:
  1475                           	opt stack 0
  1476  0002D5                     	ds	9
  1477  0002DE                     _Led3Pulse:
  1478                           	opt stack 0
  1479  0002DE                     	ds	6
  1480  0002E4                     _Led2Pulse:
  1481                           	opt stack 0
  1482  0002E4                     	ds	6
  1483  0002EA                     _Led1Pulse:
  1484                           	opt stack 0
  1485  0002EA                     	ds	6
  1486  0002F0                     _I2cRxPacket:
  1487                           	opt stack 0
  1488  0002F0                     	ds	6
  1489  0002F6                     Terminal@Addr:
  1490                           	opt stack 0
  1491  0002F6                     	ds	4
  1492  0002FA                     Terminal@Len:
  1493                           	opt stack 0
  1494  0002FA                     	ds	4
  1495                           tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           postdec1	equ	0xFE5
  1502                           fsr1h	equ	0xFE2
  1503                           fsr1l	equ	0xFE1
  1504                           
  1505                           	psect	dataBANK2
  1506  0002FE                     __pdataBANK2:
  1507                           	opt stack 0
  1508  0002FE                     Terminal@EchoOption:
  1509                           	opt stack 0
  1510  0002FE                     	ds	1
  1511                           tblptru	equ	0xFF8
  1512                           tblptrh	equ	0xFF7
  1513                           tblptrl	equ	0xFF6
  1514                           tablat	equ	0xFF5
  1515                           postinc0	equ	0xFEE
  1516                           wreg	equ	0xFE8
  1517                           postdec1	equ	0xFE5
  1518                           fsr1h	equ	0xFE2
  1519                           fsr1l	equ	0xFE1
  1520                           
  1521                           	psect	bssBANK3
  1522  000300                     __pbssBANK3:
  1523                           	opt stack 0
  1524  000300                     	ds	10
  1525  00030A                     _cdc_notice:
  1526                           	opt stack 0
  1527  00030A                     	ds	10
  1528  000314                     _Rtcm_SystemDate:
  1529                           	opt stack 0
  1530  000314                     	ds	8
  1531  00031C                     _Rtcm_RtccAlarm:
  1532                           	opt stack 0
  1533  00031C                     	ds	6
  1534  000322                     Term_MainSm@Data:
  1535                           	opt stack 0
  1536  000322                     	ds	50
  1537  000354                     Terminal@SwTimer:
  1538                           	opt stack 0
  1539  000354                     	ds	11
  1540  00035F                     I2cSlv_QueryI2cData@TimeoutTimer:
  1541                           	opt stack 0
  1542  00035F                     	ds	11
  1543  00036A                     I2cSlv_QueryI2cData@QueryTimer:
  1544                           	opt stack 0
  1545  00036A                     	ds	11
  1546  000375                     _Led3Blink:
  1547                           	opt stack 0
  1548  000375                     	ds	9
  1549  00037E                     _Led1Blink:
  1550                           	opt stack 0
  1551  00037E                     	ds	9
  1552  000387                     _dummy_encapsulated_cmd_response:
  1553                           	opt stack 0
  1554  000387                     	ds	8
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           postdec1	equ	0xFE5
  1562                           fsr1h	equ	0xFE2
  1563                           fsr1l	equ	0xFE1
  1564                           
  1565                           	psect	dataBANK3
  1566  00038F                     __pdataBANK3:
  1567                           	opt stack 0
  1568  00038F                     _TaskTable:
  1569                           	opt stack 0
  1570  00038F                     	ds	56
  1571  0003C7                     Term_MainSm@TermDelay:
  1572                           	opt stack 0
  1573  0003C7                     	ds	11
  1574                           tblptru	equ	0xFF8
  1575                           tblptrh	equ	0xFF7
  1576                           tblptrl	equ	0xFF6
  1577                           tablat	equ	0xFF5
  1578                           postinc0	equ	0xFEE
  1579                           wreg	equ	0xFE8
  1580                           postdec1	equ	0xFE5
  1581                           fsr1h	equ	0xFE2
  1582                           fsr1l	equ	0xFE1
  1583                           
  1584                           	psect	bssBANK4
  1585  000440                     __pbssBANK4:
  1586                           	opt stack 0
  1587  000440                     _cdc_data_rx:
  1588                           	opt stack 0
  1589  000440                     	ds	64
  1590  000480                     _cdc_data_tx:
  1591                           	opt stack 0
  1592  000480                     	ds	64
  1593  0004C0                     Terminal@TermRxBuffer:
  1594                           	opt stack 0
  1595  0004C0                     	ds	50
  1596                           tblptru	equ	0xFF8
  1597                           tblptrh	equ	0xFF7
  1598                           tblptrl	equ	0xFF6
  1599                           tablat	equ	0xFF5
  1600                           postinc0	equ	0xFEE
  1601                           wreg	equ	0xFE8
  1602                           postdec1	equ	0xFE5
  1603                           fsr1h	equ	0xFE2
  1604                           fsr1l	equ	0xFE1
  1605                           
  1606                           	psect	bssBANK5
  1607  000500                     __pbssBANK5:
  1608                           	opt stack 0
  1609  000500                     _OsAlarms:
  1610                           	opt stack 0
  1611  000500                     	ds	220
  1612                           tblptru	equ	0xFF8
  1613                           tblptrh	equ	0xFF7
  1614                           tblptrl	equ	0xFF6
  1615                           tablat	equ	0xFF5
  1616                           postinc0	equ	0xFEE
  1617                           wreg	equ	0xFE8
  1618                           postdec1	equ	0xFE5
  1619                           fsr1h	equ	0xFE2
  1620                           fsr1l	equ	0xFE1
  1621                           
  1622                           	psect	bssBANK6
  1623  000600                     __pbssBANK6:
  1624                           	opt stack 0
  1625  000600                     Terminal@Payload:
  1626                           	opt stack 0
  1627  000600                     	ds	80
  1628                           tblptru	equ	0xFF8
  1629                           tblptrh	equ	0xFF7
  1630                           tblptrl	equ	0xFF6
  1631                           tablat	equ	0xFF5
  1632                           postinc0	equ	0xFEE
  1633                           wreg	equ	0xFE8
  1634                           postdec1	equ	0xFE5
  1635                           fsr1h	equ	0xFE2
  1636                           fsr1l	equ	0xFE1
  1637                           
  1638                           	psect	bssBIGRAMl
  1639  0007C8                     __pbssBIGRAMl:
  1640                           	opt stack 0
  1641  0007C8                     _RxBuffer:
  1642                           	opt stack 0
  1643  0007C8                     	ds	400
  1644                           tblptru	equ	0xFF8
  1645                           tblptrh	equ	0xFF7
  1646                           tblptrl	equ	0xFF6
  1647                           tablat	equ	0xFF5
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           postdec1	equ	0xFE5
  1651                           fsr1h	equ	0xFE2
  1652                           fsr1l	equ	0xFE1
  1653                           
  1654                           	psect	cstackBANK7
  1655  000700                     __pcstackBANK7:
  1656                           	opt stack 0
  1657  000700                     Terminal@UsbRxBuffer:
  1658                           	opt stack 0
  1659                           
  1660                           ; 200 bytes @ 0x0
  1661  000700                     	ds	200
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           postinc0	equ	0xFEE
  1667                           wreg	equ	0xFE8
  1668                           postdec1	equ	0xFE5
  1669                           fsr1h	equ	0xFE2
  1670                           fsr1l	equ	0xFE1
  1671                           
  1672                           	psect	cstackBANK2
  1673  000200                     __pcstackBANK2:
  1674                           	opt stack 0
  1675  000200                     Terminal@UsbTxBuffer:
  1676                           	opt stack 0
  1677                           
  1678                           ; 200 bytes @ 0x0
  1679  000200                     	ds	200
  1680                           tblptru	equ	0xFF8
  1681                           tblptrh	equ	0xFF7
  1682                           tblptrl	equ	0xFF6
  1683                           tablat	equ	0xFF5
  1684                           postinc0	equ	0xFEE
  1685                           wreg	equ	0xFE8
  1686                           postdec1	equ	0xFE5
  1687                           fsr1h	equ	0xFE2
  1688                           fsr1l	equ	0xFE1
  1689                           
  1690                           	psect	cstackBANK1
  1691  000138                     __pcstackBANK1:
  1692                           	opt stack 0
  1693  000138                     Terminal@TermTxBuffer:
  1694                           	opt stack 0
  1695                           
  1696                           ; 50 bytes @ 0x0
  1697  000138                     	ds	50
  1698                           tblptru	equ	0xFF8
  1699                           tblptrh	equ	0xFF7
  1700                           tblptrl	equ	0xFF6
  1701                           tablat	equ	0xFF5
  1702                           postinc0	equ	0xFEE
  1703                           wreg	equ	0xFE8
  1704                           postdec1	equ	0xFE5
  1705                           fsr1h	equ	0xFE2
  1706                           fsr1l	equ	0xFE1
  1707                           
  1708                           	psect	cstackBANK0
  1709  000060                     __pcstackBANK0:
  1710                           	opt stack 0
  1711  000060                     ??_LowPriorityIsr:
  1712                           
  1713                           ; 1 bytes @ 0x0
  1714  000060                     	ds	21
  1715  000075                     ??_isdigit:
  1716  000075                     ??_isspace:
  1717  000075                     ??_isupper:
  1718  000075                     ??_Rtcc_GetRtccValue:
  1719  000075                     ??_USBStdGetDscHandler:
  1720  000075                     ??_USBStdGetStatusHandler:
  1721  000075                     ?_USBTransferOnePacket:
  1722                           	opt stack 0
  1723  000075                     ?_strlen:
  1724                           	opt stack 0
  1725  000075                     ?_sprintf:
  1726                           	opt stack 0
  1727  000075                     ?___wmul:
  1728                           	opt stack 0
  1729  000075                     ?___awdiv:
  1730                           	opt stack 0
  1731  000075                     ?___awmod:
  1732                           	opt stack 0
  1733  000075                     ?___lwdiv:
  1734                           	opt stack 0
  1735  000075                     ?___lwmod:
  1736                           	opt stack 0
  1737  000075                     ?_GetOsTickCounter:
  1738                           	opt stack 0
  1739  000075                     ?___lmul:
  1740                           	opt stack 0
  1741  000075                     ?___lldiv:
  1742                           	opt stack 0
  1743  000075                     Irq_InitIntController@GlobalInt_HighPInt:
  1744                           	opt stack 0
  1745  000075                     SetAckStatus@AckSts:
  1746                           	opt stack 0
  1747  000075                     WriteByte@Byte:
  1748                           	opt stack 0
  1749  000075                     ReadByte@Byte:
  1750                           	opt stack 0
  1751  000075                     Mcu_SetWdgSts@WdgSts:
  1752                           	opt stack 0
  1753  000075                     RtccIrqInit@Priority:
  1754                           	opt stack 0
  1755  000075                     Rtcc_SetRtcStatus@Status:
  1756                           	opt stack 0
  1757  000075                     TmrBInit@Prescaler:
  1758                           	opt stack 0
  1759  000075                     Tmr_TmrBIrqSet@Priority:
  1760                           	opt stack 0
  1761  000075                     Tmr_StartTmr@TmrNumb:
  1762                           	opt stack 0
  1763  000075                     USBTransferOnePacket@dir:
  1764                           	opt stack 0
  1765  000075                     USBConfigureEndpoint@direction:
  1766                           	opt stack 0
  1767  000075                     USBCtrlTrfTxService@byteToSend:
  1768                           	opt stack 0
  1769  000075                     USBCtrlTrfRxService@i:
  1770                           	opt stack 0
  1771  000075                     Led_SetLedStatus@LedSts:
  1772                           	opt stack 0
  1773  000075                     toupper@c:
  1774                           	opt stack 0
  1775  000075                     tolower@c:
  1776                           	opt stack 0
  1777  000075                     Mcu_StartSystemPll@PllStartupCounter:
  1778                           	opt stack 0
  1779  000075                     Rtcc_AlarmConfig@AlarmConfig:
  1780                           	opt stack 0
  1781  000075                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  1782                           	opt stack 0
  1783  000075                     GenerateEvt@Event:
  1784                           	opt stack 0
  1785  000075                     ReceiveEvt@Event:
  1786                           	opt stack 0
  1787  000075                     Led_SetLedBlinkTime@OnTimeMs:
  1788                           	opt stack 0
  1789  000075                     sprintf@sp:
  1790                           	opt stack 0
  1791  000075                     ___wmul@multiplier:
  1792                           	opt stack 0
  1793  000075                     ___awdiv@dividend:
  1794                           	opt stack 0
  1795  000075                     ___awmod@dividend:
  1796                           	opt stack 0
  1797  000075                     ___lwdiv@dividend:
  1798                           	opt stack 0
  1799  000075                     ___lwmod@dividend:
  1800                           	opt stack 0
  1801  000075                     memcpy@d1:
  1802                           	opt stack 0
  1803  000075                     memset@p1:
  1804                           	opt stack 0
  1805  000075                     strcat@to:
  1806                           	opt stack 0
  1807  000075                     strcpy@to:
  1808                           	opt stack 0
  1809  000075                     strlen@s:
  1810                           	opt stack 0
  1811  000075                     ___lmul@multiplier:
  1812                           	opt stack 0
  1813  000075                     ___lldiv@dividend:
  1814                           	opt stack 0
  1815                           
  1816                           ; 4 bytes @ 0x15
  1817  000075                     	ds	1
  1818  000076                     ??_USBConfigureEndpoint:
  1819  000076                     Irq_InitIntController@PerInt_LowPInt:
  1820                           	opt stack 0
  1821  000076                     Rtcc_GetRtccValue@RtccPtrVal:
  1822                           	opt stack 0
  1823  000076                     TmrBInit@Postscaler:
  1824                           	opt stack 0
  1825  000076                     Tmr_TmrBIrqSet@TmrIrqSts:
  1826                           	opt stack 0
  1827  000076                     USBCtrlTrfRxService@byteToRead:
  1828                           	opt stack 0
  1829  000076                     USBCtrlTrfInHandler@lastDTS:
  1830                           	opt stack 0
  1831  000076                     Led_SetLedStatus@Led:
  1832                           	opt stack 0
  1833  000076                     _isdigit$5426:
  1834                           	opt stack 0
  1835  000076                     _isspace$5695:
  1836                           	opt stack 0
  1837  000076                     _isupper$5698:
  1838                           	opt stack 0
  1839  000076                     I2c_WriteData@WritePacket:
  1840                           	opt stack 0
  1841  000076                     Rtcc_RtcConfig@RtcConfig:
  1842                           	opt stack 0
  1843  000076                     USBTransferOnePacket@data:
  1844                           	opt stack 0
  1845  000076                     USBStdGetStatusHandler@p:
  1846                           	opt stack 0
  1847                           
  1848                           ; 2 bytes @ 0x16
  1849  000076                     	ds	1
  1850  000077                     ??_strlen:
  1851  000077                     ??_Rtcc_AlarmConfig:
  1852  000077                     ??_TmrBInit:
  1853  000077                     Irq_InitIntController@IntPriorityEn:
  1854                           	opt stack 0
  1855  000077                     Rtcc_GetRtccValue@RetValue:
  1856                           	opt stack 0
  1857  000077                     Tmr_TmrBIrqSet@TmrNumb:
  1858                           	opt stack 0
  1859  000077                     GenerateEvt@EventStatus:
  1860                           	opt stack 0
  1861  000077                     isdigit@c:
  1862                           	opt stack 0
  1863  000077                     isspace@c:
  1864                           	opt stack 0
  1865  000077                     isupper@c:
  1866                           	opt stack 0
  1867  000077                     Led_SetLedBlinkTime@OffTimeMs:
  1868                           	opt stack 0
  1869  000077                     sprintf@f:
  1870                           	opt stack 0
  1871  000077                     ___wmul@multiplicand:
  1872                           	opt stack 0
  1873  000077                     ___awdiv@divisor:
  1874                           	opt stack 0
  1875  000077                     ___awmod@divisor:
  1876                           	opt stack 0
  1877  000077                     ___lwdiv@divisor:
  1878                           	opt stack 0
  1879  000077                     ___lwmod@divisor:
  1880                           	opt stack 0
  1881  000077                     memcpy@s1:
  1882                           	opt stack 0
  1883  000077                     memset@c:
  1884                           	opt stack 0
  1885  000077                     strcat@from:
  1886                           	opt stack 0
  1887  000077                     strcpy@from:
  1888                           	opt stack 0
  1889                           
  1890                           ; 2 bytes @ 0x17
  1891  000077                     	ds	1
  1892  000078                     ??_isalpha:
  1893  000078                     ??_isxdigit:
  1894  000078                     ??_I2c_WriteData:
  1895  000078                     ??_Rtcc_RtcConfig:
  1896  000078                     Rtcc_GetRtccValue@RegValue:
  1897                           	opt stack 0
  1898  000078                     TmrBInit@TmrNumb:
  1899                           	opt stack 0
  1900  000078                     ReceiveEvt@EventStatus:
  1901                           	opt stack 0
  1902  000078                     USBTransferOnePacket@len:
  1903                           	opt stack 0
  1904  000078                     I2c_ReadData@ReadPacket:
  1905                           	opt stack 0
  1906  000078                     I2cSlv_SendI2cMsg@TxBuffer:
  1907                           	opt stack 0
  1908  000078                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  1909                           	opt stack 0
  1910                           
  1911                           ; 2 bytes @ 0x18
  1912  000078                     	ds	1
  1913  000079                     ?_GetElapsedTime:
  1914                           	opt stack 0
  1915  000079                     ?_Rtcm_GetRtccDate:
  1916                           	opt stack 0
  1917  000079                     I2cSlv_I2cReadMsgSts@Result:
  1918                           	opt stack 0
  1919  000079                     USBTransferOnePacket@ep:
  1920                           	opt stack 0
  1921  000079                     Led_SetLedBlinkTime@Led:
  1922                           	opt stack 0
  1923  000079                     ___awdiv@counter:
  1924                           	opt stack 0
  1925  000079                     ___awmod@counter:
  1926                           	opt stack 0
  1927  000079                     ___lwdiv@counter:
  1928                           	opt stack 0
  1929  000079                     ___lwmod@counter:
  1930                           	opt stack 0
  1931  000079                     _isalpha$5692:
  1932                           	opt stack 0
  1933  000079                     _isxdigit$5702:
  1934                           	opt stack 0
  1935  000079                     OsTmr_StartTimer@Timer:
  1936                           	opt stack 0
  1937  000079                     ___wmul@product:
  1938                           	opt stack 0
  1939  000079                     memcpy@n:
  1940                           	opt stack 0
  1941  000079                     memset@n:
  1942                           	opt stack 0
  1943  000079                     strcat@cp:
  1944                           	opt stack 0
  1945  000079                     strcpy@cp:
  1946                           	opt stack 0
  1947  000079                     strlen@cp:
  1948                           	opt stack 0
  1949  000079                     GetElapsedTime@StartTime:
  1950                           	opt stack 0
  1951  000079                     ___lmul@multiplicand:
  1952                           	opt stack 0
  1953  000079                     ___lldiv@divisor:
  1954                           	opt stack 0
  1955                           
  1956                           ; 4 bytes @ 0x19
  1957  000079                     	ds	1
  1958  00007A                     ??_I2c_ReadData:
  1959  00007A                     I2cSlv_SendI2cMsg@SlaveAddr:
  1960                           	opt stack 0
  1961  00007A                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  1962                           	opt stack 0
  1963  00007A                     USBConfigureEndpoint@EPNum:
  1964                           	opt stack 0
  1965  00007A                     ___awdiv@sign:
  1966                           	opt stack 0
  1967  00007A                     ___awmod@sign:
  1968                           	opt stack 0
  1969  00007A                     isalpha@c:
  1970                           	opt stack 0
  1971  00007A                     isxdigit@c:
  1972                           	opt stack 0
  1973  00007A                     USBTransferOnePacket@handle:
  1974                           	opt stack 0
  1975  00007A                     ___lwdiv@quotient:
  1976                           	opt stack 0
  1977                           
  1978                           ; 2 bytes @ 0x1A
  1979  00007A                     	ds	1
  1980  00007B                     ?_atoi:
  1981                           	opt stack 0
  1982  00007B                     ?_xtoi:
  1983                           	opt stack 0
  1984  00007B                     I2cSlv_SendI2cMsg@DataLenght:
  1985                           	opt stack 0
  1986  00007B                     I2cSlv_ReceiveI2cMsg@DataLenght:
  1987                           	opt stack 0
  1988  00007B                     sprintf@flag:
  1989                           	opt stack 0
  1990  00007B                     OsAlrm_SetOsAlarm@OsAlarmId:
  1991                           	opt stack 0
  1992  00007B                     USBConfigureEndpoint@handle:
  1993                           	opt stack 0
  1994  00007B                     putUSBUSART@data:
  1995                           	opt stack 0
  1996  00007B                     atoi@s:
  1997                           	opt stack 0
  1998  00007B                     ___awdiv@quotient:
  1999                           	opt stack 0
  2000  00007B                     memcpy@d:
  2001                           	opt stack 0
  2002  00007B                     memset@p:
  2003                           	opt stack 0
  2004  00007B                     xtoi@s:
  2005                           	opt stack 0
  2006  00007B                     OsTmr_StartTimer@Timeout:
  2007                           	opt stack 0
  2008                           
  2009                           ; 4 bytes @ 0x1B
  2010  00007B                     	ds	1
  2011  00007C                     I2cSlv_SendI2cMsg@TxSts:
  2012                           	opt stack 0
  2013  00007C                     I2cSlv_ReceiveI2cMsg@RxSts:
  2014                           	opt stack 0
  2015  00007C                     CDCTxService@i:
  2016                           	opt stack 0
  2017  00007C                     getsUSBUSART@buffer:
  2018                           	opt stack 0
  2019  00007C                     LedBlinkStateMachine@LedBlink:
  2020                           	opt stack 0
  2021  00007C                     LedPulseStateMachine@LedPulse:
  2022                           	opt stack 0
  2023  00007C                     sprintf@ap:
  2024                           	opt stack 0
  2025  00007C                     utoa@buf:
  2026                           	opt stack 0
  2027                           
  2028                           ; 2 bytes @ 0x1C
  2029  00007C                     	ds	1
  2030  00007D                     ??_atoi:
  2031  00007D                     ??_xtoi:
  2032  00007D                     ??_GetElapsedTime:
  2033  00007D                     Rtcc_SetRtccValue@Value:
  2034                           	opt stack 0
  2035  00007D                     USBDeviceInit@i:
  2036                           	opt stack 0
  2037  00007D                     USBEnableEndpoint@options:
  2038                           	opt stack 0
  2039  00007D                     putUSBUSART@length:
  2040                           	opt stack 0
  2041  00007D                     CDCTxService@byte_to_send:
  2042                           	opt stack 0
  2043  00007D                     memcpy@s:
  2044                           	opt stack 0
  2045  00007D                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  2046                           	opt stack 0
  2047  00007D                     ___lmul@product:
  2048                           	opt stack 0
  2049  00007D                     ___lldiv@quotient:
  2050                           	opt stack 0
  2051                           
  2052                           ; 4 bytes @ 0x1D
  2053  00007D                     	ds	1
  2054  00007E                     ??_Rtcc_SetRtccValue:
  2055  00007E                     getsUSBUSART@len:
  2056                           	opt stack 0
  2057  00007E                     LedPulseStateMachine@Led:
  2058                           	opt stack 0
  2059  00007E                     sprintf@c:
  2060                           	opt stack 0
  2061  00007E                     USBEnableEndpoint@p:
  2062                           	opt stack 0
  2063  00007E                     utoa@val:
  2064                           	opt stack 0
  2065                           
  2066                           ; 2 bytes @ 0x1E
  2067  00007E                     	ds	1
  2068  00007F                     atoi@sign:
  2069                           	opt stack 0
  2070  00007F                     memcpy@tmp:
  2071                           	opt stack 0
  2072  00007F                     xtoi@sign:
  2073                           	opt stack 0
  2074  00007F                     sprintf@cp:
  2075                           	opt stack 0
  2076                           
  2077                           ; 2 bytes @ 0x1F
  2078  00007F                     	ds	1
  2079  000080                     Rtcc_SetRtccValue@RtccPtrVal:
  2080                           	opt stack 0
  2081  000080                     USBEnableEndpoint@ep:
  2082                           	opt stack 0
  2083  000080                     atoi@a:
  2084                           	opt stack 0
  2085  000080                     utoa@base:
  2086                           	opt stack 0
  2087  000080                     xtoi@val:
  2088                           	opt stack 0
  2089                           
  2090                           ; 2 bytes @ 0x20
  2091  000080                     	ds	1
  2092  000081                     ??_Rtcm_GetRtccDate:
  2093  000081                     ?_strtol:
  2094                           	opt stack 0
  2095  000081                     ___lldiv@counter:
  2096                           	opt stack 0
  2097  000081                     OsAlrm_SetOsAlarm@AlarmCallback:
  2098                           	opt stack 0
  2099  000081                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2100                           	opt stack 0
  2101  000081                     LedStateMachine@LedSts:
  2102                           	opt stack 0
  2103  000081                     strtol@s:
  2104                           	opt stack 0
  2105  000081                     Rtcm_SetRtccDate@Date:
  2106                           	opt stack 0
  2107                           
  2108                           ; 8 bytes @ 0x21
  2109  000081                     	ds	1
  2110  000082                     xtoi@c:
  2111                           	opt stack 0
  2112  000082                     Tmr_TmrBPrSet@IntFreqHz:
  2113                           	opt stack 0
  2114  000082                     utoa@v:
  2115                           	opt stack 0
  2116  000082                     SetBaudRate@DesiredI2cBusClockHz:
  2117                           	opt stack 0
  2118  000082                     Rtcm_GetRtccDate@LocalDate:
  2119                           	opt stack 0
  2120                           
  2121                           ; 8 bytes @ 0x22
  2122  000082                     	ds	1
  2123  000083                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2124                           	opt stack 0
  2125  000083                     LedStateMachine@LedOut:
  2126                           	opt stack 0
  2127  000083                     strtol@endptr:
  2128                           	opt stack 0
  2129                           
  2130                           ; 2 bytes @ 0x23
  2131  000083                     	ds	1
  2132  000084                     Tmr_TmrBPrSet@Prescaler:
  2133                           	opt stack 0
  2134  000084                     utoa@c:
  2135                           	opt stack 0
  2136                           
  2137                           ; 1 bytes @ 0x24
  2138  000084                     	ds	1
  2139  000085                     Tmr_TmrBPrSet@Postscaler:
  2140                           	opt stack 0
  2141  000085                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2142                           	opt stack 0
  2143  000085                     LedStateMachine@LedBlink:
  2144                           	opt stack 0
  2145  000085                     itoa@buf:
  2146                           	opt stack 0
  2147  000085                     strtol@base:
  2148                           	opt stack 0
  2149  000085                     GetElapsedTime@TimeValue:
  2150                           	opt stack 0
  2151                           
  2152                           ; 4 bytes @ 0x25
  2153  000085                     	ds	1
  2154  000086                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  2155                           	opt stack 0
  2156  000086                     SetBaudRate@McuClockHz:
  2157                           	opt stack 0
  2158                           
  2159                           ; 4 bytes @ 0x26
  2160  000086                     	ds	1
  2161  000087                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2162  000087                     ??_strtol:
  2163  000087                     Tmr_TmrBPrSet@TmrNumb:
  2164                           	opt stack 0
  2165  000087                     LedStateMachine@LedPulse:
  2166                           	opt stack 0
  2167  000087                     itoa@val:
  2168                           	opt stack 0
  2169                           
  2170                           ; 2 bytes @ 0x27
  2171  000087                     	ds	1
  2172  000088                     Tmr_TmrBPrSet@Divisor:
  2173                           	opt stack 0
  2174                           
  2175                           ; 4 bytes @ 0x28
  2176  000088                     	ds	1
  2177  000089                     ??_USBStdFeatureReqHandler:
  2178  000089                     USBStdSetCfgHandler@i:
  2179                           	opt stack 0
  2180  000089                     itoa@base:
  2181                           	opt stack 0
  2182  000089                     GetElapsedTime@CurrentTimestamp:
  2183                           	opt stack 0
  2184                           
  2185                           ; 4 bytes @ 0x29
  2186  000089                     	ds	1
  2187  00008A                     ??_SetBaudRate:
  2188  00008A                     LedStateMachine@LedOutSts:
  2189                           	opt stack 0
  2190  00008A                     USBStdFeatureReqHandler@pUEP:
  2191                           	opt stack 0
  2192                           
  2193                           ; 2 bytes @ 0x2A
  2194  00008A                     	ds	1
  2195  00008B                     LedStateMachine@Led:
  2196                           	opt stack 0
  2197  00008B                     strtol@sign:
  2198                           	opt stack 0
  2199  00008B                     itoa@cp:
  2200                           	opt stack 0
  2201                           
  2202                           ; 2 bytes @ 0x2B
  2203  00008B                     	ds	1
  2204  00008C                     ??_Led_MainTask:
  2205  00008C                     USBStdFeatureReqHandler@current_ep_data:
  2206                           	opt stack 0
  2207  00008C                     Tmr_TmrBConfig@TmrBConfig:
  2208                           	opt stack 0
  2209  00008C                     strtol@a:
  2210                           	opt stack 0
  2211                           
  2212                           ; 4 bytes @ 0x2C
  2213  00008C                     	ds	1
  2214  00008D                     OsTmr_GetTimerStatus@Timer:
  2215                           	opt stack 0
  2216  00008D                     USBStdFeatureReqHandler@p:
  2217                           	opt stack 0
  2218                           
  2219                           ; 2 bytes @ 0x2D
  2220  00008D                     	ds	1
  2221  00008E                     I2c_InitI2cModule@I2cConfig:
  2222                           	opt stack 0
  2223                           
  2224                           ; 2 bytes @ 0x2E
  2225  00008E                     	ds	1
  2226  00008F                     ??_USBCtrlEPService:
  2227  00008F                     Tmr_TmrBConfig@TmrNumb:
  2228                           	opt stack 0
  2229                           
  2230                           ; 1 bytes @ 0x2F
  2231  00008F                     	ds	1
  2232  000090                     ??_I2c_InitI2cModule:
  2233  000090                     USBDeviceTasks@i:
  2234                           	opt stack 0
  2235  000090                     strtol@c:
  2236                           	opt stack 0
  2237  000090                     InitSchedTimer@TmrBConfig:
  2238                           	opt stack 0
  2239                           
  2240                           ; 7 bytes @ 0x30
  2241  000090                     	ds	1
  2242  000091                     
  2243                           ; 1 bytes @ 0x31
  2244  000091                     	ds	1
  2245  000092                     
  2246                           ; 1 bytes @ 0x32
  2247  000092                     	ds	1
  2248  000093                     OsTmr_Wait@WaitTimer:
  2249                           	opt stack 0
  2250                           
  2251                           ; 2 bytes @ 0x33
  2252  000093                     	ds	2
  2253  000095                     OsTmr_Wait@DelayMs:
  2254                           	opt stack 0
  2255                           
  2256                           ; 4 bytes @ 0x35
  2257  000095                     	ds	2
  2258  000097                     
  2259                           ; 1 bytes @ 0x37
  2260  000097                     	ds	2
  2261  000099                     OsTmr_Wait@Ret:
  2262                           	opt stack 0
  2263                           
  2264                           ; 1 bytes @ 0x39
  2265  000099                     	ds	1
  2266  00009A                     ??_Terminal:
  2267                           
  2268                           ; 1 bytes @ 0x3A
  2269  00009A                     	ds	2
  2270  00009C                     Terminal@ReceivedBytes:
  2271                           	opt stack 0
  2272                           
  2273                           ; 1 bytes @ 0x3C
  2274  00009C                     	ds	1
  2275  00009D                     Terminal@Index:
  2276                           	opt stack 0
  2277                           
  2278                           ; 1 bytes @ 0x3D
  2279  00009D                     	ds	1
  2280  00009E                     Term_MainSm@FwkMajorStr:
  2281                           	opt stack 0
  2282                           
  2283                           ; 4 bytes @ 0x3E
  2284  00009E                     	ds	4
  2285  0000A2                     Term_MainSm@FwkMinorStr:
  2286                           	opt stack 0
  2287                           
  2288                           ; 4 bytes @ 0x42
  2289  0000A2                     	ds	4
  2290  0000A6                     Term_MainSm@FwkBuildStr:
  2291                           	opt stack 0
  2292                           
  2293                           ; 4 bytes @ 0x46
  2294  0000A6                     	ds	4
  2295  0000AA                     ??_InitializeTasks:
  2296  0000AA                     ??_ScheduleTasks:
  2297                           
  2298                           ; 1 bytes @ 0x4A
  2299  0000AA                     	ds	2
  2300  0000AC                     InitializeTasks@ActiveTaskIndex:
  2301                           	opt stack 0
  2302                           
  2303                           ; 1 bytes @ 0x4C
  2304  0000AC                     	ds	2
  2305  0000AE                     ScheduleTasks@ActiveTaskIndex:
  2306                           	opt stack 0
  2307                           
  2308                           ; 1 bytes @ 0x4E
  2309  0000AE                     	ds	1
  2310  0000AF                     tblptru	equ	0xFF8
  2311                           tblptrh	equ	0xFF7
  2312                           tblptrl	equ	0xFF6
  2313                           tablat	equ	0xFF5
  2314                           postinc0	equ	0xFEE
  2315                           wreg	equ	0xFE8
  2316                           postdec1	equ	0xFE5
  2317                           fsr1h	equ	0xFE2
  2318                           fsr1l	equ	0xFE1
  2319                           
  2320                           ; 1 bytes @ 0x4F
  2321                           
  2322                           	psect	cstackCOMRAM
  2323  000026                     __pcstackCOMRAM:
  2324                           	opt stack 0
  2325  000026                     ??_HighPriorityIsr:
  2326  000026                     
  2327                           ; 1 bytes @ 0x0
  2328  000026                     	ds	18
  2329  000038                     ?i1___wmul:
  2330                           	opt stack 0
  2331  000038                     OsAlrm_ClearOsAlarm@OsAlarmId:
  2332                           	opt stack 0
  2333  000038                     i1GenerateEvt@Event:
  2334                           	opt stack 0
  2335  000038                     i1___wmul@multiplier:
  2336                           	opt stack 0
  2337                           
  2338                           ; 2 bytes @ 0x12
  2339  000038                     	ds	2
  2340  00003A                     i1GenerateEvt@EventStatus:
  2341                           	opt stack 0
  2342  00003A                     i1___wmul@multiplicand:
  2343                           	opt stack 0
  2344                           
  2345                           ; 2 bytes @ 0x14
  2346  00003A                     	ds	1
  2347  00003B                     i1I2cSlv_SendI2cMsg@TxBuffer:
  2348                           	opt stack 0
  2349                           
  2350                           ; 2 bytes @ 0x15
  2351  00003B                     	ds	1
  2352  00003C                     i1___wmul@product:
  2353                           	opt stack 0
  2354                           
  2355                           ; 2 bytes @ 0x16
  2356  00003C                     	ds	1
  2357  00003D                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  2358                           	opt stack 0
  2359                           
  2360                           ; 1 bytes @ 0x17
  2361  00003D                     	ds	1
  2362  00003E                     i1I2cSlv_SendI2cMsg@DataLenght:
  2363                           	opt stack 0
  2364                           
  2365                           ; 1 bytes @ 0x18
  2366  00003E                     	ds	1
  2367  00003F                     i1I2cSlv_SendI2cMsg@TxSts:
  2368                           	opt stack 0
  2369                           
  2370                           ; 1 bytes @ 0x19
  2371  00003F                     	ds	1
  2372  000040                     
  2373                           ; 1 bytes @ 0x1A
  2374  000040                     	ds	8
  2375  000048                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  2376                           	opt stack 0
  2377                           
  2378                           ; 2 bytes @ 0x22
  2379  000048                     	ds	2
  2380  00004A                     tblptru	equ	0xFF8
  2381                           tblptrh	equ	0xFF7
  2382                           tblptrl	equ	0xFF6
  2383                           tablat	equ	0xFF5
  2384                           postinc0	equ	0xFEE
  2385                           wreg	equ	0xFE8
  2386                           postdec1	equ	0xFE5
  2387                           fsr1h	equ	0xFE2
  2388                           fsr1l	equ	0xFE1
  2389                           
  2390                           ; 1 bytes @ 0x24
  2391 ;;
  2392 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2393 ;;
  2394 ;; *************** function _main *****************
  2395 ;; Defined at:
  2396 ;;		line 58 in file "../../../MercuryFwk/Source/c/00_Main/main.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  2   14[None  ] short 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2414 ;;Total ram usage:        0 bytes
  2415 ;; Hardware stack levels required when called:   21
  2416 ;; This function calls:
  2417 ;;		_Sch_MainScheduler
  2418 ;;		_SystemInit
  2419 ;; This function is called by:
  2420 ;;		Startup code after reset
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text0
  2425  00440E                     __ptext0:
  2426                           	opt stack 0
  2427  00440E                     _main:
  2428                           	opt stack 10
  2429                           
  2430                           ;main.c: 61: SystemInit();
  2431                           
  2432                           ;incstack = 0
  2433  00440E  EC90  F01F         	call	_SystemInit	;wreg free
  2434                           
  2435                           ;main.c: 64: Sch_MainScheduler();
  2436  004412  EC52  F021         	call	_Sch_MainScheduler	;wreg free
  2437                           
  2438                           ;main.c: 67: return 0;
  2439                           ;	Return value of _main is never used
  2440  004416  EF66  F000         	goto	start
  2441  00441A                     __end_of_main:
  2442                           	opt stack 0
  2443                           tblptru	equ	0xFF8
  2444                           tblptrh	equ	0xFF7
  2445                           tblptrl	equ	0xFF6
  2446                           tablat	equ	0xFF5
  2447                           postinc0	equ	0xFEE
  2448                           wreg	equ	0xFE8
  2449                           postdec1	equ	0xFE5
  2450                           fsr1h	equ	0xFE2
  2451                           fsr1l	equ	0xFE1
  2452                           
  2453 ;; *************** function _SystemInit *****************
  2454 ;; Defined at:
  2455 ;;		line 121 in file "../../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;Total ram usage:        0 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:   13
  2476 ;; This function calls:
  2477 ;;		_InitSchedTimer
  2478 ;;		_Irq_InitIntController
  2479 ;;		_Mcu_ConfigExtInt
  2480 ;;		_Mcu_StartSystemPll
  2481 ;;		_Pm_DsReleasePinControl
  2482 ;;		_Tmr_RegisterTmr2IsrCallback
  2483 ;; This function is called by:
  2484 ;;		_main
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text1
  2489  003F20                     __ptext1:
  2490                           	opt stack 0
  2491  003F20                     _SystemInit:
  2492                           	opt stack 17
  2493                           
  2494                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  2495                           
  2496                           ;incstack = 0
  2497  003F20  EC26  F022         	call	_Pm_DsReleasePinControl	;wreg free
  2498                           
  2499                           ;sys_init.c: 126: Mcu_StartSystemPll();
  2500  003F24  EC25  F021         	call	_Mcu_StartSystemPll	;wreg free
  2501                           
  2502                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  2503  003F28  0E01               	movlw	1
  2504  003F2A  0100               	movlb	0	; () banked
  2505  003F2C  6F75               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  2506  003F2E  0E01               	movlw	1
  2507  003F30  6F76               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  2508  003F32  0E01               	movlw	1
  2509  003F34  EC4C  F020         	call	_Irq_InitIntController
  2510                           
  2511                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  2512  003F38  0E00               	movlw	low _Sch_SchmIntService
  2513  003F3A  0100               	movlb	0	; () banked
  2514  003F3C  6F75               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  2515  003F3E  0E44               	movlw	high _Sch_SchmIntService
  2516  003F40  6F76               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  2517  003F42  EC0D  F022         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  2518                           
  2519                           ;sys_init.c: 132: InitSchedTimer();
  2520  003F46  EC08  F020         	call	_InitSchedTimer	;wreg free
  2521                           
  2522                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  2523  003F4A  EC60  F021         	call	_Mcu_ConfigExtInt	;wreg free
  2524  003F4E  0012               	return		;funcret
  2525  003F50                     __end_of_SystemInit:
  2526                           	opt stack 0
  2527                           tblptru	equ	0xFF8
  2528                           tblptrh	equ	0xFF7
  2529                           tblptrl	equ	0xFF6
  2530                           tablat	equ	0xFF5
  2531                           postinc0	equ	0xFEE
  2532                           wreg	equ	0xFE8
  2533                           postdec1	equ	0xFE5
  2534                           fsr1h	equ	0xFE2
  2535                           fsr1l	equ	0xFE1
  2536                           
  2537 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  2538 ;; Defined at:
  2539 ;;		line 329 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  IsrCallback     2   21[BANK0 ] PTR FTN()void 
  2542 ;;		 -> Sch_SchmIntService(1), 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2554 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2557 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2558 ;;Total ram usage:        2 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    9
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_SystemInit
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text2
  2569  00441A                     __ptext2:
  2570                           	opt stack 0
  2571  00441A                     _Tmr_RegisterTmr2IsrCallback:
  2572                           	opt stack 20
  2573                           
  2574                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  2575                           
  2576                           ;incstack = 0
  2577  00441A  C075  F015         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  2578  00441E  C076  F016         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  2579  004422  0012               	return		;funcret
  2580  004424                     __end_of_Tmr_RegisterTmr2IsrCallback:
  2581                           	opt stack 0
  2582                           tblptru	equ	0xFF8
  2583                           tblptrh	equ	0xFF7
  2584                           tblptrl	equ	0xFF6
  2585                           tablat	equ	0xFF5
  2586                           postinc0	equ	0xFEE
  2587                           wreg	equ	0xFE8
  2588                           postdec1	equ	0xFE5
  2589                           fsr1h	equ	0xFE2
  2590                           fsr1l	equ	0xFE1
  2591                           
  2592 ;; *************** function _Pm_DsReleasePinControl *****************
  2593 ;; Defined at:
  2594 ;;		line 166 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		None
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2612 ;;Total ram usage:        0 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; Hardware stack levels required when called:    9
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_SystemInit
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text3
  2623  00444C                     __ptext3:
  2624                           	opt stack 0
  2625  00444C                     _Pm_DsReleasePinControl:
  2626                           	opt stack 20
  2627                           
  2628                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  2629                           
  2630                           ;incstack = 0
  2631  00444C  010F               	movlb	15	; () banked
  2632  00444E  914C               	bcf	76,0,b	;volatile
  2633                           
  2634                           ; BSR set to: 15
  2635  004450  0012               	return		;funcret
  2636  004452                     __end_of_Pm_DsReleasePinControl:
  2637                           	opt stack 0
  2638                           tblptru	equ	0xFF8
  2639                           tblptrh	equ	0xFF7
  2640                           tblptrl	equ	0xFF6
  2641                           tablat	equ	0xFF5
  2642                           postinc0	equ	0xFEE
  2643                           wreg	equ	0xFE8
  2644                           postdec1	equ	0xFE5
  2645                           fsr1h	equ	0xFE2
  2646                           fsr1l	equ	0xFE1
  2647                           
  2648 ;; *************** function _Mcu_StartSystemPll *****************
  2649 ;; Defined at:
  2650 ;;		line 81 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  PllStartupCo    2   21[BANK0 ] volatile unsigned short 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2665 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2667 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2668 ;;Total ram usage:        2 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    9
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_SystemInit
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text4
  2679  00424A                     __ptext4:
  2680                           	opt stack 0
  2681  00424A                     _Mcu_StartSystemPll:
  2682                           	opt stack 20
  2683                           
  2684                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  2685                           
  2686                           ; BSR set to: 15
  2687                           ;incstack = 0
  2688  00424A  0E03               	movlw	3
  2689  00424C  0100               	movlb	0	; () banked
  2690  00424E  6F76               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  2691  004250  0EE8               	movlw	232
  2692  004252  6F75               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  2693                           
  2694                           ; BSR set to: 0
  2695                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  2696  004254  8C9B               	bsf	3995,6,c	;volatile
  2697  004256                     l8410:
  2698                           
  2699                           ; BSR set to: 0
  2700  004256  0775               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  2701  004258  A0D8               	btfss	status,0,c
  2702  00425A  0776               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  2703  00425C  2975               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  2704  00425E  E1FB               	bnz	l8410
  2705  004260  2976               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  2706  004262  B4D8               	btfsc	status,2,c
  2707  004264  0012               	return	
  2708  004266  D7F7               	goto	l237
  2709  004268                     __end_of_Mcu_StartSystemPll:
  2710                           	opt stack 0
  2711                           tblptru	equ	0xFF8
  2712                           tblptrh	equ	0xFF7
  2713                           tblptrl	equ	0xFF6
  2714                           tablat	equ	0xFF5
  2715                           postinc0	equ	0xFEE
  2716                           wreg	equ	0xFE8
  2717                           postdec1	equ	0xFE5
  2718                           fsr1h	equ	0xFE2
  2719                           fsr1l	equ	0xFE1
  2720                           status	equ	0xFD8
  2721                           
  2722 ;; *************** function _Mcu_ConfigExtInt *****************
  2723 ;; Defined at:
  2724 ;;		line 99 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    9
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_SystemInit
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text5
  2753  0042C0                     __ptext5:
  2754                           	opt stack 0
  2755  0042C0                     _Mcu_ConfigExtInt:
  2756                           	opt stack 20
  2757                           
  2758                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;incstack = 0
  2762  0042C0  8093               	bsf	3987,0,c	;volatile
  2763                           
  2764                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  2765  0042C2  8695               	bsf	3989,3,c	;volatile
  2766                           
  2767                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  2768  0042C4  010F               	movlb	15	; () banked
  2769  0042C6  8949               	bsf	73,4,b	;volatile
  2770                           
  2771                           ; BSR set to: 15
  2772                           ;mcu_drv.c: 108: RPINR1 = 20;
  2773  0042C8  0E14               	movlw	20
  2774  0042CA  010E               	movlb	14	; () banked
  2775  0042CC  6FE7               	movwf	231,b	;volatile
  2776                           
  2777                           ; BSR set to: 14
  2778                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  2779  0042CE  88F2               	bsf	intcon,4,c	;volatile
  2780                           
  2781                           ; BSR set to: 14
  2782                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  2783  0042D0  86F0               	bsf	intcon3,3,c	;volatile
  2784                           
  2785                           ; BSR set to: 14
  2786                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  2787  0042D2  8CF0               	bsf	intcon3,6,c	;volatile
  2788                           
  2789                           ; BSR set to: 14
  2790                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  2791  0042D4  9CF1               	bcf	intcon2,6,c	;volatile
  2792                           
  2793                           ; BSR set to: 14
  2794                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  2795  0042D6  9AF1               	bcf	intcon2,5,c	;volatile
  2796                           
  2797                           ; BSR set to: 14
  2798  0042D8  0012               	return		;funcret
  2799  0042DA                     __end_of_Mcu_ConfigExtInt:
  2800                           	opt stack 0
  2801                           tblptru	equ	0xFF8
  2802                           tblptrh	equ	0xFF7
  2803                           tblptrl	equ	0xFF6
  2804                           tablat	equ	0xFF5
  2805                           intcon	equ	0xFF2
  2806                           intcon2	equ	0xFF1
  2807                           intcon3	equ	0xFF0
  2808                           postinc0	equ	0xFEE
  2809                           wreg	equ	0xFE8
  2810                           postdec1	equ	0xFE5
  2811                           fsr1h	equ	0xFE2
  2812                           fsr1l	equ	0xFE1
  2813                           status	equ	0xFD8
  2814                           
  2815 ;; *************** function _Irq_InitIntController *****************
  2816 ;; Defined at:
  2817 ;;		line 75 in file "../../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  IntPriorityE    1    wreg     enum E7720
  2820 ;;  GlobalInt_Hi    1   21[BANK0 ] unsigned char 
  2821 ;;  PerInt_LowPI    1   22[BANK0 ] unsigned char 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  IntPriorityE    1   23[BANK0 ] enum E7720
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2833 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2836 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2837 ;;Total ram usage:        3 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; Hardware stack levels required when called:    9
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_SystemInit
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text6
  2848  004098                     __ptext6:
  2849                           	opt stack 0
  2850  004098                     _Irq_InitIntController:
  2851                           	opt stack 20
  2852                           
  2853                           ; BSR set to: 14
  2854                           ;incstack = 0
  2855                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  2856  004098  0100               	movlb	0	; () banked
  2857  00409A  6F77               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  2858                           
  2859                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  2860  00409C  0100               	movlb	0	; () banked
  2861  00409E  B177               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  2862  0040A0  D002               	bra	u7155
  2863  0040A2  9ED0               	bcf	4048,7,c	;volatile
  2864  0040A4  D001               	bra	u7156
  2865  0040A6                     u7155:
  2866  0040A6  8ED0               	bsf	4048,7,c	;volatile
  2867  0040A8                     u7156:
  2868                           
  2869                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  2870  0040A8  0100               	movlb	0	; () banked
  2871  0040AA  B175               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  2872  0040AC  D002               	bra	u7165
  2873  0040AE  9EF2               	bcf	intcon,7,c	;volatile
  2874  0040B0  D001               	bra	u7166
  2875  0040B2                     u7165:
  2876  0040B2  8EF2               	bsf	intcon,7,c	;volatile
  2877  0040B4                     u7166:
  2878                           
  2879                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  2880  0040B4  0100               	movlb	0	; () banked
  2881  0040B6  B176               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  2882  0040B8  D002               	bra	u7175
  2883  0040BA  9CF2               	bcf	intcon,6,c	;volatile
  2884  0040BC  D001               	bra	u7176
  2885  0040BE                     u7175:
  2886  0040BE  8CF2               	bsf	intcon,6,c	;volatile
  2887  0040C0                     u7176:
  2888  0040C0  0012               	return		;funcret
  2889  0040C2                     __end_of_Irq_InitIntController:
  2890                           	opt stack 0
  2891                           tblptru	equ	0xFF8
  2892                           tblptrh	equ	0xFF7
  2893                           tblptrl	equ	0xFF6
  2894                           tablat	equ	0xFF5
  2895                           intcon	equ	0xFF2
  2896                           intcon2	equ	0xFF1
  2897                           intcon3	equ	0xFF0
  2898                           postinc0	equ	0xFEE
  2899                           wreg	equ	0xFE8
  2900                           postdec1	equ	0xFE5
  2901                           fsr1h	equ	0xFE2
  2902                           fsr1l	equ	0xFE1
  2903                           status	equ	0xFD8
  2904                           
  2905 ;; *************** function _InitSchedTimer *****************
  2906 ;; Defined at:
  2907 ;;		line 69 in file "../../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  TmrBConfig      7   48[BANK0 ] struct _TmrBConfigType
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2922 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2924 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2925 ;;Total ram usage:        7 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:   12
  2928 ;; This function calls:
  2929 ;;		_Tmr_TmrBConfig
  2930 ;; This function is called by:
  2931 ;;		_SystemInit
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text7
  2936  004010                     __ptext7:
  2937                           	opt stack 0
  2938  004010                     _InitSchedTimer:
  2939                           	opt stack 17
  2940                           
  2941                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  2942                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  2943                           
  2944                           ;incstack = 0
  2945  004010  0E04               	movlw	4
  2946  004012  0100               	movlb	0	; () banked
  2947  004014  6F90               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  2948                           
  2949                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  2950  004016  0E0C               	movlw	12
  2951  004018  6F91               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  2952                           
  2953                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  2954  00401A  0E00               	movlw	0
  2955  00401C  6F93               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  2956                           
  2957                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  2958  00401E  0E01               	movlw	1
  2959  004020  6F92               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  2960                           
  2961                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  2962  004022  0E03               	movlw	3
  2963  004024  6F95               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  2964  004026  0EE8               	movlw	232
  2965  004028  6F94               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  2966                           
  2967                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  2968  00402A  0E01               	movlw	1
  2969  00402C  6F96               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  2973  00402E  0E90               	movlw	low InitSchedTimer@TmrBConfig
  2974  004030  6F8C               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  2975  004032  0E00               	movlw	high InitSchedTimer@TmrBConfig
  2976  004034  6F8D               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  2977  004036  0E02               	movlw	2
  2978  004038  EC22  F012         	call	_Tmr_TmrBConfig
  2979  00403C  0012               	return		;funcret
  2980  00403E                     __end_of_InitSchedTimer:
  2981                           	opt stack 0
  2982                           tblptru	equ	0xFF8
  2983                           tblptrh	equ	0xFF7
  2984                           tblptrl	equ	0xFF6
  2985                           tablat	equ	0xFF5
  2986                           intcon	equ	0xFF2
  2987                           intcon2	equ	0xFF1
  2988                           intcon3	equ	0xFF0
  2989                           postinc0	equ	0xFEE
  2990                           wreg	equ	0xFE8
  2991                           postdec1	equ	0xFE5
  2992                           fsr1h	equ	0xFE2
  2993                           fsr1l	equ	0xFE1
  2994                           status	equ	0xFD8
  2995                           
  2996 ;; *************** function _Tmr_TmrBConfig *****************
  2997 ;; Defined at:
  2998 ;;		line 271 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  TmrNumb         1    wreg     unsigned char 
  3001 ;;  TmrBConfig      2   44[BANK0 ] PTR struct _TmrBConfigTy
  3002 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  TmrNumb         1   47[BANK0 ] unsigned char 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3014 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3015 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3017 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3018 ;;Total ram usage:        4 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:   11
  3021 ;; This function calls:
  3022 ;;		_TmrBInit
  3023 ;;		_Tmr_StartTmr
  3024 ;;		_Tmr_TmrBIrqSet
  3025 ;;		_Tmr_TmrBPrSet
  3026 ;; This function is called by:
  3027 ;;		_InitSchedTimer
  3028 ;;		_InitAuxTimer
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text8
  3033  002444                     __ptext8:
  3034                           	opt stack 0
  3035  002444                     _Tmr_TmrBConfig:
  3036                           	opt stack 17
  3037                           
  3038                           ;incstack = 0
  3039                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  3040  002444  0100               	movlb	0	; () banked
  3041  002446  6F8F               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  3042                           
  3043                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  3044  002448  C08C  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  3045  00244C  C08D  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  3046  002450  50DF               	movf	indf2,w,c
  3047  002452  0100               	movlb	0	; () banked
  3048  002454  6F75               	movwf	TmrBInit@Prescaler& (0+255),b
  3049  002456  EE20 F001          	lfsr	2,1
  3050  00245A  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3051  00245C  26D9               	addwf	fsr2l,f,c
  3052  00245E  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3053  002460  22DA               	addwfc	fsr2h,f,c
  3054  002462  50DF               	movf	indf2,w,c
  3055  002464  6F76               	movwf	TmrBInit@Postscaler& (0+255),b
  3056  002466  518F               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3057  002468  ECC6  F017         	call	_TmrBInit
  3058                           
  3059                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  3060  00246C  0100               	movlb	0	; () banked
  3061  00246E  EE20 F002          	lfsr	2,2
  3062  002472  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3063  002474  26D9               	addwf	fsr2l,f,c
  3064  002476  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3065  002478  22DA               	addwfc	fsr2h,f,c
  3066  00247A  04DE               	decf	postinc2,w,c
  3067  00247C  A4D8               	btfss	status,2,c
  3068  00247E  D00E               	goto	l474
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;tmr_drv.c: 277: {
  3072                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  3073  002480  EE20 F003          	lfsr	2,3
  3074  002484  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3075  002486  26D9               	addwf	fsr2l,f,c
  3076  002488  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3077  00248A  22DA               	addwfc	fsr2h,f,c
  3078  00248C  50DF               	movf	indf2,w,c
  3079  00248E  6F75               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  3080  002490  0E01               	movlw	1
  3081  002492  6F76               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  3082  002494  518F               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3083  002496  ECB3  F01D         	call	_Tmr_TmrBIrqSet
  3084                           
  3085                           ;tmr_drv.c: 280: }
  3086  00249A  D00E               	goto	l475
  3087  00249C                     l474:
  3088                           
  3089                           ;tmr_drv.c: 281: else
  3090                           ;tmr_drv.c: 282: {
  3091                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  3092  00249C  0100               	movlb	0	; () banked
  3093  00249E  EE20 F003          	lfsr	2,3
  3094  0024A2  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3095  0024A4  26D9               	addwf	fsr2l,f,c
  3096  0024A6  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3097  0024A8  22DA               	addwfc	fsr2h,f,c
  3098  0024AA  50DF               	movf	indf2,w,c
  3099  0024AC  6F75               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  3100  0024AE  0E00               	movlw	0
  3101  0024B0  6F76               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  3102  0024B2  518F               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3103  0024B4  ECB3  F01D         	call	_Tmr_TmrBIrqSet
  3104  0024B8                     l475:
  3105                           
  3106                           ;tmr_drv.c: 285: }
  3107                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  3108  0024B8  0100               	movlb	0	; () banked
  3109  0024BA  EE20 F004          	lfsr	2,4
  3110  0024BE  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3111  0024C0  26D9               	addwf	fsr2l,f,c
  3112  0024C2  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3113  0024C4  22DA               	addwfc	fsr2h,f,c
  3114  0024C6  CFDE F082          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  3115  0024CA  CFDD F083          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  3116  0024CE  C08C  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  3117  0024D2  C08D  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  3118  0024D6  50DF               	movf	indf2,w,c
  3119  0024D8  6F84               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  3120  0024DA  EE20 F001          	lfsr	2,1
  3121  0024DE  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3122  0024E0  26D9               	addwf	fsr2l,f,c
  3123  0024E2  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3124  0024E4  22DA               	addwfc	fsr2h,f,c
  3125  0024E6  50DF               	movf	indf2,w,c
  3126  0024E8  6F85               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  3127  0024EA  518F               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3128  0024EC  EC40  F00E         	call	_Tmr_TmrBPrSet
  3129                           
  3130                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  3131  0024F0  0100               	movlb	0	; () banked
  3132  0024F2  EE20 F006          	lfsr	2,6
  3133  0024F6  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3134  0024F8  26D9               	addwf	fsr2l,f,c
  3135  0024FA  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3136  0024FC  22DA               	addwfc	fsr2h,f,c
  3137  0024FE  04DE               	decf	postinc2,w,c
  3138  002500  A4D8               	btfss	status,2,c
  3139  002502  0012               	return	
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;tmr_drv.c: 290: {
  3143                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  3144  002504  518F               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3145  002506  EC15  F021         	call	_Tmr_StartTmr
  3146                           
  3147                           ;tmr_drv.c: 293: }
  3148  00250A  0012               	return	
  3149  00250C                     __end_of_Tmr_TmrBConfig:
  3150                           	opt stack 0
  3151                           tblptru	equ	0xFF8
  3152                           tblptrh	equ	0xFF7
  3153                           tblptrl	equ	0xFF6
  3154                           tablat	equ	0xFF5
  3155                           intcon	equ	0xFF2
  3156                           intcon2	equ	0xFF1
  3157                           intcon3	equ	0xFF0
  3158                           postinc0	equ	0xFEE
  3159                           wreg	equ	0xFE8
  3160                           postdec1	equ	0xFE5
  3161                           fsr1h	equ	0xFE2
  3162                           fsr1l	equ	0xFE1
  3163                           indf2	equ	0xFDF
  3164                           postinc2	equ	0xFDE
  3165                           postdec2	equ	0xFDD
  3166                           fsr2h	equ	0xFDA
  3167                           fsr2l	equ	0xFD9
  3168                           status	equ	0xFD8
  3169                           
  3170 ;; *************** function _Tmr_TmrBPrSet *****************
  3171 ;; Defined at:
  3172 ;;		line 193 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  TmrNumb         1    wreg     unsigned char 
  3175 ;;  IntFreqHz       2   34[BANK0 ] unsigned short 
  3176 ;;  Prescaler       1   36[BANK0 ] unsigned char 
  3177 ;;  Postscaler      1   37[BANK0 ] unsigned char 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  TmrNumb         1   39[BANK0 ] unsigned char 
  3180 ;;  Divisor         4   40[BANK0 ] unsigned long 
  3181 ;;  TmrBPrCfgSts    1   38[BANK0 ] enum E7736
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      enum E7736
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3191 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3192 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3194 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3195 ;;Total ram usage:       10 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:   10
  3198 ;; This function calls:
  3199 ;;		___lldiv
  3200 ;;		___lmul
  3201 ;; This function is called by:
  3202 ;;		_Tmr_TmrBConfig
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text9
  3207  001C80                     __ptext9:
  3208                           	opt stack 0
  3209  001C80                     _Tmr_TmrBPrSet:
  3210                           	opt stack 17
  3211                           
  3212                           ;incstack = 0
  3213                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  3214  001C80  0100               	movlb	0	; () banked
  3215  001C82  6F87               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  3216                           
  3217                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  3218                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  3219  001C84  0E00               	movlw	0
  3220  001C86  0100               	movlb	0	; () banked
  3221  001C88  6F88               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  3222  001C8A  0E00               	movlw	0
  3223  001C8C  6F89               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  3224  001C8E  0E00               	movlw	0
  3225  001C90  6F8A               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  3226  001C92  0E00               	movlw	0
  3227  001C94  6F8B               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  3231  001C96  5184               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  3232  001C98  0385               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  3233  001C9A  CFF3 F075          	movff	prodl,___lmul@multiplier
  3234  001C9E  CFF4 F076          	movff	prodh,___lmul@multiplier+1
  3235  001CA2  6B77               	clrf	(___lmul@multiplier+2)& (0+255),b
  3236  001CA4  6B78               	clrf	(___lmul@multiplier+3)& (0+255),b
  3237  001CA6  C082  F079         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  3238  001CAA  C083  F07A         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  3239  001CAE  6B7B               	clrf	(___lmul@multiplicand+2)& (0+255),b
  3240  001CB0  6B7C               	clrf	(___lmul@multiplicand+3)& (0+255),b
  3241  001CB2  EC8C  F01C         	call	___lmul	;wreg free
  3242  001CB6  C075  F088         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  3243  001CBA  C076  F089         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  3244  001CBE  C077  F08A         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  3245  001CC2  C078  F08B         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  3246                           
  3247                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  3248  001CC6  0E00               	movlw	0
  3249  001CC8  0100               	movlb	0	; () banked
  3250  001CCA  6F75               	movwf	___lldiv@dividend& (0+255),b
  3251  001CCC  0E1B               	movlw	27
  3252  001CCE  6F76               	movwf	(___lldiv@dividend+1)& (0+255),b
  3253  001CD0  0EB7               	movlw	183
  3254  001CD2  6F77               	movwf	(___lldiv@dividend+2)& (0+255),b
  3255  001CD4  0E00               	movlw	0
  3256  001CD6  6F78               	movwf	(___lldiv@dividend+3)& (0+255),b
  3257  001CD8  C088  F079         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3258  001CDC  C089  F07A         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3259  001CE0  C08A  F07B         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3260  001CE4  C08B  F07C         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3261  001CE8  EC05  F01A         	call	___lldiv	;wreg free
  3262  001CEC  0100               	movlb	0	; () banked
  3263  001CEE  5178               	movf	(?___lldiv+3)& (0+255),w,b
  3264  001CF0  1177               	iorwf	(?___lldiv+2)& (0+255),w,b
  3265  001CF2  E13A               	bnz	l10058
  3266  001CF4  0576               	decf	(?___lldiv+1)& (0+255),w,b
  3267  001CF6  A0D8               	btfss	status,0,c
  3268  001CF8  D02D               	goto	l457
  3269  001CFA  D036               	goto	l456
  3270  001CFC                     
  3271                           ; BSR set to: 0
  3272                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  3273                           
  3274                           ; BSR set to: 0
  3275  001CFC  0E00               	movlw	0
  3276  001CFE  6F75               	movwf	___lldiv@dividend& (0+255),b
  3277  001D00  0E1B               	movlw	27
  3278  001D02  6F76               	movwf	(___lldiv@dividend+1)& (0+255),b
  3279  001D04  0EB7               	movlw	183
  3280  001D06  6F77               	movwf	(___lldiv@dividend+2)& (0+255),b
  3281  001D08  0E00               	movlw	0
  3282  001D0A  6F78               	movwf	(___lldiv@dividend+3)& (0+255),b
  3283  001D0C  C088  F079         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3284  001D10  C089  F07A         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3285  001D14  C08A  F07B         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3286  001D18  C08B  F07C         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3287  001D1C  EC05  F01A         	call	___lldiv	;wreg free
  3288  001D20  0100               	movlb	0	; () banked
  3289  001D22  5175               	movf	?___lldiv& (0+255),w,b
  3290  001D24  6ECB               	movwf	4043,c	;volatile
  3291                           
  3292                           ;tmr_drv.c: 210: break;
  3293  001D26  D01D               	goto	l459
  3294  001D28                     
  3295                           ; BSR set to: 0
  3296                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  3297                           
  3298                           ; BSR set to: 0
  3299  001D28  0E00               	movlw	0
  3300  001D2A  6F75               	movwf	___lldiv@dividend& (0+255),b
  3301  001D2C  0E1B               	movlw	27
  3302  001D2E  6F76               	movwf	(___lldiv@dividend+1)& (0+255),b
  3303  001D30  0EB7               	movlw	183
  3304  001D32  6F77               	movwf	(___lldiv@dividend+2)& (0+255),b
  3305  001D34  0E00               	movlw	0
  3306  001D36  6F78               	movwf	(___lldiv@dividend+3)& (0+255),b
  3307  001D38  C088  F079         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3308  001D3C  C089  F07A         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3309  001D40  C08A  F07B         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3310  001D44  C08B  F07C         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3311  001D48  EC05  F01A         	call	___lldiv	;wreg free
  3312  001D4C  0100               	movlb	0	; () banked
  3313  001D4E  5175               	movf	?___lldiv& (0+255),w,b
  3314  001D50  6E77               	movwf	3959,c	;volatile
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;tmr_drv.c: 219: }
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;tmr_drv.c: 218: break;
  3321                           
  3322                           ;tmr_drv.c: 217: default:
  3323                           
  3324                           ;tmr_drv.c: 215: break;
  3325  001D52  D007               	goto	l459
  3326  001D54                     l457:
  3327                           
  3328                           ; BSR set to: 0
  3329                           
  3330                           ; BSR set to: 0
  3331  001D54  5187               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  3332                           
  3333                           ; Switch size 1, requested type "space"
  3334                           ; Number of cases is 2, Range of values is 2 to 4
  3335                           ; switch strategies available:
  3336                           ; Name         Instructions Cycles
  3337                           ; simple_byte            7     4 (average)
  3338                           ;	Chosen strategy is simple_byte
  3339  001D56  0A02               	xorlw	2	; case 2
  3340  001D58  B4D8               	btfsc	status,2,c
  3341  001D5A  D7D0               	goto	l458
  3342  001D5C  0A06               	xorlw	6	; case 4
  3343  001D5E  B4D8               	btfsc	status,2,c
  3344  001D60  D7E3               	goto	l460
  3345  001D62                     l459:
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  3349                           
  3350                           ; BSR set to: 0
  3351  001D62  0E00               	movlw	0
  3352  001D64  6F86               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  3353                           
  3354                           ;tmr_drv.c: 223: }
  3355  001D66  0012               	return	
  3356  001D68                     l456:
  3357  001D68                     l10058:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;tmr_drv.c: 224: else
  3361                           ;tmr_drv.c: 225: {
  3362                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  3363  001D68  0E01               	movlw	1
  3364  001D6A  6F86               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  3365                           
  3366                           ; BSR set to: 0
  3367  001D6C  0012               	return	
  3368  001D6E                     __end_of_Tmr_TmrBPrSet:
  3369                           	opt stack 0
  3370                           tblptru	equ	0xFF8
  3371                           tblptrh	equ	0xFF7
  3372                           tblptrl	equ	0xFF6
  3373                           tablat	equ	0xFF5
  3374                           prodh	equ	0xFF4
  3375                           prodl	equ	0xFF3
  3376                           intcon	equ	0xFF2
  3377                           intcon2	equ	0xFF1
  3378                           intcon3	equ	0xFF0
  3379                           postinc0	equ	0xFEE
  3380                           wreg	equ	0xFE8
  3381                           postdec1	equ	0xFE5
  3382                           fsr1h	equ	0xFE2
  3383                           fsr1l	equ	0xFE1
  3384                           indf2	equ	0xFDF
  3385                           postinc2	equ	0xFDE
  3386                           postdec2	equ	0xFDD
  3387                           fsr2h	equ	0xFDA
  3388                           fsr2l	equ	0xFD9
  3389                           status	equ	0xFD8
  3390                           
  3391 ;; *************** function _Tmr_TmrBIrqSet *****************
  3392 ;; Defined at:
  3393 ;;		line 153 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  TmrNumb         1    wreg     unsigned char 
  3396 ;;  Priority        1   21[BANK0 ] enum E7716
  3397 ;;  TmrIrqSts       1   22[BANK0 ] unsigned char 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  TmrNumb         1   23[BANK0 ] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3409 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3412 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3413 ;;Total ram usage:        3 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    9
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_Tmr_TmrBConfig
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text10
  3424  003B66                     __ptext10:
  3425                           	opt stack 0
  3426  003B66                     _Tmr_TmrBIrqSet:
  3427                           	opt stack 18
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;incstack = 0
  3431                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  3432  003B66  0100               	movlb	0	; () banked
  3433  003B68  6F77               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  3434                           
  3435                           ;tmr_drv.c: 156: switch (TmrNumb)
  3436  003B6A  D01A               	goto	l448
  3437  003B6C                     l449:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  3441  003B6C  929E               	bcf	3998,1,c	;volatile
  3442                           
  3443                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  3444  003B6E  B175               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  3445  003B70  D002               	bra	u6455
  3446  003B72  929F               	bcf	3999,1,c	;volatile
  3447  003B74  D001               	bra	u6456
  3448  003B76                     u6455:
  3449  003B76  829F               	bsf	3999,1,c	;volatile
  3450  003B78                     u6456:
  3451                           
  3452                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  3453  003B78  0100               	movlb	0	; () banked
  3454  003B7A  B176               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  3455  003B7C  D002               	bra	u6465
  3456  003B7E  929D               	bcf	3997,1,c	;volatile
  3457  003B80  D001               	bra	u6466
  3458  003B82                     u6465:
  3459  003B82  829D               	bsf	3997,1,c	;volatile
  3460  003B84                     u6466:
  3461                           
  3462                           ;tmr_drv.c: 165: break;
  3463  003B84  0012               	return	
  3464  003B86                     l451:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  3468  003B86  96A4               	bcf	4004,3,c	;volatile
  3469                           
  3470                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  3471  003B88  B175               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  3472  003B8A  D002               	bra	u6475
  3473  003B8C  96A5               	bcf	4005,3,c	;volatile
  3474  003B8E  D001               	bra	u6476
  3475  003B90                     u6475:
  3476  003B90  86A5               	bsf	4005,3,c	;volatile
  3477  003B92                     u6476:
  3478                           
  3479                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  3480  003B92  0100               	movlb	0	; () banked
  3481  003B94  B176               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  3482  003B96  D002               	bra	u6485
  3483  003B98  96A3               	bcf	4003,3,c	;volatile
  3484  003B9A  D001               	bra	u6486
  3485  003B9C                     u6485:
  3486  003B9C  86A3               	bsf	4003,3,c	;volatile
  3487  003B9E                     u6486:
  3488                           
  3489                           ;tmr_drv.c: 178: }
  3490                           
  3491                           ;tmr_drv.c: 177: break;
  3492                           
  3493                           ;tmr_drv.c: 176: default:
  3494                           
  3495                           ;tmr_drv.c: 174: break;
  3496  003B9E  0012               	return	
  3497  003BA0                     l448:
  3498  003BA0  0100               	movlb	0	; () banked
  3499  003BA2  5177               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  3500                           
  3501                           ; Switch size 1, requested type "space"
  3502                           ; Number of cases is 2, Range of values is 2 to 4
  3503                           ; switch strategies available:
  3504                           ; Name         Instructions Cycles
  3505                           ; simple_byte            7     4 (average)
  3506                           ;	Chosen strategy is simple_byte
  3507  003BA4  0A02               	xorlw	2	; case 2
  3508  003BA6  B4D8               	btfsc	status,2,c
  3509  003BA8  D7E1               	goto	l449
  3510  003BAA  0A06               	xorlw	6	; case 4
  3511  003BAC  A4D8               	btfss	status,2,c
  3512  003BAE  0012               	return	
  3513  003BB0  D7EA               	goto	l451
  3514  003BB2                     __end_of_Tmr_TmrBIrqSet:
  3515                           	opt stack 0
  3516                           tblptru	equ	0xFF8
  3517                           tblptrh	equ	0xFF7
  3518                           tblptrl	equ	0xFF6
  3519                           tablat	equ	0xFF5
  3520                           prodh	equ	0xFF4
  3521                           prodl	equ	0xFF3
  3522                           intcon	equ	0xFF2
  3523                           intcon2	equ	0xFF1
  3524                           intcon3	equ	0xFF0
  3525                           postinc0	equ	0xFEE
  3526                           wreg	equ	0xFE8
  3527                           postdec1	equ	0xFE5
  3528                           fsr1h	equ	0xFE2
  3529                           fsr1l	equ	0xFE1
  3530                           indf2	equ	0xFDF
  3531                           postinc2	equ	0xFDE
  3532                           postdec2	equ	0xFDD
  3533                           fsr2h	equ	0xFDA
  3534                           fsr2l	equ	0xFD9
  3535                           status	equ	0xFD8
  3536                           
  3537 ;; *************** function _Tmr_StartTmr *****************
  3538 ;; Defined at:
  3539 ;;		line 242 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  TmrNumb         1    wreg     unsigned char 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  TmrNumb         1   21[BANK0 ] unsigned char 
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, status,2, status,0
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3554 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;Total ram usage:        1 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    9
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_Tmr_TmrBConfig
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text11
  3568  00422A                     __ptext11:
  3569                           	opt stack 0
  3570  00422A                     _Tmr_StartTmr:
  3571                           	opt stack 18
  3572                           
  3573                           ;incstack = 0
  3574                           ;Tmr_StartTmr@TmrNumb stored from wreg
  3575  00422A  0100               	movlb	0	; () banked
  3576  00422C  6F75               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  3577                           
  3578                           ;tmr_drv.c: 245: switch (TmrNumb)
  3579  00422E  D004               	goto	l466
  3580  004230                     l467:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  3584  004230  84CA               	bsf	4042,2,c	;volatile
  3585                           
  3586                           ;tmr_drv.c: 250: break;
  3587  004232  0012               	return	
  3588  004234                     l469:
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  3592  004234  8476               	bsf	3958,2,c	;volatile
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;tmr_drv.c: 259: }
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;tmr_drv.c: 258: break;
  3599                           
  3600                           ;tmr_drv.c: 257: default:
  3601                           
  3602                           ;tmr_drv.c: 255: break;
  3603  004236  0012               	return	
  3604  004238                     l466:
  3605                           
  3606                           ; BSR set to: 0
  3607  004238  0100               	movlb	0	; () banked
  3608  00423A  5175               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  3609                           
  3610                           ; Switch size 1, requested type "space"
  3611                           ; Number of cases is 2, Range of values is 2 to 4
  3612                           ; switch strategies available:
  3613                           ; Name         Instructions Cycles
  3614                           ; simple_byte            7     4 (average)
  3615                           ;	Chosen strategy is simple_byte
  3616  00423C  0A02               	xorlw	2	; case 2
  3617  00423E  B4D8               	btfsc	status,2,c
  3618  004240  D7F7               	goto	l467
  3619  004242  0A06               	xorlw	6	; case 4
  3620  004244  A4D8               	btfss	status,2,c
  3621  004246  0012               	return	
  3622  004248  D7F5               	goto	l469
  3623  00424A                     __end_of_Tmr_StartTmr:
  3624                           	opt stack 0
  3625                           tblptru	equ	0xFF8
  3626                           tblptrh	equ	0xFF7
  3627                           tblptrl	equ	0xFF6
  3628                           tablat	equ	0xFF5
  3629                           prodh	equ	0xFF4
  3630                           prodl	equ	0xFF3
  3631                           intcon	equ	0xFF2
  3632                           intcon2	equ	0xFF1
  3633                           intcon3	equ	0xFF0
  3634                           postinc0	equ	0xFEE
  3635                           wreg	equ	0xFE8
  3636                           postdec1	equ	0xFE5
  3637                           fsr1h	equ	0xFE2
  3638                           fsr1l	equ	0xFE1
  3639                           indf2	equ	0xFDF
  3640                           postinc2	equ	0xFDE
  3641                           postdec2	equ	0xFDD
  3642                           fsr2h	equ	0xFDA
  3643                           fsr2l	equ	0xFD9
  3644                           status	equ	0xFD8
  3645                           
  3646 ;; *************** function _TmrBInit *****************
  3647 ;; Defined at:
  3648 ;;		line 72 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  TmrNumb         1    wreg     unsigned char 
  3651 ;;  Prescaler       1   21[BANK0 ] unsigned char 
  3652 ;;  Postscaler      1   22[BANK0 ] unsigned char 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  TmrNumb         1   24[BANK0 ] unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3664 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3665 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3667 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3668 ;;Total ram usage:        4 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    9
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_Tmr_TmrBConfig
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text12
  3679  002F8C                     __ptext12:
  3680                           	opt stack 0
  3681  002F8C                     _TmrBInit:
  3682                           	opt stack 18
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;incstack = 0
  3686                           ;TmrBInit@TmrNumb stored from wreg
  3687  002F8C  0100               	movlb	0	; () banked
  3688  002F8E  6F78               	movwf	TmrBInit@TmrNumb& (0+255),b
  3689                           
  3690                           ;tmr_drv.c: 75: switch (TmrNumb)
  3691  002F90  D03F               	goto	l428
  3692  002F92                     l431:
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  3696  002F92  90CA               	bcf	4042,0,c	;volatile
  3697  002F94  D001               	goto	L1
  3698  002F96                     l433:
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  3702  002F96  80CA               	bsf	4042,0,c	;volatile
  3703  002F98                     L1:
  3704                           
  3705                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  3706  002F98  92CA               	bcf	4042,1,c	;volatile
  3707                           
  3708                           ;tmr_drv.c: 91: break;
  3709  002F9A  D00E               	goto	l432
  3710  002F9C                     l434:
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  3714  002F9C  80CA               	bsf	4042,0,c	;volatile
  3715                           
  3716                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  3717  002F9E  82CA               	bsf	4042,1,c	;volatile
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;tmr_drv.c: 100: }
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;tmr_drv.c: 99: break;
  3724                           
  3725                           ;tmr_drv.c: 98: default:
  3726                           
  3727                           ;tmr_drv.c: 96: break;
  3728  002FA0  D00B               	goto	l432
  3729  002FA2                     
  3730                           ; BSR set to: 0
  3731  002FA2  0100               	movlb	0	; () banked
  3732  002FA4  5175               	movf	TmrBInit@Prescaler& (0+255),w,b
  3733                           
  3734                           ; Switch size 1, requested type "space"
  3735                           ; Number of cases is 3, Range of values is 1 to 16
  3736                           ; switch strategies available:
  3737                           ; Name         Instructions Cycles
  3738                           ; simple_byte           10     6 (average)
  3739                           ;	Chosen strategy is simple_byte
  3740  002FA6  0A01               	xorlw	1	; case 1
  3741  002FA8  B4D8               	btfsc	status,2,c
  3742  002FAA  D7F3               	goto	l431
  3743  002FAC  0A05               	xorlw	5	; case 4
  3744  002FAE  B4D8               	btfsc	status,2,c
  3745  002FB0  D7F2               	goto	l433
  3746  002FB2  0A14               	xorlw	20	; case 16
  3747  002FB4  B4D8               	btfsc	status,2,c
  3748  002FB6  D7F2               	goto	l434
  3749  002FB8                     l432:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  3753                           
  3754                           ; BSR set to: 0
  3755  002FB8  C076  F077         	movff	TmrBInit@Postscaler,??_TmrBInit
  3756  002FBC  0EFF               	movlw	255
  3757  002FBE  2777               	addwf	??_TmrBInit& (0+255),f,b
  3758  002FC0  4777               	rlncf	??_TmrBInit& (0+255),f,b
  3759  002FC2  4777               	rlncf	??_TmrBInit& (0+255),f,b
  3760  002FC4  4777               	rlncf	??_TmrBInit& (0+255),f,b
  3761  002FC6  50CA               	movf	4042,w,c	;volatile
  3762  002FC8  1977               	xorwf	??_TmrBInit& (0+255),w,b
  3763  002FCA  0B87               	andlw	-121
  3764  002FCC  1977               	xorwf	??_TmrBInit& (0+255),w,b
  3765  002FCE  6ECA               	movwf	4042,c	;volatile
  3766                           
  3767                           ;tmr_drv.c: 104: break;
  3768  002FD0  0012               	return	
  3769  002FD2                     l439:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  3773  002FD2  9076               	bcf	3958,0,c	;volatile
  3774  002FD4  D001               	goto	L2
  3775  002FD6                     l441:
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  3779  002FD6  8076               	bsf	3958,0,c	;volatile
  3780  002FD8                     L2:
  3781                           
  3782                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  3783  002FD8  9276               	bcf	3958,1,c	;volatile
  3784                           
  3785                           ;tmr_drv.c: 120: break;
  3786  002FDA  D00D               	goto	l440
  3787  002FDC                     l442:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  3791  002FDC  8076               	bsf	3958,0,c	;volatile
  3792                           
  3793                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  3794  002FDE  8276               	bsf	3958,1,c	;volatile
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;tmr_drv.c: 129: }
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;tmr_drv.c: 128: break;
  3801                           
  3802                           ;tmr_drv.c: 127: default:
  3803                           
  3804                           ;tmr_drv.c: 125: break;
  3805  002FE0  D00A               	goto	l440
  3806  002FE2                     
  3807                           ; BSR set to: 0
  3808                           
  3809                           ; BSR set to: 0
  3810  002FE2  5175               	movf	TmrBInit@Prescaler& (0+255),w,b
  3811                           
  3812                           ; Switch size 1, requested type "space"
  3813                           ; Number of cases is 3, Range of values is 1 to 16
  3814                           ; switch strategies available:
  3815                           ; Name         Instructions Cycles
  3816                           ; simple_byte           10     6 (average)
  3817                           ;	Chosen strategy is simple_byte
  3818  002FE4  0A01               	xorlw	1	; case 1
  3819  002FE6  B4D8               	btfsc	status,2,c
  3820  002FE8  D7F4               	goto	l439
  3821  002FEA  0A05               	xorlw	5	; case 4
  3822  002FEC  B4D8               	btfsc	status,2,c
  3823  002FEE  D7F3               	goto	l441
  3824  002FF0  0A14               	xorlw	20	; case 16
  3825  002FF2  B4D8               	btfsc	status,2,c
  3826  002FF4  D7F3               	goto	l442
  3827  002FF6                     l440:
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  3831                           
  3832                           ; BSR set to: 0
  3833  002FF6  C076  F077         	movff	TmrBInit@Postscaler,??_TmrBInit
  3834  002FFA  0EFF               	movlw	255
  3835  002FFC  2777               	addwf	??_TmrBInit& (0+255),f,b
  3836  002FFE  4777               	rlncf	??_TmrBInit& (0+255),f,b
  3837  003000  4777               	rlncf	??_TmrBInit& (0+255),f,b
  3838  003002  4777               	rlncf	??_TmrBInit& (0+255),f,b
  3839  003004  5076               	movf	3958,w,c	;volatile
  3840  003006  1977               	xorwf	??_TmrBInit& (0+255),w,b
  3841  003008  0B87               	andlw	-121
  3842  00300A  1977               	xorwf	??_TmrBInit& (0+255),w,b
  3843  00300C  6E76               	movwf	3958,c	;volatile
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;tmr_drv.c: 137: }
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;tmr_drv.c: 136: break;
  3850                           
  3851                           ;tmr_drv.c: 135: default:
  3852                           
  3853                           ;tmr_drv.c: 133: break;
  3854  00300E  0012               	return	
  3855  003010                     l428:
  3856                           
  3857                           ; BSR set to: 0
  3858  003010  0100               	movlb	0	; () banked
  3859  003012  5178               	movf	TmrBInit@TmrNumb& (0+255),w,b
  3860                           
  3861                           ; Switch size 1, requested type "space"
  3862                           ; Number of cases is 2, Range of values is 2 to 4
  3863                           ; switch strategies available:
  3864                           ; Name         Instructions Cycles
  3865                           ; simple_byte            7     4 (average)
  3866                           ;	Chosen strategy is simple_byte
  3867  003014  0A02               	xorlw	2	; case 2
  3868  003016  B4D8               	btfsc	status,2,c
  3869  003018  D7C4               	goto	l430
  3870  00301A  0A06               	xorlw	6	; case 4
  3871  00301C  A4D8               	btfss	status,2,c
  3872  00301E  0012               	return	
  3873  003020  D7E0               	goto	l438
  3874  003022                     __end_of_TmrBInit:
  3875                           	opt stack 0
  3876                           tblptru	equ	0xFF8
  3877                           tblptrh	equ	0xFF7
  3878                           tblptrl	equ	0xFF6
  3879                           tablat	equ	0xFF5
  3880                           prodh	equ	0xFF4
  3881                           prodl	equ	0xFF3
  3882                           intcon	equ	0xFF2
  3883                           intcon2	equ	0xFF1
  3884                           intcon3	equ	0xFF0
  3885                           postinc0	equ	0xFEE
  3886                           wreg	equ	0xFE8
  3887                           postdec1	equ	0xFE5
  3888                           fsr1h	equ	0xFE2
  3889                           fsr1l	equ	0xFE1
  3890                           indf2	equ	0xFDF
  3891                           postinc2	equ	0xFDE
  3892                           postdec2	equ	0xFDD
  3893                           fsr2h	equ	0xFDA
  3894                           fsr2l	equ	0xFD9
  3895                           status	equ	0xFD8
  3896                           
  3897 ;; *************** function _Sch_MainScheduler *****************
  3898 ;; Defined at:
  3899 ;;		line 175 in file "../../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;Total ram usage:        0 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:   20
  3920 ;; This function calls:
  3921 ;;		_InitializeTasks
  3922 ;;		_ScheduleTasks
  3923 ;; This function is called by:
  3924 ;;		_main
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text13
  3929  0042A4                     __ptext13:
  3930                           	opt stack 0
  3931  0042A4                     _Sch_MainScheduler:
  3932                           	opt stack 10
  3933                           
  3934                           ;os_sched.c: 178: InitializeTasks();
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;incstack = 0
  3938  0042A4  ECFA  F01A         	call	_InitializeTasks	;wreg free
  3939                           
  3940                           ;os_sched.c: 180: SystemState = RunningState;
  3941  0042A8  0E01               	movlw	1
  3942  0042AA  0100               	movlb	0	; () banked
  3943  0042AC  6FD5               	movwf	_SystemState& (0+255),b
  3944  0042AE                     
  3945                           ; BSR set to: 0
  3946                           ;os_sched.c: 188: {
  3947                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  3948                           
  3949                           ; BSR set to: 0
  3950  0042AE  51E2               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  3951  0042B0  A4D8               	btfss	status,2,c
  3952  0042B2  D7FD               	goto	l687
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;os_sched.c: 191: {
  3956                           ;os_sched.c: 196: ScheduleTasks();
  3957  0042B4  ECAB  F00C         	call	_ScheduleTasks	;wreg free
  3958                           
  3959                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  3960  0042B8  0E01               	movlw	1
  3961  0042BA  0100               	movlb	0	; () banked
  3962  0042BC  6FE2               	movwf	_MainSystemTimebaseFlag& (0+255),b
  3963                           
  3964                           ; BSR set to: 0
  3965                           
  3966                           ; BSR set to: 0
  3967  0042BE  D7F7               	goto	l687
  3968  0042C0                     __end_of_Sch_MainScheduler:
  3969                           	opt stack 0
  3970                           tblptru	equ	0xFF8
  3971                           tblptrh	equ	0xFF7
  3972                           tblptrl	equ	0xFF6
  3973                           tablat	equ	0xFF5
  3974                           prodh	equ	0xFF4
  3975                           prodl	equ	0xFF3
  3976                           intcon	equ	0xFF2
  3977                           intcon2	equ	0xFF1
  3978                           intcon3	equ	0xFF0
  3979                           postinc0	equ	0xFEE
  3980                           wreg	equ	0xFE8
  3981                           postdec1	equ	0xFE5
  3982                           fsr1h	equ	0xFE2
  3983                           fsr1l	equ	0xFE1
  3984                           indf2	equ	0xFDF
  3985                           postinc2	equ	0xFDE
  3986                           postdec2	equ	0xFDD
  3987                           fsr2h	equ	0xFDA
  3988                           fsr2l	equ	0xFD9
  3989                           status	equ	0xFD8
  3990                           
  3991 ;; *************** function _ScheduleTasks *****************
  3992 ;; Defined at:
  3993 ;;		line 99 in file "../../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  ActiveTaskIn    1   78[BANK0 ] unsigned char 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      void 
  4000 ;; Registers used:
  4001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4009 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4010 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4011 ;;Total ram usage:        5 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:   19
  4014 ;; This function calls:
  4015 ;;		_I2cSlv_MainTask
  4016 ;;		_Led_MainTask
  4017 ;;		_MyApp_Task
  4018 ;;		_Rtcm_MainTask
  4019 ;;		_Term_MainTask
  4020 ;;		_UsbDevice_MainTask
  4021 ;;		_Wdg_MainTask
  4022 ;; This function is called by:
  4023 ;;		_Sch_MainScheduler
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text14
  4028  001956                     __ptext14:
  4029                           	opt stack 0
  4030  001956                     _ScheduleTasks:
  4031                           	opt stack 10
  4032                           
  4033                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;incstack = 0
  4037  001956  0E00               	movlw	0
  4038  001958  0100               	movlb	0	; () banked
  4039  00195A  6FAE               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4040                           
  4041                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  4042  00195C  0E00               	movlw	0
  4043  00195E  6FAE               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4044  001960                     l10442:
  4045                           
  4046                           ; BSR set to: 0
  4047  001960  0E67               	movlw	low _TaskNumber
  4048  001962  6EF6               	movwf	tblptrl,c
  4049  001964                     	if	1	;There is more than 1 active tblptr byte
  4050  001964  0EFD               	movlw	high _TaskNumber
  4051  001966  6EF7               	movwf	tblptrh,c
  4052  001968                     	endif
  4053  001968                     	if	0	;There are less than 3 active tblptr bytes
  4054  001968                     	endif
  4055  001968  51AE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4056  00196A  6FAA               	movwf	??_ScheduleTasks& (0+255),b
  4057  00196C  6BAB               	clrf	(??_ScheduleTasks+1)& (0+255),b
  4058  00196E  0009               	tblrd		*+
  4059  001970  50F5               	movf	tablat,w,c
  4060  001972  5DAA               	subwf	??_ScheduleTasks& (0+255),w,b
  4061  001974  0009               	tblrd		*+
  4062  001976  50F5               	movf	tablat,w,c
  4063  001978  59AB               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  4064  00197A  B0D8               	btfsc	status,0,c
  4065  00197C  0012               	return	
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;os_sched.c: 106: {
  4069                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  4070                           
  4071                           ; BSR set to: 0
  4072                           
  4073                           ; BSR set to: 0
  4074  00197E  51AE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4075  001980  0D08               	mullw	8
  4076  001982  0E03               	movlw	3
  4077  001984  26F3               	addwf	prodl,f,c
  4078  001986  0E00               	movlw	0
  4079  001988  22F4               	addwfc	prodh,f,c
  4080  00198A  0E8F               	movlw	low _TaskTable
  4081  00198C  24F3               	addwf	prodl,w,c
  4082  00198E  6ED9               	movwf	fsr2l,c
  4083  001990  0E03               	movlw	high _TaskTable
  4084  001992  20F4               	addwfc	prodh,w,c
  4085  001994  6EDA               	movwf	fsr2h,c
  4086  001996  2ADE               	incf	postinc2,f,c
  4087  001998  0E00               	movlw	0
  4088  00199A  22DD               	addwfc	postdec2,f,c
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  4092  00199C  51AE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4093  00199E  0D08               	mullw	8
  4094  0019A0  0E05               	movlw	5
  4095  0019A2  26F3               	addwf	prodl,f,c
  4096  0019A4  0E00               	movlw	0
  4097  0019A6  22F4               	addwfc	prodh,f,c
  4098  0019A8  0E8F               	movlw	low _TaskTable
  4099  0019AA  24F3               	addwf	prodl,w,c
  4100  0019AC  6ED9               	movwf	fsr2l,c
  4101  0019AE  0E03               	movlw	high _TaskTable
  4102  0019B0  20F4               	addwfc	prodh,w,c
  4103  0019B2  6EDA               	movwf	fsr2h,c
  4104  0019B4  51AE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4105  0019B6  0D08               	mullw	8
  4106  0019B8  0E03               	movlw	3
  4107  0019BA  26F3               	addwf	prodl,f,c
  4108  0019BC  0E00               	movlw	0
  4109  0019BE  22F4               	addwfc	prodh,f,c
  4110  0019C0  0E8F               	movlw	low _TaskTable
  4111  0019C2  24F3               	addwf	prodl,w,c
  4112  0019C4  6EE1               	movwf	fsr1l,c
  4113  0019C6  0E03               	movlw	high _TaskTable
  4114  0019C8  20F4               	addwfc	prodh,w,c
  4115  0019CA  6EE2               	movwf	fsr1h,c
  4116  0019CC  50DE               	movf	postinc2,w,c
  4117  0019CE  5CE6               	subwf	postinc1,w,c
  4118  0019D0  50DE               	movf	postinc2,w,c
  4119  0019D2  58E6               	subwfb	postinc1,w,c
  4120  0019D4  A0D8               	btfss	status,0,c
  4121  0019D6  D04E               	goto	l672
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;os_sched.c: 111: {
  4125                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  4126  0019D8  51AE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4127  0019DA  0D08               	mullw	8
  4128  0019DC  0E03               	movlw	3
  4129  0019DE  26F3               	addwf	prodl,f,c
  4130  0019E0  0E00               	movlw	0
  4131  0019E2  22F4               	addwfc	prodh,f,c
  4132  0019E4  0E8F               	movlw	low _TaskTable
  4133  0019E6  24F3               	addwf	prodl,w,c
  4134  0019E8  6ED9               	movwf	fsr2l,c
  4135  0019EA  0E03               	movlw	high _TaskTable
  4136  0019EC  20F4               	addwfc	prodh,w,c
  4137  0019EE  6EDA               	movwf	fsr2h,c
  4138  0019F0  0E00               	movlw	0
  4139  0019F2  6EDE               	movwf	postinc2,c
  4140  0019F4  0E00               	movlw	0
  4141  0019F6  6EDD               	movwf	postdec2,c
  4142                           
  4143                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  4144  0019F8  51AE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4145  0019FA  0D08               	mullw	8
  4146  0019FC  0E02               	movlw	2
  4147  0019FE  26F3               	addwf	prodl,f,c
  4148  001A00  0E00               	movlw	0
  4149  001A02  22F4               	addwfc	prodh,f,c
  4150  001A04  0E8F               	movlw	low _TaskTable
  4151  001A06  24F3               	addwf	prodl,w,c
  4152  001A08  6ED9               	movwf	fsr2l,c
  4153  001A0A  0E03               	movlw	high _TaskTable
  4154  001A0C  20F4               	addwfc	prodh,w,c
  4155  001A0E  6EDA               	movwf	fsr2h,c
  4156  001A10  0E01               	movlw	1
  4157  001A12  6EDF               	movwf	indf2,c
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  4161  001A14  51AE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4162  001A16  0D08               	mullw	8
  4163  001A18  0E8F               	movlw	low _TaskTable
  4164  001A1A  24F3               	addwf	prodl,w,c
  4165  001A1C  6ED9               	movwf	fsr2l,c
  4166  001A1E  0E03               	movlw	high _TaskTable
  4167  001A20  20F4               	addwfc	prodh,w,c
  4168  001A22  6EDA               	movwf	fsr2h,c
  4169  001A24  D801               	call	u9848
  4170  001A26  D017               	goto	u9849
  4171  001A28                     u9848:
  4172  001A28  0005               	push	
  4173  001A2A  6EFA               	movwf	pclath,c
  4174  001A2C  50DE               	movf	postinc2,w,c
  4175  001A2E  6EFD               	movwf	tosl,c
  4176  001A30  50DE               	movf	postinc2,w,c
  4177  001A32  6EFE               	movwf	tosh,c
  4178  001A34  50F8               	movf	tblptru,w,c
  4179  001A36  6EFF               	movwf	tosu,c
  4180  001A38  50FA               	movf	pclath,w,c
  4181  001A3A  51AE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4182  001A3C  0D08               	mullw	8
  4183  001A3E  0E07               	movlw	7
  4184  001A40  26F3               	addwf	prodl,f,c
  4185  001A42  0E00               	movlw	0
  4186  001A44  22F4               	addwfc	prodh,f,c
  4187  001A46  0E8F               	movlw	low _TaskTable
  4188  001A48  24F3               	addwf	prodl,w,c
  4189  001A4A  6ED9               	movwf	fsr2l,c
  4190  001A4C  0E03               	movlw	high _TaskTable
  4191  001A4E  20F4               	addwfc	prodh,w,c
  4192  001A50  6EDA               	movwf	fsr2h,c
  4193  001A52  50DF               	movf	indf2,w,c
  4194  001A54  0012               	return		;indir
  4195  001A56                     u9849:
  4196                           
  4197                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  4198  001A56  0100               	movlb	0	; () banked
  4199  001A58  51AE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4200  001A5A  0D08               	mullw	8
  4201  001A5C  0E02               	movlw	2
  4202  001A5E  26F3               	addwf	prodl,f,c
  4203  001A60  0E00               	movlw	0
  4204  001A62  22F4               	addwfc	prodh,f,c
  4205  001A64  0E8F               	movlw	low _TaskTable
  4206  001A66  24F3               	addwf	prodl,w,c
  4207  001A68  6ED9               	movwf	fsr2l,c
  4208  001A6A  0E03               	movlw	high _TaskTable
  4209  001A6C  20F4               	addwfc	prodh,w,c
  4210  001A6E  6EDA               	movwf	fsr2h,c
  4211  001A70  0E00               	movlw	0
  4212  001A72  6EDF               	movwf	indf2,c
  4213  001A74                     l672:
  4214                           
  4215                           ; BSR set to: 0
  4216                           
  4217                           ; BSR set to: 0
  4218                           
  4219                           ;os_sched.c: 117: else
  4220                           ;os_sched.c: 118: {
  4221                           
  4222                           ; BSR set to: 0
  4223  001A74  2BAE               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  4224  001A76  D774               	goto	l10442
  4225  001A78                     __end_of_ScheduleTasks:
  4226                           	opt stack 0
  4227                           tosu	equ	0xFFF
  4228                           tosh	equ	0xFFE
  4229                           tosl	equ	0xFFD
  4230                           pclath	equ	0xFFA
  4231                           tblptru	equ	0xFF8
  4232                           tblptrh	equ	0xFF7
  4233                           tblptrl	equ	0xFF6
  4234                           tablat	equ	0xFF5
  4235                           prodh	equ	0xFF4
  4236                           prodl	equ	0xFF3
  4237                           intcon	equ	0xFF2
  4238                           intcon2	equ	0xFF1
  4239                           intcon3	equ	0xFF0
  4240                           postinc0	equ	0xFEE
  4241                           wreg	equ	0xFE8
  4242                           postinc1	equ	0xFE6
  4243                           postdec1	equ	0xFE5
  4244                           fsr1h	equ	0xFE2
  4245                           fsr1l	equ	0xFE1
  4246                           indf2	equ	0xFDF
  4247                           postinc2	equ	0xFDE
  4248                           postdec2	equ	0xFDD
  4249                           fsr2h	equ	0xFDA
  4250                           fsr2l	equ	0xFD9
  4251                           status	equ	0xFD8
  4252                           
  4253 ;; *************** function _InitializeTasks *****************
  4254 ;; Defined at:
  4255 ;;		line 79 in file "../../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  ActiveTaskIn    1   76[BANK0 ] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4271 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4272 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;Total ram usage:        3 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:   19
  4276 ;; This function calls:
  4277 ;;		_I2cSlv_MainTask
  4278 ;;		_Led_MainTask
  4279 ;;		_MyApp_Task
  4280 ;;		_Rtcm_MainTask
  4281 ;;		_Term_MainTask
  4282 ;;		_UsbDevice_MainTask
  4283 ;;		_Wdg_MainTask
  4284 ;; This function is called by:
  4285 ;;		_Sch_MainScheduler
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           	psect	text15
  4290  0035F4                     __ptext15:
  4291                           	opt stack 0
  4292  0035F4                     _InitializeTasks:
  4293                           	opt stack 10
  4294                           
  4295                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;incstack = 0
  4299  0035F4  0E00               	movlw	0
  4300  0035F6  0100               	movlb	0	; () banked
  4301  0035F8  6FAC               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  4302                           
  4303                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  4304  0035FA  0E00               	movlw	0
  4305  0035FC  6FAC               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  4306  0035FE                     l10430:
  4307                           
  4308                           ; BSR set to: 0
  4309  0035FE  0E67               	movlw	low _TaskNumber
  4310  003600  6EF6               	movwf	tblptrl,c
  4311  003602                     	if	1	;There is more than 1 active tblptr byte
  4312  003602  0EFD               	movlw	high _TaskNumber
  4313  003604  6EF7               	movwf	tblptrh,c
  4314  003606                     	endif
  4315  003606                     	if	0	;There are less than 3 active tblptr bytes
  4316  003606                     	endif
  4317  003606  51AC               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4318  003608  6FAA               	movwf	??_InitializeTasks& (0+255),b
  4319  00360A  6BAB               	clrf	(??_InitializeTasks+1)& (0+255),b
  4320  00360C  0009               	tblrd		*+
  4321  00360E  50F5               	movf	tablat,w,c
  4322  003610  5DAA               	subwf	??_InitializeTasks& (0+255),w,b
  4323  003612  0009               	tblrd		*+
  4324  003614  50F5               	movf	tablat,w,c
  4325  003616  59AB               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  4326  003618  B0D8               	btfsc	status,0,c
  4327  00361A  0012               	return	
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;os_sched.c: 86: {
  4331                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  4332                           
  4333                           ; BSR set to: 0
  4334                           
  4335                           ; BSR set to: 0
  4336  00361C  51AC               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4337  00361E  0D08               	mullw	8
  4338  003620  0E8F               	movlw	low _TaskTable
  4339  003622  24F3               	addwf	prodl,w,c
  4340  003624  6ED9               	movwf	fsr2l,c
  4341  003626  0E03               	movlw	high _TaskTable
  4342  003628  20F4               	addwfc	prodh,w,c
  4343  00362A  6EDA               	movwf	fsr2h,c
  4344  00362C  D801               	call	u9808
  4345  00362E  D017               	goto	u9809
  4346  003630                     u9808:
  4347  003630  0005               	push	
  4348  003632  6EFA               	movwf	pclath,c
  4349  003634  50DE               	movf	postinc2,w,c
  4350  003636  6EFD               	movwf	tosl,c
  4351  003638  50DE               	movf	postinc2,w,c
  4352  00363A  6EFE               	movwf	tosh,c
  4353  00363C  50F8               	movf	tblptru,w,c
  4354  00363E  6EFF               	movwf	tosu,c
  4355  003640  50FA               	movf	pclath,w,c
  4356  003642  51AC               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4357  003644  0D08               	mullw	8
  4358  003646  0E07               	movlw	7
  4359  003648  26F3               	addwf	prodl,f,c
  4360  00364A  0E00               	movlw	0
  4361  00364C  22F4               	addwfc	prodh,f,c
  4362  00364E  0E8F               	movlw	low _TaskTable
  4363  003650  24F3               	addwf	prodl,w,c
  4364  003652  6ED9               	movwf	fsr2l,c
  4365  003654  0E03               	movlw	high _TaskTable
  4366  003656  20F4               	addwfc	prodh,w,c
  4367  003658  6EDA               	movwf	fsr2h,c
  4368  00365A  50DF               	movf	indf2,w,c
  4369  00365C  0012               	return		;indir
  4370  00365E                     u9809:
  4371  00365E  0100               	movlb	0	; () banked
  4372  003660  2BAC               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  4373  003662  D7CD               	goto	l10430
  4374  003664                     __end_of_InitializeTasks:
  4375                           	opt stack 0
  4376                           tosu	equ	0xFFF
  4377                           tosh	equ	0xFFE
  4378                           tosl	equ	0xFFD
  4379                           pclath	equ	0xFFA
  4380                           tblptru	equ	0xFF8
  4381                           tblptrh	equ	0xFF7
  4382                           tblptrl	equ	0xFF6
  4383                           tablat	equ	0xFF5
  4384                           prodh	equ	0xFF4
  4385                           prodl	equ	0xFF3
  4386                           intcon	equ	0xFF2
  4387                           intcon2	equ	0xFF1
  4388                           intcon3	equ	0xFF0
  4389                           postinc0	equ	0xFEE
  4390                           wreg	equ	0xFE8
  4391                           postinc1	equ	0xFE6
  4392                           postdec1	equ	0xFE5
  4393                           fsr1h	equ	0xFE2
  4394                           fsr1l	equ	0xFE1
  4395                           indf2	equ	0xFDF
  4396                           postinc2	equ	0xFDE
  4397                           postdec2	equ	0xFDD
  4398                           fsr2h	equ	0xFDA
  4399                           fsr2l	equ	0xFD9
  4400                           status	equ	0xFD8
  4401                           
  4402 ;; *************** function _MyApp_Task *****************
  4403 ;; Defined at:
  4404 ;;		line 73 in file "../Source/c/04_App/app.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  Options         1    wreg     unsigned char 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  Options         1    0[COMRAM] unsigned char 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      void 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2, status,0, cstack
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4422 ;;Total ram usage:        0 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; Hardware stack levels required when called:   10
  4425 ;; This function calls:
  4426 ;;		_Led_SetLedBlinkTime
  4427 ;;		_Led_SetLedStatus
  4428 ;; This function is called by:
  4429 ;;		_InitializeTasks
  4430 ;;		_ScheduleTasks
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text16
  4435  003EB8                     __ptext16:
  4436                           	opt stack 0
  4437  003EB8                     _MyApp_Task:
  4438                           	opt stack 18
  4439                           
  4440                           ;app.c: 75: switch (SystemState)
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;incstack = 0
  4444  003EB8  D013               	goto	l1931
  4445  003EBA                     
  4446                           ;app.c: 80: Led_SetLedBlinkTime(1u,100,900);
  4447  003EBA  0E00               	movlw	0
  4448  003EBC  0100               	movlb	0	; () banked
  4449  003EBE  6F76               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  4450  003EC0  0E64               	movlw	100
  4451  003EC2  6F75               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  4452  003EC4  0E03               	movlw	3
  4453  003EC6  6F78               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  4454  003EC8  0E84               	movlw	132
  4455  003ECA  6F77               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  4456  003ECC  0E01               	movlw	1
  4457  003ECE  EC38  F01D         	call	_Led_SetLedBlinkTime
  4458                           
  4459                           ;app.c: 81: Led_SetLedStatus(1u, LED_STS_BLINK);
  4460  003ED2  0E03               	movlw	3
  4461  003ED4  0100               	movlb	0	; () banked
  4462  003ED6  6F75               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  4463  003ED8  0E01               	movlw	1
  4464  003EDA  ECF0  F01F         	call	_Led_SetLedStatus
  4465                           
  4466                           ;app.c: 93: }
  4467                           
  4468                           ;app.c: 92: break;
  4469                           
  4470                           ;app.c: 91: default:
  4471                           
  4472                           ;app.c: 88: break;
  4473                           
  4474                           ;app.c: 85: case RunningState:
  4475                           
  4476                           ;app.c: 82: break;
  4477  003EDE  0012               	return	
  4478  003EE0                     l1931:
  4479  003EE0  0100               	movlb	0	; () banked
  4480  003EE2  51D5               	movf	_SystemState& (0+255),w,b
  4481                           
  4482                           ; Switch size 1, requested type "space"
  4483                           ; Number of cases is 2, Range of values is 0 to 1
  4484                           ; switch strategies available:
  4485                           ; Name         Instructions Cycles
  4486                           ; simple_byte            7     4 (average)
  4487                           ;	Chosen strategy is simple_byte
  4488  003EE4  0A00               	xorlw	0	; case 0
  4489  003EE6  B4D8               	btfsc	status,2,c
  4490  003EE8  D7E8               	goto	l1932
  4491  003EEA  0A01               	xorlw	1	; case 1
  4492  003EEC  0012               	return	
  4493  003EEE                     __end_of_MyApp_Task:
  4494                           	opt stack 0
  4495                           tosu	equ	0xFFF
  4496                           tosh	equ	0xFFE
  4497                           tosl	equ	0xFFD
  4498                           pclath	equ	0xFFA
  4499                           tblptru	equ	0xFF8
  4500                           tblptrh	equ	0xFF7
  4501                           tblptrl	equ	0xFF6
  4502                           tablat	equ	0xFF5
  4503                           prodh	equ	0xFF4
  4504                           prodl	equ	0xFF3
  4505                           intcon	equ	0xFF2
  4506                           intcon2	equ	0xFF1
  4507                           intcon3	equ	0xFF0
  4508                           postinc0	equ	0xFEE
  4509                           wreg	equ	0xFE8
  4510                           postinc1	equ	0xFE6
  4511                           postdec1	equ	0xFE5
  4512                           fsr1h	equ	0xFE2
  4513                           fsr1l	equ	0xFE1
  4514                           indf2	equ	0xFDF
  4515                           postinc2	equ	0xFDE
  4516                           postdec2	equ	0xFDD
  4517                           fsr2h	equ	0xFDA
  4518                           fsr2l	equ	0xFD9
  4519                           status	equ	0xFD8
  4520                           
  4521 ;; *************** function _Term_MainTask *****************
  4522 ;; Defined at:
  4523 ;;		line 830 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  Options         1    wreg     unsigned char 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  Options         1    0[COMRAM] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4541 ;;Total ram usage:        0 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:   15
  4544 ;; This function calls:
  4545 ;;		_Term_MainSm
  4546 ;; This function is called by:
  4547 ;;		_InitializeTasks
  4548 ;;		_ScheduleTasks
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text17
  4553  0042DA                     __ptext17:
  4554                           	opt stack 0
  4555  0042DA                     _Term_MainTask:
  4556                           	opt stack 13
  4557                           
  4558                           ;term.c: 832: switch (SystemState)
  4559                           
  4560                           ;incstack = 0
  4561  0042DA  D003               	goto	l1879
  4562  0042DC                     
  4563                           ;term.c: 843: Term_MainSm();
  4564  0042DC  ECB0  F002         	call	_Term_MainSm	;wreg free
  4565                           
  4566                           ;term.c: 850: }
  4567                           
  4568                           ;term.c: 849: break;
  4569                           
  4570                           ;term.c: 848: default:
  4571                           
  4572                           ;term.c: 845: break;
  4573  0042E0  0012               	return	
  4574  0042E2                     l1879:
  4575  0042E2  0100               	movlb	0	; () banked
  4576  0042E4  51D5               	movf	_SystemState& (0+255),w,b
  4577                           
  4578                           ; Switch size 1, requested type "space"
  4579                           ; Number of cases is 2, Range of values is 0 to 1
  4580                           ; switch strategies available:
  4581                           ; Name         Instructions Cycles
  4582                           ; simple_byte            7     4 (average)
  4583                           ;	Chosen strategy is simple_byte
  4584  0042E6  0A00               	xorlw	0	; case 0
  4585  0042E8  B4D8               	btfsc	status,2,c
  4586  0042EA  0012               	return	
  4587  0042EC  0A01               	xorlw	1	; case 1
  4588  0042EE  A4D8               	btfss	status,2,c
  4589  0042F0  0012               	return	
  4590  0042F2  D7F4               	goto	l1882
  4591  0042F4                     __end_of_Term_MainTask:
  4592                           	opt stack 0
  4593                           tosu	equ	0xFFF
  4594                           tosh	equ	0xFFE
  4595                           tosl	equ	0xFFD
  4596                           pclath	equ	0xFFA
  4597                           tblptru	equ	0xFF8
  4598                           tblptrh	equ	0xFF7
  4599                           tblptrl	equ	0xFF6
  4600                           tablat	equ	0xFF5
  4601                           prodh	equ	0xFF4
  4602                           prodl	equ	0xFF3
  4603                           intcon	equ	0xFF2
  4604                           intcon2	equ	0xFF1
  4605                           intcon3	equ	0xFF0
  4606                           postinc0	equ	0xFEE
  4607                           wreg	equ	0xFE8
  4608                           postinc1	equ	0xFE6
  4609                           postdec1	equ	0xFE5
  4610                           fsr1h	equ	0xFE2
  4611                           fsr1l	equ	0xFE1
  4612                           indf2	equ	0xFDF
  4613                           postinc2	equ	0xFDE
  4614                           postdec2	equ	0xFDD
  4615                           fsr2h	equ	0xFDA
  4616                           fsr2l	equ	0xFD9
  4617                           status	equ	0xFD8
  4618                           
  4619 ;; *************** function _Rtcm_MainTask *****************
  4620 ;; Defined at:
  4621 ;;		line 99 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  Options         1    wreg     unsigned char 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;  Options         1    0[COMRAM] unsigned char 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4639 ;;Total ram usage:        0 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:   12
  4642 ;; This function calls:
  4643 ;;		_Rtcc_AlarmConfig
  4644 ;;		_Rtcc_LockRtc
  4645 ;;		_Rtcc_RtcConfig
  4646 ;;		_Rtcc_SetRtcStatus
  4647 ;;		_Rtcc_UnlockRtc
  4648 ;;		_Rtcm_GetRtccDate
  4649 ;;		_Rtcm_SetRtccDate
  4650 ;; This function is called by:
  4651 ;;		_InitializeTasks
  4652 ;;		_ScheduleTasks
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text18
  4657  003270                     __ptext18:
  4658                           	opt stack 0
  4659  003270                     _Rtcm_MainTask:
  4660                           	opt stack 16
  4661                           
  4662                           ;rtcm.c: 101: switch (SystemState)
  4663                           
  4664                           ;incstack = 0
  4665  003270  D03D               	goto	l1654
  4666  003272                     l1655:
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  4670  003272  86CD               	bsf	4045,3,c	;volatile
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  4674  003274  0E00               	movlw	0
  4675  003276  0101               	movlb	1	; () banked
  4676  003278  6F34               	movwf	_RtcConfig& (0+255),b
  4677                           
  4678                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  4679  00327A  0E00               	movlw	0
  4680  00327C  6F35               	movwf	(_RtcConfig+1)& (0+255),b
  4681                           
  4682                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  4683  00327E  0E01               	movlw	1
  4684  003280  6F36               	movwf	(_RtcConfig+2)& (0+255),b
  4685                           
  4686                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  4687  003282  0E01               	movlw	1
  4688  003284  6F37               	movwf	(_RtcConfig+3)& (0+255),b
  4689                           
  4690                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  4691  003286  0E01               	movlw	1
  4692  003288  6F30               	movwf	_AlCfg& (0+255),b
  4693                           
  4694                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  4695  00328A  0E01               	movlw	1
  4696  00328C  6F31               	movwf	(_AlCfg+1)& (0+255),b
  4697                           
  4698                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  4699  00328E  0E01               	movlw	1
  4700  003290  6F32               	movwf	(_AlCfg+2)& (0+255),b
  4701                           
  4702                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  4703  003292  0E00               	movlw	0
  4704  003294  6F33               	movwf	(_AlCfg+3)& (0+255),b
  4705                           
  4706                           ; BSR set to: 1
  4707                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  4708  003296  ECE8  F021         	call	_Rtcc_UnlockRtc	;wreg free
  4709                           
  4710                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  4711  00329A  0E34               	movlw	low _RtcConfig
  4712  00329C  0100               	movlb	0	; () banked
  4713  00329E  6F76               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  4714  0032A0  0E01               	movlw	high _RtcConfig
  4715  0032A2  6F77               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  4716  0032A4  ECDB  F016         	call	_Rtcc_RtcConfig	;wreg free
  4717                           
  4718                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  4719  0032A8  0E30               	movlw	low _AlCfg
  4720  0032AA  0100               	movlb	0	; () banked
  4721  0032AC  6F75               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  4722  0032AE  0E01               	movlw	high _AlCfg
  4723  0032B0  6F76               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  4724  0032B2  EC32  F01B         	call	_Rtcc_AlarmConfig	;wreg free
  4725                           
  4726                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  4727  0032B6  0E01               	movlw	1
  4728  0032B8  ECAB  F021         	call	_Rtcc_SetRtcStatus
  4729                           
  4730                           ;rtcm.c: 127: Rtcc_LockRtc();
  4731  0032BC  ECF0  F021         	call	_Rtcc_LockRtc	;wreg free
  4732                           
  4733                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  4734  0032C0  EE23  F014         	lfsr	2,_Rtcm_SystemDate
  4735  0032C4  EE00  F081         	lfsr	0,Rtcm_SetRtccDate@Date
  4736  0032C8  0E07               	movlw	7
  4737  0032CA                     u7131:
  4738  0032CA  CFDB FFEB          	movff	plusw2,plusw0
  4739  0032CE  06E8               	decf	wreg,f,c
  4740  0032D0  E2FC               	bc	u7131
  4741  0032D2  EC0E  F01D         	call	_Rtcm_SetRtccDate	;wreg free
  4742                           
  4743                           ;rtcm.c: 154: break;
  4744  0032D6  0012               	return	
  4745  0032D8                     
  4746                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  4747  0032D8  EC9D  F01B         	call	_Rtcm_GetRtccDate	;wreg free
  4748  0032DC  EE23  F014         	lfsr	2,_Rtcm_SystemDate
  4749  0032E0  0E07               	movlw	7
  4750  0032E2                     u7141:
  4751  0032E2  CFEB FFDB          	movff	plusw0,plusw2
  4752  0032E6  06E8               	decf	wreg,f,c
  4753  0032E8  E2FC               	bc	u7141
  4754                           
  4755                           ;rtcm.c: 165: }
  4756                           
  4757                           ;rtcm.c: 164: break;
  4758                           
  4759                           ;rtcm.c: 163: default:
  4760                           
  4761                           ;rtcm.c: 160: break;
  4762  0032EA  0012               	return	
  4763  0032EC                     l1654:
  4764  0032EC  0100               	movlb	0	; () banked
  4765  0032EE  51D5               	movf	_SystemState& (0+255),w,b
  4766                           
  4767                           ; Switch size 1, requested type "space"
  4768                           ; Number of cases is 2, Range of values is 0 to 1
  4769                           ; switch strategies available:
  4770                           ; Name         Instructions Cycles
  4771                           ; simple_byte            7     4 (average)
  4772                           ;	Chosen strategy is simple_byte
  4773  0032F0  0A00               	xorlw	0	; case 0
  4774  0032F2  B4D8               	btfsc	status,2,c
  4775  0032F4  D7BE               	goto	l1655
  4776  0032F6  0A01               	xorlw	1	; case 1
  4777  0032F8  A4D8               	btfss	status,2,c
  4778  0032FA  0012               	return	
  4779  0032FC  D7ED               	goto	l1657
  4780  0032FE                     __end_of_Rtcm_MainTask:
  4781                           	opt stack 0
  4782                           tosu	equ	0xFFF
  4783                           tosh	equ	0xFFE
  4784                           tosl	equ	0xFFD
  4785                           pclath	equ	0xFFA
  4786                           tblptru	equ	0xFF8
  4787                           tblptrh	equ	0xFF7
  4788                           tblptrl	equ	0xFF6
  4789                           tablat	equ	0xFF5
  4790                           prodh	equ	0xFF4
  4791                           prodl	equ	0xFF3
  4792                           intcon	equ	0xFF2
  4793                           intcon2	equ	0xFF1
  4794                           intcon3	equ	0xFF0
  4795                           postinc0	equ	0xFEE
  4796                           plusw0	equ	0xFEB
  4797                           wreg	equ	0xFE8
  4798                           postinc1	equ	0xFE6
  4799                           postdec1	equ	0xFE5
  4800                           fsr1h	equ	0xFE2
  4801                           fsr1l	equ	0xFE1
  4802                           indf2	equ	0xFDF
  4803                           postinc2	equ	0xFDE
  4804                           postdec2	equ	0xFDD
  4805                           plusw2	equ	0xFDB
  4806                           fsr2h	equ	0xFDA
  4807                           fsr2l	equ	0xFD9
  4808                           status	equ	0xFD8
  4809                           
  4810 ;; *************** function _Led_MainTask *****************
  4811 ;; Defined at:
  4812 ;;		line 298 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  Options         1    wreg     unsigned char 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;  Options         1    0[COMRAM] unsigned char 
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4828 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4829 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4830 ;;Total ram usage:        1 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:   12
  4833 ;; This function calls:
  4834 ;;		_LedStateMachine
  4835 ;; This function is called by:
  4836 ;;		_InitializeTasks
  4837 ;;		_ScheduleTasks
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text19
  4842  0022AC                     __ptext19:
  4843                           	opt stack 0
  4844  0022AC                     _Led_MainTask:
  4845                           	opt stack 16
  4846                           
  4847                           ;led.c: 300: switch (SystemState)
  4848                           
  4849                           ;incstack = 0
  4850  0022AC  D05C               	goto	l1568
  4851  0022AE                     l1569:
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  4855  0022AE  9895               	bcf	3989,4,c	;volatile
  4856                           
  4857                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  4858  0022B0  9A95               	bcf	3989,5,c	;volatile
  4859                           
  4860                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  4861  0022B2  9C95               	bcf	3989,6,c	;volatile
  4862                           
  4863                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  4864  0022B4  9883               	bcf	3971,4,c	;volatile
  4865                           
  4866                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  4867  0022B6  9A83               	bcf	3971,5,c	;volatile
  4868                           
  4869                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  4870  0022B8  9C83               	bcf	3971,6,c	;volatile
  4871                           
  4872                           ;led.c: 311: break;
  4873  0022BA  0012               	return	
  4874  0022BC                     
  4875                           ; BSR set to: 0
  4876                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  4877                           
  4878                           ; BSR set to: 0
  4879  0022BC  0E24               	movlw	low _Led1Sts
  4880  0022BE  6F81               	movwf	LedStateMachine@LedSts& (0+255),b
  4881  0022C0  0E00               	movlw	high _Led1Sts
  4882  0022C2  6F82               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  4883  0022C4  0E23               	movlw	low _Led1OutSts
  4884  0022C6  6F83               	movwf	LedStateMachine@LedOut& (0+255),b
  4885  0022C8  0E00               	movlw	high _Led1OutSts
  4886  0022CA  6F84               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  4887  0022CC  0E7E               	movlw	low _Led1Blink
  4888  0022CE  6F85               	movwf	LedStateMachine@LedBlink& (0+255),b
  4889  0022D0  0E03               	movlw	high _Led1Blink
  4890  0022D2  6F86               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  4891  0022D4  0EEA               	movlw	low _Led1Pulse
  4892  0022D6  6F87               	movwf	LedStateMachine@LedPulse& (0+255),b
  4893  0022D8  0E02               	movlw	high _Led1Pulse
  4894  0022DA  6F88               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  4895  0022DC  0E01               	movlw	1
  4896  0022DE  EC87  F016         	call	_LedStateMachine
  4897  0022E2  0100               	movlb	0	; () banked
  4898  0022E4  6F8C               	movwf	??_Led_MainTask& (0+255),b
  4899  0022E6  3B8C               	swapf	??_Led_MainTask& (0+255),f,b
  4900  0022E8  5083               	movf	3971,w,c	;volatile
  4901  0022EA  198C               	xorwf	??_Led_MainTask& (0+255),w,b
  4902  0022EC  0BEF               	andlw	-17
  4903  0022EE  198C               	xorwf	??_Led_MainTask& (0+255),w,b
  4904  0022F0  6E83               	movwf	3971,c	;volatile
  4905                           
  4906                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  4907  0022F2  0E22               	movlw	low _Led2Sts
  4908  0022F4  6F81               	movwf	LedStateMachine@LedSts& (0+255),b
  4909  0022F6  0E00               	movlw	high _Led2Sts
  4910  0022F8  6F82               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  4911  0022FA  0E21               	movlw	low _Led2OutSts
  4912  0022FC  6F83               	movwf	LedStateMachine@LedOut& (0+255),b
  4913  0022FE  0E00               	movlw	high _Led2OutSts
  4914  002300  6F84               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  4915  002302  0ED5               	movlw	low _Led2Blink
  4916  002304  6F85               	movwf	LedStateMachine@LedBlink& (0+255),b
  4917  002306  0E02               	movlw	high _Led2Blink
  4918  002308  6F86               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  4919  00230A  0EE4               	movlw	low _Led2Pulse
  4920  00230C  6F87               	movwf	LedStateMachine@LedPulse& (0+255),b
  4921  00230E  0E02               	movlw	high _Led2Pulse
  4922  002310  6F88               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  4923  002312  0E02               	movlw	2
  4924  002314  EC87  F016         	call	_LedStateMachine
  4925  002318  0100               	movlb	0	; () banked
  4926  00231A  6F8C               	movwf	??_Led_MainTask& (0+255),b
  4927  00231C  3B8C               	swapf	??_Led_MainTask& (0+255),f,b
  4928  00231E  478C               	rlncf	??_Led_MainTask& (0+255),f,b
  4929  002320  5083               	movf	3971,w,c	;volatile
  4930  002322  198C               	xorwf	??_Led_MainTask& (0+255),w,b
  4931  002324  0BDF               	andlw	-33
  4932  002326  198C               	xorwf	??_Led_MainTask& (0+255),w,b
  4933  002328  6E83               	movwf	3971,c	;volatile
  4934                           
  4935                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  4936  00232A  0E20               	movlw	low _Led3Sts
  4937  00232C  6F81               	movwf	LedStateMachine@LedSts& (0+255),b
  4938  00232E  0E00               	movlw	high _Led3Sts
  4939  002330  6F82               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  4940  002332  0E1F               	movlw	low _Led3OutSts
  4941  002334  6F83               	movwf	LedStateMachine@LedOut& (0+255),b
  4942  002336  0E00               	movlw	high _Led3OutSts
  4943  002338  6F84               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  4944  00233A  0E75               	movlw	low _Led3Blink
  4945  00233C  6F85               	movwf	LedStateMachine@LedBlink& (0+255),b
  4946  00233E  0E03               	movlw	high _Led3Blink
  4947  002340  6F86               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  4948  002342  0EDE               	movlw	low _Led3Pulse
  4949  002344  6F87               	movwf	LedStateMachine@LedPulse& (0+255),b
  4950  002346  0E02               	movlw	high _Led3Pulse
  4951  002348  6F88               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  4952  00234A  0E03               	movlw	3
  4953  00234C  EC87  F016         	call	_LedStateMachine
  4954  002350  0100               	movlb	0	; () banked
  4955  002352  6F8C               	movwf	??_Led_MainTask& (0+255),b
  4956  002354  3B8C               	swapf	??_Led_MainTask& (0+255),f,b
  4957  002356  478C               	rlncf	??_Led_MainTask& (0+255),f,b
  4958  002358  478C               	rlncf	??_Led_MainTask& (0+255),f,b
  4959  00235A  5083               	movf	3971,w,c	;volatile
  4960  00235C  198C               	xorwf	??_Led_MainTask& (0+255),w,b
  4961  00235E  0BBF               	andlw	-65
  4962  002360  198C               	xorwf	??_Led_MainTask& (0+255),w,b
  4963  002362  6E83               	movwf	3971,c	;volatile
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;led.c: 326: }
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;led.c: 325: break;
  4970                           
  4971                           ;led.c: 324: default:
  4972                           
  4973                           ;led.c: 321: break;
  4974  002364  0012               	return	
  4975  002366                     l1568:
  4976                           
  4977                           ; BSR set to: 0
  4978  002366  0100               	movlb	0	; () banked
  4979  002368  51D5               	movf	_SystemState& (0+255),w,b
  4980                           
  4981                           ; Switch size 1, requested type "space"
  4982                           ; Number of cases is 2, Range of values is 0 to 1
  4983                           ; switch strategies available:
  4984                           ; Name         Instructions Cycles
  4985                           ; simple_byte            7     4 (average)
  4986                           ;	Chosen strategy is simple_byte
  4987  00236A  0A00               	xorlw	0	; case 0
  4988  00236C  B4D8               	btfsc	status,2,c
  4989  00236E  D79F               	goto	l1569
  4990  002370  0A01               	xorlw	1	; case 1
  4991  002372  A4D8               	btfss	status,2,c
  4992  002374  0012               	return	
  4993  002376  D7A2               	goto	l1571
  4994  002378                     __end_of_Led_MainTask:
  4995                           	opt stack 0
  4996                           tosu	equ	0xFFF
  4997                           tosh	equ	0xFFE
  4998                           tosl	equ	0xFFD
  4999                           pclath	equ	0xFFA
  5000                           tblptru	equ	0xFF8
  5001                           tblptrh	equ	0xFF7
  5002                           tblptrl	equ	0xFF6
  5003                           tablat	equ	0xFF5
  5004                           prodh	equ	0xFF4
  5005                           prodl	equ	0xFF3
  5006                           intcon	equ	0xFF2
  5007                           intcon2	equ	0xFF1
  5008                           intcon3	equ	0xFF0
  5009                           postinc0	equ	0xFEE
  5010                           plusw0	equ	0xFEB
  5011                           wreg	equ	0xFE8
  5012                           postinc1	equ	0xFE6
  5013                           postdec1	equ	0xFE5
  5014                           fsr1h	equ	0xFE2
  5015                           fsr1l	equ	0xFE1
  5016                           indf2	equ	0xFDF
  5017                           postinc2	equ	0xFDE
  5018                           postdec2	equ	0xFDD
  5019                           plusw2	equ	0xFDB
  5020                           fsr2h	equ	0xFDA
  5021                           fsr2l	equ	0xFD9
  5022                           status	equ	0xFD8
  5023                           
  5024 ;; *************** function _UsbDevice_MainTask *****************
  5025 ;; Defined at:
  5026 ;;		line 72 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  Options         1    wreg     unsigned char 
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;  Options         1    0[COMRAM] unsigned char 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      void 
  5033 ;; Registers used:
  5034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;Total ram usage:        0 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:   18
  5047 ;; This function calls:
  5048 ;;		_CDCTxService
  5049 ;;		_USBDeviceInit
  5050 ;;		_USBDeviceTasks
  5051 ;; This function is called by:
  5052 ;;		_InitializeTasks
  5053 ;;		_ScheduleTasks
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text20
  5058  00413A                     __ptext20:
  5059                           	opt stack 0
  5060  00413A                     _UsbDevice_MainTask:
  5061                           	opt stack 10
  5062                           
  5063                           ;usb_device_mgr.c: 74: switch (SystemState)
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;incstack = 0
  5067  00413A  D008               	goto	l1471
  5068  00413C                     
  5069                           ;usb_device_mgr.c: 79: USBDeviceInit();
  5070  00413C  EC29  F00A         	call	_USBDeviceInit	;wreg free
  5071                           
  5072                           ;usb_device_mgr.c: 80: ;
  5073                           ;usb_device_mgr.c: 81: break;
  5074  004140  0012               	return	
  5075  004142                     
  5076                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  5077  004142  EC4B  F007         	call	_USBDeviceTasks	;wreg free
  5078                           
  5079                           ;usb_device_mgr.c: 90: CDCTxService();
  5080  004146  EC73  F00B         	call	_CDCTxService	;wreg free
  5081                           
  5082                           ;usb_device_mgr.c: 101: }
  5083                           
  5084                           ;usb_device_mgr.c: 100: break;
  5085                           
  5086                           ;usb_device_mgr.c: 99: default:
  5087                           
  5088                           ;usb_device_mgr.c: 96: break;
  5089  00414A  0012               	return	
  5090  00414C                     l1471:
  5091  00414C  0100               	movlb	0	; () banked
  5092  00414E  51D5               	movf	_SystemState& (0+255),w,b
  5093                           
  5094                           ; Switch size 1, requested type "space"
  5095                           ; Number of cases is 2, Range of values is 0 to 1
  5096                           ; switch strategies available:
  5097                           ; Name         Instructions Cycles
  5098                           ; simple_byte            7     4 (average)
  5099                           ;	Chosen strategy is simple_byte
  5100  004150  0A00               	xorlw	0	; case 0
  5101  004152  B4D8               	btfsc	status,2,c
  5102  004154  D7F3               	goto	l1472
  5103  004156  0A01               	xorlw	1	; case 1
  5104  004158  A4D8               	btfss	status,2,c
  5105  00415A  0012               	return	
  5106  00415C  D7F2               	goto	l1474
  5107  00415E                     __end_of_UsbDevice_MainTask:
  5108                           	opt stack 0
  5109                           tosu	equ	0xFFF
  5110                           tosh	equ	0xFFE
  5111                           tosl	equ	0xFFD
  5112                           pclath	equ	0xFFA
  5113                           tblptru	equ	0xFF8
  5114                           tblptrh	equ	0xFF7
  5115                           tblptrl	equ	0xFF6
  5116                           tablat	equ	0xFF5
  5117                           prodh	equ	0xFF4
  5118                           prodl	equ	0xFF3
  5119                           intcon	equ	0xFF2
  5120                           intcon2	equ	0xFF1
  5121                           intcon3	equ	0xFF0
  5122                           postinc0	equ	0xFEE
  5123                           plusw0	equ	0xFEB
  5124                           wreg	equ	0xFE8
  5125                           postinc1	equ	0xFE6
  5126                           postdec1	equ	0xFE5
  5127                           fsr1h	equ	0xFE2
  5128                           fsr1l	equ	0xFE1
  5129                           indf2	equ	0xFDF
  5130                           postinc2	equ	0xFDE
  5131                           postdec2	equ	0xFDD
  5132                           plusw2	equ	0xFDB
  5133                           fsr2h	equ	0xFDA
  5134                           fsr2l	equ	0xFD9
  5135                           status	equ	0xFD8
  5136                           
  5137 ;; *************** function _I2cSlv_MainTask *****************
  5138 ;; Defined at:
  5139 ;;		line 215 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  Options         1    wreg     unsigned char 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  Options         1    0[COMRAM] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5157 ;;Total ram usage:        0 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; Hardware stack levels required when called:   12
  5160 ;; This function calls:
  5161 ;;		_I2cSendMsgSm
  5162 ;;		_I2cSetConfig
  5163 ;;		_I2c_InitI2cModule
  5164 ;;		_OsAlrm_SetOsAlarm
  5165 ;; This function is called by:
  5166 ;;		_InitializeTasks
  5167 ;;		_ScheduleTasks
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text21
  5172  0039C8                     __ptext21:
  5173                           	opt stack 0
  5174  0039C8                     _I2cSlv_MainTask:
  5175                           	opt stack 16
  5176                           
  5177                           ;i2c_slv.c: 217: switch (SystemState)
  5178                           
  5179                           ;incstack = 0
  5180  0039C8  D020               	goto	l883
  5181  0039CA                     
  5182                           ;i2c_slv.c: 222: I2cSetConfig();
  5183  0039CA  EC36  F020         	call	_I2cSetConfig	;wreg free
  5184                           
  5185                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  5186  0039CE  0E1A               	movlw	low _I2cConfig
  5187  0039D0  0100               	movlb	0	; () banked
  5188  0039D2  6F8E               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  5189  0039D4  0E01               	movlw	high _I2cConfig
  5190  0039D6  6F8F               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  5191  0039D8  ECC1  F01A         	call	_I2c_InitI2cModule	;wreg free
  5192                           
  5193                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  5194  0039DC  0E00               	movlw	0
  5195  0039DE  0100               	movlb	0	; () banked
  5196  0039E0  6F7C               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  5197  0039E2  0E00               	movlw	0
  5198  0039E4  6F7B               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  5199  0039E6  0E32               	movlw	50
  5200  0039E8  6F7D               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  5201  0039EA  0E00               	movlw	0
  5202  0039EC  6F7E               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  5203  0039EE  0E00               	movlw	0
  5204  0039F0  6F7F               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  5205  0039F2  0E00               	movlw	0
  5206  0039F4  6F80               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  5207  0039F6  0EF4               	movlw	low _I2cDummyTx
  5208  0039F8  6F81               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  5209  0039FA  0E42               	movlw	high _I2cDummyTx
  5210  0039FC  6F82               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  5211  0039FE  ECEA  F012         	call	_OsAlrm_SetOsAlarm	;wreg free
  5212                           
  5213                           ;i2c_slv.c: 227: break;
  5214  003A02  0012               	return	
  5215  003A04                     
  5216                           ;i2c_slv.c: 232: I2cSendMsgSm();
  5217  003A04  ECD1  F014         	call	_I2cSendMsgSm	;wreg free
  5218                           
  5219                           ;i2c_slv.c: 238: }
  5220                           
  5221                           ;i2c_slv.c: 237: break;
  5222                           
  5223                           ;i2c_slv.c: 236: default:
  5224                           
  5225                           ;i2c_slv.c: 233: break;
  5226  003A08  0012               	return	
  5227  003A0A                     l883:
  5228  003A0A  0100               	movlb	0	; () banked
  5229  003A0C  51D5               	movf	_SystemState& (0+255),w,b
  5230                           
  5231                           ; Switch size 1, requested type "space"
  5232                           ; Number of cases is 2, Range of values is 0 to 1
  5233                           ; switch strategies available:
  5234                           ; Name         Instructions Cycles
  5235                           ; simple_byte            7     4 (average)
  5236                           ;	Chosen strategy is simple_byte
  5237  003A0E  0A00               	xorlw	0	; case 0
  5238  003A10  B4D8               	btfsc	status,2,c
  5239  003A12  D7DB               	goto	l884
  5240  003A14  0A01               	xorlw	1	; case 1
  5241  003A16  A4D8               	btfss	status,2,c
  5242  003A18  0012               	return	
  5243  003A1A  D7F4               	goto	l886
  5244  003A1C                     __end_of_I2cSlv_MainTask:
  5245                           	opt stack 0
  5246                           tosu	equ	0xFFF
  5247                           tosh	equ	0xFFE
  5248                           tosl	equ	0xFFD
  5249                           pclath	equ	0xFFA
  5250                           tblptru	equ	0xFF8
  5251                           tblptrh	equ	0xFF7
  5252                           tblptrl	equ	0xFF6
  5253                           tablat	equ	0xFF5
  5254                           prodh	equ	0xFF4
  5255                           prodl	equ	0xFF3
  5256                           intcon	equ	0xFF2
  5257                           intcon2	equ	0xFF1
  5258                           intcon3	equ	0xFF0
  5259                           postinc0	equ	0xFEE
  5260                           plusw0	equ	0xFEB
  5261                           wreg	equ	0xFE8
  5262                           postinc1	equ	0xFE6
  5263                           postdec1	equ	0xFE5
  5264                           fsr1h	equ	0xFE2
  5265                           fsr1l	equ	0xFE1
  5266                           indf2	equ	0xFDF
  5267                           postinc2	equ	0xFDE
  5268                           postdec2	equ	0xFDD
  5269                           plusw2	equ	0xFDB
  5270                           fsr2h	equ	0xFDA
  5271                           fsr2l	equ	0xFD9
  5272                           status	equ	0xFD8
  5273                           
  5274 ;; *************** function _Wdg_MainTask *****************
  5275 ;; Defined at:
  5276 ;;		line 73 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  Options         1    wreg     unsigned char 
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;  Options         1    0[COMRAM] unsigned char 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      void 
  5283 ;; Registers used:
  5284 ;;		wreg, status,2, status,0, cstack
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5294 ;;Total ram usage:        0 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:   10
  5297 ;; This function calls:
  5298 ;;		_Mcu_ClearWdg
  5299 ;;		_Mcu_SetWdgSts
  5300 ;; This function is called by:
  5301 ;;		_InitializeTasks
  5302 ;;		_ScheduleTasks
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text22
  5307  00415E                     __ptext22:
  5308                           	opt stack 0
  5309  00415E                     _Wdg_MainTask:
  5310                           	opt stack 18
  5311                           
  5312                           ;wdg.c: 75: switch (SystemState)
  5313                           
  5314                           ;incstack = 0
  5315  00415E  D007               	goto	l1909
  5316  004160                     
  5317                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  5318  004160  0E01               	movlw	1
  5319  004162  ECD6  F021         	call	_Mcu_SetWdgSts
  5320                           
  5321                           ;wdg.c: 81: break;
  5322  004166  0012               	return	
  5323  004168                     
  5324                           ;wdg.c: 86: Mcu_ClearWdg();
  5325  004168  EC2C  F022         	call	_Mcu_ClearWdg	;wreg free
  5326                           
  5327                           ;wdg.c: 92: }
  5328                           
  5329                           ;wdg.c: 91: break;
  5330                           
  5331                           ;wdg.c: 90: default:
  5332                           
  5333                           ;wdg.c: 87: break;
  5334  00416C  0012               	return	
  5335  00416E                     l1909:
  5336  00416E  0100               	movlb	0	; () banked
  5337  004170  51D5               	movf	_SystemState& (0+255),w,b
  5338                           
  5339                           ; Switch size 1, requested type "space"
  5340                           ; Number of cases is 2, Range of values is 0 to 1
  5341                           ; switch strategies available:
  5342                           ; Name         Instructions Cycles
  5343                           ; simple_byte            7     4 (average)
  5344                           ;	Chosen strategy is simple_byte
  5345  004172  0A00               	xorlw	0	; case 0
  5346  004174  B4D8               	btfsc	status,2,c
  5347  004176  D7F4               	goto	l1910
  5348  004178  0A01               	xorlw	1	; case 1
  5349  00417A  A4D8               	btfss	status,2,c
  5350  00417C  0012               	return	
  5351  00417E  D7F4               	goto	l1912
  5352  004180                     __end_of_Wdg_MainTask:
  5353                           	opt stack 0
  5354                           tosu	equ	0xFFF
  5355                           tosh	equ	0xFFE
  5356                           tosl	equ	0xFFD
  5357                           pclath	equ	0xFFA
  5358                           tblptru	equ	0xFF8
  5359                           tblptrh	equ	0xFF7
  5360                           tblptrl	equ	0xFF6
  5361                           tablat	equ	0xFF5
  5362                           prodh	equ	0xFF4
  5363                           prodl	equ	0xFF3
  5364                           intcon	equ	0xFF2
  5365                           intcon2	equ	0xFF1
  5366                           intcon3	equ	0xFF0
  5367                           postinc0	equ	0xFEE
  5368                           plusw0	equ	0xFEB
  5369                           wreg	equ	0xFE8
  5370                           postinc1	equ	0xFE6
  5371                           postdec1	equ	0xFE5
  5372                           fsr1h	equ	0xFE2
  5373                           fsr1l	equ	0xFE1
  5374                           indf2	equ	0xFDF
  5375                           postinc2	equ	0xFDE
  5376                           postdec2	equ	0xFDD
  5377                           plusw2	equ	0xFDB
  5378                           fsr2h	equ	0xFDA
  5379                           fsr2l	equ	0xFD9
  5380                           status	equ	0xFD8
  5381                           
  5382 ;; *************** function _Mcu_SetWdgSts *****************
  5383 ;; Defined at:
  5384 ;;		line 196 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;  WdgSts          1    wreg     unsigned char 
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;  WdgSts          1   21[BANK0 ] unsigned char 
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      void 
  5391 ;; Registers used:
  5392 ;;		wreg
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5399 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5401 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5402 ;;Total ram usage:        1 bytes
  5403 ;; Hardware stack levels used:    1
  5404 ;; Hardware stack levels required when called:    9
  5405 ;; This function calls:
  5406 ;;		Nothing
  5407 ;; This function is called by:
  5408 ;;		_Wdg_MainTask
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           	psect	text23
  5413  0043AC                     __ptext23:
  5414                           	opt stack 0
  5415  0043AC                     _Mcu_SetWdgSts:
  5416                           	opt stack 18
  5417                           
  5418                           ;incstack = 0
  5419                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  5420  0043AC  0100               	movlb	0	; () banked
  5421  0043AE  6F75               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  5422                           
  5423                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  5424  0043B0  0100               	movlb	0	; () banked
  5425  0043B2  B175               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  5426  0043B4  D002               	bra	u6425
  5427  0043B6  90C0               	bcf	4032,0,c	;volatile
  5428  0043B8  D001               	bra	u6426
  5429  0043BA                     u6425:
  5430  0043BA  80C0               	bsf	4032,0,c	;volatile
  5431  0043BC                     u6426:
  5432  0043BC  0012               	return		;funcret
  5433  0043BE                     __end_of_Mcu_SetWdgSts:
  5434                           	opt stack 0
  5435                           tosu	equ	0xFFF
  5436                           tosh	equ	0xFFE
  5437                           tosl	equ	0xFFD
  5438                           pclath	equ	0xFFA
  5439                           tblptru	equ	0xFF8
  5440                           tblptrh	equ	0xFF7
  5441                           tblptrl	equ	0xFF6
  5442                           tablat	equ	0xFF5
  5443                           prodh	equ	0xFF4
  5444                           prodl	equ	0xFF3
  5445                           intcon	equ	0xFF2
  5446                           intcon2	equ	0xFF1
  5447                           intcon3	equ	0xFF0
  5448                           postinc0	equ	0xFEE
  5449                           plusw0	equ	0xFEB
  5450                           wreg	equ	0xFE8
  5451                           postinc1	equ	0xFE6
  5452                           postdec1	equ	0xFE5
  5453                           fsr1h	equ	0xFE2
  5454                           fsr1l	equ	0xFE1
  5455                           indf2	equ	0xFDF
  5456                           postinc2	equ	0xFDE
  5457                           postdec2	equ	0xFDD
  5458                           plusw2	equ	0xFDB
  5459                           fsr2h	equ	0xFDA
  5460                           fsr2l	equ	0xFD9
  5461                           status	equ	0xFD8
  5462                           
  5463 ;; *************** function _Mcu_ClearWdg *****************
  5464 ;; Defined at:
  5465 ;;		line 210 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;		None
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		None
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5483 ;;Total ram usage:        0 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    9
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_Wdg_MainTask
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text24
  5494  004458                     __ptext24:
  5495                           	opt stack 0
  5496  004458                     _Mcu_ClearWdg:
  5497                           	opt stack 18
  5498                           
  5499                           ;incstack = 0
  5500  004458  0004               	clrwdt		;# 
  5501  00445A  0012               	return		;funcret
  5502  00445C                     __end_of_Mcu_ClearWdg:
  5503                           	opt stack 0
  5504                           tosu	equ	0xFFF
  5505                           tosh	equ	0xFFE
  5506                           tosl	equ	0xFFD
  5507                           pclath	equ	0xFFA
  5508                           tblptru	equ	0xFF8
  5509                           tblptrh	equ	0xFF7
  5510                           tblptrl	equ	0xFF6
  5511                           tablat	equ	0xFF5
  5512                           prodh	equ	0xFF4
  5513                           prodl	equ	0xFF3
  5514                           intcon	equ	0xFF2
  5515                           intcon2	equ	0xFF1
  5516                           intcon3	equ	0xFF0
  5517                           postinc0	equ	0xFEE
  5518                           plusw0	equ	0xFEB
  5519                           wreg	equ	0xFE8
  5520                           postinc1	equ	0xFE6
  5521                           postdec1	equ	0xFE5
  5522                           fsr1h	equ	0xFE2
  5523                           fsr1l	equ	0xFE1
  5524                           indf2	equ	0xFDF
  5525                           postinc2	equ	0xFDE
  5526                           postdec2	equ	0xFDD
  5527                           plusw2	equ	0xFDB
  5528                           fsr2h	equ	0xFDA
  5529                           fsr2l	equ	0xFD9
  5530                           status	equ	0xFD8
  5531                           
  5532 ;; *************** function _USBDeviceTasks *****************
  5533 ;; Defined at:
  5534 ;;		line 495 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;		None
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  i               1   48[BANK0 ] unsigned char 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5551 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5552 ;;Total ram usage:        1 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:   17
  5555 ;; This function calls:
  5556 ;;		_USBCtrlEPAllowStatusStage
  5557 ;;		_USBCtrlEPService
  5558 ;;		_USBDeviceInit
  5559 ;;		_USBIncrement1msInternalTimers
  5560 ;;		_USBStallHandler
  5561 ;;		_USBSuspend
  5562 ;;		_USBWakeFromSuspend
  5563 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5564 ;; This function is called by:
  5565 ;;		_UsbDevice_MainTask
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text25
  5570  000E96                     __ptext25:
  5571                           	opt stack 0
  5572  000E96                     _USBDeviceTasks:
  5573                           	opt stack 10
  5574                           
  5575                           ;usb_device.c: 562: }
  5576                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  5577                           
  5578                           ; BSR set to: 0
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;usb_device.c: 561: return;
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  5585                           
  5586                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  5587                           
  5588                           ;usb_device.c: 529: UIE = 0;
  5589                           
  5590                           ;usb_device.c: 524: {
  5591                           ;usb_device.c: 526: UCON = 0;
  5592                           
  5593                           ;usb_device.c: 497: uint8_t i;
  5594                           ;usb_device.c: 523: if (1 != 1)
  5595                           
  5596                           ;incstack = 0
  5597  000E96  0100               	movlb	0	; () banked
  5598  000E98  51D1               	movf	_USBDeviceState& (0+255),w,b
  5599  000E9A  A4D8               	btfss	status,2,c
  5600  000E9C  D012               	goto	l1094
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;usb_device.c: 585: {
  5604                           ;usb_device.c: 587: UCON = 0;
  5605  000E9E  0E00               	movlw	0
  5606  000EA0  6E65               	movwf	3941,c	;volatile
  5607                           
  5608                           ;usb_device.c: 590: UIE = 0;
  5609  000EA2  0E00               	movlw	0
  5610  000EA4  010F               	movlb	15	; () banked
  5611  000EA6  6F36               	movwf	54,b	;volatile
  5612                           
  5613                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5614  000EA8  0E16               	movlw	22
  5615  000EAA  6F39               	movwf	57,b	;volatile
  5616  000EAC  0E9F               	movlw	159
  5617  000EAE  6F37               	movwf	55,b	;volatile
  5618  000EB0  0E7B               	movlw	123
  5619  000EB2  6F36               	movwf	54,b	;volatile
  5620                           
  5621                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  5622  000EB4  D001               	goto	l1095
  5623  000EB6                     l1096:
  5624  000EB6  8665               	bsf	3941,3,c	;volatile
  5625  000EB8                     l1095:
  5626  000EB8  A665               	btfss	3941,3,c	;volatile
  5627  000EBA  D7FD               	goto	l1096
  5628                           
  5629                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  5630  000EBC  0E01               	movlw	1
  5631  000EBE  0100               	movlb	0	; () banked
  5632  000EC0  6FD1               	movwf	_USBDeviceState& (0+255),b
  5633  000EC2                     l1094:
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;usb_device.c: 605: }
  5637                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  5638                           
  5639                           ; BSR set to: 0
  5640  000EC2  05D1               	decf	_USBDeviceState& (0+255),w,b
  5641  000EC4  B4D8               	btfsc	status,2,c
  5642                           
  5643                           ; BSR set to: 0
  5644                           ;usb_device.c: 609: {
  5645                           ;usb_device.c: 619: if(!UCONbits.SE0)
  5646  000EC6  BA65               	btfsc	3941,5,c	;volatile
  5647  000EC8  D00A               	goto	l1099
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;usb_device.c: 620: {
  5651                           ;usb_device.c: 626: {UIR = 0;};
  5652  000ECA  0E00               	movlw	0
  5653  000ECC  6E62               	movwf	3938,c	;volatile
  5654                           
  5655                           ;usb_device.c: 630: UIE=0;
  5656  000ECE  0E00               	movlw	0
  5657  000ED0  010F               	movlb	15	; () banked
  5658  000ED2  6F36               	movwf	54,b	;volatile
  5659                           
  5660                           ; BSR set to: 15
  5661                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  5662  000ED4  8136               	bsf	54,0,b	;volatile
  5663                           
  5664                           ; BSR set to: 15
  5665                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  5666  000ED6  8936               	bsf	54,4,b	;volatile
  5667                           
  5668                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  5669  000ED8  0E02               	movlw	2
  5670  000EDA  0100               	movlb	0	; () banked
  5671  000EDC  6FD1               	movwf	_USBDeviceState& (0+255),b
  5672  000EDE                     l1099:
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;usb_device.c: 635: }
  5676                           ;usb_device.c: 636: }
  5677                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  5678                           
  5679                           ; BSR set to: 0
  5680                           
  5681                           ; BSR set to: 0
  5682  000EDE  A462               	btfss	3938,2,c	;volatile
  5683  000EE0  D006               	goto	l1100
  5684                           
  5685                           ; BSR set to: 0
  5686  000EE2  010F               	movlb	15	; () banked
  5687  000EE4  A536               	btfss	54,2,b	;volatile
  5688  000EE6  D003               	goto	l1100
  5689                           
  5690                           ; BSR set to: 15
  5691                           ;usb_device.c: 653: {
  5692                           ;usb_device.c: 654: (UIR &= 0xFB);
  5693  000EE8  9462               	bcf	3938,2,c	;volatile
  5694                           
  5695                           ; BSR set to: 15
  5696                           ;usb_device.c: 658: USBWakeFromSuspend();
  5697  000EEA  EC40  F01F         	call	_USBWakeFromSuspend	;wreg free
  5698  000EEE                     l1100:
  5699                           
  5700                           ;usb_device.c: 660: }
  5701                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  5702  000EEE  A265               	btfss	3941,1,c	;volatile
  5703  000EF0  D002               	goto	l1101
  5704                           
  5705                           ;usb_device.c: 666: {
  5706                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  5707  000EF2  98A1               	bcf	4001,4,c	;volatile
  5708                           
  5709                           ;usb_device.c: 668: return;
  5710  000EF4  0012               	return	
  5711  000EF6                     l1101:
  5712                           
  5713                           ;usb_device.c: 669: }
  5714                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  5715  000EF6  A062               	btfss	3938,0,c	;volatile
  5716  000EF8  D009               	goto	l1102
  5717  000EFA  010F               	movlb	15	; () banked
  5718  000EFC  A136               	btfss	54,0,b	;volatile
  5719  000EFE  D006               	goto	l1102
  5720                           
  5721                           ; BSR set to: 15
  5722                           ;usb_device.c: 682: {
  5723                           ;usb_device.c: 683: USBDeviceInit();
  5724  000F00  EC29  F00A         	call	_USBDeviceInit	;wreg free
  5725                           
  5726                           ;usb_device.c: 687: ;
  5727                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  5728  000F04  0E04               	movlw	4
  5729  000F06  0100               	movlb	0	; () banked
  5730  000F08  6FD1               	movwf	_USBDeviceState& (0+255),b
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;usb_device.c: 699: (UIR &= 0xFE);
  5734  000F0A  9062               	bcf	3938,0,c	;volatile
  5735  000F0C                     l1102:
  5736                           
  5737                           ;usb_device.c: 700: }
  5738                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  5739                           
  5740                           ; BSR set to: 0
  5741  000F0C  A862               	btfss	3938,4,c	;volatile
  5742  000F0E  D004               	goto	l1103
  5743  000F10  010F               	movlb	15	; () banked
  5744  000F12  B936               	btfsc	54,4,b	;volatile
  5745                           
  5746                           ; BSR set to: 15
  5747                           ;usb_device.c: 706: {
  5748                           ;usb_device.c: 712: USBSuspend();
  5749  000F14  ECA8  F01F         	call	_USBSuspend	;wreg free
  5750  000F18                     l1103:
  5751                           
  5752                           ;usb_device.c: 714: }
  5753                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  5754  000F18  AC62               	btfss	3938,6,c	;volatile
  5755  000F1A  D01D               	goto	l1107
  5756                           
  5757                           ;usb_device.c: 727: {
  5758                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  5759  000F1C  010F               	movlb	15	; () banked
  5760  000F1E  AD36               	btfss	54,6,b	;volatile
  5761  000F20  D00F               	goto	l1105
  5762                           
  5763                           ; BSR set to: 15
  5764                           ;usb_device.c: 730: {
  5765                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  5766  000F22  0E00               	movlw	0
  5767  000F24  0100               	movlb	0	; () banked
  5768  000F26  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  5769  000F28  0E73               	movlw	115
  5770  000F2A  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  5771  000F2C  0E00               	movlw	0
  5772  000F2E  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  5773  000F30  0E00               	movlw	0
  5774  000F32  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  5775  000F34  0E00               	movlw	0
  5776  000F36  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  5777  000F38  0E01               	movlw	1
  5778  000F3A  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  5779  000F3C  EC00  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5780  000F40                     l1105:
  5781                           
  5782                           ;usb_device.c: 732: }
  5783                           ;usb_device.c: 733: (UIR &= 0xBF);
  5784  000F40  9C62               	bcf	3938,6,c	;volatile
  5785                           
  5786                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  5787  000F42  ECC0  F020         	call	_USBIncrement1msInternalTimers	;wreg free
  5788                           
  5789                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  5790  000F46  0100               	movlb	0	; () banked
  5791  000F48  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  5792  000F4A  A4D8               	btfss	status,2,c
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;usb_device.c: 754: {
  5796                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  5797  000F4C  07CA               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;usb_device.c: 756: }
  5801                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  5802                           
  5803                           ; BSR set to: 0
  5804  000F4E  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  5805  000F50  B4D8               	btfsc	status,2,c
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;usb_device.c: 763: {
  5809                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  5810  000F52  ECB1  F013         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5811  000F56                     l1107:
  5812                           
  5813                           ;usb_device.c: 765: }
  5814                           ;usb_device.c: 767: }
  5815                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  5816  000F56  AA62               	btfss	3938,5,c	;volatile
  5817  000F58  D004               	goto	l1108
  5818  000F5A  010F               	movlb	15	; () banked
  5819  000F5C  BB36               	btfsc	54,5,b	;volatile
  5820                           
  5821                           ; BSR set to: 15
  5822                           ;usb_device.c: 770: {
  5823                           ;usb_device.c: 771: USBStallHandler();
  5824  000F5E  ECFD  F01D         	call	_USBStallHandler	;wreg free
  5825  000F62                     l1108:
  5826                           
  5827                           ;usb_device.c: 772: }
  5828                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  5829  000F62  A262               	btfss	3938,1,c	;volatile
  5830  000F64  D013               	goto	l1109
  5831  000F66  010F               	movlb	15	; () banked
  5832  000F68  A336               	btfss	54,1,b	;volatile
  5833  000F6A  D010               	goto	l1109
  5834                           
  5835                           ; BSR set to: 15
  5836                           ;usb_device.c: 775: {
  5837                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  5838  000F6C  0E7F               	movlw	127
  5839  000F6E  0100               	movlb	0	; () banked
  5840  000F70  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  5841  000F72  6981               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  5842  000F74  0E00               	movlw	0
  5843  000F76  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  5844  000F78  0E00               	movlw	0
  5845  000F7A  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  5846  000F7C  0E00               	movlw	0
  5847  000F7E  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  5848  000F80  0E01               	movlw	1
  5849  000F82  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  5850  000F84  EC00  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5851                           
  5852                           ;usb_device.c: 777: {UEIR = 0;};
  5853  000F88  0E00               	movlw	0
  5854  000F8A  6E63               	movwf	3939,c	;volatile
  5855  000F8C                     l1109:
  5856                           
  5857                           ;usb_device.c: 785: }
  5858                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  5859  000F8C  0E04               	movlw	4
  5860  000F8E  0100               	movlb	0	; () banked
  5861  000F90  61D1               	cpfslt	_USBDeviceState& (0+255),b
  5862  000F92  D002               	goto	l1110
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;usb_device.c: 793: {
  5866                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  5867  000F94  98A1               	bcf	4001,4,c	;volatile
  5868                           
  5869                           ;usb_device.c: 795: return;
  5870  000F96  0012               	return	
  5871  000F98                     l1110:
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;usb_device.c: 796: }
  5875                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  5876  000F98  010F               	movlb	15	; () banked
  5877  000F9A  A736               	btfss	54,3,b	;volatile
  5878  000F9C  D03B               	goto	u9530
  5879                           
  5880                           ; BSR set to: 15
  5881                           ;usb_device.c: 802: {
  5882                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  5883  000F9E  0E00               	movlw	0
  5884  000FA0  0100               	movlb	0	; () banked
  5885  000FA2  6F90               	movwf	USBDeviceTasks@i& (0+255),b
  5886  000FA4                     l10180:
  5887                           
  5888                           ; BSR set to: 0
  5889  000FA4  0E03               	movlw	3
  5890  000FA6  6590               	cpfsgt	USBDeviceTasks@i& (0+255),b
  5891  000FA8  D001               	goto	l1112
  5892  000FAA  D034               	goto	u9530
  5893  000FAC                     l1112:
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;usb_device.c: 804: {
  5897                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  5898  000FAC  A662               	btfss	3938,3,c	;volatile
  5899  000FAE  D032               	goto	u9530
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;usb_device.c: 806: {
  5903                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  5904  000FB0  CF64 F0DE          	movff	3940,_USTATcopy	;volatile
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  5908  000FB4  31DE               	rrcf	_USTATcopy& (0+255),w,b
  5909  000FB6  32E8               	rrcf	wreg,f,c
  5910  000FB8  32E8               	rrcf	wreg,f,c
  5911  000FBA  0B0F               	andlw	15
  5912  000FBC  6FCC               	movwf	_endpoint_number& (0+255),b
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;usb_device.c: 811: (UIR &= 0xF7);
  5916  000FBE  9662               	bcf	3938,3,c	;volatile
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  5920  000FC0  B5DE               	btfsc	_USTATcopy& (0+255),2,b
  5921  000FC2  D007               	goto	l1115
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;usb_device.c: 817: {
  5925                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  5926  000FC4  51CC               	movf	_endpoint_number& (0+255),w,b
  5927  000FC6  0D01               	mullw	1
  5928  000FC8  0E09               	movlw	low _ep_data_out
  5929  000FCA  24F3               	addwf	prodl,w,c
  5930  000FCC  6ED9               	movwf	fsr2l,c
  5931  000FCE  0E00               	movlw	high _ep_data_out
  5932  000FD0  D006               	goto	L3
  5933  000FD2                     l1115:
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;usb_device.c: 820: else
  5937                           ;usb_device.c: 821: {
  5938                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  5939                           
  5940                           ; BSR set to: 0
  5941  000FD2  51CC               	movf	_endpoint_number& (0+255),w,b
  5942  000FD4  0D01               	mullw	1
  5943  000FD6  0E0C               	movlw	low _ep_data_in
  5944  000FD8  24F3               	addwf	prodl,w,c
  5945  000FDA  6ED9               	movwf	fsr2l,c
  5946  000FDC  0E00               	movlw	high _ep_data_in
  5947  000FDE                     L3:
  5948  000FDE  20F4               	addwfc	prodh,w,c
  5949  000FE0  6EDA               	movwf	fsr2h,c
  5950  000FE2  70DF               	btg	indf2,0,c
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;usb_device.c: 823: }
  5954                           ;usb_device.c: 828: if(endpoint_number == 0)
  5955                           
  5956                           ; BSR set to: 0
  5957  000FE4  51CC               	movf	_endpoint_number& (0+255),w,b
  5958  000FE6  A4D8               	btfss	status,2,c
  5959  000FE8  D003               	goto	l1117
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;usb_device.c: 829: {
  5963                           ;usb_device.c: 830: USBCtrlEPService();
  5964  000FEA  EC5C  F018         	call	_USBCtrlEPService	;wreg free
  5965                           
  5966                           ;usb_device.c: 831: }
  5967  000FEE  D00F               	goto	l1119
  5968  000FF0                     l1117:
  5969                           
  5970                           ;usb_device.c: 832: else
  5971                           ;usb_device.c: 833: {
  5972                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  5973  000FF0  0E00               	movlw	0
  5974  000FF2  0100               	movlb	0	; () banked
  5975  000FF4  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  5976  000FF6  0E72               	movlw	114
  5977  000FF8  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  5978  000FFA  0EDE               	movlw	low _USTATcopy
  5979  000FFC  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  5980  000FFE  0E00               	movlw	high _USTATcopy
  5981  001000  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  5982  001002  0E00               	movlw	0
  5983  001004  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  5984  001006  0E00               	movlw	0
  5985  001008  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  5986  00100A  EC00  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5987  00100E                     l1119:
  5988  00100E  0100               	movlb	0	; () banked
  5989  001010  2B90               	incf	USBDeviceTasks@i& (0+255),f,b
  5990  001012  D7C8               	goto	l10180
  5991  001014                     u9530:
  5992                           
  5993                           ;usb_device.c: 840: }
  5994                           ;usb_device.c: 841: }
  5995                           ;usb_device.c: 842: }
  5996                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  5997                           
  5998                           ; BSR set to: 0
  5999  001014  98A1               	bcf	4001,4,c	;volatile
  6000  001016  0012               	return		;funcret
  6001  001018                     __end_of_USBDeviceTasks:
  6002                           	opt stack 0
  6003                           tosu	equ	0xFFF
  6004                           tosh	equ	0xFFE
  6005                           tosl	equ	0xFFD
  6006                           pclath	equ	0xFFA
  6007                           tblptru	equ	0xFF8
  6008                           tblptrh	equ	0xFF7
  6009                           tblptrl	equ	0xFF6
  6010                           tablat	equ	0xFF5
  6011                           prodh	equ	0xFF4
  6012                           prodl	equ	0xFF3
  6013                           intcon	equ	0xFF2
  6014                           intcon2	equ	0xFF1
  6015                           intcon3	equ	0xFF0
  6016                           postinc0	equ	0xFEE
  6017                           plusw0	equ	0xFEB
  6018                           wreg	equ	0xFE8
  6019                           postinc1	equ	0xFE6
  6020                           postdec1	equ	0xFE5
  6021                           fsr1h	equ	0xFE2
  6022                           fsr1l	equ	0xFE1
  6023                           indf2	equ	0xFDF
  6024                           postinc2	equ	0xFDE
  6025                           postdec2	equ	0xFDD
  6026                           plusw2	equ	0xFDB
  6027                           fsr2h	equ	0xFDA
  6028                           fsr2l	equ	0xFD9
  6029                           status	equ	0xFD8
  6030                           
  6031 ;; *************** function _USBWakeFromSuspend *****************
  6032 ;; Defined at:
  6033 ;;		line 2321 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;		None
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1    wreg      void 
  6040 ;; Registers used:
  6041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6051 ;;Total ram usage:        0 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:   13
  6054 ;; This function calls:
  6055 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6056 ;; This function is called by:
  6057 ;;		_USBDeviceTasks
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text26
  6062  003E80                     __ptext26:
  6063                           	opt stack 0
  6064  003E80                     _USBWakeFromSuspend:
  6065                           	opt stack 13
  6066                           
  6067                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  6068                           
  6069                           ;incstack = 0
  6070  003E80  0E00               	movlw	0
  6071  003E82  0100               	movlb	0	; () banked
  6072  003E84  6FCD               	movwf	_USBBusIsSuspended& (0+255),b
  6073                           
  6074                           ; BSR set to: 0
  6075                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  6076  003E86  0E00               	movlw	0
  6077  003E88  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6078  003E8A  0E74               	movlw	116
  6079  003E8C  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6080  003E8E  0E00               	movlw	0
  6081  003E90  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6082  003E92  0E00               	movlw	0
  6083  003E94  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6084  003E96  0E00               	movlw	0
  6085  003E98  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6086  003E9A  0E00               	movlw	0
  6087  003E9C  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6088  003E9E  EC00  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6089                           
  6090                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  6091  003EA2  9265               	bcf	3941,1,c	;volatile
  6092                           
  6093                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  6094  003EA4  010F               	movlb	15	; () banked
  6095  003EA6  9536               	bcf	54,2,b	;volatile
  6096                           
  6097                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  6098  003EA8  D001               	goto	l1247
  6099  003EAA                     
  6100                           ;usb_device.c: 2361: {
  6101                           ;usb_device.c: 2362: (UIR &= 0xFB);
  6102                           
  6103                           ; BSR set to: 15
  6104  003EAA  9462               	bcf	3938,2,c	;volatile
  6105  003EAC                     l1247:
  6106  003EAC  B462               	btfsc	3938,2,c	;volatile
  6107  003EAE  D7FD               	goto	l1248
  6108                           
  6109                           ;usb_device.c: 2363: }
  6110                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  6111  003EB0  0E00               	movlw	0
  6112  003EB2  0100               	movlb	0	; () banked
  6113  003EB4  6FC4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6114                           
  6115                           ; BSR set to: 0
  6116  003EB6  0012               	return		;funcret
  6117  003EB8                     __end_of_USBWakeFromSuspend:
  6118                           	opt stack 0
  6119                           tosu	equ	0xFFF
  6120                           tosh	equ	0xFFE
  6121                           tosl	equ	0xFFD
  6122                           pclath	equ	0xFFA
  6123                           tblptru	equ	0xFF8
  6124                           tblptrh	equ	0xFF7
  6125                           tblptrl	equ	0xFF6
  6126                           tablat	equ	0xFF5
  6127                           prodh	equ	0xFF4
  6128                           prodl	equ	0xFF3
  6129                           intcon	equ	0xFF2
  6130                           intcon2	equ	0xFF1
  6131                           intcon3	equ	0xFF0
  6132                           postinc0	equ	0xFEE
  6133                           plusw0	equ	0xFEB
  6134                           wreg	equ	0xFE8
  6135                           postinc1	equ	0xFE6
  6136                           postdec1	equ	0xFE5
  6137                           fsr1h	equ	0xFE2
  6138                           fsr1l	equ	0xFE1
  6139                           indf2	equ	0xFDF
  6140                           postinc2	equ	0xFDE
  6141                           postdec2	equ	0xFDD
  6142                           plusw2	equ	0xFDB
  6143                           fsr2h	equ	0xFDA
  6144                           fsr2l	equ	0xFD9
  6145                           status	equ	0xFD8
  6146                           
  6147 ;; *************** function _USBSuspend *****************
  6148 ;; Defined at:
  6149 ;;		line 2263 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;		None
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6167 ;;Total ram usage:        0 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:   13
  6170 ;; This function calls:
  6171 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6172 ;; This function is called by:
  6173 ;;		_USBDeviceTasks
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text27
  6178  003F50                     __ptext27:
  6179                           	opt stack 0
  6180  003F50                     _USBSuspend:
  6181                           	opt stack 13
  6182                           
  6183                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;incstack = 0
  6187  003F50  010F               	movlb	15	; () banked
  6188  003F52  8536               	bsf	54,2,b	;volatile
  6189                           
  6190                           ; BSR set to: 15
  6191                           ;usb_device.c: 2289: (UIR &= 0xEF);
  6192  003F54  9862               	bcf	3938,4,c	;volatile
  6193                           
  6194                           ; BSR set to: 15
  6195                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  6196  003F56  8265               	bsf	3941,1,c	;volatile
  6197                           
  6198                           ; BSR set to: 15
  6199                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  6200  003F58  0E01               	movlw	1
  6201  003F5A  0100               	movlb	0	; () banked
  6202  003F5C  6FCD               	movwf	_USBBusIsSuspended& (0+255),b
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  6206  003F5E  0E00               	movlw	0
  6207  003F60  6FC4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  6211  003F62  0E00               	movlw	0
  6212  003F64  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6213  003F66  0E75               	movlw	117
  6214  003F68  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6215  003F6A  0E00               	movlw	0
  6216  003F6C  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6217  003F6E  0E00               	movlw	0
  6218  003F70  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6219  003F72  0E00               	movlw	0
  6220  003F74  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6221  003F76  0E00               	movlw	0
  6222  003F78  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6223  003F7A  EC00  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6224  003F7E  0012               	return		;funcret
  6225  003F80                     __end_of_USBSuspend:
  6226                           	opt stack 0
  6227                           tosu	equ	0xFFF
  6228                           tosh	equ	0xFFE
  6229                           tosl	equ	0xFFD
  6230                           pclath	equ	0xFFA
  6231                           tblptru	equ	0xFF8
  6232                           tblptrh	equ	0xFF7
  6233                           tblptrl	equ	0xFF6
  6234                           tablat	equ	0xFF5
  6235                           prodh	equ	0xFF4
  6236                           prodl	equ	0xFF3
  6237                           intcon	equ	0xFF2
  6238                           intcon2	equ	0xFF1
  6239                           intcon3	equ	0xFF0
  6240                           postinc0	equ	0xFEE
  6241                           plusw0	equ	0xFEB
  6242                           wreg	equ	0xFE8
  6243                           postinc1	equ	0xFE6
  6244                           postdec1	equ	0xFE5
  6245                           fsr1h	equ	0xFE2
  6246                           fsr1l	equ	0xFE1
  6247                           indf2	equ	0xFDF
  6248                           postinc2	equ	0xFDE
  6249                           postdec2	equ	0xFDD
  6250                           plusw2	equ	0xFDB
  6251                           fsr2h	equ	0xFDA
  6252                           fsr2l	equ	0xFD9
  6253                           status	equ	0xFD8
  6254                           
  6255 ;; *************** function _USBStallHandler *****************
  6256 ;; Defined at:
  6257 ;;		line 2220 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;		None
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;		None
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  1    wreg      void 
  6264 ;; Registers used:
  6265 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6273 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6274 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6275 ;;Total ram usage:        1 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    9
  6278 ;; This function calls:
  6279 ;;		Nothing
  6280 ;; This function is called by:
  6281 ;;		_USBDeviceTasks
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text28
  6286  003BFA                     __ptext28:
  6287                           	opt stack 0
  6288  003BFA                     _USBStallHandler:
  6289                           	opt stack 17
  6290                           
  6291                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  6292                           
  6293                           ;incstack = 0
  6294  003BFA  010F               	movlb	15	; () banked
  6295  003BFC  A126               	btfss	38,0,b	;volatile
  6296  003BFE  D01D               	goto	l1239
  6297                           
  6298                           ; BSR set to: 15
  6299                           ;usb_device.c: 2233: {
  6300                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  6301  003C00  C0BF  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6302  003C04  C0C0  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6303  003C08  0E80               	movlw	128
  6304  003C0A  18DE               	xorwf	postinc2,w,c
  6305  003C0C  A4D8               	btfss	status,2,c
  6306  003C0E  D014               	goto	l1240
  6307                           
  6308                           ; BSR set to: 15
  6309  003C10  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
  6310  003C14  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6311  003C18  0E84               	movlw	132
  6312  003C1A  18DE               	xorwf	postinc2,w,c
  6313  003C1C  A4D8               	btfss	status,2,c
  6314  003C1E  D00C               	goto	l1240
  6315                           
  6316                           ; BSR set to: 15
  6317                           ;usb_device.c: 2236: {
  6318                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6319  003C20  C0BF  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6320  003C24  C0C0  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6321  003C28  0E0C               	movlw	12
  6322  003C2A  6EDF               	movwf	indf2,c
  6323                           
  6324                           ; BSR set to: 15
  6325                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6326  003C2C  C0BF  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6327  003C30  C0C0  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6328  003C34  0E00               	movlw	0
  6329  003C36  8EDB               	bsf	plusw2,7,c
  6330  003C38                     l1240:
  6331                           
  6332                           ; BSR set to: 15
  6333                           ;usb_device.c: 2240: }
  6334                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  6335                           
  6336                           ; BSR set to: 15
  6337  003C38  9126               	bcf	38,0,b	;volatile
  6338  003C3A                     l1239:
  6339                           
  6340                           ; BSR set to: 15
  6341                           ;usb_device.c: 2242: }
  6342                           ;usb_device.c: 2244: (UIR &= 0xDF);
  6343  003C3A  9A62               	bcf	3938,5,c	;volatile
  6344                           
  6345                           ; BSR set to: 15
  6346  003C3C  0012               	return		;funcret
  6347  003C3E                     __end_of_USBStallHandler:
  6348                           	opt stack 0
  6349                           tosu	equ	0xFFF
  6350                           tosh	equ	0xFFE
  6351                           tosl	equ	0xFFD
  6352                           pclath	equ	0xFFA
  6353                           tblptru	equ	0xFF8
  6354                           tblptrh	equ	0xFF7
  6355                           tblptrl	equ	0xFF6
  6356                           tablat	equ	0xFF5
  6357                           prodh	equ	0xFF4
  6358                           prodl	equ	0xFF3
  6359                           intcon	equ	0xFF2
  6360                           intcon2	equ	0xFF1
  6361                           intcon3	equ	0xFF0
  6362                           postinc0	equ	0xFEE
  6363                           plusw0	equ	0xFEB
  6364                           wreg	equ	0xFE8
  6365                           postinc1	equ	0xFE6
  6366                           postdec1	equ	0xFE5
  6367                           fsr1h	equ	0xFE2
  6368                           fsr1l	equ	0xFE1
  6369                           indf2	equ	0xFDF
  6370                           postinc2	equ	0xFDE
  6371                           postdec2	equ	0xFDD
  6372                           plusw2	equ	0xFDB
  6373                           fsr2h	equ	0xFDA
  6374                           fsr2l	equ	0xFD9
  6375                           status	equ	0xFD8
  6376                           
  6377 ;; *************** function _USBIncrement1msInternalTimers *****************
  6378 ;; Defined at:
  6379 ;;		line 3042 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;		None
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;		None
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  1    wreg      void 
  6386 ;; Registers used:
  6387 ;;		wreg, status,2, status,0
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6397 ;;Total ram usage:        0 bytes
  6398 ;; Hardware stack levels used:    1
  6399 ;; Hardware stack levels required when called:    9
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		_USBDeviceTasks
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           	psect	text29
  6408  004180                     __ptext29:
  6409                           	opt stack 0
  6410  004180                     _USBIncrement1msInternalTimers:
  6411                           	opt stack 17
  6412                           
  6413                           ;usb_device.c: 3050: USB1msTickCount++;
  6414                           
  6415                           ; BSR set to: 15
  6416                           ;incstack = 0
  6417  004180  0E01               	movlw	1
  6418  004182  0102               	movlb	2	; () banked
  6419  004184  27CC               	addwf	_USB1msTickCount& (0+255),f,b
  6420  004186  0E00               	movlw	0
  6421  004188  23CD               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  6422  00418A  23CE               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  6423  00418C  23CF               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  6424                           
  6425                           ; BSR set to: 2
  6426                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  6427  00418E  0100               	movlb	0	; () banked
  6428  004190  51CD               	movf	_USBBusIsSuspended& (0+255),w,b
  6429  004192  A4D8               	btfss	status,2,c
  6430  004194  0012               	return	
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;usb_device.c: 3052: {
  6434                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  6435  004196  2BC4               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  6439  004198  51C4               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  6440  00419A  A4D8               	btfss	status,2,c
  6441  00419C  0012               	return	
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;usb_device.c: 3056: {
  6445                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  6446  00419E  69C4               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  6447                           
  6448                           ; BSR set to: 0
  6449  0041A0  0012               	return	
  6450  0041A2                     __end_of_USBIncrement1msInternalTimers:
  6451                           	opt stack 0
  6452                           tosu	equ	0xFFF
  6453                           tosh	equ	0xFFE
  6454                           tosl	equ	0xFFD
  6455                           pclath	equ	0xFFA
  6456                           tblptru	equ	0xFF8
  6457                           tblptrh	equ	0xFF7
  6458                           tblptrl	equ	0xFF6
  6459                           tablat	equ	0xFF5
  6460                           prodh	equ	0xFF4
  6461                           prodl	equ	0xFF3
  6462                           intcon	equ	0xFF2
  6463                           intcon2	equ	0xFF1
  6464                           intcon3	equ	0xFF0
  6465                           postinc0	equ	0xFEE
  6466                           plusw0	equ	0xFEB
  6467                           wreg	equ	0xFE8
  6468                           postinc1	equ	0xFE6
  6469                           postdec1	equ	0xFE5
  6470                           fsr1h	equ	0xFE2
  6471                           fsr1l	equ	0xFE1
  6472                           indf2	equ	0xFDF
  6473                           postinc2	equ	0xFDE
  6474                           postdec2	equ	0xFDD
  6475                           plusw2	equ	0xFDB
  6476                           fsr2h	equ	0xFDA
  6477                           fsr2l	equ	0xFD9
  6478                           status	equ	0xFD8
  6479                           
  6480 ;; *************** function _USBDeviceInit *****************
  6481 ;; Defined at:
  6482 ;;		line 295 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;		None
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;  i               1   29[BANK0 ] unsigned char 
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6499 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6500 ;;Total ram usage:        1 bytes
  6501 ;; Hardware stack levels used:    1
  6502 ;; Hardware stack levels required when called:   10
  6503 ;; This function calls:
  6504 ;;		_memset
  6505 ;; This function is called by:
  6506 ;;		_USBDeviceTasks
  6507 ;;		_UsbDevice_MainTask
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text30
  6512  001452                     __ptext30:
  6513                           	opt stack 0
  6514  001452                     _USBDeviceInit:
  6515                           	opt stack 16
  6516                           
  6517                           ;usb_device.c: 297: uint8_t i;
  6518                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;incstack = 0
  6522  001452  98A0               	bcf	4000,4,c	;volatile
  6523                           
  6524                           ;usb_device.c: 303: ;
  6525                           ;usb_device.c: 306: {UEIR = 0;};
  6526  001454  0E00               	movlw	0
  6527  001456  6E63               	movwf	3939,c	;volatile
  6528                           
  6529                           ;usb_device.c: 309: {UIR = 0;};
  6530  001458  0E00               	movlw	0
  6531  00145A  6E62               	movwf	3938,c	;volatile
  6532                           
  6533                           ;usb_device.c: 312: UEP0 = 0;
  6534  00145C  0E00               	movlw	0
  6535  00145E  010F               	movlb	15	; () banked
  6536  001460  6F26               	movwf	38,b	;volatile
  6537                           
  6538                           ; BSR set to: 15
  6539                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  6540  001462  0E27               	movlw	39
  6541  001464  0100               	movlb	0	; () banked
  6542  001466  6F75               	movwf	memset@p1& (0+255),b
  6543  001468  0E0F               	movlw	15
  6544  00146A  6F76               	movwf	(memset@p1+1)& (0+255),b
  6545  00146C  0E00               	movlw	0
  6546  00146E  6F78               	movwf	(memset@c+1)& (0+255),b
  6547  001470  0E00               	movlw	0
  6548  001472  6F77               	movwf	memset@c& (0+255),b
  6549  001474  0E00               	movlw	0
  6550  001476  6F7A               	movwf	(memset@n+1)& (0+255),b
  6551  001478  0E02               	movlw	2
  6552  00147A  6F79               	movwf	memset@n& (0+255),b
  6553  00147C  ECC0  F01F         	call	_memset	;wreg free
  6554                           
  6555                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6556  001480  0E16               	movlw	22
  6557  001482  010F               	movlb	15	; () banked
  6558  001484  6F39               	movwf	57,b	;volatile
  6559                           
  6560                           ; BSR set to: 15
  6561  001486  0E9F               	movlw	159
  6562  001488  6F37               	movwf	55,b	;volatile
  6563                           
  6564                           ; BSR set to: 15
  6565  00148A  0E7B               	movlw	123
  6566  00148C  6F36               	movwf	54,b	;volatile
  6567                           
  6568                           ; BSR set to: 15
  6569                           ;usb_device.c: 319: ;
  6570                           ;usb_device.c: 322: ;
  6571                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  6572  00148E  0E00               	movlw	0
  6573  001490  0100               	movlb	0	; () banked
  6574  001492  6F7D               	movwf	USBDeviceInit@i& (0+255),b
  6575  001494                     l7428:
  6576                           
  6577                           ; BSR set to: 0
  6578  001494  0E0B               	movlw	11
  6579  001496  657D               	cpfsgt	USBDeviceInit@i& (0+255),b
  6580  001498  D001               	goto	l1083
  6581  00149A  D00E               	goto	u5790
  6582  00149C                     l1083:
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;usb_device.c: 326: {
  6586                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  6587                           
  6588                           ; BSR set to: 0
  6589  00149C  517D               	movf	USBDeviceInit@i& (0+255),w,b
  6590  00149E  0D04               	mullw	4
  6591  0014A0  0E00               	movlw	0
  6592  0014A2  24F3               	addwf	prodl,w,c
  6593  0014A4  6ED9               	movwf	fsr2l,c
  6594  0014A6  0E04               	movlw	4
  6595  0014A8  20F4               	addwfc	prodh,w,c
  6596  0014AA  6EDA               	movwf	fsr2h,c
  6597  0014AC  6ADE               	clrf	postinc2,c
  6598  0014AE  6ADE               	clrf	postinc2,c
  6599  0014B0  6ADE               	clrf	postinc2,c
  6600  0014B2  6ADD               	clrf	postdec2,c
  6601                           
  6602                           ; BSR set to: 0
  6603  0014B4  2B7D               	incf	USBDeviceInit@i& (0+255),f,b
  6604  0014B6  D7EE               	goto	l7428
  6605  0014B8                     u5790:
  6606                           
  6607                           ; BSR set to: 0
  6608                           ;usb_device.c: 328: }
  6609                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  6610  0014B8  8C65               	bsf	3941,6,c	;volatile
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;usb_device.c: 334: UADDR = 0x00;
  6614  0014BA  0E00               	movlw	0
  6615  0014BC  010F               	movlb	15	; () banked
  6616  0014BE  6F38               	movwf	56,b	;volatile
  6617                           
  6618                           ; BSR set to: 15
  6619                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  6620  0014C0  9865               	bcf	3941,4,c	;volatile
  6621                           
  6622                           ; BSR set to: 15
  6623                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  6624  0014C2  9C65               	bcf	3941,6,c	;volatile
  6625  0014C4                     
  6626                           ;usb_device.c: 344: {
  6627                           ;usb_device.c: 345: (UIR &= 0xF7);
  6628                           
  6629                           ; BSR set to: 15
  6630  0014C4  9662               	bcf	3938,3,c	;volatile
  6631                           
  6632                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  6633  0014C6  0E00               	movlw	0
  6634  0014C8  0100               	movlb	0	; () banked
  6635  0014CA  6FB2               	movwf	(_inPipes+3)& (0+255),b
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  6639  0014CC  0E00               	movlw	0
  6640  0014CE  6E04               	movwf	_outPipes+3,c
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  6644  0014D0  0E00               	movlw	0
  6645  0014D2  6E06               	movwf	_outPipes+5,c
  6646  0014D4  0E00               	movlw	0
  6647  0014D6  6E05               	movwf	_outPipes+4,c
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  6651  0014D8  B662               	btfsc	3938,3,c	;volatile
  6652  0014DA  D7F4               	goto	l1085
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  6656                           
  6657                           ; BSR set to: 0
  6658  0014DC  0E01               	movlw	1
  6659  0014DE  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  6660                           
  6661                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  6662  0014E0  0E01               	movlw	1
  6663  0014E2  6FC7               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  6664                           
  6665                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  6666  0014E4  0E00               	movlw	0
  6667  0014E6  6FC6               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  6668                           
  6669                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  6670  0014E8  0E00               	movlw	0
  6671  0014EA  6FC5               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6672                           
  6673                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  6674  0014EC  0E00               	movlw	0
  6675  0014EE  6FCD               	movwf	_USBBusIsSuspended& (0+255),b
  6676                           
  6677                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  6678  0014F0  0E00               	movlw	0
  6679  0014F2  6F7D               	movwf	USBDeviceInit@i& (0+255),b
  6680  0014F4                     l7456:
  6681                           
  6682                           ; BSR set to: 0
  6683  0014F4  0E02               	movlw	2
  6684  0014F6  657D               	cpfsgt	USBDeviceInit@i& (0+255),b
  6685  0014F8  D001               	goto	l1087
  6686  0014FA  D02E               	goto	u5820
  6687  0014FC                     l1087:
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;usb_device.c: 364: {
  6691                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  6692                           
  6693                           ; BSR set to: 0
  6694  0014FC  517D               	movf	USBDeviceInit@i& (0+255),w,b
  6695  0014FE  0D02               	mullw	2
  6696  001500  0EB5               	movlw	low _pBDTEntryIn
  6697  001502  24F3               	addwf	prodl,w,c
  6698  001504  6ED9               	movwf	fsr2l,c
  6699  001506  0E00               	movlw	high _pBDTEntryIn
  6700  001508  20F4               	addwfc	prodh,w,c
  6701  00150A  6EDA               	movwf	fsr2h,c
  6702  00150C  0E00               	movlw	0
  6703  00150E  6EDE               	movwf	postinc2,c
  6704  001510  0E00               	movlw	0
  6705  001512  6EDD               	movwf	postdec2,c
  6706                           
  6707                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  6708  001514  517D               	movf	USBDeviceInit@i& (0+255),w,b
  6709  001516  0D02               	mullw	2
  6710  001518  0E00               	movlw	low _pBDTEntryOut
  6711  00151A  24F3               	addwf	prodl,w,c
  6712  00151C  6ED9               	movwf	fsr2l,c
  6713  00151E  0E01               	movlw	high _pBDTEntryOut
  6714  001520  20F4               	addwfc	prodh,w,c
  6715  001522  6EDA               	movwf	fsr2h,c
  6716  001524  0E00               	movlw	0
  6717  001526  6EDE               	movwf	postinc2,c
  6718  001528  0E00               	movlw	0
  6719  00152A  6EDD               	movwf	postdec2,c
  6720                           
  6721                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  6722  00152C  517D               	movf	USBDeviceInit@i& (0+255),w,b
  6723  00152E  0D01               	mullw	1
  6724  001530  0E0C               	movlw	low _ep_data_in
  6725  001532  24F3               	addwf	prodl,w,c
  6726  001534  6ED9               	movwf	fsr2l,c
  6727  001536  0E00               	movlw	high _ep_data_in
  6728  001538  20F4               	addwfc	prodh,w,c
  6729  00153A  6EDA               	movwf	fsr2h,c
  6730  00153C  0E00               	movlw	0
  6731  00153E  6EDF               	movwf	indf2,c
  6732                           
  6733                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  6734  001540  517D               	movf	USBDeviceInit@i& (0+255),w,b
  6735  001542  0D01               	mullw	1
  6736  001544  0E09               	movlw	low _ep_data_out
  6737  001546  24F3               	addwf	prodl,w,c
  6738  001548  6ED9               	movwf	fsr2l,c
  6739  00154A  0E00               	movlw	high _ep_data_out
  6740  00154C  20F4               	addwfc	prodh,w,c
  6741  00154E  6EDA               	movwf	fsr2h,c
  6742  001550  0E00               	movlw	0
  6743  001552  6EDF               	movwf	indf2,c
  6744                           
  6745                           ; BSR set to: 0
  6746  001554  2B7D               	incf	USBDeviceInit@i& (0+255),f,b
  6747  001556  D7CE               	goto	l7456
  6748  001558                     u5820:
  6749                           
  6750                           ; BSR set to: 0
  6751                           ;usb_device.c: 369: }
  6752                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6753                           
  6754                           ; BSR set to: 0
  6755  001558  0E08               	movlw	8
  6756  00155A  6FB5               	movwf	_pBDTEntryIn& (0+255),b
  6757  00155C  0E04               	movlw	4
  6758  00155E  6FB6               	movwf	(_pBDTEntryIn+1)& (0+255),b
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  6762  001560  0E16               	movlw	22
  6763  001562  010F               	movlb	15	; () banked
  6764  001564  6F26               	movwf	38,b	;volatile
  6765                           
  6766                           ; BSR set to: 15
  6767                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  6768  001566  0E04               	movlw	4
  6769  001568  0104               	movlb	4	; () banked
  6770  00156A  6F03               	movwf	3,b	;volatile
  6771  00156C  0E30               	movlw	48
  6772  00156E  6F02               	movwf	2,b	;volatile
  6773                           
  6774                           ; BSR set to: 4
  6775                           ;usb_device.c: 377: BDT[0].CNT = 8;
  6776  001570  0E08               	movlw	8
  6777  001572  6F01               	movwf	1,b	;volatile
  6778                           
  6779                           ; BSR set to: 4
  6780                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  6781  001574  0E04               	movlw	4
  6782  001576  6F00               	movwf	0,b	;volatile
  6783                           
  6784                           ; BSR set to: 4
  6785                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  6786  001578  8F00               	bsf	0,7,b	;volatile
  6787                           
  6788                           ; BSR set to: 4
  6789                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  6790  00157A  0E00               	movlw	0
  6791  00157C  0100               	movlb	0	; () banked
  6792  00157E  6FDF               	movwf	_USBActiveConfiguration& (0+255),b
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;usb_device.c: 384: USB1msTickCount = 0;
  6796  001580  0E00               	movlw	0
  6797  001582  0102               	movlb	2	; () banked
  6798  001584  6FCC               	movwf	_USB1msTickCount& (0+255),b
  6799  001586  0E00               	movlw	0
  6800  001588  6FCD               	movwf	(_USB1msTickCount+1)& (0+255),b
  6801  00158A  0E00               	movlw	0
  6802  00158C  6FCE               	movwf	(_USB1msTickCount+2)& (0+255),b
  6803  00158E  0E00               	movlw	0
  6804  001590  6FCF               	movwf	(_USB1msTickCount+3)& (0+255),b
  6805                           
  6806                           ; BSR set to: 2
  6807                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  6808  001592  0E00               	movlw	0
  6809  001594  0100               	movlb	0	; () banked
  6810  001596  6FC4               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  6814  001598  0E00               	movlw	0
  6815  00159A  6FD1               	movwf	_USBDeviceState& (0+255),b
  6816                           
  6817                           ; BSR set to: 0
  6818  00159C  0012               	return		;funcret
  6819  00159E                     __end_of_USBDeviceInit:
  6820                           	opt stack 0
  6821                           tosu	equ	0xFFF
  6822                           tosh	equ	0xFFE
  6823                           tosl	equ	0xFFD
  6824                           pclath	equ	0xFFA
  6825                           tblptru	equ	0xFF8
  6826                           tblptrh	equ	0xFF7
  6827                           tblptrl	equ	0xFF6
  6828                           tablat	equ	0xFF5
  6829                           prodh	equ	0xFF4
  6830                           prodl	equ	0xFF3
  6831                           intcon	equ	0xFF2
  6832                           intcon2	equ	0xFF1
  6833                           intcon3	equ	0xFF0
  6834                           postinc0	equ	0xFEE
  6835                           plusw0	equ	0xFEB
  6836                           wreg	equ	0xFE8
  6837                           postinc1	equ	0xFE6
  6838                           postdec1	equ	0xFE5
  6839                           fsr1h	equ	0xFE2
  6840                           fsr1l	equ	0xFE1
  6841                           indf2	equ	0xFDF
  6842                           postinc2	equ	0xFDE
  6843                           postdec2	equ	0xFDD
  6844                           plusw2	equ	0xFDB
  6845                           fsr2h	equ	0xFDA
  6846                           fsr2l	equ	0xFD9
  6847                           status	equ	0xFD8
  6848                           
  6849 ;; *************** function _USBCtrlEPService *****************
  6850 ;; Defined at:
  6851 ;;		line 2390 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;		None
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;		None
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  1    wreg      void 
  6858 ;; Registers used:
  6859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6867 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6868 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6869 ;;Total ram usage:        1 bytes
  6870 ;; Hardware stack levels used:    1
  6871 ;; Hardware stack levels required when called:   16
  6872 ;; This function calls:
  6873 ;;		_USBCtrlTrfInHandler
  6874 ;;		_USBCtrlTrfOutHandler
  6875 ;;		_USBCtrlTrfSetupHandler
  6876 ;;		_memcpy
  6877 ;; This function is called by:
  6878 ;;		_USBDeviceTasks
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text31
  6883  0030B8                     __ptext31:
  6884                           	opt stack 0
  6885  0030B8                     _USBCtrlEPService:
  6886                           	opt stack 10
  6887                           
  6888                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;incstack = 0
  6892  0030B8  0E2D               	movlw	45
  6893  0030BA  0100               	movlb	0	; () banked
  6894  0030BC  6FCA               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  6898  0030BE  C0DE  F08F         	movff	_USTATcopy,??_USBCtrlEPService
  6899  0030C2  0EFD               	movlw	253
  6900  0030C4  178F               	andwf	??_USBCtrlEPService& (0+255),f,b
  6901  0030C6  A4D8               	btfss	status,2,c
  6902  0030C8  D038               	goto	l1253
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;usb_device.c: 2401: {
  6906                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  6907  0030CA  C0DE  F08F         	movff	_USTATcopy,??_USBCtrlEPService
  6908  0030CE  90D8               	bcf	status,0,c
  6909  0030D0  338F               	rrcf	??_USBCtrlEPService& (0+255),f,b
  6910  0030D2  0E3F               	movlw	63
  6911  0030D4  178F               	andwf	??_USBCtrlEPService& (0+255),f,b
  6912  0030D6  518F               	movf	??_USBCtrlEPService& (0+255),w,b
  6913  0030D8  0D04               	mullw	4
  6914  0030DA  0E00               	movlw	0
  6915  0030DC  24F3               	addwf	prodl,w,c
  6916  0030DE  6FBF               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  6917  0030E0  0E04               	movlw	4
  6918  0030E2  20F4               	addwfc	prodh,w,c
  6919  0030E4  6FC0               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6923  0030E6  C0BF  F0BD         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6924  0030EA  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  6928  0030EE  0E04               	movlw	4
  6929  0030F0  1BBD               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  6930                           
  6931                           ; BSR set to: 0
  6932                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  6933  0030F2  C0BF  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6934  0030F6  C0C0  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6935  0030FA  30DF               	rrcf	223,w,c
  6936  0030FC  32E8               	rrcf	wreg,f,c
  6937  0030FE  0B0F               	andlw	15
  6938  003100  0A0D               	xorlw	13
  6939  003102  A4D8               	btfss	status,2,c
  6940  003104  D017               	goto	l1254
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;usb_device.c: 2418: {
  6944                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  6945  003106  0E30               	movlw	48
  6946  003108  6F75               	movwf	memcpy@d1& (0+255),b
  6947  00310A  0E04               	movlw	4
  6948  00310C  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  6949  00310E  EE20 F002          	lfsr	2,2
  6950  003112  51BF               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  6951  003114  26D9               	addwf	fsr2l,f,c
  6952  003116  51C0               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  6953  003118  22DA               	addwfc	fsr2h,f,c
  6954  00311A  CFDE F077          	movff	postinc2,memcpy@s1
  6955  00311E  CFDD F078          	movff	postdec2,memcpy@s1+1
  6956  003122  0E00               	movlw	0
  6957  003124  6F7A               	movwf	(memcpy@n+1)& (0+255),b
  6958  003126  0E08               	movlw	8
  6959  003128  6F79               	movwf	memcpy@n& (0+255),b
  6960  00312A  ECD9  F01D         	call	_memcpy	;wreg free
  6961                           
  6962                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  6963  00312E  EC7F  F019         	call	_USBCtrlTrfSetupHandler	;wreg free
  6964                           
  6965                           ;usb_device.c: 2427: }
  6966  003132  0012               	return	
  6967  003134                     l1254:
  6968                           
  6969                           ;usb_device.c: 2428: else
  6970                           ;usb_device.c: 2429: {
  6971                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  6972  003134  ECD0  F01B         	call	_USBCtrlTrfOutHandler	;wreg free
  6973                           
  6974                           ;usb_device.c: 2432: }
  6975                           ;usb_device.c: 2433: }
  6976  003138  0012               	return	
  6977  00313A                     l1253:
  6978                           
  6979                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  6980  00313A  0100               	movlb	0	; () banked
  6981  00313C  51DE               	movf	_USTATcopy& (0+255),w,b
  6982  00313E  0BFD               	andlw	253
  6983  003140  0A04               	xorlw	4
  6984  003142  A4D8               	btfss	status,2,c
  6985  003144  0012               	return	
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;usb_device.c: 2435: {
  6989                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  6990  003146  EC13  F014         	call	_USBCtrlTrfInHandler	;wreg free
  6991  00314A  0012               	return	
  6992  00314C                     __end_of_USBCtrlEPService:
  6993                           	opt stack 0
  6994                           tosu	equ	0xFFF
  6995                           tosh	equ	0xFFE
  6996                           tosl	equ	0xFFD
  6997                           pclath	equ	0xFFA
  6998                           tblptru	equ	0xFF8
  6999                           tblptrh	equ	0xFF7
  7000                           tblptrl	equ	0xFF6
  7001                           tablat	equ	0xFF5
  7002                           prodh	equ	0xFF4
  7003                           prodl	equ	0xFF3
  7004                           intcon	equ	0xFF2
  7005                           intcon2	equ	0xFF1
  7006                           intcon3	equ	0xFF0
  7007                           postinc0	equ	0xFEE
  7008                           plusw0	equ	0xFEB
  7009                           wreg	equ	0xFE8
  7010                           postinc1	equ	0xFE6
  7011                           postdec1	equ	0xFE5
  7012                           fsr1h	equ	0xFE2
  7013                           fsr1l	equ	0xFE1
  7014                           indf2	equ	0xFDF
  7015                           postinc2	equ	0xFDE
  7016                           postdec2	equ	0xFDD
  7017                           plusw2	equ	0xFDB
  7018                           fsr2h	equ	0xFDA
  7019                           fsr2l	equ	0xFD9
  7020                           status	equ	0xFD8
  7021                           
  7022 ;; *************** function _memcpy *****************
  7023 ;; Defined at:
  7024 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;  d1              2   21[BANK0 ] PTR void 
  7027 ;;		 -> SetupPkt(8), 
  7028 ;;  s1              2   23[BANK0 ] PTR const void 
  7029 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  7030 ;;  n               2   25[BANK0 ] unsigned int 
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  s               2   29[BANK0 ] PTR const unsigned char 
  7033 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  7034 ;;  d               2   27[BANK0 ] PTR unsigned char 
  7035 ;;		 -> SetupPkt(8), 
  7036 ;;  tmp             1   31[BANK0 ] unsigned char 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  2   21[BANK0 ] PTR void 
  7039 ;; Registers used:
  7040 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7046 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7047 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;Total ram usage:       11 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; Hardware stack levels required when called:    9
  7053 ;; This function calls:
  7054 ;;		Nothing
  7055 ;; This function is called by:
  7056 ;;		_USBCtrlEPService
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text32
  7061  003BB2                     __ptext32:
  7062                           	opt stack 0
  7063  003BB2                     _memcpy:
  7064                           	opt stack 16
  7065                           
  7066                           ;incstack = 0
  7067  003BB2  C077  F07D         	movff	memcpy@s1,memcpy@s
  7068  003BB6  C078  F07E         	movff	memcpy@s1+1,memcpy@s+1
  7069  003BBA  C075  F07B         	movff	memcpy@d1,memcpy@d
  7070  003BBE  C076  F07C         	movff	memcpy@d1+1,memcpy@d+1
  7071  003BC2  D011               	goto	l2419
  7072  003BC4                     l6834:
  7073  003BC4  C07D  FFD9         	movff	memcpy@s,fsr2l
  7074  003BC8  C07E  FFDA         	movff	memcpy@s+1,fsr2h
  7075  003BCC  50DF               	movf	indf2,w,c
  7076  003BCE  0100               	movlb	0	; () banked
  7077  003BD0  6F7F               	movwf	memcpy@tmp& (0+255),b
  7078                           
  7079                           ; BSR set to: 0
  7080  003BD2  4B7D               	infsnz	memcpy@s& (0+255),f,b
  7081  003BD4  2B7E               	incf	(memcpy@s+1)& (0+255),f,b
  7082                           
  7083                           ; BSR set to: 0
  7084  003BD6  C07B  FFD9         	movff	memcpy@d,fsr2l
  7085  003BDA  C07C  FFDA         	movff	memcpy@d+1,fsr2h
  7086  003BDE  C07F  FFDF         	movff	memcpy@tmp,indf2
  7087                           
  7088                           ; BSR set to: 0
  7089  003BE2  4B7B               	infsnz	memcpy@d& (0+255),f,b
  7090  003BE4  2B7C               	incf	(memcpy@d+1)& (0+255),f,b
  7091  003BE6                     l2419:
  7092                           
  7093                           ; BSR set to: 0
  7094  003BE6  0100               	movlb	0	; () banked
  7095  003BE8  0779               	decf	memcpy@n& (0+255),f,b
  7096  003BEA  A0D8               	btfss	status,0,c
  7097  003BEC  077A               	decf	(memcpy@n+1)& (0+255),f,b
  7098  003BEE  2979               	incf	memcpy@n& (0+255),w,b
  7099  003BF0  E1E9               	bnz	l6834
  7100  003BF2  297A               	incf	(memcpy@n+1)& (0+255),w,b
  7101  003BF4  B4D8               	btfsc	status,2,c
  7102  003BF6  0012               	return	
  7103  003BF8  D7E5               	goto	l2420
  7104  003BFA                     __end_of_memcpy:
  7105                           	opt stack 0
  7106                           tosu	equ	0xFFF
  7107                           tosh	equ	0xFFE
  7108                           tosl	equ	0xFFD
  7109                           pclath	equ	0xFFA
  7110                           tblptru	equ	0xFF8
  7111                           tblptrh	equ	0xFF7
  7112                           tblptrl	equ	0xFF6
  7113                           tablat	equ	0xFF5
  7114                           prodh	equ	0xFF4
  7115                           prodl	equ	0xFF3
  7116                           intcon	equ	0xFF2
  7117                           intcon2	equ	0xFF1
  7118                           intcon3	equ	0xFF0
  7119                           postinc0	equ	0xFEE
  7120                           plusw0	equ	0xFEB
  7121                           wreg	equ	0xFE8
  7122                           postinc1	equ	0xFE6
  7123                           postdec1	equ	0xFE5
  7124                           fsr1h	equ	0xFE2
  7125                           fsr1l	equ	0xFE1
  7126                           indf2	equ	0xFDF
  7127                           postinc2	equ	0xFDE
  7128                           postdec2	equ	0xFDD
  7129                           plusw2	equ	0xFDB
  7130                           fsr2h	equ	0xFDA
  7131                           fsr2l	equ	0xFD9
  7132                           status	equ	0xFD8
  7133                           
  7134 ;; *************** function _USBCtrlTrfSetupHandler *****************
  7135 ;; Defined at:
  7136 ;;		line 2483 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;		None
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7154 ;;Total ram usage:        0 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:   15
  7157 ;; This function calls:
  7158 ;;		_USBCheckStdRequest
  7159 ;;		_USBCtrlEPServiceComplete
  7160 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7161 ;; This function is called by:
  7162 ;;		_USBCtrlEPService
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text33
  7167  0032FE                     __ptext33:
  7168                           	opt stack 0
  7169  0032FE                     _USBCtrlTrfSetupHandler:
  7170                           	opt stack 10
  7171                           
  7172                           ;usb_device.c: 2488: shortPacketStatus = 0;
  7173                           
  7174                           ; BSR set to: 0
  7175                           ;incstack = 0
  7176  0032FE  0E00               	movlw	0
  7177  003300  0100               	movlb	0	; () banked
  7178  003302  6FD0               	movwf	_shortPacketStatus& (0+255),b
  7179                           
  7180                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  7181  003304  0E00               	movlw	0
  7182  003306  6FC9               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  7183                           
  7184                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  7185  003308  0E00               	movlw	0
  7186  00330A  6FC6               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7187                           
  7188                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  7189  00330C  0E00               	movlw	0
  7190  00330E  6FC5               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7191                           
  7192                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  7193  003310  0E00               	movlw	0
  7194  003312  6FCB               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  7195                           
  7196                           ;usb_device.c: 2493: controlTransferState = 0;
  7197  003314  0E00               	movlw	0
  7198  003316  6FCF               	movwf	_controlTransferState& (0+255),b
  7199                           
  7200                           ; BSR set to: 0
  7201                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7202  003318  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
  7203  00331C  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7204  003320  0E7F               	movlw	127
  7205  003322  16DF               	andwf	indf2,f,c
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7209  003324  0E04               	movlw	4
  7210  003326  1BB5               	xorwf	_pBDTEntryIn& (0+255),f,b
  7211                           
  7212                           ; BSR set to: 0
  7213                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7214  003328  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
  7215  00332C  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7216  003330  0E7F               	movlw	127
  7217  003332  16DF               	andwf	indf2,f,c
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7221  003334  0E04               	movlw	4
  7222  003336  1BB5               	xorwf	_pBDTEntryIn& (0+255),f,b
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  7226  003338  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7227  00333C  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7228  003340  0E7F               	movlw	127
  7229  003342  16DF               	andwf	indf2,f,c
  7230                           
  7231                           ; BSR set to: 0
  7232                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  7233  003344  0E00               	movlw	0
  7234  003346  6FB2               	movwf	(_inPipes+3)& (0+255),b
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  7238  003348  0E00               	movlw	0
  7239  00334A  6FB4               	movwf	(_inPipes+5)& (0+255),b
  7240  00334C  0E00               	movlw	0
  7241  00334E  6FB3               	movwf	(_inPipes+4)& (0+255),b
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  7245  003350  0E00               	movlw	0
  7246  003352  6E04               	movwf	_outPipes+3,c
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  7250  003354  0E00               	movlw	0
  7251  003356  6E06               	movwf	_outPipes+5,c
  7252  003358  0E00               	movlw	0
  7253  00335A  6E05               	movwf	_outPipes+4,c
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;usb_device.c: 2517: USBCheckStdRequest();
  7257  00335C  EC11  F010         	call	_USBCheckStdRequest	;wreg free
  7258                           
  7259                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  7260  003360  0E00               	movlw	0
  7261  003362  0100               	movlb	0	; () banked
  7262  003364  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7263  003366  0E03               	movlw	3
  7264  003368  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7265  00336A  0E00               	movlw	0
  7266  00336C  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7267  00336E  0E00               	movlw	0
  7268  003370  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7269  003372  0E00               	movlw	0
  7270  003374  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7271  003376  0E00               	movlw	0
  7272  003378  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7273  00337A  EC00  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7274                           
  7275                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  7276  00337E  ECC3  F00D         	call	_USBCtrlEPServiceComplete	;wreg free
  7277  003382  0012               	return		;funcret
  7278  003384                     __end_of_USBCtrlTrfSetupHandler:
  7279                           	opt stack 0
  7280                           tosu	equ	0xFFF
  7281                           tosh	equ	0xFFE
  7282                           tosl	equ	0xFFD
  7283                           pclath	equ	0xFFA
  7284                           tblptru	equ	0xFF8
  7285                           tblptrh	equ	0xFF7
  7286                           tblptrl	equ	0xFF6
  7287                           tablat	equ	0xFF5
  7288                           prodh	equ	0xFF4
  7289                           prodl	equ	0xFF3
  7290                           intcon	equ	0xFF2
  7291                           intcon2	equ	0xFF1
  7292                           intcon3	equ	0xFF0
  7293                           postinc0	equ	0xFEE
  7294                           plusw0	equ	0xFEB
  7295                           wreg	equ	0xFE8
  7296                           postinc1	equ	0xFE6
  7297                           postdec1	equ	0xFE5
  7298                           fsr1h	equ	0xFE2
  7299                           fsr1l	equ	0xFE1
  7300                           indf2	equ	0xFDF
  7301                           postinc2	equ	0xFDE
  7302                           postdec2	equ	0xFDD
  7303                           plusw2	equ	0xFDB
  7304                           fsr2h	equ	0xFDA
  7305                           fsr2l	equ	0xFD9
  7306                           status	equ	0xFD8
  7307                           
  7308 ;; *************** function _USBCtrlEPServiceComplete *****************
  7309 ;; Defined at:
  7310 ;;		line 1634 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;		None
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;		None
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7328 ;;Total ram usage:        0 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:   11
  7331 ;; This function calls:
  7332 ;;		_USBCtrlEPAllowDataStage
  7333 ;;		_USBCtrlEPAllowStatusStage
  7334 ;; This function is called by:
  7335 ;;		_USBCtrlTrfSetupHandler
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text34
  7340  001B86                     __ptext34:
  7341                           	opt stack 0
  7342  001B86                     _USBCtrlEPServiceComplete:
  7343                           	opt stack 13
  7344                           
  7345                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  7346                           
  7347                           ;incstack = 0
  7348  001B86  9865               	bcf	3941,4,c	;volatile
  7349                           
  7350                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  7351  001B88  0100               	movlb	0	; () banked
  7352  001B8A  BFB2               	btfsc	(_inPipes+3)& (0+255),7,b
  7353  001B8C  D039               	goto	l1163
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;usb_device.c: 1647: {
  7357                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  7358  001B8E  AE04               	btfss	_outPipes+3,7,c
  7359  001B90  D00C               	goto	l1164
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;usb_device.c: 1649: {
  7363                           ;usb_device.c: 1650: controlTransferState = 2;
  7364  001B92  0E02               	movlw	2
  7365  001B94  6FCF               	movwf	_controlTransferState& (0+255),b
  7366                           
  7367                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  7368  001B96  51C5               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  7369  001B98  B4D8               	btfsc	status,2,c
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;usb_device.c: 1662: {
  7373                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  7374  001B9A  EC2B  F017         	call	_USBCtrlEPAllowDataStage	;wreg free
  7375                           
  7376                           ;usb_device.c: 1664: }
  7377                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  7378  001B9E  0E00               	movlw	0
  7379  001BA0  0100               	movlb	0	; () banked
  7380  001BA2  6FC7               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  7384  001BA4  0E00               	movlw	0
  7385  001BA6  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  7386                           
  7387                           ;usb_device.c: 1670: }
  7388  001BA8  0012               	return	
  7389  001BAA                     l1164:
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;usb_device.c: 1671: else
  7393                           ;usb_device.c: 1672: {
  7394                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  7395                           
  7396                           ; BSR set to: 0
  7397  001BAA  EE20 F001          	lfsr	2,1
  7398  001BAE  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7399  001BB0  26D9               	addwf	fsr2l,f,c
  7400  001BB2  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7401  001BB4  22DA               	addwfc	fsr2h,f,c
  7402  001BB6  0E08               	movlw	8
  7403  001BB8  6EDF               	movwf	indf2,c
  7404                           
  7405                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7406  001BBA  EE20 F002          	lfsr	2,2
  7407  001BBE  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7408  001BC0  26D9               	addwf	fsr2l,f,c
  7409  001BC2  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7410  001BC4  22DA               	addwfc	fsr2h,f,c
  7411  001BC6  0E30               	movlw	48
  7412  001BC8  6EDE               	movwf	postinc2,c
  7413  001BCA  0E04               	movlw	4
  7414  001BCC  6EDD               	movwf	postdec2,c
  7415                           
  7416                           ; BSR set to: 0
  7417                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7418  001BCE  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7419  001BD2  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7420  001BD6  0E0C               	movlw	12
  7421  001BD8  6EDF               	movwf	indf2,c
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7425  001BDA  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7426  001BDE  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7427  001BE2  0E00               	movlw	0
  7428  001BE4  8EDB               	bsf	plusw2,7,c
  7429                           
  7430                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  7431  001BE6  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
  7432  001BEA  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7433  001BEE  0E04               	movlw	4
  7434  001BF0  6EDF               	movwf	indf2,c
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7438  001BF2  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
  7439  001BF6  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7440  001BFA  0E00               	movlw	0
  7441  001BFC  8EDB               	bsf	plusw2,7,c
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;usb_device.c: 1683: }
  7445                           ;usb_device.c: 1684: }
  7446  001BFE  0012               	return	
  7447  001C00                     l1163:
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;usb_device.c: 1685: else
  7451                           ;usb_device.c: 1686: {
  7452                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  7453  001C00  0104               	movlb	4	; () banked
  7454  001C02  AF30               	btfss	48,7,b	;volatile
  7455  001C04  D012               	goto	l1168
  7456                           
  7457                           ; BSR set to: 4
  7458                           ;usb_device.c: 1688: {
  7459                           ;usb_device.c: 1689: controlTransferState = 1;
  7460  001C06  0E01               	movlw	1
  7461  001C08  0100               	movlb	0	; () banked
  7462  001C0A  6FCF               	movwf	_controlTransferState& (0+255),b
  7463                           
  7464                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  7465  001C0C  51C6               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  7466  001C0E  B4D8               	btfsc	status,2,c
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;usb_device.c: 1704: {
  7470                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  7471  001C10  EC2B  F017         	call	_USBCtrlEPAllowDataStage	;wreg free
  7472                           
  7473                           ;usb_device.c: 1706: }
  7474                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  7475  001C14  0E00               	movlw	0
  7476  001C16  0100               	movlb	0	; () banked
  7477  001C18  6FC7               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  7481  001C1A  0E00               	movlw	0
  7482  001C1C  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  7486  001C1E  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  7487  001C20  A4D8               	btfss	status,2,c
  7488  001C22  0012               	return	
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;usb_device.c: 1731: {
  7492                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  7493  001C24  ECB1  F013         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7494                           
  7495                           ;usb_device.c: 1733: }
  7496                           ;usb_device.c: 1734: }
  7497  001C28  0012               	return	
  7498  001C2A                     l1168:
  7499                           
  7500                           ;usb_device.c: 1735: else
  7501                           ;usb_device.c: 1736: {
  7502                           ;usb_device.c: 1747: controlTransferState = 2;
  7503  001C2A  0E02               	movlw	2
  7504  001C2C  0100               	movlb	0	; () banked
  7505  001C2E  6FCF               	movwf	_controlTransferState& (0+255),b
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  7509  001C30  EE20 F001          	lfsr	2,1
  7510  001C34  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7511  001C36  26D9               	addwf	fsr2l,f,c
  7512  001C38  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7513  001C3A  22DA               	addwfc	fsr2h,f,c
  7514  001C3C  0E08               	movlw	8
  7515  001C3E  6EDF               	movwf	indf2,c
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7519  001C40  EE20 F002          	lfsr	2,2
  7520  001C44  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7521  001C46  26D9               	addwf	fsr2l,f,c
  7522  001C48  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7523  001C4A  22DA               	addwfc	fsr2h,f,c
  7524  001C4C  0E30               	movlw	48
  7525  001C4E  6EDE               	movwf	postinc2,c
  7526  001C50  0E04               	movlw	4
  7527  001C52  6EDD               	movwf	postdec2,c
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7531  001C54  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7532  001C58  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7533  001C5C  0E04               	movlw	4
  7534  001C5E  6EDF               	movwf	indf2,c
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7538  001C60  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7539  001C64  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7540  001C68  0E00               	movlw	0
  7541  001C6A  8EDB               	bsf	plusw2,7,c
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  7545  001C6C  0E00               	movlw	0
  7546  001C6E  6FC7               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  7550  001C70  0E00               	movlw	0
  7551  001C72  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  7555  001C74  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  7556  001C76  A4D8               	btfss	status,2,c
  7557  001C78  0012               	return	
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;usb_device.c: 1759: {
  7561                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  7562  001C7A  ECB1  F013         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7563  001C7E  0012               	return	
  7564  001C80                     __end_of_USBCtrlEPServiceComplete:
  7565                           	opt stack 0
  7566                           tosu	equ	0xFFF
  7567                           tosh	equ	0xFFE
  7568                           tosl	equ	0xFFD
  7569                           pclath	equ	0xFFA
  7570                           tblptru	equ	0xFF8
  7571                           tblptrh	equ	0xFF7
  7572                           tblptrl	equ	0xFF6
  7573                           tablat	equ	0xFF5
  7574                           prodh	equ	0xFF4
  7575                           prodl	equ	0xFF3
  7576                           intcon	equ	0xFF2
  7577                           intcon2	equ	0xFF1
  7578                           intcon3	equ	0xFF0
  7579                           postinc0	equ	0xFEE
  7580                           plusw0	equ	0xFEB
  7581                           wreg	equ	0xFE8
  7582                           postinc1	equ	0xFE6
  7583                           postdec1	equ	0xFE5
  7584                           fsr1h	equ	0xFE2
  7585                           fsr1l	equ	0xFE1
  7586                           indf2	equ	0xFDF
  7587                           postinc2	equ	0xFDE
  7588                           postdec2	equ	0xFDD
  7589                           plusw2	equ	0xFDB
  7590                           fsr2h	equ	0xFDA
  7591                           fsr2l	equ	0xFD9
  7592                           status	equ	0xFD8
  7593                           
  7594 ;; *************** function _USBCtrlEPAllowDataStage *****************
  7595 ;; Defined at:
  7596 ;;		line 1506 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;		None
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;		None
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  1    wreg      void 
  7603 ;; Registers used:
  7604 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7614 ;;Total ram usage:        0 bytes
  7615 ;; Hardware stack levels used:    1
  7616 ;; Hardware stack levels required when called:   10
  7617 ;; This function calls:
  7618 ;;		_USBCtrlTrfTxService
  7619 ;; This function is called by:
  7620 ;;		_USBCtrlEPServiceComplete
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text35
  7625  002E56                     __ptext35:
  7626                           	opt stack 0
  7627  002E56                     _USBCtrlEPAllowDataStage:
  7628                           	opt stack 13
  7629                           
  7630                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  7631                           
  7632                           ;incstack = 0
  7633  002E56  0E00               	movlw	0
  7634  002E58  0100               	movlb	0	; () banked
  7635  002E5A  6FC6               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7636                           
  7637                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  7638  002E5C  0E00               	movlw	0
  7639  002E5E  6FC5               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;usb_device.c: 1511: if(controlTransferState == 2)
  7643  002E60  0E02               	movlw	2
  7644  002E62  19CF               	xorwf	_controlTransferState& (0+255),w,b
  7645  002E64  A4D8               	btfss	status,2,c
  7646  002E66  D01F               	goto	l1152
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;usb_device.c: 1512: {
  7650                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  7651  002E68  EE20 F001          	lfsr	2,1
  7652  002E6C  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7653  002E6E  26D9               	addwf	fsr2l,f,c
  7654  002E70  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7655  002E72  22DA               	addwfc	fsr2h,f,c
  7656  002E74  0E08               	movlw	8
  7657  002E76  6EDF               	movwf	indf2,c
  7658                           
  7659                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  7660  002E78  EE20 F002          	lfsr	2,2
  7661  002E7C  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7662  002E7E  26D9               	addwf	fsr2l,f,c
  7663  002E80  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7664  002E82  22DA               	addwfc	fsr2h,f,c
  7665  002E84  0E38               	movlw	56
  7666  002E86  6EDE               	movwf	postinc2,c
  7667  002E88  0E04               	movlw	4
  7668  002E8A  6EDD               	movwf	postdec2,c
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7672  002E8C  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7673  002E90  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7674  002E94  0E48               	movlw	72
  7675  002E96  6EDF               	movwf	indf2,c
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7679  002E98  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7680  002E9C  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7681  002EA0  0E00               	movlw	0
  7682  002EA2  8EDB               	bsf	plusw2,7,c
  7683                           
  7684                           ;usb_device.c: 1518: }
  7685  002EA4  0012               	return	
  7686  002EA6                     l1152:
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;usb_device.c: 1519: else
  7690                           ;usb_device.c: 1520: {
  7691                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  7692                           
  7693                           ; BSR set to: 0
  7694  002EA6  51B3               	movf	(_inPipes+4)& (0+255),w,b
  7695  002EA8  0104               	movlb	4	; () banked
  7696  002EAA  5D36               	subwf	54,w,b	;volatile
  7697  002EAC  0100               	movlb	0	; () banked
  7698  002EAE  51B4               	movf	(_inPipes+5)& (0+255),w,b
  7699  002EB0  0104               	movlb	4	; () banked
  7700  002EB2  5937               	subwfb	55,w,b	;volatile
  7701  002EB4  B0D8               	btfsc	status,0,c
  7702  002EB6  D004               	goto	l1154
  7703                           
  7704                           ; BSR set to: 4
  7705                           ;usb_device.c: 1524: {
  7706                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  7707  002EB8  C436 F0B3          	movff	1078,_inPipes+4	;volatile
  7708  002EBC  C437 F0B4          	movff	1079,_inPipes+5	;volatile
  7709  002EC0                     l1154:
  7710                           
  7711                           ; BSR set to: 4
  7712                           ;usb_device.c: 1526: }
  7713                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  7714                           
  7715                           ; BSR set to: 4
  7716  002EC0  ECBC  F011         	call	_USBCtrlTrfTxService	;wreg free
  7717                           
  7718                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  7719  002EC4  0100               	movlb	0	; () banked
  7720  002EC6  EE20 F002          	lfsr	2,2
  7721  002ECA  51B5               	movf	_pBDTEntryIn& (0+255),w,b
  7722  002ECC  26D9               	addwf	fsr2l,f,c
  7723  002ECE  51B6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  7724  002ED0  22DA               	addwfc	fsr2h,f,c
  7725  002ED2  0E38               	movlw	56
  7726  002ED4  6EDE               	movwf	postinc2,c
  7727  002ED6  0E04               	movlw	4
  7728  002ED8  6EDD               	movwf	postdec2,c
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7732  002EDA  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
  7733  002EDE  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7734  002EE2  0E48               	movlw	72
  7735  002EE4  6EDF               	movwf	indf2,c
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7739  002EE6  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
  7740  002EEA  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7741  002EEE  0E00               	movlw	0
  7742  002EF0  8EDB               	bsf	plusw2,7,c
  7743  002EF2  0012               	return	
  7744  002EF4                     __end_of_USBCtrlEPAllowDataStage:
  7745                           	opt stack 0
  7746                           tosu	equ	0xFFF
  7747                           tosh	equ	0xFFE
  7748                           tosl	equ	0xFFD
  7749                           pclath	equ	0xFFA
  7750                           tblptru	equ	0xFF8
  7751                           tblptrh	equ	0xFF7
  7752                           tblptrl	equ	0xFF6
  7753                           tablat	equ	0xFF5
  7754                           prodh	equ	0xFF4
  7755                           prodl	equ	0xFF3
  7756                           intcon	equ	0xFF2
  7757                           intcon2	equ	0xFF1
  7758                           intcon3	equ	0xFF0
  7759                           postinc0	equ	0xFEE
  7760                           plusw0	equ	0xFEB
  7761                           wreg	equ	0xFE8
  7762                           postinc1	equ	0xFE6
  7763                           postdec1	equ	0xFE5
  7764                           fsr1h	equ	0xFE2
  7765                           fsr1l	equ	0xFE1
  7766                           indf2	equ	0xFDF
  7767                           postinc2	equ	0xFDE
  7768                           postdec2	equ	0xFDD
  7769                           plusw2	equ	0xFDB
  7770                           fsr2h	equ	0xFDA
  7771                           fsr2l	equ	0xFD9
  7772                           status	equ	0xFD8
  7773                           
  7774 ;; *************** function _USBCheckStdRequest *****************
  7775 ;; Defined at:
  7776 ;;		line 2703 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;		None
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;		None
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  1    wreg      void 
  7783 ;; Registers used:
  7784 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7794 ;;Total ram usage:        0 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; Hardware stack levels required when called:   14
  7797 ;; This function calls:
  7798 ;;		_USBStdFeatureReqHandler
  7799 ;;		_USBStdGetDscHandler
  7800 ;;		_USBStdGetStatusHandler
  7801 ;;		_USBStdSetCfgHandler
  7802 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7803 ;; This function is called by:
  7804 ;;		_USBCtrlTrfSetupHandler
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text36
  7809  002022                     __ptext36:
  7810                           	opt stack 0
  7811  002022                     _USBCheckStdRequest:
  7812                           	opt stack 10
  7813                           
  7814                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;incstack = 0
  7818  002022  0104               	movlb	4	; () banked
  7819  002024  3930               	swapf	48,w,b	;volatile
  7820  002026  32E8               	rrcf	wreg,f,c
  7821  002028  0B03               	andlw	3
  7822  00202A  0900               	iorlw	0
  7823  00202C  A4D8               	btfss	status,2,c
  7824  00202E  0012               	return	
  7825  002030  D048               	goto	l1287
  7826  002032                     l1288:
  7827                           
  7828                           ; BSR set to: 4
  7829                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  7830  002032  0100               	movlb	0	; () banked
  7831  002034  8FB2               	bsf	(_inPipes+3)& (0+255),7,b
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  7835  002036  0E08               	movlw	8
  7836  002038  6FD1               	movwf	_USBDeviceState& (0+255),b
  7837                           
  7838                           ;usb_device.c: 2713: break;
  7839  00203A  0012               	return	
  7840  00203C                     
  7841                           ;usb_device.c: 2715: USBStdGetDscHandler();
  7842                           
  7843                           ; BSR set to: 0
  7844  00203C  EC14  F00C         	call	_USBStdGetDscHandler	;wreg free
  7845                           
  7846                           ;usb_device.c: 2716: break;
  7847  002040  0012               	return	
  7848  002042                     
  7849                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  7850  002042  EC2B  F00F         	call	_USBStdSetCfgHandler	;wreg free
  7851                           
  7852                           ;usb_device.c: 2719: break;
  7853  002046  0012               	return	
  7854  002048                     
  7855                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  7856  002048  0EDF               	movlw	low _USBActiveConfiguration
  7857  00204A  0100               	movlb	0	; () banked
  7858  00204C  6FAF               	movwf	_inPipes& (0+255),b
  7859  00204E  0E00               	movlw	high _USBActiveConfiguration
  7860  002050  6FB0               	movwf	(_inPipes+1)& (0+255),b
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7864  002052  81B2               	bsf	(_inPipes+3)& (0+255),0,b
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  7868  002054  0E01               	movlw	1
  7869  002056  6FB3               	movwf	(_inPipes+4)& (0+255),b
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  7873  002058  8FB2               	bsf	(_inPipes+3)& (0+255),7,b
  7874                           
  7875                           ;usb_device.c: 2725: break;
  7876  00205A  0012               	return	
  7877  00205C                     
  7878                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  7879                           
  7880                           ; BSR set to: 0
  7881  00205C  EC2C  F015         	call	_USBStdGetStatusHandler	;wreg free
  7882                           
  7883                           ;usb_device.c: 2728: break;
  7884  002060  0012               	return	
  7885  002062                     
  7886                           ;usb_device.c: 2730: case 3:
  7887                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  7888  002062  EC02  F004         	call	_USBStdFeatureReqHandler	;wreg free
  7889                           
  7890                           ;usb_device.c: 2732: break;
  7891  002066  0012               	return	
  7892  002068                     
  7893                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  7894  002068  0104               	movlb	4	; () banked
  7895  00206A  5134               	movf	52,w,b	;volatile
  7896  00206C  0D01               	mullw	1
  7897  00206E  0E1C               	movlw	low _USBAlternateInterface
  7898  002070  24F3               	addwf	prodl,w,c
  7899  002072  0100               	movlb	0	; () banked
  7900  002074  6FAF               	movwf	_inPipes& (0+255),b
  7901  002076  0E00               	movlw	high _USBAlternateInterface
  7902  002078  20F4               	addwfc	prodh,w,c
  7903  00207A  6FB0               	movwf	(_inPipes+1)& (0+255),b
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7907  00207C  81B2               	bsf	(_inPipes+3)& (0+255),0,b
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  7911  00207E  0E01               	movlw	1
  7912  002080  6FB3               	movwf	(_inPipes+4)& (0+255),b
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  7916  002082  8FB2               	bsf	(_inPipes+3)& (0+255),7,b
  7917                           
  7918                           ;usb_device.c: 2738: break;
  7919  002084  0012               	return	
  7920  002086                     l1297:
  7921                           
  7922                           ; BSR set to: 4
  7923                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  7924  002086  0100               	movlb	0	; () banked
  7925  002088  8FB2               	bsf	(_inPipes+3)& (0+255),7,b
  7926                           
  7927                           ; BSR set to: 0
  7928                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  7929  00208A  0104               	movlb	4	; () banked
  7930  00208C  5134               	movf	52,w,b	;volatile
  7931  00208E  0D01               	mullw	1
  7932  002090  0E1C               	movlw	low _USBAlternateInterface
  7933  002092  24F3               	addwf	prodl,w,c
  7934  002094  6ED9               	movwf	fsr2l,c
  7935  002096  0E00               	movlw	high _USBAlternateInterface
  7936  002098  20F4               	addwfc	prodh,w,c
  7937  00209A  6EDA               	movwf	fsr2h,c
  7938  00209C  C432 FFDF          	movff	1074,indf2	;volatile
  7939                           
  7940                           ;usb_device.c: 2742: break;
  7941  0020A0  0012               	return	
  7942  0020A2                     
  7943                           ; BSR set to: 4
  7944                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  7945                           
  7946                           ; BSR set to: 4
  7947  0020A2  0E00               	movlw	0
  7948  0020A4  0100               	movlb	0	; () banked
  7949  0020A6  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7950  0020A8  0E02               	movlw	2
  7951  0020AA  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7952  0020AC  0E00               	movlw	0
  7953  0020AE  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7954  0020B0  0E00               	movlw	0
  7955  0020B2  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7956  0020B4  0E00               	movlw	0
  7957  0020B6  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7958  0020B8  0E00               	movlw	0
  7959  0020BA  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7960  0020BC  EC00  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7961                           
  7962                           ;usb_device.c: 2749: }
  7963                           
  7964                           ;usb_device.c: 2748: break;
  7965                           
  7966                           ;usb_device.c: 2747: default:
  7967                           
  7968                           ;usb_device.c: 2746: case 12:
  7969                           
  7970                           ;usb_device.c: 2745: break;
  7971  0020C0  0012               	return	
  7972  0020C2                     l1287:
  7973  0020C2  0104               	movlb	4	; () banked
  7974  0020C4  5131               	movf	49,w,b	;volatile
  7975                           
  7976                           ; Switch size 1, requested type "space"
  7977                           ; Number of cases is 11, Range of values is 0 to 12
  7978                           ; switch strategies available:
  7979                           ; Name         Instructions Cycles
  7980                           ; simple_byte           34    18 (average)
  7981                           ;	Chosen strategy is simple_byte
  7982  0020C6  0A00               	xorlw	0	; case 0
  7983  0020C8  B4D8               	btfsc	status,2,c
  7984  0020CA  D7C8               	goto	l1293
  7985  0020CC  0A01               	xorlw	1	; case 1
  7986  0020CE  B4D8               	btfsc	status,2,c
  7987  0020D0  D7C8               	goto	l1294
  7988  0020D2  0A02               	xorlw	2	; case 3
  7989  0020D4  B4D8               	btfsc	status,2,c
  7990  0020D6  D7C5               	goto	l1294
  7991  0020D8  0A06               	xorlw	6	; case 5
  7992  0020DA  B4D8               	btfsc	status,2,c
  7993  0020DC  D7AA               	goto	l1288
  7994  0020DE  0A03               	xorlw	3	; case 6
  7995  0020E0  B4D8               	btfsc	status,2,c
  7996  0020E2  D7AC               	goto	l1290
  7997  0020E4  0A01               	xorlw	1	; case 7
  7998  0020E6  B4D8               	btfsc	status,2,c
  7999  0020E8  D7DC               	goto	l1298
  8000  0020EA  0A0F               	xorlw	15	; case 8
  8001  0020EC  B4D8               	btfsc	status,2,c
  8002  0020EE  D7AC               	goto	l1292
  8003  0020F0  0A01               	xorlw	1	; case 9
  8004  0020F2  B4D8               	btfsc	status,2,c
  8005  0020F4  D7A6               	goto	l1291
  8006  0020F6  0A03               	xorlw	3	; case 10
  8007  0020F8  B4D8               	btfsc	status,2,c
  8008  0020FA  D7B6               	goto	l1296
  8009  0020FC  0A01               	xorlw	1	; case 11
  8010  0020FE  B4D8               	btfsc	status,2,c
  8011  002100  D7C2               	goto	l1297
  8012  002102  0A07               	xorlw	7	; case 12
  8013  002104  0012               	return	
  8014  002106                     __end_of_USBCheckStdRequest:
  8015                           	opt stack 0
  8016                           tosu	equ	0xFFF
  8017                           tosh	equ	0xFFE
  8018                           tosl	equ	0xFFD
  8019                           pclath	equ	0xFFA
  8020                           tblptru	equ	0xFF8
  8021                           tblptrh	equ	0xFF7
  8022                           tblptrl	equ	0xFF6
  8023                           tablat	equ	0xFF5
  8024                           prodh	equ	0xFF4
  8025                           prodl	equ	0xFF3
  8026                           intcon	equ	0xFF2
  8027                           intcon2	equ	0xFF1
  8028                           intcon3	equ	0xFF0
  8029                           postinc0	equ	0xFEE
  8030                           plusw0	equ	0xFEB
  8031                           wreg	equ	0xFE8
  8032                           postinc1	equ	0xFE6
  8033                           postdec1	equ	0xFE5
  8034                           fsr1h	equ	0xFE2
  8035                           fsr1l	equ	0xFE1
  8036                           indf2	equ	0xFDF
  8037                           postinc2	equ	0xFDE
  8038                           postdec2	equ	0xFDD
  8039                           plusw2	equ	0xFDB
  8040                           fsr2h	equ	0xFDA
  8041                           fsr2l	equ	0xFD9
  8042                           status	equ	0xFD8
  8043                           
  8044 ;; *************** function _USBStdSetCfgHandler *****************
  8045 ;; Defined at:
  8046 ;;		line 1986 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8047 ;; Parameters:    Size  Location     Type
  8048 ;;		None
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  i               1   41[BANK0 ] unsigned char 
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  1    wreg      void 
  8053 ;; Registers used:
  8054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8063 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8064 ;;Total ram usage:        1 bytes
  8065 ;; Hardware stack levels used:    1
  8066 ;; Hardware stack levels required when called:   13
  8067 ;; This function calls:
  8068 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8069 ;;		_memset
  8070 ;; This function is called by:
  8071 ;;		_USBCheckStdRequest
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text37
  8076  001E56                     __ptext37:
  8077                           	opt stack 0
  8078  001E56                     _USBStdSetCfgHandler:
  8079                           	opt stack 10
  8080                           
  8081                           ;usb_device.c: 1988: uint8_t i;
  8082                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  8083                           
  8084                           ;incstack = 0
  8085  001E56  0100               	movlb	0	; () banked
  8086  001E58  8FB2               	bsf	(_inPipes+3)& (0+255),7,b
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  8090  001E5A  0E27               	movlw	39
  8091  001E5C  6F75               	movwf	memset@p1& (0+255),b
  8092  001E5E  0E0F               	movlw	15
  8093  001E60  6F76               	movwf	(memset@p1+1)& (0+255),b
  8094  001E62  0E00               	movlw	0
  8095  001E64  6F78               	movwf	(memset@c+1)& (0+255),b
  8096  001E66  0E00               	movlw	0
  8097  001E68  6F77               	movwf	memset@c& (0+255),b
  8098  001E6A  0E00               	movlw	0
  8099  001E6C  6F7A               	movwf	(memset@n+1)& (0+255),b
  8100  001E6E  0E02               	movlw	2
  8101  001E70  6F79               	movwf	memset@n& (0+255),b
  8102  001E72  ECC0  F01F         	call	_memset	;wreg free
  8103                           
  8104                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  8105  001E76  0E00               	movlw	0
  8106  001E78  0100               	movlb	0	; () banked
  8107  001E7A  6F75               	movwf	memset@p1& (0+255),b
  8108  001E7C  0E04               	movlw	4
  8109  001E7E  6F76               	movwf	(memset@p1+1)& (0+255),b
  8110  001E80  0E00               	movlw	0
  8111  001E82  6F78               	movwf	(memset@c+1)& (0+255),b
  8112  001E84  0E00               	movlw	0
  8113  001E86  6F77               	movwf	memset@c& (0+255),b
  8114  001E88  0E00               	movlw	0
  8115  001E8A  6F7A               	movwf	(memset@n+1)& (0+255),b
  8116  001E8C  0E30               	movlw	48
  8117  001E8E  6F79               	movwf	memset@n& (0+255),b
  8118  001E90  ECC0  F01F         	call	_memset	;wreg free
  8119                           
  8120                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  8121  001E94  8C65               	bsf	3941,6,c	;volatile
  8122                           
  8123                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  8124  001E96  0E00               	movlw	0
  8125  001E98  0100               	movlb	0	; () banked
  8126  001E9A  6F89               	movwf	USBStdSetCfgHandler@i& (0+255),b
  8127  001E9C                     l8982:
  8128                           
  8129                           ; BSR set to: 0
  8130  001E9C  0E02               	movlw	2
  8131  001E9E  6589               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  8132  001EA0  D001               	goto	l1204
  8133  001EA2  D016               	goto	u7750
  8134  001EA4                     l1204:
  8135                           
  8136                           ; BSR set to: 0
  8137                           ;usb_device.c: 2006: {
  8138                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  8139                           
  8140                           ; BSR set to: 0
  8141  001EA4  5189               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  8142  001EA6  0D01               	mullw	1
  8143  001EA8  0E0C               	movlw	low _ep_data_in
  8144  001EAA  24F3               	addwf	prodl,w,c
  8145  001EAC  6ED9               	movwf	fsr2l,c
  8146  001EAE  0E00               	movlw	high _ep_data_in
  8147  001EB0  20F4               	addwfc	prodh,w,c
  8148  001EB2  6EDA               	movwf	fsr2h,c
  8149  001EB4  0E00               	movlw	0
  8150  001EB6  6EDF               	movwf	indf2,c
  8151                           
  8152                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  8153  001EB8  5189               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  8154  001EBA  0D01               	mullw	1
  8155  001EBC  0E09               	movlw	low _ep_data_out
  8156  001EBE  24F3               	addwf	prodl,w,c
  8157  001EC0  6ED9               	movwf	fsr2l,c
  8158  001EC2  0E00               	movlw	high _ep_data_out
  8159  001EC4  20F4               	addwfc	prodh,w,c
  8160  001EC6  6EDA               	movwf	fsr2h,c
  8161  001EC8  0E00               	movlw	0
  8162  001ECA  6EDF               	movwf	indf2,c
  8163                           
  8164                           ; BSR set to: 0
  8165  001ECC  2B89               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  8166  001ECE  D7E6               	goto	l8982
  8167  001ED0                     u7750:
  8168                           
  8169                           ; BSR set to: 0
  8170                           ;usb_device.c: 2009: }
  8171                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  8172                           
  8173                           ; BSR set to: 0
  8174  001ED0  0E1C               	movlw	low _USBAlternateInterface
  8175  001ED2  6F75               	movwf	memset@p1& (0+255),b
  8176  001ED4  0E00               	movlw	high _USBAlternateInterface
  8177  001ED6  6F76               	movwf	(memset@p1+1)& (0+255),b
  8178  001ED8  0E00               	movlw	0
  8179  001EDA  6F78               	movwf	(memset@c+1)& (0+255),b
  8180  001EDC  0E00               	movlw	0
  8181  001EDE  6F77               	movwf	memset@c& (0+255),b
  8182  001EE0  0E00               	movlw	0
  8183  001EE2  6F7A               	movwf	(memset@n+1)& (0+255),b
  8184  001EE4  0E02               	movlw	2
  8185  001EE6  6F79               	movwf	memset@n& (0+255),b
  8186  001EE8  ECC0  F01F         	call	_memset	;wreg free
  8187                           
  8188                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  8189  001EEC  9C65               	bcf	3941,6,c	;volatile
  8190                           
  8191                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8192  001EEE  0E08               	movlw	8
  8193  001EF0  0100               	movlb	0	; () banked
  8194  001EF2  6FB5               	movwf	_pBDTEntryIn& (0+255),b
  8195  001EF4  0E04               	movlw	4
  8196  001EF6  6FB6               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  8200  001EF8  0E00               	movlw	0
  8201  001EFA  6FBF               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8202  001EFC  0E04               	movlw	4
  8203  001EFE  6FC0               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8204                           
  8205                           ; BSR set to: 0
  8206                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8207  001F00  C0BF  F0BD         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8208  001F04  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  8212  001F08  C432 F0DF          	movff	1074,_USBActiveConfiguration	;volatile
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  8216  001F0C  51DF               	movf	_USBActiveConfiguration& (0+255),w,b
  8217  001F0E  A4D8               	btfss	status,2,c
  8218  001F10  D003               	goto	l1206
  8219                           
  8220                           ; BSR set to: 0
  8221                           ;usb_device.c: 2028: {
  8222                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  8223  001F12  0E10               	movlw	16
  8224  001F14  6FD1               	movwf	_USBDeviceState& (0+255),b
  8225                           
  8226                           ;usb_device.c: 2031: }
  8227  001F16  0012               	return	
  8228  001F18                     l1206:
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;usb_device.c: 2032: else
  8232                           ;usb_device.c: 2033: {
  8233                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  8234                           
  8235                           ; BSR set to: 0
  8236  001F18  0E00               	movlw	0
  8237  001F1A  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8238  001F1C  0E01               	movlw	1
  8239  001F1E  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8240  001F20  0EDF               	movlw	low _USBActiveConfiguration
  8241  001F22  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8242  001F24  0E00               	movlw	high _USBActiveConfiguration
  8243  001F26  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8244  001F28  0E00               	movlw	0
  8245  001F2A  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8246  001F2C  0E01               	movlw	1
  8247  001F2E  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8248  001F30  EC00  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8249                           
  8250                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  8251  001F34  0E20               	movlw	32
  8252  001F36  0100               	movlb	0	; () banked
  8253  001F38  6FD1               	movwf	_USBDeviceState& (0+255),b
  8254  001F3A  0012               	return	
  8255  001F3C                     __end_of_USBStdSetCfgHandler:
  8256                           	opt stack 0
  8257                           tosu	equ	0xFFF
  8258                           tosh	equ	0xFFE
  8259                           tosl	equ	0xFFD
  8260                           pclath	equ	0xFFA
  8261                           tblptru	equ	0xFF8
  8262                           tblptrh	equ	0xFF7
  8263                           tblptrl	equ	0xFF6
  8264                           tablat	equ	0xFF5
  8265                           prodh	equ	0xFF4
  8266                           prodl	equ	0xFF3
  8267                           intcon	equ	0xFF2
  8268                           intcon2	equ	0xFF1
  8269                           intcon3	equ	0xFF0
  8270                           postinc0	equ	0xFEE
  8271                           plusw0	equ	0xFEB
  8272                           wreg	equ	0xFE8
  8273                           postinc1	equ	0xFE6
  8274                           postdec1	equ	0xFE5
  8275                           fsr1h	equ	0xFE2
  8276                           fsr1l	equ	0xFE1
  8277                           indf2	equ	0xFDF
  8278                           postinc2	equ	0xFDE
  8279                           postdec2	equ	0xFDD
  8280                           plusw2	equ	0xFDB
  8281                           fsr2h	equ	0xFDA
  8282                           fsr2l	equ	0xFD9
  8283                           status	equ	0xFD8
  8284                           
  8285 ;; *************** function _USBStdGetStatusHandler *****************
  8286 ;; Defined at:
  8287 ;;		line 2147 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;		None
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;  p               2   22[BANK0 ] PTR struct __BDT
  8292 ;;		 -> NULL(0), BDT(48), 
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  1    wreg      void 
  8295 ;; Registers used:
  8296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8303 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8304 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8305 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8306 ;;Total ram usage:        3 bytes
  8307 ;; Hardware stack levels used:    1
  8308 ;; Hardware stack levels required when called:    9
  8309 ;; This function calls:
  8310 ;;		Nothing
  8311 ;; This function is called by:
  8312 ;;		_USBCheckStdRequest
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           	psect	text38
  8317  002A58                     __ptext38:
  8318                           	opt stack 0
  8319  002A58                     _USBStdGetStatusHandler:
  8320                           	opt stack 14
  8321                           
  8322                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;incstack = 0
  8326  002A58  0E00               	movlw	0
  8327  002A5A  0104               	movlb	4	; () banked
  8328  002A5C  6F38               	movwf	56,b	;volatile
  8329                           
  8330                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  8331  002A5E  0E00               	movlw	0
  8332  002A60  6F39               	movwf	57,b	;volatile
  8333                           
  8334                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  8335  002A62  D03D               	goto	l1225
  8336  002A64                     l1226:
  8337                           
  8338                           ; BSR set to: 4
  8339                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
  8340  002A64  0100               	movlb	0	; () banked
  8341  002A66  8FB2               	bsf	(_inPipes+3)& (0+255),7,b
  8342                           
  8343                           ;usb_device.c: 2163: }
  8344                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
  8345                           
  8346                           ; BSR set to: 4
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;usb_device.c: 2161: {
  8350                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
  8351                           
  8352                           ;usb_device.c: 2160: if(0 == 1)
  8353  002A68  0100               	movlb	0	; () banked
  8354  002A6A  05CE               	decf	_RemoteWakeup& (0+255),w,b
  8355  002A6C  A4D8               	btfss	status,2,c
  8356  002A6E  D042               	goto	l1229
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;usb_device.c: 2166: {
  8360                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
  8361  002A70  0104               	movlb	4	; () banked
  8362  002A72  8338               	bsf	56,1,b	;volatile
  8363                           
  8364                           ; BSR set to: 4
  8365                           ;usb_device.c: 2168: }
  8366                           ;usb_device.c: 2169: break;
  8367  002A74  D03F               	goto	l1229
  8368  002A76                     l1230:
  8369                           
  8370                           ; BSR set to: 4
  8371                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
  8372  002A76  0100               	movlb	0	; () banked
  8373  002A78  8FB2               	bsf	(_inPipes+3)& (0+255),7,b
  8374                           
  8375                           ;usb_device.c: 2172: break;
  8376  002A7A  D03C               	goto	l1229
  8377  002A7C                     l1231:
  8378                           
  8379                           ; BSR set to: 4
  8380                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
  8381  002A7C  0100               	movlb	0	; () banked
  8382  002A7E  8FB2               	bsf	(_inPipes+3)& (0+255),7,b
  8383                           
  8384                           ;usb_device.c: 2178: {
  8385                           ;usb_device.c: 2179: BDT_ENTRY *p;
  8386                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
  8387  002A80  0104               	movlb	4	; () banked
  8388  002A82  BF34               	btfsc	52,7,b	;volatile
  8389  002A84  D00B               	goto	l1232
  8390                           
  8391                           ; BSR set to: 4
  8392                           ;usb_device.c: 2182: {
  8393                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  8394  002A86  5134               	movf	52,w,b	;volatile
  8395  002A88  0B0F               	andlw	15
  8396  002A8A  0100               	movlb	0	; () banked
  8397  002A8C  6F75               	movwf	??_USBStdGetStatusHandler& (0+255),b
  8398  002A8E  5175               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  8399  002A90  0D02               	mullw	2
  8400  002A92  0E00               	movlw	low _pBDTEntryOut
  8401  002A94  24F3               	addwf	prodl,w,c
  8402  002A96  6ED9               	movwf	fsr2l,c
  8403  002A98  0E01               	movlw	high _pBDTEntryOut
  8404  002A9A  D00B               	goto	L4
  8405  002A9C                     l1232:
  8406                           
  8407                           ;usb_device.c: 2185: else
  8408                           ;usb_device.c: 2186: {
  8409                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  8410                           
  8411                           ; BSR set to: 0
  8412  002A9C  0104               	movlb	4	; () banked
  8413  002A9E  5134               	movf	52,w,b	;volatile
  8414  002AA0  0B0F               	andlw	15
  8415  002AA2  0100               	movlb	0	; () banked
  8416  002AA4  6F75               	movwf	??_USBStdGetStatusHandler& (0+255),b
  8417  002AA6  5175               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  8418  002AA8  0D02               	mullw	2
  8419  002AAA  0EB5               	movlw	low _pBDTEntryIn
  8420  002AAC  24F3               	addwf	prodl,w,c
  8421  002AAE  6ED9               	movwf	fsr2l,c
  8422  002AB0  0E00               	movlw	high _pBDTEntryIn
  8423  002AB2                     L4:
  8424  002AB2  20F4               	addwfc	prodh,w,c
  8425  002AB4  6EDA               	movwf	fsr2h,c
  8426  002AB6  CFDE F076          	movff	postinc2,USBStdGetStatusHandler@p
  8427  002ABA  CFDD F077          	movff	postdec2,USBStdGetStatusHandler@p+1
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;usb_device.c: 2188: }
  8431                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  8432                           
  8433                           ; BSR set to: 0
  8434  002ABE  C076  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8435  002AC2  C077  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8436  002AC6  AEDF               	btfss	indf2,7,c
  8437  002AC8  D015               	goto	l1229
  8438                           
  8439                           ; BSR set to: 0
  8440  002ACA  C076  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8441  002ACE  C077  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8442  002AD2  A4DF               	btfss	indf2,2,c
  8443  002AD4  D00F               	goto	l1229
  8444                           
  8445                           ; BSR set to: 0
  8446                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
  8447  002AD6  0E01               	movlw	1
  8448  002AD8  0104               	movlb	4	; () banked
  8449  002ADA  6F38               	movwf	56,b	;volatile
  8450                           
  8451                           ; BSR set to: 4
  8452                           ;usb_device.c: 2193: }
  8453                           ;usb_device.c: 2194: }
  8454                           
  8455                           ; BSR set to: 4
  8456                           ;usb_device.c: 2192: break;
  8457  002ADC  D00B               	goto	l1229
  8458  002ADE                     l1225:
  8459                           
  8460                           ; BSR set to: 4
  8461                           
  8462                           ; BSR set to: 4
  8463  002ADE  5130               	movf	48,w,b	;volatile
  8464  002AE0  0B1F               	andlw	31
  8465                           
  8466                           ; Switch size 1, requested type "space"
  8467                           ; Number of cases is 3, Range of values is 0 to 2
  8468                           ; switch strategies available:
  8469                           ; Name         Instructions Cycles
  8470                           ; simple_byte           10     6 (average)
  8471                           ;	Chosen strategy is simple_byte
  8472  002AE2  0A00               	xorlw	0	; case 0
  8473  002AE4  B4D8               	btfsc	status,2,c
  8474  002AE6  D7BE               	goto	l1226
  8475  002AE8  0A01               	xorlw	1	; case 1
  8476  002AEA  B4D8               	btfsc	status,2,c
  8477  002AEC  D7C4               	goto	l1230
  8478  002AEE  0A03               	xorlw	3	; case 2
  8479  002AF0  B4D8               	btfsc	status,2,c
  8480  002AF2  D7C4               	goto	l1231
  8481  002AF4                     l1229:
  8482                           
  8483                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
  8484  002AF4  0100               	movlb	0	; () banked
  8485  002AF6  AFB2               	btfss	(_inPipes+3)& (0+255),7,b
  8486  002AF8  0012               	return	
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;usb_device.c: 2197: {
  8490                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  8491  002AFA  0E38               	movlw	56
  8492  002AFC  6FAF               	movwf	_inPipes& (0+255),b
  8493  002AFE  0E04               	movlw	4
  8494  002B00  6FB0               	movwf	(_inPipes+1)& (0+255),b
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8498  002B02  81B2               	bsf	(_inPipes+3)& (0+255),0,b
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
  8502  002B04  0E02               	movlw	2
  8503  002B06  6FB3               	movwf	(_inPipes+4)& (0+255),b
  8504  002B08  0012               	return	
  8505  002B0A                     __end_of_USBStdGetStatusHandler:
  8506                           	opt stack 0
  8507                           tosu	equ	0xFFF
  8508                           tosh	equ	0xFFE
  8509                           tosl	equ	0xFFD
  8510                           pclath	equ	0xFFA
  8511                           tblptru	equ	0xFF8
  8512                           tblptrh	equ	0xFF7
  8513                           tblptrl	equ	0xFF6
  8514                           tablat	equ	0xFF5
  8515                           prodh	equ	0xFF4
  8516                           prodl	equ	0xFF3
  8517                           intcon	equ	0xFF2
  8518                           intcon2	equ	0xFF1
  8519                           intcon3	equ	0xFF0
  8520                           postinc0	equ	0xFEE
  8521                           plusw0	equ	0xFEB
  8522                           wreg	equ	0xFE8
  8523                           postinc1	equ	0xFE6
  8524                           postdec1	equ	0xFE5
  8525                           fsr1h	equ	0xFE2
  8526                           fsr1l	equ	0xFE1
  8527                           indf2	equ	0xFDF
  8528                           postinc2	equ	0xFDE
  8529                           postdec2	equ	0xFDD
  8530                           plusw2	equ	0xFDB
  8531                           fsr2h	equ	0xFDA
  8532                           fsr2l	equ	0xFD9
  8533                           status	equ	0xFD8
  8534                           
  8535 ;; *************** function _USBStdGetDscHandler *****************
  8536 ;; Defined at:
  8537 ;;		line 2061 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;		None
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;		None
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      void 
  8544 ;; Registers used:
  8545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8553 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8554 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8555 ;;Total ram usage:        2 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; Hardware stack levels required when called:    9
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		_USBCheckStdRequest
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text39
  8566  001828                     __ptext39:
  8567                           	opt stack 0
  8568  001828                     _USBStdGetDscHandler:
  8569                           	opt stack 14
  8570                           
  8571                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;incstack = 0
  8575  001828  0E80               	movlw	128
  8576  00182A  0104               	movlb	4	; () banked
  8577  00182C  1930               	xorwf	48,w,b	;volatile
  8578  00182E  A4D8               	btfss	status,2,c
  8579  001830  0012               	return	
  8580                           
  8581                           ; BSR set to: 4
  8582                           ;usb_device.c: 2064: {
  8583                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  8584  001832  0EC0               	movlw	192
  8585  001834  0100               	movlb	0	; () banked
  8586  001836  6FB2               	movwf	(_inPipes+3)& (0+255),b
  8587                           
  8588                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
  8589  001838  D082               	goto	l1212
  8590  00183A                     
  8591                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  8592                           
  8593                           ; BSR set to: 0
  8594  00183A  0E7C               	movlw	low _device_dsc
  8595  00183C  0100               	movlb	0	; () banked
  8596  00183E  6FAF               	movwf	_inPipes& (0+255),b
  8597  001840  0EFF               	movlw	high _device_dsc
  8598  001842  6FB0               	movwf	(_inPipes+1)& (0+255),b
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
  8602  001844  0E00               	movlw	0
  8603  001846  6FB4               	movwf	(_inPipes+5)& (0+255),b
  8604  001848  0E12               	movlw	18
  8605  00184A  6FB3               	movwf	(_inPipes+4)& (0+255),b
  8606                           
  8607                           ;usb_device.c: 2076: break;
  8608  00184C  0012               	return	
  8609  00184E                     
  8610                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
  8611                           
  8612                           ; BSR set to: 0
  8613  00184E  0104               	movlb	4	; () banked
  8614  001850  5132               	movf	50,w,b	;volatile
  8615  001852  A4D8               	btfss	status,2,c
  8616  001854  D040               	goto	l1216
  8617                           
  8618                           ; BSR set to: 4
  8619                           ;usb_device.c: 2082: {
  8620                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  8621  001856  5132               	movf	50,w,b	;volatile
  8622  001858  0D02               	mullw	2
  8623  00185A  0E65               	movlw	low _USB_CD_Ptr
  8624  00185C  24F3               	addwf	prodl,w,c
  8625  00185E  6EF6               	movwf	tblptrl,c
  8626  001860  0EFD               	movlw	high _USB_CD_Ptr
  8627  001862  20F4               	addwfc	prodh,w,c
  8628  001864  6EF7               	movwf	tblptrh,c
  8629  001866                     	if	0	;There are less than 3 active tblptr bytes
  8630  001866                     	endif
  8631  001866  0009               	tblrd		*+
  8632  001868  CFF5 F0AF          	movff	tablat,_inPipes
  8633  00186C  000A               	tblrd		*-
  8634  00186E  CFF5 F0B0          	movff	tablat,_inPipes+1
  8635                           
  8636                           ; BSR set to: 4
  8637                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  8638  001872  0E02               	movlw	2
  8639  001874  0100               	movlb	0	; () banked
  8640  001876  25AF               	addwf	_inPipes& (0+255),w,b
  8641  001878  6F75               	movwf	??_USBStdGetDscHandler& (0+255),b
  8642  00187A  0E00               	movlw	0
  8643  00187C  21B0               	addwfc	(_inPipes+1)& (0+255),w,b
  8644  00187E  6F76               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  8645  001880  C075  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  8646  001884  C076  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  8647  001888  6AF8               	clrf	tblptru,c
  8648  00188A  0E0E               	movlw	(high __ramtop+-1)
  8649  00188C  64F7               	cpfsgt	tblptrh,c
  8650  00188E  D003               	bra	u4287
  8651  001890  0008               	tblrd		*
  8652  001892  50F5               	movf	tablat,w,c
  8653  001894  D005               	bra	u4280
  8654  001896                     u4287:
  8655  001896  CFF6 FFE9          	movff	tblptrl,fsr0l
  8656  00189A  CFF7 FFEA          	movff	tblptrh,fsr0h
  8657  00189E  50EF               	movf	indf0,w,c
  8658  0018A0                     u4280:
  8659  0018A0  0100               	movlb	0	; () banked
  8660  0018A2  6FB3               	movwf	(_inPipes+4)& (0+255),b
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  8664  0018A4  0E03               	movlw	3
  8665  0018A6  25AF               	addwf	_inPipes& (0+255),w,b
  8666  0018A8  6F75               	movwf	??_USBStdGetDscHandler& (0+255),b
  8667  0018AA  0E00               	movlw	0
  8668  0018AC  21B0               	addwfc	(_inPipes+1)& (0+255),w,b
  8669  0018AE  6F76               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  8670  0018B0  C075  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  8671  0018B4  C076  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  8672  0018B8  6AF8               	clrf	tblptru,c
  8673  0018BA  0E0E               	movlw	(high __ramtop+-1)
  8674  0018BC  64F7               	cpfsgt	tblptrh,c
  8675  0018BE  D003               	bra	u4297
  8676  0018C0  0008               	tblrd		*
  8677  0018C2  50F5               	movf	tablat,w,c
  8678  0018C4  D005               	bra	u4290
  8679  0018C6                     u4297:
  8680  0018C6  CFF6 FFE9          	movff	tblptrl,fsr0l
  8681  0018CA  CFF7 FFEA          	movff	tblptrh,fsr0h
  8682  0018CE  50EF               	movf	indf0,w,c
  8683  0018D0                     u4290:
  8684  0018D0  0100               	movlb	0	; () banked
  8685  0018D2  6FB4               	movwf	(_inPipes+5)& (0+255),b
  8686                           
  8687                           ;usb_device.c: 2094: }
  8688  0018D4  0012               	return	
  8689  0018D6                     l1216:
  8690                           
  8691                           ;usb_device.c: 2095: else
  8692                           ;usb_device.c: 2096: {
  8693                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
  8694                           
  8695                           ; BSR set to: 0
  8696  0018D6  0E00               	movlw	0
  8697  0018D8  0100               	movlb	0	; () banked
  8698  0018DA  6FB2               	movwf	(_inPipes+3)& (0+255),b
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;usb_device.c: 2098: }
  8702                           ;usb_device.c: 2099: break;
  8703  0018DC  0012               	return	
  8704  0018DE                     
  8705                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
  8706                           
  8707                           ; BSR set to: 0
  8708  0018DE  0E03               	movlw	3
  8709  0018E0  0104               	movlb	4	; () banked
  8710  0018E2  6132               	cpfslt	50,b	;volatile
  8711  0018E4  D024               	goto	l1219
  8712                           
  8713                           ; BSR set to: 4
  8714                           ;usb_device.c: 2105: {
  8715                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  8716  0018E6  5132               	movf	50,w,b	;volatile
  8717  0018E8  0D02               	mullw	2
  8718  0018EA  0E5F               	movlw	low _USB_SD_Ptr
  8719  0018EC  24F3               	addwf	prodl,w,c
  8720  0018EE  6EF6               	movwf	tblptrl,c
  8721  0018F0  0EFD               	movlw	high _USB_SD_Ptr
  8722  0018F2  20F4               	addwfc	prodh,w,c
  8723  0018F4  6EF7               	movwf	tblptrh,c
  8724  0018F6                     	if	0	;There are less than 3 active tblptr bytes
  8725  0018F6                     	endif
  8726  0018F6  0009               	tblrd		*+
  8727  0018F8  CFF5 F0AF          	movff	tablat,_inPipes
  8728  0018FC  000A               	tblrd		*-
  8729  0018FE  CFF5 F0B0          	movff	tablat,_inPipes+1
  8730                           
  8731                           ; BSR set to: 4
  8732                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  8733  001902  C0AF  FFF6         	movff	_inPipes,tblptrl
  8734  001906  C0B0  FFF7         	movff	_inPipes+1,tblptrh
  8735  00190A  6AF8               	clrf	tblptru,c
  8736  00190C  0E0E               	movlw	(high __ramtop+-1)
  8737  00190E  64F7               	cpfsgt	tblptrh,c
  8738  001910  D003               	bra	u4317
  8739  001912  0008               	tblrd		*
  8740  001914  50F5               	movf	tablat,w,c
  8741  001916  D005               	bra	u4310
  8742  001918                     u4317:
  8743  001918  CFF6 FFE9          	movff	tblptrl,fsr0l
  8744  00191C  CFF7 FFEA          	movff	tblptrh,fsr0h
  8745  001920  50EF               	movf	indf0,w,c
  8746  001922                     u4310:
  8747  001922  0100               	movlb	0	; () banked
  8748  001924  6F75               	movwf	??_USBStdGetDscHandler& (0+255),b
  8749  001926  5175               	movf	??_USBStdGetDscHandler& (0+255),w,b
  8750  001928  6FB3               	movwf	(_inPipes+4)& (0+255),b
  8751  00192A  6BB4               	clrf	(_inPipes+5)& (0+255),b
  8752                           
  8753                           ;usb_device.c: 2110: }
  8754  00192C  0012               	return	
  8755  00192E                     l1219:
  8756                           
  8757                           ;usb_device.c: 2120: else
  8758                           ;usb_device.c: 2121: {
  8759                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
  8760                           
  8761                           ; BSR set to: 0
  8762  00192E  0E00               	movlw	0
  8763  001930  0100               	movlb	0	; () banked
  8764  001932  6FB2               	movwf	(_inPipes+3)& (0+255),b
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;usb_device.c: 2123: }
  8768                           ;usb_device.c: 2124: break;
  8769  001934  0012               	return	
  8770  001936                     
  8771                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
  8772                           
  8773                           ; BSR set to: 0
  8774  001936  0E00               	movlw	0
  8775  001938  0100               	movlb	0	; () banked
  8776  00193A  6FB2               	movwf	(_inPipes+3)& (0+255),b
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;usb_device.c: 2128: }
  8780                           
  8781                           ;usb_device.c: 2127: break;
  8782  00193C  0012               	return	
  8783  00193E                     l1212:
  8784                           
  8785                           ; BSR set to: 0
  8786                           
  8787                           ; BSR set to: 0
  8788  00193E  0104               	movlb	4	; () banked
  8789  001940  5133               	movf	51,w,b	;volatile
  8790                           
  8791                           ; Switch size 1, requested type "space"
  8792                           ; Number of cases is 3, Range of values is 1 to 3
  8793                           ; switch strategies available:
  8794                           ; Name         Instructions Cycles
  8795                           ; simple_byte           10     6 (average)
  8796                           ;	Chosen strategy is simple_byte
  8797  001942  0A01               	xorlw	1	; case 1
  8798  001944  B4D8               	btfsc	status,2,c
  8799  001946  D779               	goto	l1213
  8800  001948  0A03               	xorlw	3	; case 2
  8801  00194A  B4D8               	btfsc	status,2,c
  8802  00194C  D780               	goto	l1215
  8803  00194E  0A01               	xorlw	1	; case 3
  8804  001950  B4D8               	btfsc	status,2,c
  8805  001952  D7C5               	goto	l1218
  8806  001954  D7F0               	goto	l1221
  8807  001956                     __end_of_USBStdGetDscHandler:
  8808                           	opt stack 0
  8809                           tosu	equ	0xFFF
  8810                           tosh	equ	0xFFE
  8811                           tosl	equ	0xFFD
  8812                           pclath	equ	0xFFA
  8813                           tblptru	equ	0xFF8
  8814                           tblptrh	equ	0xFF7
  8815                           tblptrl	equ	0xFF6
  8816                           tablat	equ	0xFF5
  8817                           prodh	equ	0xFF4
  8818                           prodl	equ	0xFF3
  8819                           intcon	equ	0xFF2
  8820                           intcon2	equ	0xFF1
  8821                           intcon3	equ	0xFF0
  8822                           indf0	equ	0xFEF
  8823                           postinc0	equ	0xFEE
  8824                           plusw0	equ	0xFEB
  8825                           fsr0h	equ	0xFEA
  8826                           fsr0l	equ	0xFE9
  8827                           wreg	equ	0xFE8
  8828                           postinc1	equ	0xFE6
  8829                           postdec1	equ	0xFE5
  8830                           fsr1h	equ	0xFE2
  8831                           fsr1l	equ	0xFE1
  8832                           indf2	equ	0xFDF
  8833                           postinc2	equ	0xFDE
  8834                           postdec2	equ	0xFDD
  8835                           plusw2	equ	0xFDB
  8836                           fsr2h	equ	0xFDA
  8837                           fsr2l	equ	0xFD9
  8838                           status	equ	0xFD8
  8839                           
  8840 ;; *************** function _USBStdFeatureReqHandler *****************
  8841 ;; Defined at:
  8842 ;;		line 2771 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8843 ;; Parameters:    Size  Location     Type
  8844 ;;		None
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;  p               2   45[BANK0 ] PTR struct __BDT
  8847 ;;		 -> NULL(0), BDT(48), 
  8848 ;;  pUEP            2   42[BANK0 ] PTR unsigned char 
  8849 ;;		 -> UEP0(1), 
  8850 ;;  current_ep_d    1   44[BANK0 ] struct .
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8861 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8862 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8863 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8864 ;;Total ram usage:        6 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; Hardware stack levels required when called:   13
  8867 ;; This function calls:
  8868 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8869 ;; This function is called by:
  8870 ;;		_USBCheckStdRequest
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           	psect	text40
  8875  000804                     __ptext40:
  8876                           	opt stack 0
  8877  000804                     _USBStdFeatureReqHandler:
  8878                           	opt stack 10
  8879                           
  8880                           ;usb_device.c: 2773: BDT_ENTRY *p;
  8881                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
  8882                           ;usb_device.c: 2778: unsigned char* pUEP;
  8883                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
  8884                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
  8885                           
  8886                           ;incstack = 0
  8887  000804  0104               	movlb	4	; () banked
  8888  000806  0532               	decf	50,w,b	;volatile
  8889  000808  A4D8               	btfss	status,2,c
  8890  00080A  D011               	goto	l1305
  8891                           
  8892                           ; BSR set to: 4
  8893  00080C  5130               	movf	48,w,b	;volatile
  8894  00080E  0B1F               	andlw	31
  8895  000810  0900               	iorlw	0
  8896  000812  A4D8               	btfss	status,2,c
  8897  000814  D00C               	goto	l1305
  8898                           
  8899                           ; BSR set to: 4
  8900                           ;usb_device.c: 2818: {
  8901                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
  8902  000816  0100               	movlb	0	; () banked
  8903  000818  8FB2               	bsf	(_inPipes+3)& (0+255),7,b
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
  8907  00081A  0E03               	movlw	3
  8908  00081C  0104               	movlb	4	; () banked
  8909  00081E  1931               	xorwf	49,w,b	;volatile
  8910  000820  A4D8               	btfss	status,2,c
  8911  000822  D002               	goto	l1304
  8912                           
  8913                           ; BSR set to: 4
  8914                           ;usb_device.c: 2821: RemoteWakeup = 1;
  8915  000824  0E01               	movlw	1
  8916  000826  D001               	goto	L5
  8917  000828                     l1304:
  8918                           
  8919                           ;usb_device.c: 2822: else
  8920                           ;usb_device.c: 2823: RemoteWakeup = 0;
  8921                           
  8922                           ; BSR set to: 0
  8923  000828  0E00               	movlw	0
  8924  00082A                     L5:
  8925  00082A  0100               	movlb	0	; () banked
  8926  00082C  6FCE               	movwf	_RemoteWakeup& (0+255),b
  8927  00082E                     l1305:
  8928                           
  8929                           ;usb_device.c: 2824: }
  8930                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
  8931                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
  8932                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  8933                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
  8934                           
  8935                           ; BSR set to: 0
  8936  00082E  0104               	movlb	4	; () banked
  8937  000830  5132               	movf	50,w,b	;volatile
  8938  000832  A4D8               	btfss	status,2,c
  8939  000834  0012               	return	
  8940                           
  8941                           ; BSR set to: 4
  8942  000836  5130               	movf	48,w,b	;volatile
  8943  000838  0B1F               	andlw	31
  8944  00083A  0A02               	xorlw	2
  8945  00083C  A4D8               	btfss	status,2,c
  8946  00083E  0012               	return	
  8947                           
  8948                           ; BSR set to: 4
  8949  000840  5134               	movf	52,w,b	;volatile
  8950  000842  0B0F               	andlw	15
  8951  000844  0900               	iorlw	0
  8952  000846  B4D8               	btfsc	status,2,c
  8953  000848  0012               	return	
  8954                           
  8955                           ; BSR set to: 4
  8956  00084A  5134               	movf	52,w,b	;volatile
  8957  00084C  0B0F               	andlw	15
  8958  00084E  0100               	movlb	0	; () banked
  8959  000850  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  8960  000852  0E03               	movlw	3
  8961  000854  6189               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
  8962  000856  0012               	return	
  8963                           
  8964                           ; BSR set to: 0
  8965  000858  0E20               	movlw	32
  8966  00085A  19D1               	xorwf	_USBDeviceState& (0+255),w,b
  8967  00085C  A4D8               	btfss	status,2,c
  8968  00085E  0012               	return	
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;usb_device.c: 2831: {
  8972                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
  8973  000860  8FB2               	bsf	(_inPipes+3)& (0+255),7,b
  8974                           
  8975                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
  8976  000862  0104               	movlb	4	; () banked
  8977  000864  BF34               	btfsc	52,7,b	;volatile
  8978  000866  D01C               	goto	l1307
  8979                           
  8980                           ; BSR set to: 4
  8981                           ;usb_device.c: 2838: {
  8982                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  8983  000868  5134               	movf	52,w,b	;volatile
  8984  00086A  0B0F               	andlw	15
  8985  00086C  0100               	movlb	0	; () banked
  8986  00086E  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  8987  000870  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  8988  000872  0D02               	mullw	2
  8989  000874  0E00               	movlw	low _pBDTEntryOut
  8990  000876  24F3               	addwf	prodl,w,c
  8991  000878  6ED9               	movwf	fsr2l,c
  8992  00087A  0E01               	movlw	high _pBDTEntryOut
  8993  00087C  20F4               	addwfc	prodh,w,c
  8994  00087E  6EDA               	movwf	fsr2h,c
  8995  000880  CFDE F08D          	movff	postinc2,USBStdFeatureReqHandler@p
  8996  000884  CFDD F08E          	movff	postdec2,USBStdFeatureReqHandler@p+1
  8997                           
  8998                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  8999  000888  0104               	movlb	4	; () banked
  9000  00088A  5134               	movf	52,w,b	;volatile
  9001  00088C  0B0F               	andlw	15
  9002  00088E  0100               	movlb	0	; () banked
  9003  000890  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9004  000892  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9005  000894  0D01               	mullw	1
  9006  000896  0E09               	movlw	low _ep_data_out
  9007  000898  24F3               	addwf	prodl,w,c
  9008  00089A  6ED9               	movwf	fsr2l,c
  9009  00089C  0E00               	movlw	high _ep_data_out
  9010  00089E  D01C               	goto	L6
  9011  0008A0                     l1307:
  9012                           
  9013                           ;usb_device.c: 2842: else
  9014                           ;usb_device.c: 2843: {
  9015                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  9016                           
  9017                           ; BSR set to: 0
  9018  0008A0  0104               	movlb	4	; () banked
  9019  0008A2  5134               	movf	52,w,b	;volatile
  9020  0008A4  0B0F               	andlw	15
  9021  0008A6  0100               	movlb	0	; () banked
  9022  0008A8  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9023  0008AA  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9024  0008AC  0D02               	mullw	2
  9025  0008AE  0EB5               	movlw	low _pBDTEntryIn
  9026  0008B0  24F3               	addwf	prodl,w,c
  9027  0008B2  6ED9               	movwf	fsr2l,c
  9028  0008B4  0E00               	movlw	high _pBDTEntryIn
  9029  0008B6  20F4               	addwfc	prodh,w,c
  9030  0008B8  6EDA               	movwf	fsr2h,c
  9031  0008BA  CFDE F08D          	movff	postinc2,USBStdFeatureReqHandler@p
  9032  0008BE  CFDD F08E          	movff	postdec2,USBStdFeatureReqHandler@p+1
  9033                           
  9034                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  9035  0008C2  0104               	movlb	4	; () banked
  9036  0008C4  5134               	movf	52,w,b	;volatile
  9037  0008C6  0B0F               	andlw	15
  9038  0008C8  0100               	movlb	0	; () banked
  9039  0008CA  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9040  0008CC  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9041  0008CE  0D01               	mullw	1
  9042  0008D0  0E0C               	movlw	low _ep_data_in
  9043  0008D2  24F3               	addwf	prodl,w,c
  9044  0008D4  6ED9               	movwf	fsr2l,c
  9045  0008D6  0E00               	movlw	high _ep_data_in
  9046  0008D8                     L6:
  9047  0008D8  20F4               	addwfc	prodh,w,c
  9048  0008DA  6EDA               	movwf	fsr2h,c
  9049  0008DC  50DF               	movf	indf2,w,c
  9050  0008DE  6F8C               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;usb_device.c: 2846: }
  9054                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
  9055                           
  9056                           ; BSR set to: 0
  9057  0008E0  B18C               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
  9058  0008E2  D002               	goto	l1309
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;usb_device.c: 2853: {
  9062                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  9063  0008E4  958D               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
  9064                           
  9065                           ;usb_device.c: 2855: }
  9066  0008E6  D001               	goto	l1310
  9067  0008E8                     l1309:
  9068                           
  9069                           ; BSR set to: 0
  9070                           ;usb_device.c: 2856: else
  9071                           ;usb_device.c: 2857: {
  9072                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  9073                           
  9074                           ; BSR set to: 0
  9075  0008E8  858D               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
  9076  0008EA                     l1310:
  9077                           
  9078                           ; BSR set to: 0
  9079                           ;usb_device.c: 2859: }
  9080                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
  9081                           
  9082                           ; BSR set to: 0
  9083  0008EA  0104               	movlb	4	; () banked
  9084  0008EC  BF34               	btfsc	52,7,b	;volatile
  9085  0008EE  D00B               	goto	l1311
  9086                           
  9087                           ; BSR set to: 4
  9088                           ;usb_device.c: 2865: {
  9089                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9090  0008F0  5134               	movf	52,w,b	;volatile
  9091  0008F2  0B0F               	andlw	15
  9092  0008F4  0100               	movlb	0	; () banked
  9093  0008F6  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9094  0008F8  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9095  0008FA  0D02               	mullw	2
  9096  0008FC  0E00               	movlw	low _pBDTEntryOut
  9097  0008FE  24F3               	addwf	prodl,w,c
  9098  000900  6ED9               	movwf	fsr2l,c
  9099  000902  0E01               	movlw	high _pBDTEntryOut
  9100  000904  D00B               	goto	L7
  9101  000906                     l1311:
  9102                           
  9103                           ;usb_device.c: 2868: else
  9104                           ;usb_device.c: 2869: {
  9105                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9106                           
  9107                           ; BSR set to: 0
  9108  000906  0104               	movlb	4	; () banked
  9109  000908  5134               	movf	52,w,b	;volatile
  9110  00090A  0B0F               	andlw	15
  9111  00090C  0100               	movlb	0	; () banked
  9112  00090E  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9113  000910  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9114  000912  0D02               	mullw	2
  9115  000914  0EB5               	movlw	low _pBDTEntryIn
  9116  000916  24F3               	addwf	prodl,w,c
  9117  000918  6ED9               	movwf	fsr2l,c
  9118  00091A  0E00               	movlw	high _pBDTEntryIn
  9119  00091C                     L7:
  9120  00091C  20F4               	addwfc	prodh,w,c
  9121  00091E  6EDA               	movwf	fsr2h,c
  9122  000920  C08D  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  9123  000924  C08E  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;usb_device.c: 2871: }
  9127                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
  9128                           
  9129                           ; BSR set to: 0
  9130  000928  0E03               	movlw	3
  9131  00092A  0104               	movlb	4	; () banked
  9132  00092C  1931               	xorwf	49,w,b	;volatile
  9133  00092E  A4D8               	btfss	status,2,c
  9134  000930  D030               	goto	l1313
  9135                           
  9136                           ; BSR set to: 4
  9137                           ;usb_device.c: 2875: {
  9138                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
  9139  000932  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9140  000936  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9141  00093A  0100               	movlb	0	; () banked
  9142  00093C  AEDF               	btfss	indf2,7,c
  9143  00093E  D01C               	goto	l1316
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;usb_device.c: 2877: {
  9147                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
  9148  000940  0104               	movlb	4	; () banked
  9149  000942  BF34               	btfsc	52,7,b	;volatile
  9150  000944  D00B               	goto	l1315
  9151                           
  9152                           ; BSR set to: 4
  9153                           ;usb_device.c: 2881: {
  9154                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9155  000946  5134               	movf	52,w,b	;volatile
  9156  000948  0B0F               	andlw	15
  9157  00094A  0100               	movlb	0	; () banked
  9158  00094C  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9159  00094E  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9160  000950  0D01               	mullw	1
  9161  000952  0E09               	movlw	low _ep_data_out
  9162  000954  24F3               	addwf	prodl,w,c
  9163  000956  6ED9               	movwf	fsr2l,c
  9164  000958  0E00               	movlw	high _ep_data_out
  9165  00095A  D00B               	goto	L8
  9166  00095C                     l1315:
  9167                           
  9168                           ;usb_device.c: 2884: else
  9169                           ;usb_device.c: 2885: {
  9170                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9171                           
  9172                           ; BSR set to: 0
  9173  00095C  0104               	movlb	4	; () banked
  9174  00095E  5134               	movf	52,w,b	;volatile
  9175  000960  0B0F               	andlw	15
  9176  000962  0100               	movlb	0	; () banked
  9177  000964  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9178  000966  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9179  000968  0D01               	mullw	1
  9180  00096A  0E0C               	movlw	low _ep_data_in
  9181  00096C  24F3               	addwf	prodl,w,c
  9182  00096E  6ED9               	movwf	fsr2l,c
  9183  000970  0E00               	movlw	high _ep_data_in
  9184  000972                     L8:
  9185  000972  20F4               	addwfc	prodh,w,c
  9186  000974  6EDA               	movwf	fsr2h,c
  9187  000976  82DF               	bsf	indf2,1,c
  9188  000978                     l1316:
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;usb_device.c: 2887: }
  9192                           ;usb_device.c: 2888: }
  9193                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
  9194                           
  9195                           ; BSR set to: 0
  9196                           
  9197                           ; BSR set to: 0
  9198  000978  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9199  00097C  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9200  000980  0E00               	movlw	0
  9201  000982  84DB               	bsf	plusw2,2,c
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
  9205  000984  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9206  000988  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9207  00098C  0E00               	movlw	0
  9208  00098E  8EDB               	bsf	plusw2,7,c
  9209                           
  9210                           ;usb_device.c: 2893: }
  9211  000990  0012               	return	
  9212  000992                     l1313:
  9213                           
  9214                           ;usb_device.c: 2894: else
  9215                           ;usb_device.c: 2895: {
  9216                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  9217                           
  9218                           ; BSR set to: 0
  9219  000992  0E04               	movlw	4
  9220  000994  0100               	movlb	0	; () banked
  9221  000996  1B8D               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  9222                           
  9223                           ; BSR set to: 0
  9224                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
  9225  000998  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9226  00099C  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9227  0009A0  AEDF               	btfss	indf2,7,c
  9228  0009A2  D01B               	goto	l1318
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;usb_device.c: 2902: {
  9232                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
  9233  0009A4  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9234  0009A8  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9235  0009AC  0E7F               	movlw	127
  9236  0009AE  16DF               	andwf	indf2,f,c
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
  9240  0009B0  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9241  0009B4  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9242  0009B8  0E00               	movlw	0
  9243  0009BA  8CDB               	bsf	plusw2,6,c
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9247  0009BC  0E00               	movlw	0
  9248  0009BE  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9249  0009C0  0E05               	movlw	5
  9250  0009C2  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9251  0009C4  C08D  F083         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9252  0009C8  C08E  F084         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9253  0009CC  0E00               	movlw	0
  9254  0009CE  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9255  0009D0  0E02               	movlw	2
  9256  0009D2  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9257  0009D4  EC00  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9258                           
  9259                           ;usb_device.c: 2908: }
  9260  0009D8  D006               	goto	l1319
  9261  0009DA                     l1318:
  9262                           
  9263                           ;usb_device.c: 2909: else
  9264                           ;usb_device.c: 2910: {
  9265                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
  9266  0009DA  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9267  0009DE  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9268  0009E2  0E00               	movlw	0
  9269  0009E4  8CDB               	bsf	plusw2,6,c
  9270  0009E6                     l1319:
  9271                           
  9272                           ;usb_device.c: 2913: }
  9273                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  9274  0009E6  0E04               	movlw	4
  9275  0009E8  0100               	movlb	0	; () banked
  9276  0009EA  1B8D               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  9280  0009EC  B38C               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
  9281  0009EE  D006               	goto	u7930
  9282                           
  9283                           ; BSR set to: 0
  9284  0009F0  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9285  0009F4  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9286  0009F8  AEDF               	btfss	indf2,7,c
  9287  0009FA  D031               	goto	l1320
  9288  0009FC                     u7930:
  9289                           
  9290                           ; BSR set to: 0
  9291                           ;usb_device.c: 2924: {
  9292                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
  9293  0009FC  0104               	movlb	4	; () banked
  9294  0009FE  BF34               	btfsc	52,7,b	;volatile
  9295  000A00  D00B               	goto	l1323
  9296                           
  9297                           ; BSR set to: 4
  9298                           ;usb_device.c: 2926: {
  9299                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9300  000A02  5134               	movf	52,w,b	;volatile
  9301  000A04  0B0F               	andlw	15
  9302  000A06  0100               	movlb	0	; () banked
  9303  000A08  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9304  000A0A  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9305  000A0C  0D01               	mullw	1
  9306  000A0E  0E09               	movlw	low _ep_data_out
  9307  000A10  24F3               	addwf	prodl,w,c
  9308  000A12  6ED9               	movwf	fsr2l,c
  9309  000A14  0E00               	movlw	high _ep_data_out
  9310  000A16  D00B               	goto	L9
  9311  000A18                     l1323:
  9312                           
  9313                           ;usb_device.c: 2929: else
  9314                           ;usb_device.c: 2930: {
  9315                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9316                           
  9317                           ; BSR set to: 0
  9318  000A18  0104               	movlb	4	; () banked
  9319  000A1A  5134               	movf	52,w,b	;volatile
  9320  000A1C  0B0F               	andlw	15
  9321  000A1E  0100               	movlb	0	; () banked
  9322  000A20  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9323  000A22  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9324  000A24  0D01               	mullw	1
  9325  000A26  0E0C               	movlw	low _ep_data_in
  9326  000A28  24F3               	addwf	prodl,w,c
  9327  000A2A  6ED9               	movwf	fsr2l,c
  9328  000A2C  0E00               	movlw	high _ep_data_in
  9329  000A2E                     L9:
  9330  000A2E  20F4               	addwfc	prodh,w,c
  9331  000A30  6EDA               	movwf	fsr2h,c
  9332  000A32  92DF               	bcf	indf2,1,c
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;usb_device.c: 2932: }
  9336                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9337                           
  9338                           ; BSR set to: 0
  9339  000A34  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9340  000A38  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9341  000A3C  0E3B               	movlw	59
  9342  000A3E  16DF               	andwf	indf2,f,c
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9346  000A40  0E00               	movlw	0
  9347  000A42  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9348  000A44  0E05               	movlw	5
  9349  000A46  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9350  000A48  C08D  F083         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9351  000A4C  C08E  F084         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9352  000A50  0E00               	movlw	0
  9353  000A52  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9354  000A54  0E02               	movlw	2
  9355  000A56  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9356  000A58  EC00  F01C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9357                           
  9358                           ;usb_device.c: 2938: }
  9359  000A5C  D006               	goto	l1325
  9360  000A5E                     l1320:
  9361                           
  9362                           ;usb_device.c: 2939: else
  9363                           ;usb_device.c: 2940: {
  9364                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9365  000A5E  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9366  000A62  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9367  000A66  0E3B               	movlw	59
  9368  000A68  16DF               	andwf	indf2,f,c
  9369  000A6A                     l1325:
  9370                           
  9371                           ;usb_device.c: 2943: }
  9372                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  9373  000A6A  0104               	movlb	4	; () banked
  9374  000A6C  5134               	movf	52,w,b	;volatile
  9375  000A6E  0B0F               	andlw	15
  9376  000A70  0100               	movlb	0	; () banked
  9377  000A72  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9378  000A74  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9379  000A76  0D01               	mullw	1
  9380  000A78  0E26               	movlw	38
  9381  000A7A  24F3               	addwf	prodl,w,c
  9382  000A7C  6F8A               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
  9383  000A7E  0E0F               	movlw	15
  9384  000A80  20F4               	addwfc	prodh,w,c
  9385  000A82  6F8B               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
  9389  000A84  C08A  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  9390  000A88  C08B  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  9391  000A8C  0EFE               	movlw	254
  9392  000A8E  16DF               	andwf	indf2,f,c
  9393                           
  9394                           ; BSR set to: 0
  9395  000A90  0012               	return	
  9396  000A92                     __end_of_USBStdFeatureReqHandler:
  9397                           	opt stack 0
  9398                           tosu	equ	0xFFF
  9399                           tosh	equ	0xFFE
  9400                           tosl	equ	0xFFD
  9401                           pclath	equ	0xFFA
  9402                           tblptru	equ	0xFF8
  9403                           tblptrh	equ	0xFF7
  9404                           tblptrl	equ	0xFF6
  9405                           tablat	equ	0xFF5
  9406                           prodh	equ	0xFF4
  9407                           prodl	equ	0xFF3
  9408                           intcon	equ	0xFF2
  9409                           intcon2	equ	0xFF1
  9410                           intcon3	equ	0xFF0
  9411                           indf0	equ	0xFEF
  9412                           postinc0	equ	0xFEE
  9413                           plusw0	equ	0xFEB
  9414                           fsr0h	equ	0xFEA
  9415                           fsr0l	equ	0xFE9
  9416                           wreg	equ	0xFE8
  9417                           postinc1	equ	0xFE6
  9418                           postdec1	equ	0xFE5
  9419                           fsr1h	equ	0xFE2
  9420                           fsr1l	equ	0xFE1
  9421                           indf2	equ	0xFDF
  9422                           postinc2	equ	0xFDE
  9423                           postdec2	equ	0xFDD
  9424                           plusw2	equ	0xFDB
  9425                           fsr2h	equ	0xFDA
  9426                           fsr2l	equ	0xFD9
  9427                           status	equ	0xFD8
  9428                           
  9429 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  9430 ;; Defined at:
  9431 ;;		line 104 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;  event           2   33[BANK0 ] enum E8223
  9434 ;;  pdata           2   35[BANK0 ] PTR void 
  9435 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
  9436 ;;  size            2   37[BANK0 ] unsigned int 
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;		None
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  1    wreg      unsigned char 
  9441 ;; Registers used:
  9442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9448 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9450 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9451 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9452 ;;Total ram usage:        8 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; Hardware stack levels required when called:   12
  9455 ;; This function calls:
  9456 ;;		_CDCInitEP
  9457 ;;		_USBCheckCDCRequest
  9458 ;; This function is called by:
  9459 ;;		_USBDeviceTasks
  9460 ;;		_USBStdSetCfgHandler
  9461 ;;		_USBSuspend
  9462 ;;		_USBWakeFromSuspend
  9463 ;;		_USBCtrlTrfSetupHandler
  9464 ;;		_USBCheckStdRequest
  9465 ;;		_USBStdFeatureReqHandler
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           	psect	text41
  9470  003800                     __ptext41:
  9471                           	opt stack 0
  9472  003800                     _USER_USB_CALLBACK_EVENT_HANDLER:
  9473                           	opt stack 14
  9474                           
  9475                           ;usb_device_mgr.c: 106: switch( (int) event )
  9476                           
  9477                           ;incstack = 0
  9478  003800  D006               	goto	l1479
  9479  003802                     
  9480                           ;usb_device_mgr.c: 134: CDCInitEP();
  9481  003802  EC68  F01B         	call	_CDCInitEP	;wreg free
  9482                           
  9483                           ;usb_device_mgr.c: 142: break;
  9484                           
  9485                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
  9486                           
  9487                           ;usb_device_mgr.c: 139: break;
  9488  003806  0012               	return	
  9489  003808                     
  9490                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
  9491  003808  EC85  F015         	call	_USBCheckCDCRequest	;wreg free
  9492                           
  9493                           ;usb_device_mgr.c: 163: }
  9494                           
  9495                           ;usb_device_mgr.c: 162: break;
  9496                           
  9497                           ;usb_device_mgr.c: 161: default:
  9498                           
  9499                           ;usb_device_mgr.c: 159: break;
  9500                           
  9501                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
  9502                           
  9503                           ;usb_device_mgr.c: 156: break;
  9504                           
  9505                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
  9506                           
  9507                           ;usb_device_mgr.c: 153: break;
  9508  00380C  0012               	return	
  9509  00380E                     l1479:
  9510  00380E  C081  F087         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  9511  003812  C082  F088         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  9512                           
  9513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9514                           ; Switch size 1, requested type "space"
  9515                           ; Number of cases is 2, Range of values is 0 to 127
  9516                           ; switch strategies available:
  9517                           ; Name         Instructions Cycles
  9518                           ; simple_byte            7     4 (average)
  9519                           ;	Chosen strategy is simple_byte
  9520  003816  0100               	movlb	0	; () banked
  9521  003818  5188               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
  9522  00381A  0A00               	xorlw	0	; case 0
  9523  00381C  B4D8               	btfsc	status,2,c
  9524  00381E  D004               	goto	l10722
  9525  003820  0A7F               	xorlw	127	; case 127
  9526  003822  A4D8               	btfss	status,2,c
  9527  003824  0012               	return	
  9528  003826  D018               	goto	l10724
  9529  003828                     l10722:
  9530                           
  9531                           ; BSR set to: 0
  9532                           ; Switch size 1, requested type "space"
  9533                           ; Number of cases is 8, Range of values is 1 to 117
  9534                           ; switch strategies available:
  9535                           ; Name         Instructions Cycles
  9536                           ; simple_byte           25    13 (average)
  9537                           ;	Chosen strategy is simple_byte
  9538  003828  5187               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  9539  00382A  0A01               	xorlw	1	; case 1
  9540  00382C  B4D8               	btfsc	status,2,c
  9541  00382E  D7E9               	goto	l1485
  9542  003830  0A03               	xorlw	3	; case 2
  9543  003832  B4D8               	btfsc	status,2,c
  9544  003834  0012               	return	
  9545  003836  0A01               	xorlw	1	; case 3
  9546  003838  B4D8               	btfsc	status,2,c
  9547  00383A  D7E6               	goto	l1487
  9548  00383C  0A06               	xorlw	6	; case 5
  9549  00383E  B4D8               	btfsc	status,2,c
  9550  003840  0012               	return	
  9551  003842  0A77               	xorlw	119	; case 114
  9552  003844  B4D8               	btfsc	status,2,c
  9553  003846  0012               	return	
  9554  003848  0A01               	xorlw	1	; case 115
  9555  00384A  B4D8               	btfsc	status,2,c
  9556  00384C  0012               	return	
  9557  00384E  0A07               	xorlw	7	; case 116
  9558  003850  B4D8               	btfsc	status,2,c
  9559  003852  0012               	return	
  9560  003854  0A01               	xorlw	1	; case 117
  9561  003856  0012               	return	
  9562  003858                     l10724:
  9563                           
  9564                           ; BSR set to: 0
  9565                           ; Switch size 1, requested type "space"
  9566                           ; Number of cases is 1, Range of values is 255 to 255
  9567                           ; switch strategies available:
  9568                           ; Name         Instructions Cycles
  9569                           ; simple_byte            4     3 (average)
  9570                           ;	Chosen strategy is simple_byte
  9571  003858  5187               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  9572  00385A  0AFF               	xorlw	255	; case 255
  9573  00385C  0012               	return	
  9574  00385E                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  9575                           	opt stack 0
  9576                           tosu	equ	0xFFF
  9577                           tosh	equ	0xFFE
  9578                           tosl	equ	0xFFD
  9579                           pclath	equ	0xFFA
  9580                           tblptru	equ	0xFF8
  9581                           tblptrh	equ	0xFF7
  9582                           tblptrl	equ	0xFF6
  9583                           tablat	equ	0xFF5
  9584                           prodh	equ	0xFF4
  9585                           prodl	equ	0xFF3
  9586                           intcon	equ	0xFF2
  9587                           intcon2	equ	0xFF1
  9588                           intcon3	equ	0xFF0
  9589                           indf0	equ	0xFEF
  9590                           postinc0	equ	0xFEE
  9591                           plusw0	equ	0xFEB
  9592                           fsr0h	equ	0xFEA
  9593                           fsr0l	equ	0xFE9
  9594                           wreg	equ	0xFE8
  9595                           postinc1	equ	0xFE6
  9596                           postdec1	equ	0xFE5
  9597                           fsr1h	equ	0xFE2
  9598                           fsr1l	equ	0xFE1
  9599                           indf2	equ	0xFDF
  9600                           postinc2	equ	0xFDE
  9601                           postdec2	equ	0xFDD
  9602                           plusw2	equ	0xFDB
  9603                           fsr2h	equ	0xFDA
  9604                           fsr2l	equ	0xFD9
  9605                           status	equ	0xFD8
  9606                           
  9607 ;; *************** function _USBCheckCDCRequest *****************
  9608 ;; Defined at:
  9609 ;;		line 150 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;		None
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;		None
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  1    wreg      void 
  9616 ;; Registers used:
  9617 ;;		wreg, status,2, status,0
  9618 ;; Tracked objects:
  9619 ;;		On entry : 0/0
  9620 ;;		On exit  : 0/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9627 ;;Total ram usage:        0 bytes
  9628 ;; Hardware stack levels used:    1
  9629 ;; Hardware stack levels required when called:    9
  9630 ;; This function calls:
  9631 ;;		Nothing
  9632 ;; This function is called by:
  9633 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9634 ;; This function uses a non-reentrant model
  9635 ;;
  9636                           
  9637                           	psect	text42
  9638  002B0A                     __ptext42:
  9639                           	opt stack 0
  9640  002B0A                     _USBCheckCDCRequest:
  9641                           	opt stack 16
  9642                           
  9643                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
  9644                           
  9645                           ;incstack = 0
  9646  002B0A  0104               	movlb	4	; () banked
  9647  002B0C  5130               	movf	48,w,b	;volatile
  9648  002B0E  0B1F               	andlw	31
  9649  002B10  06E8               	decf	wreg,f,c
  9650  002B12  A4D8               	btfss	status,2,c
  9651  002B14  0012               	return	
  9652                           
  9653                           ; BSR set to: 4
  9654                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
  9655                           
  9656                           ; BSR set to: 4
  9657                           
  9658                           ; BSR set to: 4
  9659  002B16  3930               	swapf	48,w,b	;volatile
  9660  002B18  32E8               	rrcf	wreg,f,c
  9661  002B1A  0B03               	andlw	3
  9662  002B1C  06E8               	decf	wreg,f,c
  9663  002B1E  A4D8               	btfss	status,2,c
  9664  002B20  0012               	return	
  9665                           
  9666                           ; BSR set to: 4
  9667                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
  9668                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
  9669                           
  9670                           ; BSR set to: 4
  9671                           
  9672                           ; BSR set to: 4
  9673  002B22  5134               	movf	52,w,b	;volatile
  9674  002B24  B4D8               	btfsc	status,2,c
  9675  002B26  D036               	goto	l1381
  9676                           
  9677                           ; BSR set to: 4
  9678  002B28  0534               	decf	52,w,b	;volatile
  9679  002B2A  A4D8               	btfss	status,2,c
  9680  002B2C  0012               	return	
  9681  002B2E  D032               	goto	l1381
  9682  002B30                     
  9683                           ; BSR set to: 4
  9684                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9685                           
  9686                           ; BSR set to: 4
  9687  002B30  0E87               	movlw	low _dummy_encapsulated_cmd_response
  9688  002B32  0100               	movlb	0	; () banked
  9689  002B34  6FAF               	movwf	_inPipes& (0+255),b
  9690  002B36  0E03               	movlw	high _dummy_encapsulated_cmd_response
  9691  002B38  6FB0               	movwf	(_inPipes+1)& (0+255),b
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
  9695  002B3A  0E00               	movlw	0
  9696  002B3C  6FB4               	movwf	(_inPipes+5)& (0+255),b
  9697  002B3E  0E08               	movlw	8
  9698  002B40  6FB3               	movwf	(_inPipes+4)& (0+255),b
  9699                           
  9700                           ; BSR set to: 0
  9701                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9702  002B42  81B2               	bsf	(_inPipes+3)& (0+255),0,b
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
  9706  002B44  8FB2               	bsf	(_inPipes+3)& (0+255),7,b
  9707                           
  9708                           ;usb_device_cdc.c: 178: break;
  9709  002B46  0012               	return	
  9710  002B48                     
  9711                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9712                           
  9713                           ; BSR set to: 0
  9714  002B48  0E87               	movlw	low _dummy_encapsulated_cmd_response
  9715  002B4A  0100               	movlb	0	; () banked
  9716  002B4C  6FAF               	movwf	_inPipes& (0+255),b
  9717  002B4E  0E03               	movlw	high _dummy_encapsulated_cmd_response
  9718  002B50  6FB0               	movwf	(_inPipes+1)& (0+255),b
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
  9722  002B52  8FB2               	bsf	(_inPipes+3)& (0+255),7,b
  9723                           
  9724                           ;usb_device_cdc.c: 183: break;
  9725  002B54  0012               	return	
  9726  002B56                     l1385:
  9727                           
  9728                           ; BSR set to: 4
  9729                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
  9730  002B56  C436 F005          	movff	1078,_outPipes+4	;volatile
  9731  002B5A  C437 F006          	movff	1079,_outPipes+5	;volatile
  9732                           
  9733                           ; BSR set to: 4
  9734                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  9735  002B5E  0E24               	movlw	low _line_coding
  9736  002B60  6E01               	movwf	_outPipes,c
  9737  002B62  0E01               	movlw	high _line_coding
  9738  002B64  6E02               	movwf	_outPipes+1,c
  9739                           
  9740                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
  9741  002B66  0E00               	movlw	0
  9742  002B68  6E07               	movwf	_outPipes+6,c
  9743  002B6A  0E00               	movlw	0
  9744  002B6C  6E08               	movwf	_outPipes+7,c
  9745                           
  9746                           ; BSR set to: 4
  9747                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
  9748  002B6E  8E04               	bsf	_outPipes+3,7,c
  9749                           
  9750                           ;usb_device_cdc.c: 192: break;
  9751  002B70  0012               	return	
  9752  002B72                     
  9753                           ; BSR set to: 4
  9754                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  9755                           
  9756                           ; BSR set to: 4
  9757  002B72  0E24               	movlw	low _line_coding
  9758  002B74  0100               	movlb	0	; () banked
  9759  002B76  6FAF               	movwf	_inPipes& (0+255),b
  9760  002B78  0E01               	movlw	high _line_coding
  9761  002B7A  6FB0               	movwf	(_inPipes+1)& (0+255),b
  9762                           
  9763                           ; BSR set to: 0
  9764  002B7C  0E00               	movlw	0
  9765  002B7E  6FB4               	movwf	(_inPipes+5)& (0+255),b
  9766  002B80  0E07               	movlw	7
  9767  002B82  6FB3               	movwf	(_inPipes+4)& (0+255),b
  9768                           
  9769                           ; BSR set to: 0
  9770  002B84  0EC1               	movlw	193
  9771  002B86  6FB2               	movwf	(_inPipes+3)& (0+255),b
  9772                           
  9773                           ;usb_device_cdc.c: 199: break;
  9774  002B88  0012               	return	
  9775  002B8A                     l1387:
  9776                           
  9777                           ; BSR set to: 4
  9778                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  9779  002B8A  C432 F017          	movff	1074,_control_signal_bitmap	;volatile
  9780                           
  9781                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
  9782  002B8E  0100               	movlb	0	; () banked
  9783  002B90  8FB2               	bsf	(_inPipes+3)& (0+255),7,b
  9784                           
  9785                           ; BSR set to: 0
  9786                           ;usb_device_cdc.c: 261: }
  9787                           
  9788                           ; BSR set to: 0
  9789                           ;usb_device_cdc.c: 260: break;
  9790                           
  9791                           ;usb_device_cdc.c: 259: default:
  9792                           
  9793                           ;usb_device_cdc.c: 235: break;
  9794  002B92  0012               	return	
  9795  002B94                     l1381:
  9796                           
  9797                           ; BSR set to: 0
  9798  002B94  0104               	movlb	4	; () banked
  9799  002B96  5131               	movf	49,w,b	;volatile
  9800                           
  9801                           ; Switch size 1, requested type "space"
  9802                           ; Number of cases is 5, Range of values is 0 to 34
  9803                           ; switch strategies available:
  9804                           ; Name         Instructions Cycles
  9805                           ; simple_byte           16     9 (average)
  9806                           ;	Chosen strategy is simple_byte
  9807  002B98  0A00               	xorlw	0	; case 0
  9808  002B9A  B4D8               	btfsc	status,2,c
  9809  002B9C  D7C9               	goto	l1382
  9810  002B9E  0A01               	xorlw	1	; case 1
  9811  002BA0  B4D8               	btfsc	status,2,c
  9812  002BA2  D7D2               	goto	l1384
  9813  002BA4  0A21               	xorlw	33	; case 32
  9814  002BA6  B4D8               	btfsc	status,2,c
  9815  002BA8  D7D6               	goto	l1385
  9816  002BAA  0A01               	xorlw	1	; case 33
  9817  002BAC  B4D8               	btfsc	status,2,c
  9818  002BAE  D7E1               	goto	l1386
  9819  002BB0  0A03               	xorlw	3	; case 34
  9820  002BB2  A4D8               	btfss	status,2,c
  9821  002BB4  0012               	return	
  9822  002BB6  D7E9               	goto	l1387
  9823  002BB8                     __end_of_USBCheckCDCRequest:
  9824                           	opt stack 0
  9825                           tosu	equ	0xFFF
  9826                           tosh	equ	0xFFE
  9827                           tosl	equ	0xFFD
  9828                           pclath	equ	0xFFA
  9829                           tblptru	equ	0xFF8
  9830                           tblptrh	equ	0xFF7
  9831                           tblptrl	equ	0xFF6
  9832                           tablat	equ	0xFF5
  9833                           prodh	equ	0xFF4
  9834                           prodl	equ	0xFF3
  9835                           intcon	equ	0xFF2
  9836                           intcon2	equ	0xFF1
  9837                           intcon3	equ	0xFF0
  9838                           indf0	equ	0xFEF
  9839                           postinc0	equ	0xFEE
  9840                           plusw0	equ	0xFEB
  9841                           fsr0h	equ	0xFEA
  9842                           fsr0l	equ	0xFE9
  9843                           wreg	equ	0xFE8
  9844                           postinc1	equ	0xFE6
  9845                           postdec1	equ	0xFE5
  9846                           fsr1h	equ	0xFE2
  9847                           fsr1l	equ	0xFE1
  9848                           indf2	equ	0xFDF
  9849                           postinc2	equ	0xFDE
  9850                           postdec2	equ	0xFDD
  9851                           plusw2	equ	0xFDB
  9852                           fsr2h	equ	0xFDA
  9853                           fsr2l	equ	0xFD9
  9854                           status	equ	0xFD8
  9855                           
  9856 ;; *************** function _CDCInitEP *****************
  9857 ;; Defined at:
  9858 ;;		line 297 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;		None
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;		None
  9863 ;; Return value:  Size  Location     Type
  9864 ;;                  1    wreg      void 
  9865 ;; Registers used:
  9866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9867 ;; Tracked objects:
  9868 ;;		On entry : 0/0
  9869 ;;		On exit  : 0/0
  9870 ;;		Unchanged: 0/0
  9871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9876 ;;Total ram usage:        0 bytes
  9877 ;; Hardware stack levels used:    1
  9878 ;; Hardware stack levels required when called:   11
  9879 ;; This function calls:
  9880 ;;		_USBEnableEndpoint
  9881 ;;		_USBTransferOnePacket
  9882 ;; This function is called by:
  9883 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           	psect	text43
  9888  0036D0                     __ptext43:
  9889                           	opt stack 0
  9890  0036D0                     _CDCInitEP:
  9891                           	opt stack 14
  9892                           
  9893                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
  9894                           
  9895                           ;incstack = 0
  9896  0036D0  0E80               	movlw	128
  9897  0036D2  0101               	movlb	1	; () banked
  9898  0036D4  6F24               	movwf	_line_coding& (0+255),b
  9899  0036D6  0E25               	movlw	37
  9900  0036D8  6F25               	movwf	(_line_coding+1)& (0+255),b
  9901  0036DA  0E00               	movlw	0
  9902  0036DC  6F26               	movwf	(_line_coding+2)& (0+255),b
  9903  0036DE  0E00               	movlw	0
  9904  0036E0  6F27               	movwf	(_line_coding+3)& (0+255),b
  9905                           
  9906                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
  9907  0036E2  0E00               	movlw	0
  9908  0036E4  6F28               	movwf	(_line_coding+4)& (0+255),b
  9909                           
  9910                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
  9911  0036E6  0E00               	movlw	0
  9912  0036E8  6F29               	movwf	(_line_coding+5)& (0+255),b
  9913                           
  9914                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
  9915  0036EA  0E08               	movlw	8
  9916  0036EC  6F2A               	movwf	(_line_coding+6)& (0+255),b
  9917                           
  9918                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
  9919  0036EE  0E00               	movlw	0
  9920  0036F0  0100               	movlb	0	; () banked
  9921  0036F2  6FC3               	movwf	_cdc_rx_len& (0+255),b
  9922                           
  9923                           ; BSR set to: 0
  9924                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
  9925  0036F4  0E1A               	movlw	26
  9926  0036F6  6F7D               	movwf	USBEnableEndpoint@options& (0+255),b
  9927  0036F8  0E01               	movlw	1
  9928  0036FA  EC1F  F01E         	call	_USBEnableEndpoint
  9929                           
  9930                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  9931  0036FE  0E1E               	movlw	30
  9932  003700  0100               	movlb	0	; () banked
  9933  003702  6F7D               	movwf	USBEnableEndpoint@options& (0+255),b
  9934  003704  0E02               	movlw	2
  9935  003706  EC1F  F01E         	call	_USBEnableEndpoint
  9936                           
  9937                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  9938  00370A  0E00               	movlw	0
  9939  00370C  0100               	movlb	0	; () banked
  9940  00370E  6F75               	movwf	USBTransferOnePacket@dir& (0+255),b
  9941  003710  0E40               	movlw	low _cdc_data_rx
  9942  003712  6F76               	movwf	USBTransferOnePacket@data& (0+255),b
  9943  003714  0E04               	movlw	high _cdc_data_rx
  9944  003716  6F77               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  9945  003718  0E40               	movlw	64
  9946  00371A  6F78               	movwf	USBTransferOnePacket@len& (0+255),b
  9947  00371C  0E02               	movlw	2
  9948  00371E  EC72  F014         	call	_USBTransferOnePacket
  9949  003722  C075  F0BB         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  9950  003726  C076  F0BC         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  9951                           
  9952                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
  9953  00372A  0E00               	movlw	0
  9954  00372C  6E0F               	movwf	_CDCDataInHandle,c
  9955  00372E  0E00               	movlw	0
  9956  003730  6E10               	movwf	_CDCDataInHandle+1,c
  9957                           
  9958                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
  9959  003732  0E00               	movlw	0
  9960  003734  0100               	movlb	0	; () banked
  9961  003736  6FC2               	movwf	_cdc_trf_state& (0+255),b
  9962                           
  9963                           ; BSR set to: 0
  9964  003738  0012               	return		;funcret
  9965  00373A                     __end_of_CDCInitEP:
  9966                           	opt stack 0
  9967                           tosu	equ	0xFFF
  9968                           tosh	equ	0xFFE
  9969                           tosl	equ	0xFFD
  9970                           pclath	equ	0xFFA
  9971                           tblptru	equ	0xFF8
  9972                           tblptrh	equ	0xFF7
  9973                           tblptrl	equ	0xFF6
  9974                           tablat	equ	0xFF5
  9975                           prodh	equ	0xFF4
  9976                           prodl	equ	0xFF3
  9977                           intcon	equ	0xFF2
  9978                           intcon2	equ	0xFF1
  9979                           intcon3	equ	0xFF0
  9980                           indf0	equ	0xFEF
  9981                           postinc0	equ	0xFEE
  9982                           plusw0	equ	0xFEB
  9983                           fsr0h	equ	0xFEA
  9984                           fsr0l	equ	0xFE9
  9985                           wreg	equ	0xFE8
  9986                           postinc1	equ	0xFE6
  9987                           postdec1	equ	0xFE5
  9988                           fsr1h	equ	0xFE2
  9989                           fsr1l	equ	0xFE1
  9990                           indf2	equ	0xFDF
  9991                           postinc2	equ	0xFDE
  9992                           postdec2	equ	0xFDD
  9993                           plusw2	equ	0xFDB
  9994                           fsr2h	equ	0xFDA
  9995                           fsr2l	equ	0xFD9
  9996                           status	equ	0xFD8
  9997                           
  9998 ;; *************** function _USBEnableEndpoint *****************
  9999 ;; Defined at:
 10000 ;;		line 896 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;  ep              1    wreg     unsigned char 
 10003 ;;  options         1   29[BANK0 ] unsigned char 
 10004 ;; Auto vars:     Size  Location     Type
 10005 ;;  ep              1   32[BANK0 ] unsigned char 
 10006 ;;  p               2   30[BANK0 ] PTR unsigned char 
 10007 ;;		 -> UEP0(1), 
 10008 ;; Return value:  Size  Location     Type
 10009 ;;                  1    wreg      void 
 10010 ;; Registers used:
 10011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10012 ;; Tracked objects:
 10013 ;;		On entry : 0/0
 10014 ;;		On exit  : 0/0
 10015 ;;		Unchanged: 0/0
 10016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10017 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10018 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10020 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10021 ;;Total ram usage:        4 bytes
 10022 ;; Hardware stack levels used:    1
 10023 ;; Hardware stack levels required when called:   10
 10024 ;; This function calls:
 10025 ;;		_USBConfigureEndpoint
 10026 ;; This function is called by:
 10027 ;;		_CDCInitEP
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031                           	psect	text44
 10032  003C3E                     __ptext44:
 10033                           	opt stack 0
 10034  003C3E                     _USBEnableEndpoint:
 10035                           	opt stack 14
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;incstack = 0
 10039                           ;USBEnableEndpoint@ep stored from wreg
 10040  003C3E  0100               	movlb	0	; () banked
 10041  003C40  6F80               	movwf	USBEnableEndpoint@ep& (0+255),b
 10042                           
 10043                           ;usb_device.c: 898: unsigned char* p;
 10044                           ;usb_device.c: 902: if(options & 0x04)
 10045  003C42  0100               	movlb	0	; () banked
 10046  003C44  A57D               	btfss	USBEnableEndpoint@options& (0+255),2,b
 10047  003C46  D005               	goto	l1122
 10048                           
 10049                           ; BSR set to: 0
 10050                           ;usb_device.c: 903: {
 10051                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 10052  003C48  0E00               	movlw	0
 10053  003C4A  6F75               	movwf	USBConfigureEndpoint@direction& (0+255),b
 10054  003C4C  5180               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10055  003C4E  EC7A  F017         	call	_USBConfigureEndpoint
 10056  003C52                     l1122:
 10057                           
 10058                           ;usb_device.c: 905: }
 10059                           ;usb_device.c: 906: if(options & 0x02)
 10060  003C52  0100               	movlb	0	; () banked
 10061  003C54  A37D               	btfss	USBEnableEndpoint@options& (0+255),1,b
 10062  003C56  D005               	goto	l1123
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;usb_device.c: 907: {
 10066                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 10067  003C58  0E01               	movlw	1
 10068  003C5A  6F75               	movwf	USBConfigureEndpoint@direction& (0+255),b
 10069  003C5C  5180               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10070  003C5E  EC7A  F017         	call	_USBConfigureEndpoint
 10071  003C62                     l1123:
 10072                           
 10073                           ;usb_device.c: 909: }
 10074                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 10075  003C62  0100               	movlb	0	; () banked
 10076  003C64  5180               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10077  003C66  0D01               	mullw	1
 10078  003C68  0E26               	movlw	38
 10079  003C6A  24F3               	addwf	prodl,w,c
 10080  003C6C  6F7E               	movwf	USBEnableEndpoint@p& (0+255),b
 10081  003C6E  0E0F               	movlw	15
 10082  003C70  20F4               	addwfc	prodh,w,c
 10083  003C72  6F7F               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;usb_device.c: 919: *p = options;
 10087  003C74  C07E  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 10088  003C78  C07F  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 10089  003C7C  C07D  FFDF         	movff	USBEnableEndpoint@options,indf2
 10090                           
 10091                           ; BSR set to: 0
 10092  003C80  0012               	return		;funcret
 10093  003C82                     __end_of_USBEnableEndpoint:
 10094                           	opt stack 0
 10095                           tosu	equ	0xFFF
 10096                           tosh	equ	0xFFE
 10097                           tosl	equ	0xFFD
 10098                           pclath	equ	0xFFA
 10099                           tblptru	equ	0xFF8
 10100                           tblptrh	equ	0xFF7
 10101                           tblptrl	equ	0xFF6
 10102                           tablat	equ	0xFF5
 10103                           prodh	equ	0xFF4
 10104                           prodl	equ	0xFF3
 10105                           intcon	equ	0xFF2
 10106                           intcon2	equ	0xFF1
 10107                           intcon3	equ	0xFF0
 10108                           indf0	equ	0xFEF
 10109                           postinc0	equ	0xFEE
 10110                           plusw0	equ	0xFEB
 10111                           fsr0h	equ	0xFEA
 10112                           fsr0l	equ	0xFE9
 10113                           wreg	equ	0xFE8
 10114                           postinc1	equ	0xFE6
 10115                           postdec1	equ	0xFE5
 10116                           fsr1h	equ	0xFE2
 10117                           fsr1l	equ	0xFE1
 10118                           indf2	equ	0xFDF
 10119                           postinc2	equ	0xFDE
 10120                           postdec2	equ	0xFDD
 10121                           plusw2	equ	0xFDB
 10122                           fsr2h	equ	0xFDA
 10123                           fsr2l	equ	0xFD9
 10124                           status	equ	0xFD8
 10125                           
 10126 ;; *************** function _USBConfigureEndpoint *****************
 10127 ;; Defined at:
 10128 ;;		line 1561 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10129 ;; Parameters:    Size  Location     Type
 10130 ;;  EPNum           1    wreg     unsigned char 
 10131 ;;  direction       1   21[BANK0 ] unsigned char 
 10132 ;; Auto vars:     Size  Location     Type
 10133 ;;  EPNum           1   26[BANK0 ] unsigned char 
 10134 ;;  handle          2   27[BANK0 ] PTR volatile struct __BD
 10135 ;;		 -> BDT(48), 
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  1    wreg      void 
 10138 ;; Registers used:
 10139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10140 ;; Tracked objects:
 10141 ;;		On entry : 0/0
 10142 ;;		On exit  : 0/0
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10145 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10146 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10147 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10148 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10149 ;;Total ram usage:        8 bytes
 10150 ;; Hardware stack levels used:    1
 10151 ;; Hardware stack levels required when called:    9
 10152 ;; This function calls:
 10153 ;;		Nothing
 10154 ;; This function is called by:
 10155 ;;		_USBEnableEndpoint
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           	psect	text45
 10160  002EF4                     __ptext45:
 10161                           	opt stack 0
 10162  002EF4                     _USBConfigureEndpoint:
 10163                           	opt stack 14
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;incstack = 0
 10167                           ;USBConfigureEndpoint@EPNum stored from wreg
 10168  002EF4  0100               	movlb	0	; () banked
 10169  002EF6  6F7A               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 10170                           
 10171                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 10172                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 10173  002EF8  0E00               	movlw	0
 10174  002EFA  0100               	movlb	0	; () banked
 10175  002EFC  6F7B               	movwf	USBConfigureEndpoint@handle& (0+255),b
 10176  002EFE  0E04               	movlw	4
 10177  002F00  6F7C               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 10181  002F02  5175               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 10182  002F04  6F76               	movwf	??_USBConfigureEndpoint& (0+255),b
 10183  002F06  6B77               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 10184  002F08  90D8               	bcf	status,0,c
 10185  002F0A  3776               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 10186  002F0C  3777               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 10187  002F0E  517A               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10188  002F10  6F78               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 10189  002F12  6B79               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 10190  002F14  90D8               	bcf	status,0,c
 10191  002F16  3778               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10192  002F18  3779               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10193  002F1A  90D8               	bcf	status,0,c
 10194  002F1C  3778               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10195  002F1E  3779               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10196  002F20  5176               	movf	??_USBConfigureEndpoint& (0+255),w,b
 10197  002F22  2778               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10198  002F24  5177               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 10199  002F26  2379               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10200  002F28  90D8               	bcf	status,0,c
 10201  002F2A  3778               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10202  002F2C  3779               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10203  002F2E  90D8               	bcf	status,0,c
 10204  002F30  3778               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10205  002F32  3779               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10206  002F34  5178               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 10207  002F36  277B               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 10208  002F38  5179               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 10209  002F3A  237C               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 10213  002F3C  C07B  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10214  002F40  C07C  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10215  002F44  9EDF               	bcf	indf2,7,c
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;usb_device.c: 1575: if(direction == 0)
 10219  002F46  5175               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 10220  002F48  A4D8               	btfss	status,2,c
 10221  002F4A  D007               	goto	l1158
 10222                           
 10223                           ; BSR set to: 0
 10224                           ;usb_device.c: 1576: {
 10225                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 10226  002F4C  517A               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10227  002F4E  0D02               	mullw	2
 10228  002F50  0E00               	movlw	low _pBDTEntryOut
 10229  002F52  24F3               	addwf	prodl,w,c
 10230  002F54  6ED9               	movwf	fsr2l,c
 10231  002F56  0E01               	movlw	high _pBDTEntryOut
 10232  002F58  D006               	goto	L10
 10233  002F5A                     l1158:
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;usb_device.c: 1579: else
 10237                           ;usb_device.c: 1580: {
 10238                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 10239                           
 10240                           ; BSR set to: 0
 10241  002F5A  517A               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10242  002F5C  0D02               	mullw	2
 10243  002F5E  0EB5               	movlw	low _pBDTEntryIn
 10244  002F60  24F3               	addwf	prodl,w,c
 10245  002F62  6ED9               	movwf	fsr2l,c
 10246  002F64  0E00               	movlw	high _pBDTEntryIn
 10247  002F66                     L10:
 10248  002F66  20F4               	addwfc	prodh,w,c
 10249  002F68  6EDA               	movwf	fsr2h,c
 10250  002F6A  C07B  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 10251  002F6E  C07C  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 10252                           
 10253                           ; BSR set to: 0
 10254                           ;usb_device.c: 1582: }
 10255                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 10256                           
 10257                           ; BSR set to: 0
 10258  002F72  C07B  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10259  002F76  C07C  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10260  002F7A  9CDF               	bcf	indf2,6,c
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 10264  002F7C  EE20 F004          	lfsr	2,4
 10265  002F80  517B               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 10266  002F82  26D9               	addwf	fsr2l,f,c
 10267  002F84  517C               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 10268  002F86  22DA               	addwfc	fsr2h,f,c
 10269  002F88  8CDF               	bsf	indf2,6,c
 10270                           
 10271                           ; BSR set to: 0
 10272  002F8A  0012               	return		;funcret
 10273  002F8C                     __end_of_USBConfigureEndpoint:
 10274                           	opt stack 0
 10275                           tosu	equ	0xFFF
 10276                           tosh	equ	0xFFE
 10277                           tosl	equ	0xFFD
 10278                           pclath	equ	0xFFA
 10279                           tblptru	equ	0xFF8
 10280                           tblptrh	equ	0xFF7
 10281                           tblptrl	equ	0xFF6
 10282                           tablat	equ	0xFF5
 10283                           prodh	equ	0xFF4
 10284                           prodl	equ	0xFF3
 10285                           intcon	equ	0xFF2
 10286                           intcon2	equ	0xFF1
 10287                           intcon3	equ	0xFF0
 10288                           indf0	equ	0xFEF
 10289                           postinc0	equ	0xFEE
 10290                           plusw0	equ	0xFEB
 10291                           fsr0h	equ	0xFEA
 10292                           fsr0l	equ	0xFE9
 10293                           wreg	equ	0xFE8
 10294                           postinc1	equ	0xFE6
 10295                           postdec1	equ	0xFE5
 10296                           fsr1h	equ	0xFE2
 10297                           fsr1l	equ	0xFE1
 10298                           indf2	equ	0xFDF
 10299                           postinc2	equ	0xFDE
 10300                           postdec2	equ	0xFDD
 10301                           plusw2	equ	0xFDB
 10302                           fsr2h	equ	0xFDA
 10303                           fsr2l	equ	0xFD9
 10304                           status	equ	0xFD8
 10305                           
 10306 ;; *************** function _USBCtrlTrfOutHandler *****************
 10307 ;; Defined at:
 10308 ;;		line 2555 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10309 ;; Parameters:    Size  Location     Type
 10310 ;;		None
 10311 ;; Auto vars:     Size  Location     Type
 10312 ;;		None
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  1    wreg      void 
 10315 ;; Registers used:
 10316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10326 ;;Total ram usage:        0 bytes
 10327 ;; Hardware stack levels used:    1
 10328 ;; Hardware stack levels required when called:   11
 10329 ;; This function calls:
 10330 ;;		_USBCtrlTrfRxService
 10331 ;; This function is called by:
 10332 ;;		_USBCtrlEPService
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           	psect	text46
 10337  0037A0                     __ptext46:
 10338                           	opt stack 0
 10339  0037A0                     _USBCtrlTrfOutHandler:
 10340                           	opt stack 14
 10341                           
 10342                           ;usb_device.c: 2557: if(controlTransferState == 2)
 10343                           
 10344                           ; BSR set to: 0
 10345                           ;incstack = 0
 10346  0037A0  0E02               	movlw	2
 10347  0037A2  0100               	movlb	0	; () banked
 10348  0037A4  19CF               	xorwf	_controlTransferState& (0+255),w,b
 10349  0037A6  A4D8               	btfss	status,2,c
 10350  0037A8  D003               	goto	l1264
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;usb_device.c: 2558: {
 10354                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 10355  0037AA  EC3C  F00D         	call	_USBCtrlTrfRxService	;wreg free
 10356                           
 10357                           ;usb_device.c: 2560: }
 10358  0037AE  0012               	return	
 10359  0037B0                     l1264:
 10360                           
 10361                           ;usb_device.c: 2561: else
 10362                           ;usb_device.c: 2562: {
 10363                           ;usb_device.c: 2565: controlTransferState = 0;
 10364  0037B0  0E00               	movlw	0
 10365  0037B2  0100               	movlb	0	; () banked
 10366  0037B4  6FCF               	movwf	_controlTransferState& (0+255),b
 10367                           
 10368                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 10369  0037B6  51CB               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 10370  0037B8  A4D8               	btfss	status,2,c
 10371  0037BA  D01F               	goto	l1266
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;usb_device.c: 2573: {
 10375                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 10376  0037BC  EE20 F001          	lfsr	2,1
 10377  0037C0  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10378  0037C2  26D9               	addwf	fsr2l,f,c
 10379  0037C4  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10380  0037C6  22DA               	addwfc	fsr2h,f,c
 10381  0037C8  0E08               	movlw	8
 10382  0037CA  6EDF               	movwf	indf2,c
 10383                           
 10384                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10385  0037CC  EE20 F002          	lfsr	2,2
 10386  0037D0  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10387  0037D2  26D9               	addwf	fsr2l,f,c
 10388  0037D4  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10389  0037D6  22DA               	addwfc	fsr2h,f,c
 10390  0037D8  0E30               	movlw	48
 10391  0037DA  6EDE               	movwf	postinc2,c
 10392  0037DC  0E04               	movlw	4
 10393  0037DE  6EDD               	movwf	postdec2,c
 10394                           
 10395                           ; BSR set to: 0
 10396                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10397  0037E0  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10398  0037E4  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10399  0037E8  0E0C               	movlw	12
 10400  0037EA  6EDF               	movwf	indf2,c
 10401                           
 10402                           ; BSR set to: 0
 10403                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10404  0037EC  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10405  0037F0  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10406  0037F4  0E00               	movlw	0
 10407  0037F6  8EDB               	bsf	plusw2,7,c
 10408                           
 10409                           ;usb_device.c: 2578: }
 10410  0037F8  0012               	return	
 10411  0037FA                     l1266:
 10412                           
 10413                           ; BSR set to: 0
 10414                           ;usb_device.c: 2579: else
 10415                           ;usb_device.c: 2580: {
 10416                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 10417                           
 10418                           ; BSR set to: 0
 10419  0037FA  0E00               	movlw	0
 10420  0037FC  6FCB               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 10421                           
 10422                           ; BSR set to: 0
 10423  0037FE  0012               	return	
 10424  003800                     __end_of_USBCtrlTrfOutHandler:
 10425                           	opt stack 0
 10426                           tosu	equ	0xFFF
 10427                           tosh	equ	0xFFE
 10428                           tosl	equ	0xFFD
 10429                           pclath	equ	0xFFA
 10430                           tblptru	equ	0xFF8
 10431                           tblptrh	equ	0xFF7
 10432                           tblptrl	equ	0xFF6
 10433                           tablat	equ	0xFF5
 10434                           prodh	equ	0xFF4
 10435                           prodl	equ	0xFF3
 10436                           intcon	equ	0xFF2
 10437                           intcon2	equ	0xFF1
 10438                           intcon3	equ	0xFF0
 10439                           indf0	equ	0xFEF
 10440                           postinc0	equ	0xFEE
 10441                           plusw0	equ	0xFEB
 10442                           fsr0h	equ	0xFEA
 10443                           fsr0l	equ	0xFE9
 10444                           wreg	equ	0xFE8
 10445                           postinc1	equ	0xFE6
 10446                           postdec1	equ	0xFE5
 10447                           fsr1h	equ	0xFE2
 10448                           fsr1l	equ	0xFE1
 10449                           indf2	equ	0xFDF
 10450                           postinc2	equ	0xFDE
 10451                           postdec2	equ	0xFDD
 10452                           plusw2	equ	0xFDB
 10453                           fsr2h	equ	0xFDA
 10454                           fsr2l	equ	0xFD9
 10455                           status	equ	0xFD8
 10456                           
 10457 ;; *************** function _USBCtrlTrfRxService *****************
 10458 ;; Defined at:
 10459 ;;		line 1870 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10460 ;; Parameters:    Size  Location     Type
 10461 ;;		None
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;  byteToRead      1   22[BANK0 ] unsigned char 
 10464 ;;  i               1   21[BANK0 ] unsigned char 
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  1    wreg      void 
 10467 ;; Registers used:
 10468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10475 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10477 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10478 ;;Total ram usage:        2 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:   10
 10481 ;; This function calls:
 10482 ;;		_USBCtrlEPAllowStatusStage
 10483 ;; This function is called by:
 10484 ;;		_USBCtrlTrfOutHandler
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text47
 10489  001A78                     __ptext47:
 10490                           	opt stack 0
 10491  001A78                     _USBCtrlTrfRxService:
 10492                           	opt stack 14
 10493                           
 10494                           ;usb_device.c: 1872: uint8_t byteToRead;
 10495                           ;usb_device.c: 1873: uint8_t i;
 10496                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 10497                           
 10498                           ;incstack = 0
 10499  001A78  0100               	movlb	0	; () banked
 10500  001A7A  EE20 F001          	lfsr	2,1
 10501  001A7E  51BF               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 10502  001A80  26D9               	addwf	fsr2l,f,c
 10503  001A82  51C0               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 10504  001A84  22DA               	addwfc	fsr2h,f,c
 10505  001A86  50DF               	movf	indf2,w,c
 10506  001A88  6F76               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 10507                           
 10508                           ; BSR set to: 0
 10509                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 10510  001A8A  5176               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10511  001A8C  5C05               	subwf	_outPipes+4,w,c
 10512  001A8E  0E00               	movlw	0
 10513  001A90  5806               	subwfb	_outPipes+5,w,c
 10514  001A92  A0D8               	btfss	status,0,c
 10515                           
 10516                           ; BSR set to: 0
 10517                           ;usb_device.c: 1884: {
 10518                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 10519  001A94  C005  F076         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 10520                           
 10521                           ; BSR set to: 0
 10522                           ;usb_device.c: 1886: }
 10523                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 10524                           
 10525                           ; BSR set to: 0
 10526  001A98  5176               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10527  001A9A  5E05               	subwf	_outPipes+4,f,c
 10528  001A9C  0E00               	movlw	0
 10529  001A9E  5A06               	subwfb	_outPipes+5,f,c
 10530                           
 10531                           ; BSR set to: 0
 10532                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 10533  001AA0  0E00               	movlw	0
 10534  001AA2  6F75               	movwf	USBCtrlTrfRxService@i& (0+255),b
 10535  001AA4  D011               	goto	l1192
 10536  001AA6                     
 10537                           ; BSR set to: 0
 10538                           ;usb_device.c: 1893: {
 10539                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 10540                           
 10541                           ; BSR set to: 0
 10542  001AA6  5175               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 10543  001AA8  0D01               	mullw	1
 10544  001AAA  0E38               	movlw	56
 10545  001AAC  24F3               	addwf	prodl,w,c
 10546  001AAE  6ED9               	movwf	fsr2l,c
 10547  001AB0  0E04               	movlw	4
 10548  001AB2  20F4               	addwfc	prodh,w,c
 10549  001AB4  6EDA               	movwf	fsr2h,c
 10550  001AB6  C001  FFE1         	movff	_outPipes,fsr1l
 10551  001ABA  C002  FFE2         	movff	_outPipes+1,fsr1h
 10552  001ABE  CFDF FFE7          	movff	indf2,indf1
 10553                           
 10554                           ; BSR set to: 0
 10555  001AC2  4A01               	infsnz	_outPipes,f,c
 10556  001AC4  2A02               	incf	_outPipes+1,f,c
 10557                           
 10558                           ; BSR set to: 0
 10559  001AC6  2B75               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 10560  001AC8                     l1192:
 10561                           
 10562                           ; BSR set to: 0
 10563                           
 10564                           ; BSR set to: 0
 10565  001AC8  5176               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10566  001ACA  5D75               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 10567  001ACC  A0D8               	btfss	status,0,c
 10568  001ACE  D7EB               	goto	l1193
 10569                           
 10570                           ; BSR set to: 0
 10571                           ;usb_device.c: 1895: }
 10572                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 10573                           
 10574                           ; BSR set to: 0
 10575  001AD0  5005               	movf	_outPipes+4,w,c
 10576  001AD2  1006               	iorwf	_outPipes+5,w,c
 10577  001AD4  B4D8               	btfsc	status,2,c
 10578  001AD6  D032               	goto	l1195
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;usb_device.c: 1900: {
 10582                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 10583  001AD8  EE20 F001          	lfsr	2,1
 10584  001ADC  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10585  001ADE  26D9               	addwf	fsr2l,f,c
 10586  001AE0  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10587  001AE2  22DA               	addwfc	fsr2h,f,c
 10588  001AE4  0E08               	movlw	8
 10589  001AE6  6EDF               	movwf	indf2,c
 10590                           
 10591                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 10592  001AE8  EE20 F002          	lfsr	2,2
 10593  001AEC  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10594  001AEE  26D9               	addwf	fsr2l,f,c
 10595  001AF0  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10596  001AF2  22DA               	addwfc	fsr2h,f,c
 10597  001AF4  0E38               	movlw	56
 10598  001AF6  6EDE               	movwf	postinc2,c
 10599  001AF8  0E04               	movlw	4
 10600  001AFA  6EDD               	movwf	postdec2,c
 10601                           
 10602                           ; BSR set to: 0
 10603                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 10604  001AFC  C0BF  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10605  001B00  C0C0  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10606  001B04  BCDF               	btfsc	indf2,6,c
 10607  001B06  D00D               	goto	l1196
 10608                           
 10609                           ; BSR set to: 0
 10610                           ;usb_device.c: 1904: {
 10611                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 10612  001B08  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10613  001B0C  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10614  001B10  0E48               	movlw	72
 10615  001B12  6EDF               	movwf	indf2,c
 10616                           
 10617                           ; BSR set to: 0
 10618                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10619  001B14  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10620  001B18  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10621  001B1C  0E00               	movlw	0
 10622  001B1E  8EDB               	bsf	plusw2,7,c
 10623                           
 10624                           ;usb_device.c: 1907: }
 10625  001B20  0012               	return	
 10626  001B22                     l1196:
 10627                           
 10628                           ; BSR set to: 0
 10629                           ;usb_device.c: 1908: else
 10630                           ;usb_device.c: 1909: {
 10631                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 10632                           
 10633                           ; BSR set to: 0
 10634  001B22  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10635  001B26  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10636  001B2A  0E08               	movlw	8
 10637  001B2C  6EDF               	movwf	indf2,c
 10638                           
 10639                           ; BSR set to: 0
 10640                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10641  001B2E  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10642  001B32  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10643  001B36  0E00               	movlw	0
 10644  001B38  8EDB               	bsf	plusw2,7,c
 10645                           
 10646                           ; BSR set to: 0
 10647                           ;usb_device.c: 1912: }
 10648                           ;usb_device.c: 1913: }
 10649  001B3A  0012               	return	
 10650  001B3C                     l1195:
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;usb_device.c: 1914: else
 10654                           ;usb_device.c: 1915: {
 10655                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 10656                           
 10657                           ; BSR set to: 0
 10658  001B3C  EE20 F001          	lfsr	2,1
 10659  001B40  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10660  001B42  26D9               	addwf	fsr2l,f,c
 10661  001B44  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10662  001B46  22DA               	addwfc	fsr2h,f,c
 10663  001B48  0E08               	movlw	8
 10664  001B4A  6EDF               	movwf	indf2,c
 10665                           
 10666                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10667  001B4C  EE20 F002          	lfsr	2,2
 10668  001B50  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10669  001B52  26D9               	addwf	fsr2l,f,c
 10670  001B54  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10671  001B56  22DA               	addwfc	fsr2h,f,c
 10672  001B58  0E30               	movlw	48
 10673  001B5A  6EDE               	movwf	postinc2,c
 10674  001B5C  0E04               	movlw	4
 10675  001B5E  6EDD               	movwf	postdec2,c
 10676                           
 10677                           ; BSR set to: 0
 10678                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 10679  001B60  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10680  001B64  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10681  001B68  0E04               	movlw	4
 10682  001B6A  6EDF               	movwf	indf2,c
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10686  001B6C  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10687  001B70  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10688  001B74  0E00               	movlw	0
 10689  001B76  8EDB               	bsf	plusw2,7,c
 10690                           
 10691                           ; BSR set to: 0
 10692                           ;usb_device.c: 1944: }
 10693                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 10694                           
 10695                           ; BSR set to: 0
 10696  001B78  9E04               	bcf	_outPipes+3,7,c
 10697                           
 10698                           ; BSR set to: 0
 10699                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 10700  001B7A  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 10701  001B7C  A4D8               	btfss	status,2,c
 10702  001B7E  0012               	return	
 10703                           
 10704                           ; BSR set to: 0
 10705                           ;usb_device.c: 1960: {
 10706                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 10707  001B80  ECB1  F013         	call	_USBCtrlEPAllowStatusStage	;wreg free
 10708  001B84  0012               	return	
 10709  001B86                     __end_of_USBCtrlTrfRxService:
 10710                           	opt stack 0
 10711                           tosu	equ	0xFFF
 10712                           tosh	equ	0xFFE
 10713                           tosl	equ	0xFFD
 10714                           pclath	equ	0xFFA
 10715                           tblptru	equ	0xFF8
 10716                           tblptrh	equ	0xFF7
 10717                           tblptrl	equ	0xFF6
 10718                           tablat	equ	0xFF5
 10719                           prodh	equ	0xFF4
 10720                           prodl	equ	0xFF3
 10721                           intcon	equ	0xFF2
 10722                           intcon2	equ	0xFF1
 10723                           intcon3	equ	0xFF0
 10724                           indf0	equ	0xFEF
 10725                           postinc0	equ	0xFEE
 10726                           plusw0	equ	0xFEB
 10727                           fsr0h	equ	0xFEA
 10728                           fsr0l	equ	0xFE9
 10729                           wreg	equ	0xFE8
 10730                           indf1	equ	0xFE7
 10731                           postinc1	equ	0xFE6
 10732                           postdec1	equ	0xFE5
 10733                           fsr1h	equ	0xFE2
 10734                           fsr1l	equ	0xFE1
 10735                           indf2	equ	0xFDF
 10736                           postinc2	equ	0xFDE
 10737                           postdec2	equ	0xFDD
 10738                           plusw2	equ	0xFDB
 10739                           fsr2h	equ	0xFDA
 10740                           fsr2l	equ	0xFD9
 10741                           status	equ	0xFD8
 10742                           
 10743 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 10744 ;; Defined at:
 10745 ;;		line 1434 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10746 ;; Parameters:    Size  Location     Type
 10747 ;;		None
 10748 ;; Auto vars:     Size  Location     Type
 10749 ;;		None
 10750 ;; Return value:  Size  Location     Type
 10751 ;;                  1    wreg      void 
 10752 ;; Registers used:
 10753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10754 ;; Tracked objects:
 10755 ;;		On entry : 0/0
 10756 ;;		On exit  : 0/0
 10757 ;;		Unchanged: 0/0
 10758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10763 ;;Total ram usage:        0 bytes
 10764 ;; Hardware stack levels used:    1
 10765 ;; Hardware stack levels required when called:    9
 10766 ;; This function calls:
 10767 ;;		Nothing
 10768 ;; This function is called by:
 10769 ;;		_USBDeviceTasks
 10770 ;;		_USBCtrlEPServiceComplete
 10771 ;;		_USBCtrlTrfRxService
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           	psect	text48
 10776  002762                     __ptext48:
 10777                           	opt stack 0
 10778  002762                     _USBCtrlEPAllowStatusStage:
 10779                           	opt stack 14
 10780                           
 10781                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 10782                           
 10783                           ;incstack = 0
 10784  002762  0100               	movlb	0	; () banked
 10785  002764  51C8               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 10786  002766  A4D8               	btfss	status,2,c
 10787  002768  0012               	return	
 10788                           
 10789                           ; BSR set to: 0
 10790                           ;usb_device.c: 1442: {
 10791                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 10792  00276A  0E01               	movlw	1
 10793  00276C  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 10794                           
 10795                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 10796  00276E  51C7               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 10797  002770  A4D8               	btfss	status,2,c
 10798  002772  0012               	return	
 10799                           
 10800                           ; BSR set to: 0
 10801                           ;usb_device.c: 1445: {
 10802                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 10803  002774  0E01               	movlw	1
 10804  002776  6FC7               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 10805                           
 10806                           ; BSR set to: 0
 10807                           ;usb_device.c: 1450: if(controlTransferState == 2)
 10808  002778  0E02               	movlw	2
 10809  00277A  19CF               	xorwf	_controlTransferState& (0+255),w,b
 10810  00277C  A4D8               	btfss	status,2,c
 10811  00277E  D015               	goto	l1146
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;usb_device.c: 1451: {
 10815                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 10816  002780  EE20 F001          	lfsr	2,1
 10817  002784  51B5               	movf	_pBDTEntryIn& (0+255),w,b
 10818  002786  26D9               	addwf	fsr2l,f,c
 10819  002788  51B6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 10820  00278A  22DA               	addwfc	fsr2h,f,c
 10821  00278C  0E00               	movlw	0
 10822  00278E  6EDF               	movwf	indf2,c
 10823                           
 10824                           ; BSR set to: 0
 10825                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10826  002790  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
 10827  002794  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10828  002798  0E48               	movlw	72
 10829  00279A  6EDF               	movwf	indf2,c
 10830                           
 10831                           ; BSR set to: 0
 10832                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10833  00279C  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
 10834  0027A0  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10835  0027A4  0E00               	movlw	0
 10836  0027A6  8EDB               	bsf	plusw2,7,c
 10837                           
 10838                           ;usb_device.c: 1455: }
 10839  0027A8  0012               	return	
 10840  0027AA                     l1146:
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 10844                           
 10845                           ; BSR set to: 0
 10846  0027AA  05CF               	decf	_controlTransferState& (0+255),w,b
 10847  0027AC  A4D8               	btfss	status,2,c
 10848  0027AE  0012               	return	
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;usb_device.c: 1457: {
 10852                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 10853  0027B0  0E00               	movlw	0
 10854  0027B2  6FCB               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 10855                           
 10856                           ; BSR set to: 0
 10857                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 10858  0027B4  EE20 F001          	lfsr	2,1
 10859  0027B8  51BF               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 10860  0027BA  26D9               	addwf	fsr2l,f,c
 10861  0027BC  51C0               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 10862  0027BE  22DA               	addwfc	fsr2h,f,c
 10863  0027C0  0E08               	movlw	8
 10864  0027C2  6EDF               	movwf	indf2,c
 10865                           
 10866                           ; BSR set to: 0
 10867                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 10868  0027C4  EE20 F002          	lfsr	2,2
 10869  0027C8  51BF               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 10870  0027CA  26D9               	addwf	fsr2l,f,c
 10871  0027CC  51C0               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 10872  0027CE  22DA               	addwfc	fsr2h,f,c
 10873  0027D0  0E30               	movlw	48
 10874  0027D2  6EDE               	movwf	postinc2,c
 10875  0027D4  0E04               	movlw	4
 10876  0027D6  6EDD               	movwf	postdec2,c
 10877                           
 10878                           ; BSR set to: 0
 10879                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 10880  0027D8  C0BF  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10881  0027DC  C0C0  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10882  0027E0  0E04               	movlw	4
 10883  0027E2  6EDF               	movwf	indf2,c
 10884                           
 10885                           ; BSR set to: 0
 10886                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10887  0027E4  C0BF  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10888  0027E8  C0C0  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10889  0027EC  0E00               	movlw	0
 10890  0027EE  8EDB               	bsf	plusw2,7,c
 10891                           
 10892                           ; BSR set to: 0
 10893                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 10894  0027F0  0E01               	movlw	1
 10895  0027F2  6FCB               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 10899  0027F4  EE20 F001          	lfsr	2,1
 10900  0027F8  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10901  0027FA  26D9               	addwf	fsr2l,f,c
 10902  0027FC  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10903  0027FE  22DA               	addwfc	fsr2h,f,c
 10904  002800  0E08               	movlw	8
 10905  002802  6EDF               	movwf	indf2,c
 10906                           
 10907                           ; BSR set to: 0
 10908                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10909  002804  EE20 F002          	lfsr	2,2
 10910  002808  51BD               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10911  00280A  26D9               	addwf	fsr2l,f,c
 10912  00280C  51BE               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10913  00280E  22DA               	addwfc	fsr2h,f,c
 10914  002810  0E30               	movlw	48
 10915  002812  6EDE               	movwf	postinc2,c
 10916  002814  0E04               	movlw	4
 10917  002816  6EDD               	movwf	postdec2,c
 10918                           
 10919                           ; BSR set to: 0
 10920                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 10921  002818  C0BD  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10922  00281C  C0BE  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10923  002820  0E80               	movlw	128
 10924  002822  6EDF               	movwf	indf2,c
 10925                           
 10926                           ; BSR set to: 0
 10927                           
 10928                           ; BSR set to: 0
 10929                           
 10930                           ; BSR set to: 0
 10931  002824  0012               	return	
 10932  002826                     __end_of_USBCtrlEPAllowStatusStage:
 10933                           	opt stack 0
 10934                           tosu	equ	0xFFF
 10935                           tosh	equ	0xFFE
 10936                           tosl	equ	0xFFD
 10937                           pclath	equ	0xFFA
 10938                           tblptru	equ	0xFF8
 10939                           tblptrh	equ	0xFF7
 10940                           tblptrl	equ	0xFF6
 10941                           tablat	equ	0xFF5
 10942                           prodh	equ	0xFF4
 10943                           prodl	equ	0xFF3
 10944                           intcon	equ	0xFF2
 10945                           intcon2	equ	0xFF1
 10946                           intcon3	equ	0xFF0
 10947                           indf0	equ	0xFEF
 10948                           postinc0	equ	0xFEE
 10949                           plusw0	equ	0xFEB
 10950                           fsr0h	equ	0xFEA
 10951                           fsr0l	equ	0xFE9
 10952                           wreg	equ	0xFE8
 10953                           indf1	equ	0xFE7
 10954                           postinc1	equ	0xFE6
 10955                           postdec1	equ	0xFE5
 10956                           fsr1h	equ	0xFE2
 10957                           fsr1l	equ	0xFE1
 10958                           indf2	equ	0xFDF
 10959                           postinc2	equ	0xFDE
 10960                           postdec2	equ	0xFDD
 10961                           plusw2	equ	0xFDB
 10962                           fsr2h	equ	0xFDA
 10963                           fsr2l	equ	0xFD9
 10964                           status	equ	0xFD8
 10965                           
 10966 ;; *************** function _USBCtrlTrfInHandler *****************
 10967 ;; Defined at:
 10968 ;;		line 2609 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10969 ;; Parameters:    Size  Location     Type
 10970 ;;		None
 10971 ;; Auto vars:     Size  Location     Type
 10972 ;;  lastDTS         1   22[BANK0 ] unsigned char 
 10973 ;; Return value:  Size  Location     Type
 10974 ;;                  1    wreg      void 
 10975 ;; Registers used:
 10976 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10977 ;; Tracked objects:
 10978 ;;		On entry : 0/0
 10979 ;;		On exit  : 0/0
 10980 ;;		Unchanged: 0/0
 10981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10985 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10986 ;;Total ram usage:        1 bytes
 10987 ;; Hardware stack levels used:    1
 10988 ;; Hardware stack levels required when called:   10
 10989 ;; This function calls:
 10990 ;;		_USBCtrlTrfTxService
 10991 ;; This function is called by:
 10992 ;;		_USBCtrlEPService
 10993 ;; This function uses a non-reentrant model
 10994 ;;
 10995                           
 10996                           	psect	text49
 10997  002826                     __ptext49:
 10998                           	opt stack 0
 10999  002826                     _USBCtrlTrfInHandler:
 11000                           	opt stack 15
 11001                           
 11002                           ;usb_device.c: 2611: uint8_t lastDTS;
 11003                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;incstack = 0
 11007  002826  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
 11008  00282A  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11009  00282E  0100               	movlb	0	; () banked
 11010  002830  0E00               	movlw	0
 11011  002832  BCDF               	btfsc	indf2,6,c
 11012  002834  0E01               	movlw	1
 11013  002836  6F76               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 11017  002838  0E04               	movlw	4
 11018  00283A  1BB5               	xorwf	_pBDTEntryIn& (0+255),f,b
 11019                           
 11020                           ; BSR set to: 0
 11021                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 11022  00283C  0E08               	movlw	8
 11023  00283E  19D1               	xorwf	_USBDeviceState& (0+255),w,b
 11024  002840  A4D8               	btfss	status,2,c
 11025  002842  D00D               	goto	l1273
 11026                           
 11027                           ; BSR set to: 0
 11028                           ;usb_device.c: 2622: {
 11029                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 11030  002844  0104               	movlb	4	; () banked
 11031  002846  5132               	movf	50,w,b	;volatile
 11032  002848  0B7F               	andlw	127
 11033  00284A  010F               	movlb	15	; () banked
 11034  00284C  6F38               	movwf	56,b	;volatile
 11035                           
 11036                           ; BSR set to: 15
 11037                           ;usb_device.c: 2624: if(UADDR != 0u)
 11038  00284E  5138               	movf	56,w,b	;volatile
 11039  002850  B4D8               	btfsc	status,2,c
 11040  002852  D002               	goto	l1272
 11041                           
 11042                           ; BSR set to: 15
 11043                           ;usb_device.c: 2625: {
 11044                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 11045  002854  0E10               	movlw	16
 11046  002856  D001               	goto	L11
 11047  002858                     l1272:
 11048                           
 11049                           ;usb_device.c: 2628: else
 11050                           ;usb_device.c: 2629: {
 11051                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 11052                           
 11053                           ; BSR set to: 0
 11054  002858  0E04               	movlw	4
 11055  00285A                     L11:
 11056  00285A  0100               	movlb	0	; () banked
 11057  00285C  6FD1               	movwf	_USBDeviceState& (0+255),b
 11058  00285E                     l1273:
 11059                           
 11060                           ; BSR set to: 0
 11061                           ;usb_device.c: 2631: }
 11062                           ;usb_device.c: 2632: }
 11063                           ;usb_device.c: 2635: if(controlTransferState == 1)
 11064                           
 11065                           ; BSR set to: 0
 11066                           
 11067                           ; BSR set to: 0
 11068  00285E  05CF               	decf	_controlTransferState& (0+255),w,b
 11069  002860  A4D8               	btfss	status,2,c
 11070  002862  D03B               	goto	l1274
 11071                           
 11072                           ; BSR set to: 0
 11073                           ;usb_device.c: 2636: {
 11074                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 11075  002864  EE20 F002          	lfsr	2,2
 11076  002868  51B5               	movf	_pBDTEntryIn& (0+255),w,b
 11077  00286A  26D9               	addwf	fsr2l,f,c
 11078  00286C  51B6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 11079  00286E  22DA               	addwfc	fsr2h,f,c
 11080  002870  0E38               	movlw	56
 11081  002872  6EDE               	movwf	postinc2,c
 11082  002874  0E04               	movlw	4
 11083  002876  6EDD               	movwf	postdec2,c
 11084                           
 11085                           ; BSR set to: 0
 11086                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 11087  002878  ECBC  F011         	call	_USBCtrlTrfTxService	;wreg free
 11088                           
 11089                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 11090  00287C  0E02               	movlw	2
 11091  00287E  0100               	movlb	0	; () banked
 11092  002880  19D0               	xorwf	_shortPacketStatus& (0+255),w,b
 11093  002882  A4D8               	btfss	status,2,c
 11094  002884  D00D               	goto	l1275
 11095                           
 11096                           ; BSR set to: 0
 11097                           ;usb_device.c: 2645: {
 11098                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 11099  002886  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
 11100  00288A  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11101  00288E  0E04               	movlw	4
 11102  002890  6EDF               	movwf	indf2,c
 11103                           
 11104                           ; BSR set to: 0
 11105                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11106  002892  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
 11107  002896  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11108  00289A  0E00               	movlw	0
 11109  00289C  8EDB               	bsf	plusw2,7,c
 11110                           
 11111                           ;usb_device.c: 2650: }
 11112  00289E  0012               	return	
 11113  0028A0                     l1275:
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;usb_device.c: 2651: else
 11117                           ;usb_device.c: 2652: {
 11118                           ;usb_device.c: 2653: if(lastDTS == 0)
 11119                           
 11120                           ; BSR set to: 0
 11121  0028A0  5176               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 11122  0028A2  A4D8               	btfss	status,2,c
 11123  0028A4  D00D               	goto	l1277
 11124                           
 11125                           ; BSR set to: 0
 11126                           ;usb_device.c: 2654: {
 11127                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11128  0028A6  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
 11129  0028AA  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11130  0028AE  0E48               	movlw	72
 11131  0028B0  6EDF               	movwf	indf2,c
 11132                           
 11133                           ; BSR set to: 0
 11134                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11135  0028B2  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
 11136  0028B6  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11137  0028BA  0E00               	movlw	0
 11138  0028BC  8EDB               	bsf	plusw2,7,c
 11139                           
 11140                           ;usb_device.c: 2657: }
 11141  0028BE  0012               	return	
 11142  0028C0                     l1277:
 11143                           
 11144                           ; BSR set to: 0
 11145                           ;usb_device.c: 2658: else
 11146                           ;usb_device.c: 2659: {
 11147                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 11148                           
 11149                           ; BSR set to: 0
 11150  0028C0  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
 11151  0028C4  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11152  0028C8  0E08               	movlw	8
 11153  0028CA  6EDF               	movwf	indf2,c
 11154                           
 11155                           ; BSR set to: 0
 11156                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11157  0028CC  C0B5  FFD9         	movff	_pBDTEntryIn,fsr2l
 11158  0028D0  C0B6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11159  0028D4  0E00               	movlw	0
 11160  0028D6  8EDB               	bsf	plusw2,7,c
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;usb_device.c: 2662: }
 11164                           ;usb_device.c: 2663: }
 11165                           ;usb_device.c: 2664: }
 11166                           
 11167                           ; BSR set to: 0
 11168  0028D8  0012               	return	
 11169  0028DA                     l1274:
 11170                           
 11171                           ; BSR set to: 0
 11172                           ;usb_device.c: 2665: else
 11173                           ;usb_device.c: 2666: {
 11174                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 11175  0028DA  BE04               	btfsc	_outPipes+3,7,c
 11176                           
 11177                           ; BSR set to: 0
 11178                           ;usb_device.c: 2675: }
 11179                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 11180                           
 11181                           ; BSR set to: 0
 11182  0028DC  9E04               	bcf	_outPipes+3,7,c
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;usb_device.c: 2677: }
 11186                           ;usb_device.c: 2679: controlTransferState = 0;
 11187                           
 11188                           ; BSR set to: 0
 11189  0028DE  0E00               	movlw	0
 11190  0028E0  6FCF               	movwf	_controlTransferState& (0+255),b
 11191  0028E2  0012               	return	
 11192  0028E4                     __end_of_USBCtrlTrfInHandler:
 11193                           	opt stack 0
 11194                           tosu	equ	0xFFF
 11195                           tosh	equ	0xFFE
 11196                           tosl	equ	0xFFD
 11197                           pclath	equ	0xFFA
 11198                           tblptru	equ	0xFF8
 11199                           tblptrh	equ	0xFF7
 11200                           tblptrl	equ	0xFF6
 11201                           tablat	equ	0xFF5
 11202                           prodh	equ	0xFF4
 11203                           prodl	equ	0xFF3
 11204                           intcon	equ	0xFF2
 11205                           intcon2	equ	0xFF1
 11206                           intcon3	equ	0xFF0
 11207                           indf0	equ	0xFEF
 11208                           postinc0	equ	0xFEE
 11209                           plusw0	equ	0xFEB
 11210                           fsr0h	equ	0xFEA
 11211                           fsr0l	equ	0xFE9
 11212                           wreg	equ	0xFE8
 11213                           indf1	equ	0xFE7
 11214                           postinc1	equ	0xFE6
 11215                           postdec1	equ	0xFE5
 11216                           fsr1h	equ	0xFE2
 11217                           fsr1l	equ	0xFE1
 11218                           indf2	equ	0xFDF
 11219                           postinc2	equ	0xFDE
 11220                           postdec2	equ	0xFDD
 11221                           plusw2	equ	0xFDB
 11222                           fsr2h	equ	0xFDA
 11223                           fsr2l	equ	0xFD9
 11224                           status	equ	0xFD8
 11225                           
 11226 ;; *************** function _USBCtrlTrfTxService *****************
 11227 ;; Defined at:
 11228 ;;		line 1789 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;		None
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;  byteToSend      1   21[BANK0 ] unsigned char 
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  1    wreg      void 
 11235 ;; Registers used:
 11236 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11243 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11245 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11246 ;;Total ram usage:        1 bytes
 11247 ;; Hardware stack levels used:    1
 11248 ;; Hardware stack levels required when called:    9
 11249 ;; This function calls:
 11250 ;;		Nothing
 11251 ;; This function is called by:
 11252 ;;		_USBCtrlEPAllowDataStage
 11253 ;;		_USBCtrlTrfInHandler
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257                           	psect	text50
 11258  002378                     __ptext50:
 11259                           	opt stack 0
 11260  002378                     _USBCtrlTrfTxService:
 11261                           	opt stack 13
 11262                           
 11263                           ;usb_device.c: 1791: uint8_t byteToSend;
 11264                           ;usb_device.c: 1795: byteToSend = 8;
 11265                           
 11266                           ; BSR set to: 0
 11267                           ;incstack = 0
 11268  002378  0E08               	movlw	8
 11269  00237A  0100               	movlb	0	; () banked
 11270  00237C  6F75               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 11271                           
 11272                           ; BSR set to: 0
 11273                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 11274  00237E  51B4               	movf	(_inPipes+5)& (0+255),w,b
 11275  002380  E110               	bnz	l6112
 11276  002382  0E08               	movlw	8
 11277  002384  5DB3               	subwf	(_inPipes+4)& (0+255),w,b
 11278  002386  B0D8               	btfsc	status,0,c
 11279  002388  D00C               	goto	l1179
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;usb_device.c: 1797: {
 11283                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 11284  00238A  C0B3  F075         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 11285                           
 11286                           ; BSR set to: 0
 11287                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 11288  00238E  51D0               	movf	_shortPacketStatus& (0+255),w,b
 11289  002390  A4D8               	btfss	status,2,c
 11290  002392  D002               	goto	l1177
 11291                           
 11292                           ; BSR set to: 0
 11293                           ;usb_device.c: 1806: {
 11294                           ;usb_device.c: 1807: shortPacketStatus = 1;
 11295  002394  0E01               	movlw	1
 11296  002396  D004               	goto	L12
 11297  002398                     l1177:
 11298                           
 11299                           ; BSR set to: 0
 11300                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 11301                           
 11302                           ; BSR set to: 0
 11303  002398  05D0               	decf	_shortPacketStatus& (0+255),w,b
 11304  00239A  A4D8               	btfss	status,2,c
 11305  00239C  D002               	goto	l1179
 11306                           
 11307                           ; BSR set to: 0
 11308                           ;usb_device.c: 1810: {
 11309                           ;usb_device.c: 1811: shortPacketStatus = 2;
 11310  00239E  0E02               	movlw	2
 11311  0023A0                     L12:
 11312  0023A0  6FD0               	movwf	_shortPacketStatus& (0+255),b
 11313  0023A2                     l1179:
 11314  0023A2                     l6112:
 11315                           
 11316                           ; BSR set to: 0
 11317                           ;usb_device.c: 1812: }
 11318                           ;usb_device.c: 1813: }
 11319                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 11320  0023A2  5175               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11321  0023A4  5FB3               	subwf	(_inPipes+4)& (0+255),f,b
 11322  0023A6  0E00               	movlw	0
 11323  0023A8  5BB4               	subwfb	(_inPipes+5)& (0+255),f,b
 11324                           
 11325                           ; BSR set to: 0
 11326                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 11327  0023AA  EE20 F001          	lfsr	2,1
 11328  0023AE  51B5               	movf	_pBDTEntryIn& (0+255),w,b
 11329  0023B0  26D9               	addwf	fsr2l,f,c
 11330  0023B2  51B6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 11331  0023B4  22DA               	addwfc	fsr2h,f,c
 11332  0023B6  C075  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 11336  0023BA  0E38               	movlw	56
 11337  0023BC  6E11               	movwf	_pDst,c
 11338  0023BE  0E04               	movlw	4
 11339  0023C0  6E12               	movwf	_pDst+1,c
 11340                           
 11341                           ; BSR set to: 0
 11342                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 11343  0023C2  A1B2               	btfss	(_inPipes+3)& (0+255),0,b
 11344  0023C4  D01C               	goto	l1181
 11345  0023C6  D03A               	goto	l1185
 11346  0023C8                     
 11347                           ; BSR set to: 0
 11348                           ;usb_device.c: 1830: {
 11349                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 11350                           
 11351                           ; BSR set to: 0
 11352  0023C8  C0AF  FFF6         	movff	_inPipes,tblptrl
 11353  0023CC  C0B0  FFF7         	movff	_inPipes+1,tblptrh
 11354  0023D0  6AF8               	clrf	tblptru,c
 11355  0023D2  C011  FFD9         	movff	_pDst,fsr2l
 11356  0023D6  C012  FFDA         	movff	_pDst+1,fsr2h
 11357  0023DA  0E0E               	movlw	(high __ramtop+-1)
 11358  0023DC  64F7               	cpfsgt	tblptrh,c
 11359  0023DE  D003               	bra	u4127
 11360  0023E0  0008               	tblrd		*
 11361  0023E2  50F5               	movf	tablat,w,c
 11362  0023E4  D005               	bra	u4120
 11363  0023E6                     u4127:
 11364  0023E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 11365  0023EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 11366  0023EE  50EF               	movf	indf0,w,c
 11367  0023F0                     u4120:
 11368  0023F0  6EDF               	movwf	indf2,c
 11369  0023F2  0100               	movlb	0	; () banked
 11370  0023F4  4BAF               	infsnz	_inPipes& (0+255),f,b
 11371  0023F6  2BB0               	incf	(_inPipes+1)& (0+255),f,b
 11372                           
 11373                           ; BSR set to: 0
 11374  0023F8  4A11               	infsnz	_pDst,f,c
 11375  0023FA  2A12               	incf	_pDst+1,f,c
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;usb_device.c: 1832: byteToSend--;
 11379  0023FC  0775               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 11380  0023FE                     l1181:
 11381                           
 11382                           ; BSR set to: 0
 11383                           
 11384                           ; BSR set to: 0
 11385  0023FE  5175               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11386  002400  B4D8               	btfsc	status,2,c
 11387  002402  0012               	return	
 11388  002404  D7E1               	goto	l1182
 11389  002406                     
 11390                           ; BSR set to: 0
 11391                           ;usb_device.c: 1838: {
 11392                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 11393                           
 11394                           ; BSR set to: 0
 11395  002406  C0AF  FFF6         	movff	_inPipes,tblptrl
 11396  00240A  C0B0  FFF7         	movff	_inPipes+1,tblptrh
 11397  00240E  6AF8               	clrf	tblptru,c
 11398  002410  C011  FFD9         	movff	_pDst,fsr2l
 11399  002414  C012  FFDA         	movff	_pDst+1,fsr2h
 11400  002418  0E0E               	movlw	(high __ramtop+-1)
 11401  00241A  64F7               	cpfsgt	tblptrh,c
 11402  00241C  D003               	bra	u4147
 11403  00241E  0008               	tblrd		*
 11404  002420  50F5               	movf	tablat,w,c
 11405  002422  D005               	bra	u4140
 11406  002424                     u4147:
 11407  002424  CFF6 FFE9          	movff	tblptrl,fsr0l
 11408  002428  CFF7 FFEA          	movff	tblptrh,fsr0h
 11409  00242C  50EF               	movf	indf0,w,c
 11410  00242E                     u4140:
 11411  00242E  6EDF               	movwf	indf2,c
 11412  002430  0100               	movlb	0	; () banked
 11413  002432  4BAF               	infsnz	_inPipes& (0+255),f,b
 11414  002434  2BB0               	incf	(_inPipes+1)& (0+255),f,b
 11415                           
 11416                           ; BSR set to: 0
 11417  002436  4A11               	infsnz	_pDst,f,c
 11418  002438  2A12               	incf	_pDst+1,f,c
 11419                           
 11420                           ; BSR set to: 0
 11421                           ;usb_device.c: 1840: byteToSend--;
 11422  00243A  0775               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 11423  00243C                     l1185:
 11424                           
 11425                           ; BSR set to: 0
 11426                           
 11427                           ; BSR set to: 0
 11428  00243C  5175               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11429  00243E  B4D8               	btfsc	status,2,c
 11430  002440  0012               	return	
 11431  002442  D7E1               	goto	l1186
 11432  002444                     __end_of_USBCtrlTrfTxService:
 11433                           	opt stack 0
 11434                           tosu	equ	0xFFF
 11435                           tosh	equ	0xFFE
 11436                           tosl	equ	0xFFD
 11437                           pclath	equ	0xFFA
 11438                           tblptru	equ	0xFF8
 11439                           tblptrh	equ	0xFF7
 11440                           tblptrl	equ	0xFF6
 11441                           tablat	equ	0xFF5
 11442                           prodh	equ	0xFF4
 11443                           prodl	equ	0xFF3
 11444                           intcon	equ	0xFF2
 11445                           intcon2	equ	0xFF1
 11446                           intcon3	equ	0xFF0
 11447                           indf0	equ	0xFEF
 11448                           postinc0	equ	0xFEE
 11449                           plusw0	equ	0xFEB
 11450                           fsr0h	equ	0xFEA
 11451                           fsr0l	equ	0xFE9
 11452                           wreg	equ	0xFE8
 11453                           indf1	equ	0xFE7
 11454                           postinc1	equ	0xFE6
 11455                           postdec1	equ	0xFE5
 11456                           fsr1h	equ	0xFE2
 11457                           fsr1l	equ	0xFE1
 11458                           indf2	equ	0xFDF
 11459                           postinc2	equ	0xFDE
 11460                           postdec2	equ	0xFDD
 11461                           plusw2	equ	0xFDB
 11462                           fsr2h	equ	0xFDA
 11463                           fsr2l	equ	0xFD9
 11464                           status	equ	0xFD8
 11465                           
 11466 ;; *************** function _CDCTxService *****************
 11467 ;; Defined at:
 11468 ;;		line 839 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11469 ;; Parameters:    Size  Location     Type
 11470 ;;		None
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;  byte_to_send    1   29[BANK0 ] unsigned char 
 11473 ;;  i               1   28[BANK0 ] unsigned char 
 11474 ;; Return value:  Size  Location     Type
 11475 ;;                  1    wreg      void 
 11476 ;; Registers used:
 11477 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11478 ;; Tracked objects:
 11479 ;;		On entry : 0/0
 11480 ;;		On exit  : 0/0
 11481 ;;		Unchanged: 0/0
 11482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11484 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11486 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11487 ;;Total ram usage:        2 bytes
 11488 ;; Hardware stack levels used:    1
 11489 ;; Hardware stack levels required when called:   10
 11490 ;; This function calls:
 11491 ;;		_USBTransferOnePacket
 11492 ;; This function is called by:
 11493 ;;		_UsbDevice_MainTask
 11494 ;; This function uses a non-reentrant model
 11495 ;;
 11496                           
 11497                           	psect	text51
 11498  0016E6                     __ptext51:
 11499                           	opt stack 0
 11500  0016E6                     _CDCTxService:
 11501                           	opt stack 17
 11502                           
 11503                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 11504                           ;usb_device_cdc.c: 842: uint8_t i;
 11505                           ;usb_device_cdc.c: 844: ;
 11506                           ;usb_device_cdc.c: 846: {};
 11507                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 11508                           
 11509                           ; BSR set to: 0
 11510                           ;incstack = 0
 11511  0016E6  500F               	movf	_CDCDataInHandle,w,c
 11512  0016E8  1010               	iorwf	_CDCDataInHandle+1,w,c
 11513  0016EA  B4D8               	btfsc	status,2,c
 11514  0016EC  D006               	goto	l1431
 11515  0016EE  C00F  FFD9         	movff	_CDCDataInHandle,fsr2l
 11516  0016F2  C010  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 11517  0016F6  BEDF               	btfsc	indf2,7,c
 11518  0016F8  0012               	return	
 11519  0016FA                     l1431:
 11520                           
 11521                           ;usb_device_cdc.c: 852: }
 11522                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 11523  0016FA  0E03               	movlw	3
 11524  0016FC  0100               	movlb	0	; () banked
 11525  0016FE  19C2               	xorwf	_cdc_trf_state& (0+255),w,b
 11526  001700  A4D8               	btfss	status,2,c
 11527  001702  D002               	goto	l1433
 11528                           
 11529                           ; BSR set to: 0
 11530                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 11531  001704  0E00               	movlw	0
 11532  001706  6FC2               	movwf	_cdc_trf_state& (0+255),b
 11533  001708                     l1433:
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 11537  001708  51C2               	movf	_cdc_trf_state& (0+255),w,b
 11538  00170A  B4D8               	btfsc	status,2,c
 11539  00170C  0012               	return	
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;usb_device_cdc.c: 869: }
 11543                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 11544                           
 11545                           ; BSR set to: 0
 11546                           
 11547                           ; BSR set to: 0
 11548                           ;usb_device_cdc.c: 866: {
 11549                           ;usb_device_cdc.c: 867: ;
 11550                           ;usb_device_cdc.c: 868: return;
 11551  00170E  0E02               	movlw	2
 11552  001710  19C2               	xorwf	_cdc_trf_state& (0+255),w,b
 11553  001712  A4D8               	btfss	status,2,c
 11554  001714  D013               	goto	l1435
 11555                           
 11556                           ; BSR set to: 0
 11557                           ;usb_device_cdc.c: 875: {
 11558                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 11559  001716  0E01               	movlw	1
 11560  001718  6F75               	movwf	USBTransferOnePacket@dir& (0+255),b
 11561  00171A  0E00               	movlw	0
 11562  00171C  6F76               	movwf	USBTransferOnePacket@data& (0+255),b
 11563  00171E  0E00               	movlw	0
 11564  001720  6F77               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11565  001722  0E00               	movlw	0
 11566  001724  6F78               	movwf	USBTransferOnePacket@len& (0+255),b
 11567  001726  0E02               	movlw	2
 11568  001728  EC72  F014         	call	_USBTransferOnePacket
 11569  00172C  C075  F00F         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11570  001730  C076  F010         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11571                           
 11572                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 11573  001734  0E03               	movlw	3
 11574  001736  0100               	movlb	0	; () banked
 11575  001738  6FC2               	movwf	_cdc_trf_state& (0+255),b
 11576                           
 11577                           ;usb_device_cdc.c: 879: }
 11578  00173A  0012               	return	
 11579  00173C                     l1435:
 11580                           
 11581                           ; BSR set to: 0
 11582                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 11583                           
 11584                           ; BSR set to: 0
 11585  00173C  05C2               	decf	_cdc_trf_state& (0+255),w,b
 11586  00173E  A4D8               	btfss	status,2,c
 11587  001740  0012               	return	
 11588                           
 11589                           ; BSR set to: 0
 11590                           ;usb_device_cdc.c: 881: {
 11591                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 11592  001742  0E40               	movlw	64
 11593  001744  65C1               	cpfsgt	_cdc_tx_len& (0+255),b
 11594  001746  D003               	goto	l1438
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 11598  001748  0E40               	movlw	64
 11599  00174A  6F7D               	movwf	CDCTxService@byte_to_send& (0+255),b
 11600  00174C  D002               	goto	l1439
 11601  00174E                     l1438:
 11602                           
 11603                           ; BSR set to: 0
 11604                           ;usb_device_cdc.c: 887: else
 11605                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 11606  00174E  C0C1  F07D         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 11607  001752                     l1439:
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 11611                           
 11612                           ; BSR set to: 0
 11613  001752  517D               	movf	CDCTxService@byte_to_send& (0+255),w,b
 11614  001754  0800               	sublw	0
 11615  001756  25C1               	addwf	_cdc_tx_len& (0+255),w,b
 11616  001758  6FC1               	movwf	_cdc_tx_len& (0+255),b
 11617                           
 11618                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 11619  00175A  0E80               	movlw	low _cdc_data_tx
 11620  00175C  0101               	movlb	1	; () banked
 11621  00175E  6F0A               	movwf	_pCDCDst& (0+255),b
 11622  001760  0E04               	movlw	high _cdc_data_tx
 11623  001762  6F0B               	movwf	(_pCDCDst+1)& (0+255),b
 11624                           
 11625                           ; BSR set to: 1
 11626                           ;usb_device_cdc.c: 897: i = byte_to_send;
 11627  001764  C07D  F07C         	movff	CDCTxService@byte_to_send,CDCTxService@i
 11628                           
 11629                           ; BSR set to: 1
 11630                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 11631  001768  5018               	movf	_cdc_mem_type,w,c
 11632  00176A  B4D8               	btfsc	status,2,c
 11633  00176C  D01D               	goto	l1441
 11634  00176E  D03D               	goto	l1445
 11635  001770                     
 11636                           ;usb_device_cdc.c: 901: {
 11637                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 11638                           
 11639                           ; BSR set to: 1
 11640  001770  C10D  FFF6         	movff	_pCDCSrc,tblptrl
 11641  001774  C10E  FFF7         	movff	_pCDCSrc+1,tblptrh
 11642  001778  6AF8               	clrf	tblptru,c
 11643  00177A  C10A  FFD9         	movff	_pCDCDst,fsr2l
 11644  00177E  C10B  FFDA         	movff	_pCDCDst+1,fsr2h
 11645  001782  0E0E               	movlw	(high __ramtop+-1)
 11646  001784  64F7               	cpfsgt	tblptrh,c
 11647  001786  D003               	bra	u9627
 11648  001788  0008               	tblrd		*
 11649  00178A  50F5               	movf	tablat,w,c
 11650  00178C  D005               	bra	u9620
 11651  00178E                     u9627:
 11652  00178E  CFF6 FFE9          	movff	tblptrl,fsr0l
 11653  001792  CFF7 FFEA          	movff	tblptrh,fsr0h
 11654  001796  50EF               	movf	indf0,w,c
 11655  001798                     u9620:
 11656  001798  6EDF               	movwf	indf2,c
 11657                           
 11658                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 11659  00179A  0101               	movlb	1	; () banked
 11660  00179C  4B0A               	infsnz	_pCDCDst& (0+255),f,b
 11661  00179E  2B0B               	incf	(_pCDCDst+1)& (0+255),f,b
 11662                           
 11663                           ; BSR set to: 1
 11664                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 11665  0017A0  4B0D               	infsnz	_pCDCSrc& (0+255),f,b
 11666  0017A2  2B0E               	incf	(_pCDCSrc+1)& (0+255),f,b
 11667                           
 11668                           ; BSR set to: 1
 11669                           ;usb_device_cdc.c: 905: i--;
 11670  0017A4  0100               	movlb	0	; () banked
 11671  0017A6  077C               	decf	CDCTxService@i& (0+255),f,b
 11672  0017A8                     l1441:
 11673                           
 11674                           ; BSR set to: 0
 11675  0017A8  0100               	movlb	0	; () banked
 11676  0017AA  517C               	movf	CDCTxService@i& (0+255),w,b
 11677  0017AC  B4D8               	btfsc	status,2,c
 11678  0017AE  D021               	goto	u9650
 11679  0017B0  D7DF               	goto	l1442
 11680  0017B2                     
 11681                           ; BSR set to: 0
 11682                           ;usb_device_cdc.c: 911: {
 11683                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 11684                           
 11685                           ; BSR set to: 0
 11686  0017B2  C10D  FFF6         	movff	_pCDCSrc,tblptrl
 11687  0017B6  C10E  FFF7         	movff	_pCDCSrc+1,tblptrh
 11688  0017BA  6AF8               	clrf	tblptru,c
 11689  0017BC  C10A  FFD9         	movff	_pCDCDst,fsr2l
 11690  0017C0  C10B  FFDA         	movff	_pCDCDst+1,fsr2h
 11691  0017C4  0E0E               	movlw	(high __ramtop+-1)
 11692  0017C6  64F7               	cpfsgt	tblptrh,c
 11693  0017C8  D003               	bra	u9647
 11694  0017CA  0008               	tblrd		*
 11695  0017CC  50F5               	movf	tablat,w,c
 11696  0017CE  D005               	bra	u9640
 11697  0017D0                     u9647:
 11698  0017D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 11699  0017D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 11700  0017D8  50EF               	movf	indf0,w,c
 11701  0017DA                     u9640:
 11702  0017DA  6EDF               	movwf	indf2,c
 11703                           
 11704                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 11705  0017DC  0101               	movlb	1	; () banked
 11706  0017DE  4B0A               	infsnz	_pCDCDst& (0+255),f,b
 11707  0017E0  2B0B               	incf	(_pCDCDst+1)& (0+255),f,b
 11708                           
 11709                           ; BSR set to: 1
 11710                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 11711  0017E2  4B0D               	infsnz	_pCDCSrc& (0+255),f,b
 11712  0017E4  2B0E               	incf	(_pCDCSrc+1)& (0+255),f,b
 11713                           
 11714                           ; BSR set to: 1
 11715                           ;usb_device_cdc.c: 915: i--;
 11716  0017E6  0100               	movlb	0	; () banked
 11717  0017E8  077C               	decf	CDCTxService@i& (0+255),f,b
 11718  0017EA                     l1445:
 11719                           
 11720                           ; BSR set to: 0
 11721  0017EA  0100               	movlb	0	; () banked
 11722  0017EC  517C               	movf	CDCTxService@i& (0+255),w,b
 11723  0017EE  A4D8               	btfss	status,2,c
 11724  0017F0  D7E0               	goto	l1446
 11725  0017F2                     u9650:
 11726                           
 11727                           ; BSR set to: 0
 11728                           ;usb_device_cdc.c: 916: }
 11729                           ;usb_device_cdc.c: 917: }
 11730                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 11731                           
 11732                           ; BSR set to: 0
 11733                           
 11734                           ; BSR set to: 0
 11735  0017F2  51C1               	movf	_cdc_tx_len& (0+255),w,b
 11736  0017F4  A4D8               	btfss	status,2,c
 11737  0017F6  D008               	goto	l1450
 11738                           
 11739                           ; BSR set to: 0
 11740                           ;usb_device_cdc.c: 924: {
 11741                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 11742  0017F8  0E40               	movlw	64
 11743  0017FA  197D               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 11744  0017FC  A4D8               	btfss	status,2,c
 11745  0017FE  D002               	goto	l1449
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 11749  001800  0E02               	movlw	2
 11750  001802  D001               	goto	L13
 11751  001804                     l1449:
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;usb_device_cdc.c: 927: else
 11755                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 11756                           
 11757                           ; BSR set to: 0
 11758  001804  0E03               	movlw	3
 11759  001806                     L13:
 11760  001806  6FC2               	movwf	_cdc_trf_state& (0+255),b
 11761  001808                     l1450:
 11762                           
 11763                           ; BSR set to: 0
 11764                           ;usb_device_cdc.c: 929: }
 11765                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 11766                           
 11767                           ; BSR set to: 0
 11768                           
 11769                           ; BSR set to: 0
 11770  001808  0E01               	movlw	1
 11771  00180A  6F75               	movwf	USBTransferOnePacket@dir& (0+255),b
 11772  00180C  0E80               	movlw	low _cdc_data_tx
 11773  00180E  6F76               	movwf	USBTransferOnePacket@data& (0+255),b
 11774  001810  0E04               	movlw	high _cdc_data_tx
 11775  001812  6F77               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11776  001814  C07D  F078         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 11777  001818  0E02               	movlw	2
 11778  00181A  EC72  F014         	call	_USBTransferOnePacket
 11779  00181E  C075  F00F         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11780  001822  C076  F010         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11781  001826  0012               	return	
 11782  001828                     __end_of_CDCTxService:
 11783                           	opt stack 0
 11784                           tosu	equ	0xFFF
 11785                           tosh	equ	0xFFE
 11786                           tosl	equ	0xFFD
 11787                           pclath	equ	0xFFA
 11788                           tblptru	equ	0xFF8
 11789                           tblptrh	equ	0xFF7
 11790                           tblptrl	equ	0xFF6
 11791                           tablat	equ	0xFF5
 11792                           prodh	equ	0xFF4
 11793                           prodl	equ	0xFF3
 11794                           intcon	equ	0xFF2
 11795                           intcon2	equ	0xFF1
 11796                           intcon3	equ	0xFF0
 11797                           indf0	equ	0xFEF
 11798                           postinc0	equ	0xFEE
 11799                           plusw0	equ	0xFEB
 11800                           fsr0h	equ	0xFEA
 11801                           fsr0l	equ	0xFE9
 11802                           wreg	equ	0xFE8
 11803                           indf1	equ	0xFE7
 11804                           postinc1	equ	0xFE6
 11805                           postdec1	equ	0xFE5
 11806                           fsr1h	equ	0xFE2
 11807                           fsr1l	equ	0xFE1
 11808                           indf2	equ	0xFDF
 11809                           postinc2	equ	0xFDE
 11810                           postdec2	equ	0xFDD
 11811                           plusw2	equ	0xFDB
 11812                           fsr2h	equ	0xFDA
 11813                           fsr2l	equ	0xFD9
 11814                           status	equ	0xFD8
 11815                           
 11816 ;; *************** function _Term_MainSm *****************
 11817 ;; Defined at:
 11818 ;;		line 692 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 11819 ;; Parameters:    Size  Location     Type
 11820 ;;		None
 11821 ;; Auto vars:     Size  Location     Type
 11822 ;;  FwkBuildStr     4   70[BANK0 ] unsigned char [4]
 11823 ;;  FwkMinorStr     4   66[BANK0 ] unsigned char [4]
 11824 ;;  FwkMajorStr     4   62[BANK0 ] unsigned char [4]
 11825 ;;  FwkBuildYear    4    0        unsigned char [4]
 11826 ;;  FwkBuildMont    4    0        unsigned char [4]
 11827 ;;  FwkBuildDayS    4    0        unsigned char [4]
 11828 ;; Return value:  Size  Location     Type
 11829 ;;                  1    wreg      void 
 11830 ;; Registers used:
 11831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11832 ;; Tracked objects:
 11833 ;;		On entry : 0/0
 11834 ;;		On exit  : 0/0
 11835 ;;		Unchanged: 0/0
 11836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11838 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11840 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11841 ;;Total ram usage:       12 bytes
 11842 ;; Hardware stack levels used:    1
 11843 ;; Hardware stack levels required when called:   14
 11844 ;; This function calls:
 11845 ;;		_OsTmr_GetTimerStatus
 11846 ;;		_OsTmr_StartTimer
 11847 ;;		_Terminal
 11848 ;;		_memset
 11849 ;;		_putUSBUSART
 11850 ;;		_sprintf
 11851 ;;		_strcat
 11852 ;;		_strcpy
 11853 ;;		_strlen
 11854 ;;		_utoa
 11855 ;; This function is called by:
 11856 ;;		_Term_MainTask
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           	psect	text52
 11861  000560                     __ptext52:
 11862                           	opt stack 0
 11863  000560                     _Term_MainSm:
 11864                           	opt stack 13
 11865                           
 11866                           ;term.c: 694: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 11867                           ;term.c: 695: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 11868                           ;term.c: 696: static UINT8 Data[50];
 11869                           ;term.c: 697: UINT8 FwkMajorStr[4];
 11870                           ;term.c: 698: UINT8 FwkMinorStr[4];
 11871                           ;term.c: 699: UINT8 FwkBuildStr[4];
 11872                           ;term.c: 700: UINT8 FwkBuildDayStr[4];
 11873                           ;term.c: 701: UINT8 FwkBuildMonthStr[4];
 11874                           ;term.c: 702: UINT8 FwkBuildYearStr[4];
 11875                           ;term.c: 704: switch (TermMainSmState)
 11876                           
 11877                           ;incstack = 0
 11878  000560  D133               	goto	l1854
 11879  000562                     
 11880                           ;term.c: 708: OsTmr_StartTimer(&TermDelay,2000);
 11881  000562  0EC7               	movlw	low Term_MainSm@TermDelay
 11882  000564  0100               	movlb	0	; () banked
 11883  000566  6F79               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 11884  000568  0E03               	movlw	high Term_MainSm@TermDelay
 11885  00056A  6F7A               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 11886  00056C  0ED0               	movlw	208
 11887  00056E  6F7B               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 11888  000570  0E07               	movlw	7
 11889  000572  6F7C               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 11890  000574  0E00               	movlw	0
 11891  000576  6F7D               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 11892  000578  0E00               	movlw	0
 11893  00057A  6F7E               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 11894  00057C  EC2F  F01C         	call	_OsTmr_StartTimer	;wreg free
 11895                           
 11896                           ;term.c: 710: TermMainSmState = Term_InitDelay;
 11897  000580  0E01               	movlw	1
 11898  000582  0102               	movlb	2	; () banked
 11899  000584  6FD0               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 11900                           
 11901                           ;term.c: 711: break;
 11902  000586  0012               	return	
 11903  000588                     
 11904                           ; BSR set to: 2
 11905                           ;term.c: 715: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 11906                           
 11907                           ; BSR set to: 2
 11908  000588  0EC7               	movlw	low Term_MainSm@TermDelay
 11909  00058A  0100               	movlb	0	; () banked
 11910  00058C  6F8D               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 11911  00058E  0E03               	movlw	high Term_MainSm@TermDelay
 11912  000590  6F8E               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 11913  000592  ECF0  F018         	call	_OsTmr_GetTimerStatus	;wreg free
 11914  000596  06E8               	decf	wreg,f,c
 11915  000598  A4D8               	btfss	status,2,c
 11916  00059A  0012               	return	
 11917                           
 11918                           ;term.c: 716: {
 11919                           ;term.c: 718: TermMainSmState = Term_InitState;
 11920  00059C  0E02               	movlw	2
 11921  00059E  0102               	movlb	2	; () banked
 11922  0005A0  6FD0               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 11923                           
 11924                           ; BSR set to: 2
 11925                           ;term.c: 719: }
 11926                           ;term.c: 720: break;
 11927  0005A2  0012               	return	
 11928  0005A4                     
 11929                           ; BSR set to: 2
 11930                           ;term.c: 724: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 11931                           
 11932                           ; BSR set to: 2
 11933  0005A4  0E1F               	movlw	31
 11934  0005A6  0100               	movlb	0	; () banked
 11935  0005A8  65D1               	cpfsgt	_USBDeviceState& (0+255),b
 11936  0005AA  0012               	return	
 11937                           
 11938                           ; BSR set to: 0
 11939  0005AC  B265               	btfsc	3941,1,c	;volatile
 11940  0005AE  0012               	return	
 11941                           
 11942                           ; BSR set to: 0
 11943                           ;term.c: 728: else
 11944                           ;term.c: 729: {
 11945                           ;term.c: 731: TermMainSmState = Term_WelcomeState;
 11946                           
 11947                           ; BSR set to: 0
 11948                           
 11949                           ; BSR set to: 0
 11950                           ;term.c: 725: {
 11951                           ;term.c: 727: }
 11952  0005B0  0E03               	movlw	3
 11953  0005B2  0102               	movlb	2	; () banked
 11954  0005B4  6FD0               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 11955                           
 11956                           ; BSR set to: 2
 11957                           ;term.c: 732: }
 11958                           ;term.c: 733: break;
 11959  0005B6  0012               	return	
 11960  0005B8                     
 11961                           ; BSR set to: 2
 11962                           ;term.c: 737: if((cdc_trf_state == 0))
 11963                           
 11964                           ; BSR set to: 2
 11965  0005B8  0100               	movlb	0	; () banked
 11966  0005BA  51C2               	movf	_cdc_trf_state& (0+255),w,b
 11967  0005BC  A4D8               	btfss	status,2,c
 11968  0005BE  0012               	return	
 11969                           
 11970                           ; BSR set to: 0
 11971                           ;term.c: 738: {
 11972                           ;term.c: 740: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 11973  0005C0  0E55               	movlw	low _Welcome
 11974  0005C2  6F7B               	movwf	putUSBUSART@data& (0+255),b
 11975  0005C4  0EFE               	movlw	high _Welcome
 11976  0005C6  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 11977  0005C8  0E88               	movlw	136
 11978  0005CA  6F7D               	movwf	putUSBUSART@length& (0+255),b
 11979  0005CC  EC34  F021         	call	_putUSBUSART	;wreg free
 11980                           
 11981                           ;term.c: 742: TermMainSmState = Term_InstDescState;
 11982  0005D0  0E04               	movlw	4
 11983  0005D2  0102               	movlb	2	; () banked
 11984  0005D4  6FD0               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 11985                           
 11986                           ; BSR set to: 2
 11987                           ;term.c: 743: }
 11988                           ;term.c: 744: break;
 11989  0005D6  0012               	return	
 11990  0005D8                     
 11991                           ; BSR set to: 2
 11992                           ;term.c: 748: if((cdc_trf_state == 0))
 11993                           
 11994                           ; BSR set to: 2
 11995  0005D8  0100               	movlb	0	; () banked
 11996  0005DA  51C2               	movf	_cdc_trf_state& (0+255),w,b
 11997  0005DC  A4D8               	btfss	status,2,c
 11998  0005DE  0012               	return	
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;term.c: 749: {
 12002                           ;term.c: 751: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 12003  0005E0  0E69               	movlw	low _MsgFormat
 12004  0005E2  6F7B               	movwf	putUSBUSART@data& (0+255),b
 12005  0005E4  0EFD               	movlw	high _MsgFormat
 12006  0005E6  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 12007  0005E8  0EEB               	movlw	235
 12008  0005EA  6F7D               	movwf	putUSBUSART@length& (0+255),b
 12009  0005EC  EC34  F021         	call	_putUSBUSART	;wreg free
 12010                           
 12011                           ;term.c: 753: TermMainSmState = Term_FwkVerState;
 12012  0005F0  0E05               	movlw	5
 12013  0005F2  0102               	movlb	2	; () banked
 12014  0005F4  6FD0               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12015                           
 12016                           ; BSR set to: 2
 12017                           ;term.c: 754: }
 12018                           ;term.c: 755: break;
 12019  0005F6  0012               	return	
 12020  0005F8                     
 12021                           ; BSR set to: 2
 12022                           ;term.c: 759: if((cdc_trf_state == 0))
 12023                           
 12024                           ; BSR set to: 2
 12025  0005F8  0100               	movlb	0	; () banked
 12026  0005FA  51C2               	movf	_cdc_trf_state& (0+255),w,b
 12027  0005FC  A4D8               	btfss	status,2,c
 12028  0005FE  0012               	return	
 12029                           
 12030                           ; BSR set to: 0
 12031                           ;term.c: 760: {
 12032                           ;term.c: 762: memset(Data,0,50);
 12033  000600  0E22               	movlw	low Term_MainSm@Data
 12034  000602  6F75               	movwf	memset@p1& (0+255),b
 12035  000604  0E03               	movlw	high Term_MainSm@Data
 12036  000606  6F76               	movwf	(memset@p1+1)& (0+255),b
 12037  000608  0E00               	movlw	0
 12038  00060A  6F78               	movwf	(memset@c+1)& (0+255),b
 12039  00060C  0E00               	movlw	0
 12040  00060E  6F77               	movwf	memset@c& (0+255),b
 12041  000610  0E00               	movlw	0
 12042  000612  6F7A               	movwf	(memset@n+1)& (0+255),b
 12043  000614  0E32               	movlw	50
 12044  000616  6F79               	movwf	memset@n& (0+255),b
 12045  000618  ECC0  F01F         	call	_memset	;wreg free
 12046                           
 12047                           ;term.c: 764: utoa(FwkMajorStr,1,10);
 12048  00061C  0E9E               	movlw	low Term_MainSm@FwkMajorStr
 12049  00061E  0100               	movlb	0	; () banked
 12050  000620  6F7C               	movwf	utoa@buf& (0+255),b
 12051  000622  0E00               	movlw	high Term_MainSm@FwkMajorStr
 12052  000624  6F7D               	movwf	(utoa@buf+1)& (0+255),b
 12053  000626  0E00               	movlw	0
 12054  000628  6F7F               	movwf	(utoa@val+1)& (0+255),b
 12055  00062A  0E01               	movlw	1
 12056  00062C  6F7E               	movwf	utoa@val& (0+255),b
 12057  00062E  0E00               	movlw	0
 12058  000630  6F81               	movwf	(utoa@base+1)& (0+255),b
 12059  000632  0E0A               	movlw	10
 12060  000634  6F80               	movwf	utoa@base& (0+255),b
 12061  000636  EC32  F016         	call	_utoa	;wreg free
 12062                           
 12063                           ;term.c: 765: utoa(FwkMinorStr,2,10);
 12064  00063A  0EA2               	movlw	low Term_MainSm@FwkMinorStr
 12065  00063C  0100               	movlb	0	; () banked
 12066  00063E  6F7C               	movwf	utoa@buf& (0+255),b
 12067  000640  0E00               	movlw	high Term_MainSm@FwkMinorStr
 12068  000642  6F7D               	movwf	(utoa@buf+1)& (0+255),b
 12069  000644  0E00               	movlw	0
 12070  000646  6F7F               	movwf	(utoa@val+1)& (0+255),b
 12071  000648  0E02               	movlw	2
 12072  00064A  6F7E               	movwf	utoa@val& (0+255),b
 12073  00064C  0E00               	movlw	0
 12074  00064E  6F81               	movwf	(utoa@base+1)& (0+255),b
 12075  000650  0E0A               	movlw	10
 12076  000652  6F80               	movwf	utoa@base& (0+255),b
 12077  000654  EC32  F016         	call	_utoa	;wreg free
 12078                           
 12079                           ;term.c: 766: utoa(FwkBuildStr,0,10);
 12080  000658  0EA6               	movlw	low Term_MainSm@FwkBuildStr
 12081  00065A  0100               	movlb	0	; () banked
 12082  00065C  6F7C               	movwf	utoa@buf& (0+255),b
 12083  00065E  0E00               	movlw	high Term_MainSm@FwkBuildStr
 12084  000660  6F7D               	movwf	(utoa@buf+1)& (0+255),b
 12085  000662  0E00               	movlw	0
 12086  000664  6F7F               	movwf	(utoa@val+1)& (0+255),b
 12087  000666  0E00               	movlw	0
 12088  000668  6F7E               	movwf	utoa@val& (0+255),b
 12089  00066A  0E00               	movlw	0
 12090  00066C  6F81               	movwf	(utoa@base+1)& (0+255),b
 12091  00066E  0E0A               	movlw	10
 12092  000670  6F80               	movwf	utoa@base& (0+255),b
 12093  000672  EC32  F016         	call	_utoa	;wreg free
 12094                           
 12095                           ;term.c: 767: strcpy(Data,"Framework Version: ");
 12096  000676  0E22               	movlw	low Term_MainSm@Data
 12097  000678  0100               	movlb	0	; () banked
 12098  00067A  6F75               	movwf	strcpy@to& (0+255),b
 12099  00067C  0E03               	movlw	high Term_MainSm@Data
 12100  00067E  6F76               	movwf	(strcpy@to+1)& (0+255),b
 12101  000680  0EBC               	movlw	low STR_3
 12102  000682  6F77               	movwf	strcpy@from& (0+255),b
 12103  000684  0EFF               	movlw	high STR_3
 12104  000686  6F78               	movwf	(strcpy@from+1)& (0+255),b
 12105  000688  EC77  F01F         	call	_strcpy	;wreg free
 12106                           
 12107                           ;term.c: 768: strcat(Data,FwkMajorStr);
 12108  00068C  0E22               	movlw	low Term_MainSm@Data
 12109  00068E  0100               	movlb	0	; () banked
 12110  000690  6F75               	movwf	strcat@to& (0+255),b
 12111  000692  0E03               	movlw	high Term_MainSm@Data
 12112  000694  6F76               	movwf	(strcat@to+1)& (0+255),b
 12113  000696  0E9E               	movlw	low Term_MainSm@FwkMajorStr
 12114  000698  6F77               	movwf	strcat@from& (0+255),b
 12115  00069A  0E00               	movlw	high Term_MainSm@FwkMajorStr
 12116  00069C  6F78               	movwf	(strcat@from+1)& (0+255),b
 12117  00069E  EC5E  F01C         	call	_strcat	;wreg free
 12118                           
 12119                           ;term.c: 769: strcat(Data,".");
 12120  0006A2  0E22               	movlw	low Term_MainSm@Data
 12121  0006A4  0100               	movlb	0	; () banked
 12122  0006A6  6F75               	movwf	strcat@to& (0+255),b
 12123  0006A8  0E03               	movlw	high Term_MainSm@Data
 12124  0006AA  6F76               	movwf	(strcat@to+1)& (0+255),b
 12125  0006AC  0EF4               	movlw	low STR_4
 12126  0006AE  6F77               	movwf	strcat@from& (0+255),b
 12127  0006B0  0EFF               	movlw	high STR_4
 12128  0006B2  6F78               	movwf	(strcat@from+1)& (0+255),b
 12129  0006B4  EC5E  F01C         	call	_strcat	;wreg free
 12130                           
 12131                           ;term.c: 770: strcat(Data,FwkMinorStr);
 12132  0006B8  0E22               	movlw	low Term_MainSm@Data
 12133  0006BA  0100               	movlb	0	; () banked
 12134  0006BC  6F75               	movwf	strcat@to& (0+255),b
 12135  0006BE  0E03               	movlw	high Term_MainSm@Data
 12136  0006C0  6F76               	movwf	(strcat@to+1)& (0+255),b
 12137  0006C2  0EA2               	movlw	low Term_MainSm@FwkMinorStr
 12138  0006C4  6F77               	movwf	strcat@from& (0+255),b
 12139  0006C6  0E00               	movlw	high Term_MainSm@FwkMinorStr
 12140  0006C8  6F78               	movwf	(strcat@from+1)& (0+255),b
 12141  0006CA  EC5E  F01C         	call	_strcat	;wreg free
 12142                           
 12143                           ;term.c: 771: strcat(Data,".");
 12144  0006CE  0E22               	movlw	low Term_MainSm@Data
 12145  0006D0  0100               	movlb	0	; () banked
 12146  0006D2  6F75               	movwf	strcat@to& (0+255),b
 12147  0006D4  0E03               	movlw	high Term_MainSm@Data
 12148  0006D6  6F76               	movwf	(strcat@to+1)& (0+255),b
 12149  0006D8  0EF4               	movlw	low STR_4
 12150  0006DA  6F77               	movwf	strcat@from& (0+255),b
 12151  0006DC  0EFF               	movlw	high STR_4
 12152  0006DE  6F78               	movwf	(strcat@from+1)& (0+255),b
 12153  0006E0  EC5E  F01C         	call	_strcat	;wreg free
 12154                           
 12155                           ;term.c: 772: strcat(Data,FwkBuildStr);
 12156  0006E4  0E22               	movlw	low Term_MainSm@Data
 12157  0006E6  0100               	movlb	0	; () banked
 12158  0006E8  6F75               	movwf	strcat@to& (0+255),b
 12159  0006EA  0E03               	movlw	high Term_MainSm@Data
 12160  0006EC  6F76               	movwf	(strcat@to+1)& (0+255),b
 12161  0006EE  0EA6               	movlw	low Term_MainSm@FwkBuildStr
 12162  0006F0  6F77               	movwf	strcat@from& (0+255),b
 12163  0006F2  0E00               	movlw	high Term_MainSm@FwkBuildStr
 12164  0006F4  6F78               	movwf	(strcat@from+1)& (0+255),b
 12165  0006F6  EC5E  F01C         	call	_strcat	;wreg free
 12166                           
 12167                           ;term.c: 773: strcat(Data,"\r\n");
 12168  0006FA  0E22               	movlw	low Term_MainSm@Data
 12169  0006FC  0100               	movlb	0	; () banked
 12170  0006FE  6F75               	movwf	strcat@to& (0+255),b
 12171  000700  0E03               	movlw	high Term_MainSm@Data
 12172  000702  6F76               	movwf	(strcat@to+1)& (0+255),b
 12173  000704  0EB9               	movlw	low (STR_1+39)
 12174  000706  6F77               	movwf	strcat@from& (0+255),b
 12175  000708  0EFF               	movlw	high (STR_1+39)
 12176  00070A  6F78               	movwf	(strcat@from+1)& (0+255),b
 12177  00070C  EC5E  F01C         	call	_strcat	;wreg free
 12178                           
 12179                           ;term.c: 775: putUSBUSART((void*)Data,strlen(Data));
 12180  000710  0E22               	movlw	low Term_MainSm@Data
 12181  000712  0100               	movlb	0	; () banked
 12182  000714  6F7B               	movwf	putUSBUSART@data& (0+255),b
 12183  000716  0E03               	movlw	high Term_MainSm@Data
 12184  000718  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 12185  00071A  0E22               	movlw	low Term_MainSm@Data
 12186  00071C  6F75               	movwf	strlen@s& (0+255),b
 12187  00071E  0E03               	movlw	high Term_MainSm@Data
 12188  000720  6F76               	movwf	(strlen@s+1)& (0+255),b
 12189  000722  ECC7  F01E         	call	_strlen	;wreg free
 12190  000726  0100               	movlb	0	; () banked
 12191  000728  5175               	movf	?_strlen& (0+255),w,b
 12192  00072A  6F7D               	movwf	putUSBUSART@length& (0+255),b
 12193  00072C  EC34  F021         	call	_putUSBUSART	;wreg free
 12194                           
 12195                           ;term.c: 777: TermMainSmState = Term_FwkBuildDateState;
 12196  000730  0E06               	movlw	6
 12197  000732  0102               	movlb	2	; () banked
 12198  000734  6FD0               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12199                           
 12200                           ; BSR set to: 2
 12201                           ;term.c: 778: }
 12202                           ;term.c: 779: break;
 12203  000736  0012               	return	
 12204  000738                     
 12205                           ; BSR set to: 2
 12206                           ;term.c: 783: if((cdc_trf_state == 0))
 12207                           
 12208                           ; BSR set to: 2
 12209  000738  0100               	movlb	0	; () banked
 12210  00073A  51C2               	movf	_cdc_trf_state& (0+255),w,b
 12211  00073C  A4D8               	btfss	status,2,c
 12212  00073E  0012               	return	
 12213                           
 12214                           ; BSR set to: 0
 12215                           ;term.c: 784: {
 12216                           ;term.c: 786: memset(Data,0,50);
 12217  000740  0E22               	movlw	low Term_MainSm@Data
 12218  000742  6F75               	movwf	memset@p1& (0+255),b
 12219  000744  0E03               	movlw	high Term_MainSm@Data
 12220  000746  6F76               	movwf	(memset@p1+1)& (0+255),b
 12221  000748  0E00               	movlw	0
 12222  00074A  6F78               	movwf	(memset@c+1)& (0+255),b
 12223  00074C  0E00               	movlw	0
 12224  00074E  6F77               	movwf	memset@c& (0+255),b
 12225  000750  0E00               	movlw	0
 12226  000752  6F7A               	movwf	(memset@n+1)& (0+255),b
 12227  000754  0E32               	movlw	50
 12228  000756  6F79               	movwf	memset@n& (0+255),b
 12229  000758  ECC0  F01F         	call	_memset	;wreg free
 12230                           
 12231                           ;term.c: 788: sprintf(Data,"Build Date: %s\r\n","Mar 27 2020");
 12232  00075C  0E22               	movlw	low Term_MainSm@Data
 12233  00075E  0100               	movlb	0	; () banked
 12234  000760  6F75               	movwf	sprintf@sp& (0+255),b
 12235  000762  0E03               	movlw	high Term_MainSm@Data
 12236  000764  6F76               	movwf	(sprintf@sp+1)& (0+255),b
 12237  000766  0ED0               	movlw	low STR_7
 12238  000768  6F77               	movwf	sprintf@f& (0+255),b
 12239  00076A  0EFF               	movlw	high STR_7
 12240  00076C  6F78               	movwf	(sprintf@f+1)& (0+255),b
 12241  00076E  0EE1               	movlw	low STR_8
 12242  000770  6F79               	movwf	(?_sprintf+4)& (0+255),b
 12243  000772  0EFF               	movlw	high STR_8
 12244  000774  6F7A               	movwf	(?_sprintf+5)& (0+255),b
 12245  000776  ECEF  F010         	call	_sprintf	;wreg free
 12246                           
 12247                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 12248  00077A  0E22               	movlw	low Term_MainSm@Data
 12249  00077C  0100               	movlb	0	; () banked
 12250  00077E  6F7B               	movwf	putUSBUSART@data& (0+255),b
 12251  000780  0E03               	movlw	high Term_MainSm@Data
 12252  000782  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 12253  000784  0E22               	movlw	low Term_MainSm@Data
 12254  000786  6F75               	movwf	strlen@s& (0+255),b
 12255  000788  0E03               	movlw	high Term_MainSm@Data
 12256  00078A  6F76               	movwf	(strlen@s+1)& (0+255),b
 12257  00078C  ECC7  F01E         	call	_strlen	;wreg free
 12258  000790  0100               	movlb	0	; () banked
 12259  000792  5175               	movf	?_strlen& (0+255),w,b
 12260  000794  6F7D               	movwf	putUSBUSART@length& (0+255),b
 12261  000796  EC34  F021         	call	_putUSBUSART	;wreg free
 12262                           
 12263                           ;term.c: 792: TermMainSmState = Term_SysInitState;
 12264  00079A  0E07               	movlw	7
 12265  00079C  0102               	movlb	2	; () banked
 12266  00079E  6FD0               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12267                           
 12268                           ; BSR set to: 2
 12269                           ;term.c: 793: }
 12270                           ;term.c: 794: break;
 12271  0007A0  0012               	return	
 12272  0007A2                     
 12273                           ; BSR set to: 2
 12274                           ;term.c: 798: if((cdc_trf_state == 0))
 12275                           
 12276                           ; BSR set to: 2
 12277  0007A2  0100               	movlb	0	; () banked
 12278  0007A4  51C2               	movf	_cdc_trf_state& (0+255),w,b
 12279  0007A6  A4D8               	btfss	status,2,c
 12280  0007A8  0012               	return	
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;term.c: 799: {
 12284                           ;term.c: 801: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 12285  0007AA  0E65               	movlw	low _MsgReady
 12286  0007AC  6F7B               	movwf	putUSBUSART@data& (0+255),b
 12287  0007AE  0EFF               	movlw	high _MsgReady
 12288  0007B0  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 12289  0007B2  0E16               	movlw	22
 12290  0007B4  6F7D               	movwf	putUSBUSART@length& (0+255),b
 12291  0007B6  EC34  F021         	call	_putUSBUSART	;wreg free
 12292                           
 12293                           ;term.c: 803: TermMainSmState = Term_FinalState;
 12294  0007BA  0E08               	movlw	8
 12295  0007BC  0102               	movlb	2	; () banked
 12296  0007BE  6FD0               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12297                           
 12298                           ; BSR set to: 2
 12299                           ;term.c: 804: }
 12300                           ;term.c: 805: break;
 12301  0007C0  0012               	return	
 12302  0007C2                     
 12303                           ; BSR set to: 2
 12304                           ;term.c: 809: Terminal();
 12305                           
 12306                           ; BSR set to: 2
 12307  0007C2  EC68  F000         	call	_Terminal	;wreg free
 12308                           
 12309                           ;term.c: 814: }
 12310                           
 12311                           ;term.c: 813: break;
 12312                           
 12313                           ;term.c: 812: default:
 12314                           
 12315                           ;term.c: 810: break;
 12316  0007C6  0012               	return	
 12317  0007C8                     l1854:
 12318  0007C8  0102               	movlb	2	; () banked
 12319  0007CA  51D0               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 12320                           
 12321                           ; Switch size 1, requested type "space"
 12322                           ; Number of cases is 9, Range of values is 0 to 8
 12323                           ; switch strategies available:
 12324                           ; Name         Instructions Cycles
 12325                           ; simple_byte           28    15 (average)
 12326                           ;	Chosen strategy is simple_byte
 12327  0007CC  0A00               	xorlw	0	; case 0
 12328  0007CE  B4D8               	btfsc	status,2,c
 12329  0007D0  D6C8               	goto	l1855
 12330  0007D2  0A01               	xorlw	1	; case 1
 12331  0007D4  B4D8               	btfsc	status,2,c
 12332  0007D6  D6D8               	goto	l1857
 12333  0007D8  0A03               	xorlw	3	; case 2
 12334  0007DA  B4D8               	btfsc	status,2,c
 12335  0007DC  D6E3               	goto	l1859
 12336  0007DE  0A01               	xorlw	1	; case 3
 12337  0007E0  B4D8               	btfsc	status,2,c
 12338  0007E2  D6EA               	goto	l1864
 12339  0007E4  0A07               	xorlw	7	; case 4
 12340  0007E6  B4D8               	btfsc	status,2,c
 12341  0007E8  D6F7               	goto	l1866
 12342  0007EA  0A01               	xorlw	1	; case 5
 12343  0007EC  B4D8               	btfsc	status,2,c
 12344  0007EE  D704               	goto	l1868
 12345  0007F0  0A03               	xorlw	3	; case 6
 12346  0007F2  B4D8               	btfsc	status,2,c
 12347  0007F4  D7A1               	goto	l1870
 12348  0007F6  0A01               	xorlw	1	; case 7
 12349  0007F8  B4D8               	btfsc	status,2,c
 12350  0007FA  D7D3               	goto	l1872
 12351  0007FC  0A0F               	xorlw	15	; case 8
 12352  0007FE  A4D8               	btfss	status,2,c
 12353  000800  0012               	return	
 12354  000802  D7DF               	goto	l1874
 12355  000804                     __end_of_Term_MainSm:
 12356                           	opt stack 0
 12357                           tosu	equ	0xFFF
 12358                           tosh	equ	0xFFE
 12359                           tosl	equ	0xFFD
 12360                           pclath	equ	0xFFA
 12361                           tblptru	equ	0xFF8
 12362                           tblptrh	equ	0xFF7
 12363                           tblptrl	equ	0xFF6
 12364                           tablat	equ	0xFF5
 12365                           prodh	equ	0xFF4
 12366                           prodl	equ	0xFF3
 12367                           intcon	equ	0xFF2
 12368                           intcon2	equ	0xFF1
 12369                           intcon3	equ	0xFF0
 12370                           indf0	equ	0xFEF
 12371                           postinc0	equ	0xFEE
 12372                           plusw0	equ	0xFEB
 12373                           fsr0h	equ	0xFEA
 12374                           fsr0l	equ	0xFE9
 12375                           wreg	equ	0xFE8
 12376                           indf1	equ	0xFE7
 12377                           postinc1	equ	0xFE6
 12378                           postdec1	equ	0xFE5
 12379                           fsr1h	equ	0xFE2
 12380                           fsr1l	equ	0xFE1
 12381                           indf2	equ	0xFDF
 12382                           postinc2	equ	0xFDE
 12383                           postdec2	equ	0xFDD
 12384                           plusw2	equ	0xFDB
 12385                           fsr2h	equ	0xFDA
 12386                           fsr2l	equ	0xFD9
 12387                           status	equ	0xFD8
 12388                           
 12389 ;; *************** function _strlen *****************
 12390 ;; Defined at:
 12391 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 12392 ;; Parameters:    Size  Location     Type
 12393 ;;  s               2   21[BANK0 ] PTR const unsigned char 
 12394 ;;		 -> Term_MainSm@Data(50), 
 12395 ;; Auto vars:     Size  Location     Type
 12396 ;;  cp              2   25[BANK0 ] PTR const unsigned char 
 12397 ;;		 -> Term_MainSm@Data(50), 
 12398 ;; Return value:  Size  Location     Type
 12399 ;;                  2   21[BANK0 ] unsigned int 
 12400 ;; Registers used:
 12401 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12402 ;; Tracked objects:
 12403 ;;		On entry : 0/0
 12404 ;;		On exit  : 0/0
 12405 ;;		Unchanged: 0/0
 12406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12407 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12408 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12409 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12410 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12411 ;;Total ram usage:        6 bytes
 12412 ;; Hardware stack levels used:    1
 12413 ;; Hardware stack levels required when called:    9
 12414 ;; This function calls:
 12415 ;;		Nothing
 12416 ;; This function is called by:
 12417 ;;		_Term_MainSm
 12418 ;; This function uses a non-reentrant model
 12419 ;;
 12420                           
 12421                           	psect	text53
 12422  003D8E                     __ptext53:
 12423                           	opt stack 0
 12424  003D8E                     _strlen:
 12425                           	opt stack 17
 12426                           
 12427                           ;incstack = 0
 12428  003D8E  C075  F079         	movff	strlen@s,strlen@cp
 12429  003D92  C076  F07A         	movff	strlen@s+1,strlen@cp+1
 12430  003D96  D003               	goto	l2566
 12431  003D98  0100               	movlb	0	; () banked
 12432  003D9A  4B79               	infsnz	strlen@cp& (0+255),f,b
 12433  003D9C  2B7A               	incf	(strlen@cp+1)& (0+255),f,b
 12434  003D9E                     l2566:
 12435                           
 12436                           ; BSR set to: 0
 12437  003D9E  C079  FFD9         	movff	strlen@cp,fsr2l
 12438  003DA2  C07A  FFDA         	movff	strlen@cp+1,fsr2h
 12439  003DA6  50DF               	movf	indf2,w,c
 12440  003DA8  A4D8               	btfss	status,2,c
 12441  003DAA  D7F6               	goto	l2567
 12442  003DAC  C075  F077         	movff	strlen@s,??_strlen
 12443  003DB0  C076  F078         	movff	strlen@s+1,??_strlen+1
 12444  003DB4  0100               	movlb	0	; () banked
 12445  003DB6  1F77               	comf	??_strlen& (0+255),f,b
 12446  003DB8  1F78               	comf	(??_strlen+1)& (0+255),f,b
 12447  003DBA  4B77               	infsnz	??_strlen& (0+255),f,b
 12448  003DBC  2B78               	incf	(??_strlen+1)& (0+255),f,b
 12449  003DBE  5179               	movf	strlen@cp& (0+255),w,b
 12450  003DC0  2577               	addwf	??_strlen& (0+255),w,b
 12451  003DC2  6F75               	movwf	?_strlen& (0+255),b
 12452  003DC4  517A               	movf	(strlen@cp+1)& (0+255),w,b
 12453  003DC6  2178               	addwfc	(??_strlen+1)& (0+255),w,b
 12454  003DC8  6F76               	movwf	(?_strlen+1)& (0+255),b
 12455  003DCA  0012               	return	
 12456  003DCC                     __end_of_strlen:
 12457                           	opt stack 0
 12458                           tosu	equ	0xFFF
 12459                           tosh	equ	0xFFE
 12460                           tosl	equ	0xFFD
 12461                           pclath	equ	0xFFA
 12462                           tblptru	equ	0xFF8
 12463                           tblptrh	equ	0xFF7
 12464                           tblptrl	equ	0xFF6
 12465                           tablat	equ	0xFF5
 12466                           prodh	equ	0xFF4
 12467                           prodl	equ	0xFF3
 12468                           intcon	equ	0xFF2
 12469                           intcon2	equ	0xFF1
 12470                           intcon3	equ	0xFF0
 12471                           indf0	equ	0xFEF
 12472                           postinc0	equ	0xFEE
 12473                           plusw0	equ	0xFEB
 12474                           fsr0h	equ	0xFEA
 12475                           fsr0l	equ	0xFE9
 12476                           wreg	equ	0xFE8
 12477                           indf1	equ	0xFE7
 12478                           postinc1	equ	0xFE6
 12479                           postdec1	equ	0xFE5
 12480                           fsr1h	equ	0xFE2
 12481                           fsr1l	equ	0xFE1
 12482                           indf2	equ	0xFDF
 12483                           postinc2	equ	0xFDE
 12484                           postdec2	equ	0xFDD
 12485                           plusw2	equ	0xFDB
 12486                           fsr2h	equ	0xFDA
 12487                           fsr2l	equ	0xFD9
 12488                           status	equ	0xFD8
 12489                           
 12490 ;; *************** function _strcat *****************
 12491 ;; Defined at:
 12492 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 12493 ;; Parameters:    Size  Location     Type
 12494 ;;  to              2   21[BANK0 ] PTR unsigned char 
 12495 ;;		 -> Term_MainSm@Data(50), 
 12496 ;;  from            2   23[BANK0 ] PTR const unsigned char 
 12497 ;;		 -> STR_6(3), STR_5(2), STR_4(2), Term_MainSm@FwkBuildStr(4), 
 12498 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;  cp              2   25[BANK0 ] PTR unsigned char 
 12501 ;;		 -> Term_MainSm@Data(50), 
 12502 ;; Return value:  Size  Location     Type
 12503 ;;                  2   21[BANK0 ] PTR unsigned char 
 12504 ;; Registers used:
 12505 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12506 ;; Tracked objects:
 12507 ;;		On entry : 0/0
 12508 ;;		On exit  : 0/0
 12509 ;;		Unchanged: 0/0
 12510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12511 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12512 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12514 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12515 ;;Total ram usage:        6 bytes
 12516 ;; Hardware stack levels used:    1
 12517 ;; Hardware stack levels required when called:    9
 12518 ;; This function calls:
 12519 ;;		Nothing
 12520 ;; This function is called by:
 12521 ;;		_Term_MainSm
 12522 ;; This function uses a non-reentrant model
 12523 ;;
 12524                           
 12525                           	psect	text54
 12526  0038BC                     __ptext54:
 12527                           	opt stack 0
 12528  0038BC                     _strcat:
 12529                           	opt stack 17
 12530                           
 12531                           ; BSR set to: 0
 12532                           ;incstack = 0
 12533  0038BC  C075  F079         	movff	strcat@to,strcat@cp
 12534  0038C0  C076  F07A         	movff	strcat@to+1,strcat@cp+1
 12535  0038C4  D003               	goto	l2551
 12536  0038C6  0100               	movlb	0	; () banked
 12537  0038C8  4B79               	infsnz	strcat@cp& (0+255),f,b
 12538  0038CA  2B7A               	incf	(strcat@cp+1)& (0+255),f,b
 12539  0038CC                     l2551:
 12540                           
 12541                           ; BSR set to: 0
 12542  0038CC  C079  FFD9         	movff	strcat@cp,fsr2l
 12543  0038D0  C07A  FFDA         	movff	strcat@cp+1,fsr2h
 12544  0038D4  50DF               	movf	indf2,w,c
 12545  0038D6  B4D8               	btfsc	status,2,c
 12546  0038D8  D006               	goto	l2554
 12547  0038DA  D7F5               	goto	l2552
 12548  0038DC  0100               	movlb	0	; () banked
 12549  0038DE  4B79               	infsnz	strcat@cp& (0+255),f,b
 12550  0038E0  2B7A               	incf	(strcat@cp+1)& (0+255),f,b
 12551  0038E2  4B77               	infsnz	strcat@from& (0+255),f,b
 12552  0038E4  2B78               	incf	(strcat@from+1)& (0+255),f,b
 12553  0038E6                     l2554:
 12554                           
 12555                           ; BSR set to: 0
 12556  0038E6  C077  FFF6         	movff	strcat@from,tblptrl
 12557  0038EA  C078  FFF7         	movff	strcat@from+1,tblptrh
 12558  0038EE  6AF8               	clrf	tblptru,c
 12559  0038F0  C079  FFD9         	movff	strcat@cp,fsr2l
 12560  0038F4  C07A  FFDA         	movff	strcat@cp+1,fsr2h
 12561  0038F8  0E0E               	movlw	(high __ramtop+-1)
 12562  0038FA  64F7               	cpfsgt	tblptrh,c
 12563  0038FC  D003               	bra	u6337
 12564  0038FE  0008               	tblrd		*
 12565  003900  50F5               	movf	tablat,w,c
 12566  003902  D005               	bra	u6330
 12567  003904                     u6337:
 12568  003904  CFF6 FFE9          	movff	tblptrl,fsr0l
 12569  003908  CFF7 FFEA          	movff	tblptrh,fsr0h
 12570  00390C  50EF               	movf	indf0,w,c
 12571  00390E                     u6330:
 12572  00390E  6EDF               	movwf	indf2,c
 12573  003910  50DF               	movf	indf2,w,c
 12574  003912  B4D8               	btfsc	status,2,c
 12575  003914  0012               	return	
 12576  003916  D7E2               	goto	l2555
 12577  003918                     __end_of_strcat:
 12578                           	opt stack 0
 12579                           tosu	equ	0xFFF
 12580                           tosh	equ	0xFFE
 12581                           tosl	equ	0xFFD
 12582                           pclath	equ	0xFFA
 12583                           tblptru	equ	0xFF8
 12584                           tblptrh	equ	0xFF7
 12585                           tblptrl	equ	0xFF6
 12586                           tablat	equ	0xFF5
 12587                           prodh	equ	0xFF4
 12588                           prodl	equ	0xFF3
 12589                           intcon	equ	0xFF2
 12590                           intcon2	equ	0xFF1
 12591                           intcon3	equ	0xFF0
 12592                           indf0	equ	0xFEF
 12593                           postinc0	equ	0xFEE
 12594                           plusw0	equ	0xFEB
 12595                           fsr0h	equ	0xFEA
 12596                           fsr0l	equ	0xFE9
 12597                           wreg	equ	0xFE8
 12598                           indf1	equ	0xFE7
 12599                           postinc1	equ	0xFE6
 12600                           postdec1	equ	0xFE5
 12601                           fsr1h	equ	0xFE2
 12602                           fsr1l	equ	0xFE1
 12603                           indf2	equ	0xFDF
 12604                           postinc2	equ	0xFDE
 12605                           postdec2	equ	0xFDD
 12606                           plusw2	equ	0xFDB
 12607                           fsr2h	equ	0xFDA
 12608                           fsr2l	equ	0xFD9
 12609                           status	equ	0xFD8
 12610                           
 12611 ;; *************** function _sprintf *****************
 12612 ;; Defined at:
 12613 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 12614 ;; Parameters:    Size  Location     Type
 12615 ;;  sp              2   21[BANK0 ] PTR unsigned char 
 12616 ;;		 -> Term_MainSm@Data(50), 
 12617 ;;  f               2   23[BANK0 ] PTR const unsigned char 
 12618 ;;		 -> STR_7(17), 
 12619 ;; Auto vars:     Size  Location     Type
 12620 ;;  tmpval          4    0        struct .
 12621 ;;  cp              2   31[BANK0 ] PTR const unsigned char 
 12622 ;;		 -> STR_9(7), STR_8(12), 
 12623 ;;  ap              2   28[BANK0 ] PTR void [1]
 12624 ;;		 -> ?_sprintf(2), 
 12625 ;;  len             2    0        unsigned int 
 12626 ;;  val             2    0        unsigned int 
 12627 ;;  c               1   30[BANK0 ] char 
 12628 ;;  flag            1   27[BANK0 ] unsigned char 
 12629 ;;  prec            1    0        char 
 12630 ;; Return value:  Size  Location     Type
 12631 ;;                  2   21[BANK0 ] int 
 12632 ;; Registers used:
 12633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12634 ;; Tracked objects:
 12635 ;;		On entry : 0/0
 12636 ;;		On exit  : 0/0
 12637 ;;		Unchanged: 0/0
 12638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12639 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12640 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12642 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12643 ;;Total ram usage:       12 bytes
 12644 ;; Hardware stack levels used:    1
 12645 ;; Hardware stack levels required when called:    9
 12646 ;; This function calls:
 12647 ;;		Nothing
 12648 ;; This function is called by:
 12649 ;;		_Term_MainSm
 12650 ;; This function uses a non-reentrant model
 12651 ;;
 12652                           
 12653                           	psect	text55
 12654  0021DE                     __ptext55:
 12655                           	opt stack 0
 12656  0021DE                     _sprintf:
 12657                           	opt stack 17
 12658                           
 12659                           ;doprnt.c: 494: va_list ap;
 12660                           ;doprnt.c: 499: signed char c;
 12661                           ;doprnt.c: 506: signed char prec;
 12662                           ;doprnt.c: 508: unsigned char flag;
 12663                           ;doprnt.c: 523: union {
 12664                           ;doprnt.c: 524: unsigned long vd;
 12665                           ;doprnt.c: 525: double integ;
 12666                           ;doprnt.c: 526: } tmpval;
 12667                           ;doprnt.c: 528: unsigned int val;
 12668                           ;doprnt.c: 529: unsigned len;
 12669                           ;doprnt.c: 530: const char * cp;
 12670                           ;doprnt.c: 533: *ap = __va_start();
 12671                           
 12672                           ;incstack = 0
 12673  0021DE  0E79               	movlw	low (?_sprintf+4)
 12674  0021E0  0100               	movlb	0	; () banked
 12675  0021E2  6F7C               	movwf	sprintf@ap& (0+255),b
 12676  0021E4  0E00               	movlw	high (?_sprintf+4)
 12677  0021E6  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
 12678                           
 12679                           ;doprnt.c: 536: while(c = *f++) {
 12680  0021E8  D04E               	goto	l1955
 12681  0021EA                     
 12682                           ; BSR set to: 0
 12683                           ;doprnt.c: 538: if(c != '%')
 12684                           
 12685                           ; BSR set to: 0
 12686  0021EA  0E25               	movlw	37
 12687  0021EC  197E               	xorwf	sprintf@c& (0+255),w,b
 12688  0021EE  B4D8               	btfsc	status,2,c
 12689  0021F0  D009               	goto	l1945
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;doprnt.c: 540: {
 12693                           ;doprnt.c: 541: ((*sp++ = (c)));
 12694  0021F2  C075  FFD9         	movff	sprintf@sp,fsr2l
 12695  0021F6  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12696  0021FA  C07E  FFDF         	movff	sprintf@c,indf2
 12697                           
 12698                           ; BSR set to: 0
 12699  0021FE  4B75               	infsnz	sprintf@sp& (0+255),f,b
 12700  002200  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 12701                           
 12702                           ;doprnt.c: 542: continue;
 12703  002202  D041               	goto	l1955
 12704  002204                     l1945:
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;doprnt.c: 543: }
 12708                           ;doprnt.c: 548: flag = 0;
 12709                           
 12710                           ; BSR set to: 0
 12711  002204  0E00               	movlw	0
 12712  002206  6F7B               	movwf	sprintf@flag& (0+255),b
 12713                           
 12714                           ;doprnt.c: 635: switch(c = *f++) {
 12715  002208  D02E               	goto	l1946
 12716  00220A                     
 12717                           ; BSR set to: 0
 12718                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 12719                           
 12720                           ; BSR set to: 0
 12721  00220A  C07C  FFD9         	movff	sprintf@ap,fsr2l
 12722  00220E  C07D  FFDA         	movff	sprintf@ap+1,fsr2h
 12723  002212  CFDE F07F          	movff	postinc2,sprintf@cp
 12724  002216  CFDD F080          	movff	postdec2,sprintf@cp+1
 12725                           
 12726                           ; BSR set to: 0
 12727  00221A  0E02               	movlw	2
 12728  00221C  277C               	addwf	sprintf@ap& (0+255),f,b
 12729  00221E  0E00               	movlw	0
 12730  002220  237D               	addwfc	(sprintf@ap+1)& (0+255),f,b
 12731                           
 12732                           ; BSR set to: 0
 12733                           ;doprnt.c: 740: if(!cp)
 12734  002222  517F               	movf	sprintf@cp& (0+255),w,b
 12735  002224  1180               	iorwf	(sprintf@cp+1)& (0+255),w,b
 12736  002226  A4D8               	btfss	status,2,c
 12737  002228  D014               	goto	l1951
 12738                           
 12739                           ; BSR set to: 0
 12740                           ;doprnt.c: 741: cp = "(null)";
 12741  00222A  0EED               	movlw	low STR_9
 12742  00222C  6F7F               	movwf	sprintf@cp& (0+255),b
 12743  00222E  0EFF               	movlw	high STR_9
 12744  002230  6F80               	movwf	(sprintf@cp+1)& (0+255),b
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;doprnt.c: 777: while(*cp)
 12748  002232  D00F               	goto	l1951
 12749  002234                     
 12750                           ; BSR set to: 0
 12751                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 12752                           
 12753                           ; BSR set to: 0
 12754  002234  C07F  FFF6         	movff	sprintf@cp,tblptrl
 12755  002238  C080  FFF7         	movff	sprintf@cp+1,tblptrh
 12756  00223C                     	if	0	;tblptru may be non-zero
 12757  00223C                     	endif
 12758  00223C                     	if	0	;tblptru may be non-zero
 12759  00223C                     	endif
 12760  00223C  C075  FFD9         	movff	sprintf@sp,fsr2l
 12761  002240  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12762  002244  0008               	tblrd		*
 12763  002246  CFF5 FFDF          	movff	tablat,indf2
 12764                           
 12765                           ; BSR set to: 0
 12766  00224A  4B7F               	infsnz	sprintf@cp& (0+255),f,b
 12767  00224C  2B80               	incf	(sprintf@cp+1)& (0+255),f,b
 12768                           
 12769                           ; BSR set to: 0
 12770  00224E  4B75               	infsnz	sprintf@sp& (0+255),f,b
 12771  002250  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 12772  002252                     l1951:
 12773                           
 12774                           ; BSR set to: 0
 12775                           
 12776                           ; BSR set to: 0
 12777  002252  C07F  FFF6         	movff	sprintf@cp,tblptrl
 12778  002256  C080  FFF7         	movff	sprintf@cp+1,tblptrh
 12779  00225A                     	if	0	;tblptru may be non-zero
 12780  00225A                     	endif
 12781  00225A                     	if	0	;tblptru may be non-zero
 12782  00225A                     	endif
 12783  00225A  0008               	tblrd		*
 12784  00225C  50F5               	movf	tablat,w,c
 12785  00225E  0900               	iorlw	0
 12786  002260  B4D8               	btfsc	status,2,c
 12787  002262  D011               	goto	l1955
 12788  002264  D7E7               	goto	l1952
 12789  002266                     l1946:
 12790                           
 12791                           ; BSR set to: 0
 12792                           
 12793                           ; BSR set to: 0
 12794  002266  C077  FFF6         	movff	sprintf@f,tblptrl
 12795  00226A  C078  FFF7         	movff	sprintf@f+1,tblptrh
 12796  00226E  4B77               	infsnz	sprintf@f& (0+255),f,b
 12797  002270  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 12798  002272                     	if	0	;tblptru may be non-zero
 12799  002272                     	endif
 12800  002272                     	if	0	;tblptru may be non-zero
 12801  002272                     	endif
 12802  002272  0008               	tblrd		*
 12803  002274  CFF5 F07E          	movff	tablat,sprintf@c
 12804  002278  517E               	movf	sprintf@c& (0+255),w,b
 12805                           
 12806                           ; Switch size 1, requested type "space"
 12807                           ; Number of cases is 2, Range of values is 0 to 115
 12808                           ; switch strategies available:
 12809                           ; Name         Instructions Cycles
 12810                           ; simple_byte            7     4 (average)
 12811                           ;	Chosen strategy is simple_byte
 12812  00227A  0A00               	xorlw	0	; case 0
 12813  00227C  B4D8               	btfsc	status,2,c
 12814  00227E  D00F               	goto	u6390
 12815  002280  0A73               	xorlw	115	; case 115
 12816  002282  B4D8               	btfsc	status,2,c
 12817  002284  D7C2               	goto	l1949
 12818  002286                     l1955:
 12819                           
 12820                           ; BSR set to: 0
 12821                           
 12822                           ; BSR set to: 0
 12823                           
 12824                           ;doprnt.c: 1422: {
 12825                           
 12826                           ; BSR set to: 0
 12827  002286  C077  FFF6         	movff	sprintf@f,tblptrl
 12828  00228A  C078  FFF7         	movff	sprintf@f+1,tblptrh
 12829  00228E  4B77               	infsnz	sprintf@f& (0+255),f,b
 12830  002290  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 12831  002292                     	if	0	;tblptru may be non-zero
 12832  002292                     	endif
 12833  002292                     	if	0	;tblptru may be non-zero
 12834  002292                     	endif
 12835  002292  0008               	tblrd		*
 12836  002294  CFF5 F07E          	movff	tablat,sprintf@c
 12837  002298  517E               	movf	sprintf@c& (0+255),w,b
 12838  00229A  A4D8               	btfss	status,2,c
 12839  00229C  D7A6               	goto	l1944
 12840  00229E                     u6390:
 12841                           
 12842                           ; BSR set to: 0
 12843                           ;doprnt.c: 1538: *sp = 0;
 12844                           
 12845                           ; BSR set to: 0
 12846                           
 12847                           ;doprnt.c: 1469: }
 12848                           ;doprnt.c: 1533: }
 12849                           ;doprnt.c: 1535: alldone:
 12850                           
 12851                           ; BSR set to: 0
 12852  00229E  C075  FFD9         	movff	sprintf@sp,fsr2l
 12853  0022A2  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12854  0022A6  0E00               	movlw	0
 12855  0022A8  6EDF               	movwf	indf2,c
 12856  0022AA  0012               	return	
 12857  0022AC                     __end_of_sprintf:
 12858                           	opt stack 0
 12859                           tosu	equ	0xFFF
 12860                           tosh	equ	0xFFE
 12861                           tosl	equ	0xFFD
 12862                           pclath	equ	0xFFA
 12863                           tblptru	equ	0xFF8
 12864                           tblptrh	equ	0xFF7
 12865                           tblptrl	equ	0xFF6
 12866                           tablat	equ	0xFF5
 12867                           prodh	equ	0xFF4
 12868                           prodl	equ	0xFF3
 12869                           intcon	equ	0xFF2
 12870                           intcon2	equ	0xFF1
 12871                           intcon3	equ	0xFF0
 12872                           indf0	equ	0xFEF
 12873                           postinc0	equ	0xFEE
 12874                           plusw0	equ	0xFEB
 12875                           fsr0h	equ	0xFEA
 12876                           fsr0l	equ	0xFE9
 12877                           wreg	equ	0xFE8
 12878                           indf1	equ	0xFE7
 12879                           postinc1	equ	0xFE6
 12880                           postdec1	equ	0xFE5
 12881                           fsr1h	equ	0xFE2
 12882                           fsr1l	equ	0xFE1
 12883                           indf2	equ	0xFDF
 12884                           postinc2	equ	0xFDE
 12885                           postdec2	equ	0xFDD
 12886                           plusw2	equ	0xFDB
 12887                           fsr2h	equ	0xFDA
 12888                           fsr2l	equ	0xFD9
 12889                           status	equ	0xFD8
 12890                           
 12891 ;; *************** function _memset *****************
 12892 ;; Defined at:
 12893 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 12894 ;; Parameters:    Size  Location     Type
 12895 ;;  p1              2   21[BANK0 ] PTR void 
 12896 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 12897 ;;  c               2   23[BANK0 ] int 
 12898 ;;  n               2   25[BANK0 ] unsigned int 
 12899 ;; Auto vars:     Size  Location     Type
 12900 ;;  p               2   27[BANK0 ] PTR unsigned char 
 12901 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 12902 ;; Return value:  Size  Location     Type
 12903 ;;                  2   21[BANK0 ] PTR void 
 12904 ;; Registers used:
 12905 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12906 ;; Tracked objects:
 12907 ;;		On entry : 0/0
 12908 ;;		On exit  : 0/0
 12909 ;;		Unchanged: 0/0
 12910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12911 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12912 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12914 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12915 ;;Total ram usage:        8 bytes
 12916 ;; Hardware stack levels used:    1
 12917 ;; Hardware stack levels required when called:    9
 12918 ;; This function calls:
 12919 ;;		Nothing
 12920 ;; This function is called by:
 12921 ;;		_USBDeviceInit
 12922 ;;		_USBStdSetCfgHandler
 12923 ;;		_Term_MainSm
 12924 ;; This function uses a non-reentrant model
 12925 ;;
 12926                           
 12927                           	psect	text56
 12928  003F80                     __ptext56:
 12929                           	opt stack 0
 12930  003F80                     _memset:
 12931                           	opt stack 16
 12932                           
 12933                           ; BSR set to: 0
 12934                           ;incstack = 0
 12935  003F80  C075  F07B         	movff	memset@p1,memset@p
 12936  003F84  C076  F07C         	movff	memset@p1+1,memset@p+1
 12937  003F88  D009               	goto	l2425
 12938  003F8A                     l6074:
 12939  003F8A  C07B  FFD9         	movff	memset@p,fsr2l
 12940  003F8E  C07C  FFDA         	movff	memset@p+1,fsr2h
 12941  003F92  C077  FFDF         	movff	memset@c,indf2
 12942  003F96  0100               	movlb	0	; () banked
 12943  003F98  4B7B               	infsnz	memset@p& (0+255),f,b
 12944  003F9A  2B7C               	incf	(memset@p+1)& (0+255),f,b
 12945  003F9C                     l2425:
 12946                           
 12947                           ; BSR set to: 0
 12948  003F9C  0100               	movlb	0	; () banked
 12949  003F9E  0779               	decf	memset@n& (0+255),f,b
 12950  003FA0  A0D8               	btfss	status,0,c
 12951  003FA2  077A               	decf	(memset@n+1)& (0+255),f,b
 12952  003FA4  2979               	incf	memset@n& (0+255),w,b
 12953  003FA6  E1F1               	bnz	l6074
 12954  003FA8  297A               	incf	(memset@n+1)& (0+255),w,b
 12955  003FAA  B4D8               	btfsc	status,2,c
 12956  003FAC  0012               	return	
 12957  003FAE  D7ED               	goto	l2426
 12958  003FB0                     __end_of_memset:
 12959                           	opt stack 0
 12960                           tosu	equ	0xFFF
 12961                           tosh	equ	0xFFE
 12962                           tosl	equ	0xFFD
 12963                           pclath	equ	0xFFA
 12964                           tblptru	equ	0xFF8
 12965                           tblptrh	equ	0xFF7
 12966                           tblptrl	equ	0xFF6
 12967                           tablat	equ	0xFF5
 12968                           prodh	equ	0xFF4
 12969                           prodl	equ	0xFF3
 12970                           intcon	equ	0xFF2
 12971                           intcon2	equ	0xFF1
 12972                           intcon3	equ	0xFF0
 12973                           indf0	equ	0xFEF
 12974                           postinc0	equ	0xFEE
 12975                           plusw0	equ	0xFEB
 12976                           fsr0h	equ	0xFEA
 12977                           fsr0l	equ	0xFE9
 12978                           wreg	equ	0xFE8
 12979                           indf1	equ	0xFE7
 12980                           postinc1	equ	0xFE6
 12981                           postdec1	equ	0xFE5
 12982                           fsr1h	equ	0xFE2
 12983                           fsr1l	equ	0xFE1
 12984                           indf2	equ	0xFDF
 12985                           postinc2	equ	0xFDE
 12986                           postdec2	equ	0xFDD
 12987                           plusw2	equ	0xFDB
 12988                           fsr2h	equ	0xFDA
 12989                           fsr2l	equ	0xFD9
 12990                           status	equ	0xFD8
 12991                           
 12992 ;; *************** function _Terminal *****************
 12993 ;; Defined at:
 12994 ;;		line 427 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 12995 ;; Parameters:    Size  Location     Type
 12996 ;;		None
 12997 ;; Auto vars:     Size  Location     Type
 12998 ;;  UsbRxBuffer   200    0[BANK7 ] unsigned char [200]
 12999 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 13000 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 13001 ;;  Index           1   61[BANK0 ] unsigned char 
 13002 ;;  ReceivedByte    1   60[BANK0 ] unsigned char 
 13003 ;; Return value:  Size  Location     Type
 13004 ;;                  1    wreg      void 
 13005 ;; Registers used:
 13006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13007 ;; Tracked objects:
 13008 ;;		On entry : 0/0
 13009 ;;		On exit  : 0/0
 13010 ;;		Unchanged: 0/0
 13011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13013 ;;      Locals:         0       2      50     200       0       0       0       0     200       0       0       0       
      +0       0       0       0
 13014 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13015 ;;      Totals:         0       4      50     200       0       0       0       0     200       0       0       0       
      +0       0       0       0
 13016 ;;Total ram usage:      454 bytes
 13017 ;; Hardware stack levels used:    1
 13018 ;; Hardware stack levels required when called:   13
 13019 ;; This function calls:
 13020 ;;		_I2cSlv_I2cReadMsgSts
 13021 ;;		_I2cSlv_ReceiveI2cMsg
 13022 ;;		_I2cSlv_SendI2cMsg
 13023 ;;		_OsTmr_Wait
 13024 ;;		_atoi
 13025 ;;		_getsUSBUSART
 13026 ;;		_itoa
 13027 ;;		_putUSBUSART
 13028 ;;		_strcpy
 13029 ;;		_strtol
 13030 ;;		_xtoi
 13031 ;; This function is called by:
 13032 ;;		_Term_MainSm
 13033 ;; This function uses a non-reentrant model
 13034 ;;
 13035                           
 13036                           	psect	text57
 13037  0000D0                     __ptext57:
 13038                           	opt stack 0
 13039  0000D0                     _Terminal:
 13040                           	opt stack 13
 13041                           
 13042                           ;term.c: 429: static TermStateType TermState = Term_GetData;
 13043                           ;term.c: 430: UINT8 UsbRxBuffer[200u];
 13044                           ;term.c: 431: UINT8 UsbTxBuffer[200u];
 13045                           ;term.c: 432: UINT8 TermTxBuffer[50u];
 13046                           ;term.c: 433: static UINT8 TermRxBuffer[50u];
 13047                           ;term.c: 434: UINT8 Index;
 13048                           ;term.c: 435: static UINT8 Len[4];
 13049                           ;term.c: 436: static UINT8 PackageLen;
 13050                           ;term.c: 437: static UINT8 Addr[4];
 13051                           ;term.c: 438: static UINT8 SlaveAddr;
 13052                           ;term.c: 439: static PayloadType Payload[20u];
 13053                           ;term.c: 440: UINT8 ReceivedBytes = 0;
 13054                           
 13055                           ; BSR set to: 0
 13056                           ;incstack = 0
 13057  0000D0  0E00               	movlw	0
 13058  0000D2  0100               	movlb	0	; () banked
 13059  0000D4  6F9C               	movwf	Terminal@ReceivedBytes& (0+255),b
 13060                           
 13061                           ; BSR set to: 0
 13062                           ;term.c: 442: static UINT8 FormatOption = 0u;
 13063                           ;term.c: 443: static UINT8 EchoOption = 1u;
 13064                           ;term.c: 444: static SwTimerType SwTimer;
 13065                           ;term.c: 447: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 13066  0000D6  0E1F               	movlw	31
 13067  0000D8  65D1               	cpfsgt	_USBDeviceState& (0+255),b
 13068  0000DA  0012               	return	
 13069                           
 13070                           ; BSR set to: 0
 13071  0000DC  B265               	btfsc	3941,1,c	;volatile
 13072  0000DE  0012               	return	
 13073  0000E0  D232               	goto	l1799
 13074  0000E2                     
 13075                           ;term.c: 454: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 13076                           
 13077                           ; BSR set to: 0
 13078  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 13079  0000E4  0100               	movlb	0	; () banked
 13080  0000E6  6F7C               	movwf	getsUSBUSART@buffer& (0+255),b
 13081  0000E8  0E07               	movlw	high Terminal@UsbRxBuffer
 13082  0000EA  6F7D               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 13083  0000EC  0EC8               	movlw	200
 13084  0000EE  6F7E               	movwf	getsUSBUSART@len& (0+255),b
 13085  0000F0  EC11  F018         	call	_getsUSBUSART	;wreg free
 13086  0000F4  0100               	movlb	0	; () banked
 13087  0000F6  6F9C               	movwf	Terminal@ReceivedBytes& (0+255),b
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;term.c: 457: if (ReceivedBytes > 0)
 13091  0000F8  519C               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13092  0000FA  B4D8               	btfsc	status,2,c
 13093  0000FC  0012               	return	
 13094                           
 13095                           ; BSR set to: 0
 13096                           ;term.c: 458: {
 13097                           ;term.c: 460: if (EchoOption == 1u)
 13098  0000FE  0102               	movlb	2	; () banked
 13099  000100  05FE               	decf	Terminal@EchoOption& (0+255),w,b
 13100  000102  A4D8               	btfss	status,2,c
 13101  000104  D026               	goto	l1803
 13102                           
 13103                           ; BSR set to: 2
 13104                           ;term.c: 461: {
 13105                           ;term.c: 463: if((cdc_trf_state == 0))
 13106  000106  0100               	movlb	0	; () banked
 13107  000108  51C2               	movf	_cdc_trf_state& (0+255),w,b
 13108  00010A  A4D8               	btfss	status,2,c
 13109  00010C  D022               	goto	l1803
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;term.c: 464: {
 13113                           ;term.c: 465: UsbRxBuffer[ReceivedBytes] = '\r';
 13114  00010E  519C               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13115  000110  0D01               	mullw	1
 13116  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 13117  000114  24F3               	addwf	prodl,w,c
 13118  000116  6ED9               	movwf	fsr2l,c
 13119  000118  0E07               	movlw	high Terminal@UsbRxBuffer
 13120  00011A  20F4               	addwfc	prodh,w,c
 13121  00011C  6EDA               	movwf	fsr2h,c
 13122  00011E  0E0D               	movlw	13
 13123  000120  6EDF               	movwf	indf2,c
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;term.c: 466: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 13127  000122  519C               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13128  000124  6F9A               	movwf	??_Terminal& (0+255),b
 13129  000126  6B9B               	clrf	(??_Terminal+1)& (0+255),b
 13130  000128  0E01               	movlw	1
 13131  00012A  279A               	addwf	??_Terminal& (0+255),f,b
 13132  00012C  0E00               	movlw	0
 13133  00012E  239B               	addwfc	(??_Terminal+1)& (0+255),f,b
 13134  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 13135  000132  259A               	addwf	??_Terminal& (0+255),w,b
 13136  000134  6ED9               	movwf	fsr2l,c
 13137  000136  0E07               	movlw	high Terminal@UsbRxBuffer
 13138  000138  219B               	addwfc	(??_Terminal+1)& (0+255),w,b
 13139  00013A  6EDA               	movwf	fsr2h,c
 13140  00013C  0E0A               	movlw	10
 13141  00013E  6EDF               	movwf	indf2,c
 13142                           
 13143                           ; BSR set to: 0
 13144                           ;term.c: 467: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 13145  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 13146  000142  6F7B               	movwf	putUSBUSART@data& (0+255),b
 13147  000144  0E07               	movlw	high Terminal@UsbRxBuffer
 13148  000146  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 13149  000148  519C               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13150  00014A  0F02               	addlw	2
 13151  00014C  6F7D               	movwf	putUSBUSART@length& (0+255),b
 13152  00014E  EC34  F021         	call	_putUSBUSART	;wreg free
 13153  000152                     l1803:
 13154                           
 13155                           ;term.c: 468: }
 13156                           ;term.c: 469: }
 13157                           ;term.c: 472: if ((UsbRxBuffer[0u] == 'S') &&
 13158                           ;term.c: 473: (UsbRxBuffer[0u + 1u] == 'O') &&
 13159                           ;term.c: 474: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 13160  000152  0E53               	movlw	83
 13161  000154  0107               	movlb	7	; () banked
 13162  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 13163  000158  A4D8               	btfss	status,2,c
 13164  00015A  D043               	goto	l1804
 13165                           
 13166                           ; BSR set to: 7
 13167  00015C  0E4F               	movlw	79
 13168  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 13169  000160  A4D8               	btfss	status,2,c
 13170  000162  D03F               	goto	l1804
 13171                           
 13172                           ; BSR set to: 7
 13173  000164  0E3A               	movlw	58
 13174  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 13175  000168  A4D8               	btfss	status,2,c
 13176  00016A  D03B               	goto	l1804
 13177                           
 13178                           ; BSR set to: 7
 13179                           ;term.c: 475: {
 13180                           ;term.c: 477: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 13181  00016C  0E47               	movlw	71
 13182  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13183  000170  A4D8               	btfss	status,2,c
 13184  000172  0012               	return	
 13185                           
 13186                           ; BSR set to: 7
 13187  000174  0E3A               	movlw	58
 13188  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13189  000178  A4D8               	btfss	status,2,c
 13190  00017A  0012               	return	
 13191                           
 13192                           ; BSR set to: 7
 13193                           ;term.c: 478: {
 13194                           ;term.c: 480: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 13195  00017C  0E44               	movlw	68
 13196  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 13197  000180  A4D8               	btfss	status,2,c
 13198  000182  D015               	goto	l1806
 13199                           
 13200                           ; BSR set to: 7
 13201  000184  0E46               	movlw	70
 13202  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 13203  000188  A4D8               	btfss	status,2,c
 13204  00018A  D011               	goto	l1806
 13205                           
 13206                           ; BSR set to: 7
 13207                           ;term.c: 481: {
 13208                           ;term.c: 482: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 13209  00018C  0E41               	movlw	65
 13210  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13211  000190  A4D8               	btfss	status,2,c
 13212  000192  D004               	goto	l1807
 13213                           
 13214                           ; BSR set to: 7
 13215                           ;term.c: 483: {
 13216                           ;term.c: 484: FormatOption = 1u;
 13217  000194  0E01               	movlw	1
 13218  000196  0102               	movlb	2	; () banked
 13219  000198  6FD1               	movwf	Terminal@FormatOption& (0+255),b
 13220                           
 13221                           ;term.c: 485: }
 13222  00019A  0012               	return	
 13223  00019C                     l1807:
 13224                           
 13225                           ;term.c: 486: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 13226                           
 13227                           ; BSR set to: 2
 13228  00019C  0E42               	movlw	66
 13229  00019E  0107               	movlb	7	; () banked
 13230  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13231  0001A2  A4D8               	btfss	status,2,c
 13232  0001A4  0012               	return	
 13233                           
 13234                           ; BSR set to: 7
 13235                           ;term.c: 487: {
 13236                           ;term.c: 488: FormatOption = 0u;
 13237  0001A6  0E00               	movlw	0
 13238  0001A8  0102               	movlb	2	; () banked
 13239  0001AA  6FD1               	movwf	Terminal@FormatOption& (0+255),b
 13240                           
 13241                           ; BSR set to: 2
 13242                           ;term.c: 489: }
 13243                           ;term.c: 490: }
 13244                           
 13245                           ; BSR set to: 2
 13246  0001AC  0012               	return	
 13247  0001AE                     l1806:
 13248                           
 13249                           ;term.c: 492: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 13250                           
 13251                           ; BSR set to: 2
 13252  0001AE  0E45               	movlw	69
 13253  0001B0  0107               	movlb	7	; () banked
 13254  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 13255  0001B4  A4D8               	btfss	status,2,c
 13256  0001B6  0012               	return	
 13257                           
 13258                           ; BSR set to: 7
 13259  0001B8  0E4D               	movlw	77
 13260  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 13261  0001BC  A4D8               	btfss	status,2,c
 13262  0001BE  0012               	return	
 13263                           
 13264                           ; BSR set to: 7
 13265                           ;term.c: 493: {
 13266                           ;term.c: 494: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 13267  0001C0  0E31               	movlw	49
 13268  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13269  0001C4  A4D8               	btfss	status,2,c
 13270  0001C6  D004               	goto	l1812
 13271                           
 13272                           ; BSR set to: 7
 13273                           ;term.c: 495: {
 13274                           ;term.c: 496: EchoOption = 1u;
 13275  0001C8  0E01               	movlw	1
 13276  0001CA  0102               	movlb	2	; () banked
 13277  0001CC  6FFE               	movwf	Terminal@EchoOption& (0+255),b
 13278                           
 13279                           ;term.c: 497: }
 13280  0001CE  0012               	return	
 13281  0001D0                     l1812:
 13282                           
 13283                           ;term.c: 498: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 13284                           
 13285                           ; BSR set to: 2
 13286  0001D0  0E30               	movlw	48
 13287  0001D2  0107               	movlb	7	; () banked
 13288  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13289  0001D6  A4D8               	btfss	status,2,c
 13290  0001D8  0012               	return	
 13291                           
 13292                           ; BSR set to: 7
 13293                           ;term.c: 499: {
 13294                           ;term.c: 500: EchoOption = 0u;
 13295  0001DA  0E00               	movlw	0
 13296  0001DC  0102               	movlb	2	; () banked
 13297  0001DE  6FFE               	movwf	Terminal@EchoOption& (0+255),b
 13298                           
 13299                           ; BSR set to: 2
 13300                           ;term.c: 506: }
 13301                           ;term.c: 507: }
 13302                           ;term.c: 508: }
 13303                           
 13304                           ; BSR set to: 2
 13305                           
 13306                           ; BSR set to: 2
 13307                           
 13308                           ;term.c: 503: else
 13309                           ;term.c: 504: {
 13310                           
 13311                           ; BSR set to: 2
 13312                           
 13313                           ; BSR set to: 2
 13314                           ;term.c: 501: }
 13315                           ;term.c: 502: }
 13316                           
 13317                           ; BSR set to: 2
 13318  0001E0  0012               	return	
 13319  0001E2                     l1804:
 13320                           
 13321                           ;term.c: 509: else if ((UsbRxBuffer[0u] == 'S') &&
 13322                           ;term.c: 510: (UsbRxBuffer[0u + 1u] == 'B') &&
 13323                           ;term.c: 511: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 13324                           
 13325                           ; BSR set to: 2
 13326  0001E2  0E53               	movlw	83
 13327  0001E4  0107               	movlb	7	; () banked
 13328  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 13329  0001E8  A4D8               	btfss	status,2,c
 13330  0001EA  0012               	return	
 13331                           
 13332                           ; BSR set to: 7
 13333  0001EC  0E42               	movlw	66
 13334  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 13335  0001F0  A4D8               	btfss	status,2,c
 13336  0001F2  0012               	return	
 13337                           
 13338                           ; BSR set to: 7
 13339  0001F4  0E3A               	movlw	58
 13340  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 13341  0001F8  A4D8               	btfss	status,2,c
 13342  0001FA  0012               	return	
 13343                           
 13344                           ; BSR set to: 7
 13345                           ;term.c: 512: {
 13346                           ;term.c: 513: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 13347  0001FC  0E57               	movlw	87
 13348  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13349  000200  A4D8               	btfss	status,2,c
 13350  000202  D091               	goto	l1818
 13351                           
 13352                           ; BSR set to: 7
 13353  000204  0E3A               	movlw	58
 13354  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13355  000208  A4D8               	btfss	status,2,c
 13356  00020A  D08D               	goto	l1818
 13357                           
 13358                           ; BSR set to: 7
 13359                           ;term.c: 514: {
 13360                           ;term.c: 516: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 13361  00020C  C705  F2FA         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 13362                           
 13363                           ;term.c: 517: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 13364  000210  C706  F2FB         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 13365                           
 13366                           ;term.c: 519: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 13367  000214  C708  F2F6         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 13368                           
 13369                           ;term.c: 520: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 13370  000218  C709  F2F7         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 13371                           
 13372                           ; BSR set to: 7
 13373                           ;term.c: 522: PackageLen = atoi((void*)Len);
 13374  00021C  0EFA               	movlw	low Terminal@Len
 13375  00021E  0100               	movlb	0	; () banked
 13376  000220  6F7B               	movwf	atoi@s& (0+255),b
 13377  000222  0E02               	movlw	high Terminal@Len
 13378  000224  6F7C               	movwf	(atoi@s+1)& (0+255),b
 13379  000226  EC83  F010         	call	_atoi	;wreg free
 13380  00022A  0100               	movlb	0	; () banked
 13381  00022C  517B               	movf	?_atoi& (0+255),w,b
 13382  00022E  0102               	movlb	2	; () banked
 13383  000230  6FD3               	movwf	Terminal@PackageLen& (0+255),b
 13384                           
 13385                           ; BSR set to: 2
 13386                           ;term.c: 523: SlaveAddr = xtoi((void*)Addr);
 13387  000232  0EF6               	movlw	low Terminal@Addr
 13388  000234  0100               	movlb	0	; () banked
 13389  000236  6F7B               	movwf	xtoi@s& (0+255),b
 13390  000238  0E02               	movlw	high Terminal@Addr
 13391  00023A  6F7C               	movwf	(xtoi@s+1)& (0+255),b
 13392  00023C  EC9E  F00F         	call	_xtoi	;wreg free
 13393  000240  0100               	movlb	0	; () banked
 13394  000242  517B               	movf	?_xtoi& (0+255),w,b
 13395  000244  0102               	movlb	2	; () banked
 13396  000246  6FD2               	movwf	Terminal@SlaveAddr& (0+255),b
 13397                           
 13398                           ; BSR set to: 2
 13399                           ;term.c: 525: for (Index = 0; Index <= PackageLen; Index++)
 13400  000248  0E00               	movlw	0
 13401  00024A  0100               	movlb	0	; () banked
 13402  00024C  6F9D               	movwf	Terminal@Index& (0+255),b
 13403  00024E  D032               	goto	l1819
 13404  000250                     
 13405                           ;term.c: 526: {
 13406                           ;term.c: 527: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 13407                           
 13408                           ; BSR set to: 0
 13409  000250  0100               	movlb	0	; () banked
 13410  000252  519D               	movf	Terminal@Index& (0+255),w,b
 13411  000254  0D02               	mullw	2
 13412  000256  0E0B               	movlw	11
 13413  000258  26F3               	addwf	prodl,f,c
 13414  00025A  0E00               	movlw	0
 13415  00025C  22F4               	addwfc	prodh,f,c
 13416  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 13417  000260  24F3               	addwf	prodl,w,c
 13418  000262  6ED9               	movwf	fsr2l,c
 13419  000264  0E07               	movlw	high Terminal@UsbRxBuffer
 13420  000266  20F4               	addwfc	prodh,w,c
 13421  000268  6EDA               	movwf	fsr2h,c
 13422  00026A  519D               	movf	Terminal@Index& (0+255),w,b
 13423  00026C  0D04               	mullw	4
 13424  00026E  0E00               	movlw	low Terminal@Payload
 13425  000270  24F3               	addwf	prodl,w,c
 13426  000272  6EE1               	movwf	fsr1l,c
 13427  000274  0E06               	movlw	high Terminal@Payload
 13428  000276  20F4               	addwfc	prodh,w,c
 13429  000278  6EE2               	movwf	fsr1h,c
 13430  00027A  CFDF FFE7          	movff	indf2,indf1
 13431                           
 13432                           ;term.c: 528: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 13433  00027E  519D               	movf	Terminal@Index& (0+255),w,b
 13434  000280  0D02               	mullw	2
 13435  000282  0E0C               	movlw	12
 13436  000284  26F3               	addwf	prodl,f,c
 13437  000286  0E00               	movlw	0
 13438  000288  22F4               	addwfc	prodh,f,c
 13439  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 13440  00028C  24F3               	addwf	prodl,w,c
 13441  00028E  6ED9               	movwf	fsr2l,c
 13442  000290  0E07               	movlw	high Terminal@UsbRxBuffer
 13443  000292  20F4               	addwfc	prodh,w,c
 13444  000294  6EDA               	movwf	fsr2h,c
 13445  000296  519D               	movf	Terminal@Index& (0+255),w,b
 13446  000298  0D04               	mullw	4
 13447  00029A  0E01               	movlw	1
 13448  00029C  26F3               	addwf	prodl,f,c
 13449  00029E  0E00               	movlw	0
 13450  0002A0  22F4               	addwfc	prodh,f,c
 13451  0002A2  0E00               	movlw	low Terminal@Payload
 13452  0002A4  24F3               	addwf	prodl,w,c
 13453  0002A6  6EE1               	movwf	fsr1l,c
 13454  0002A8  0E06               	movlw	high Terminal@Payload
 13455  0002AA  20F4               	addwfc	prodh,w,c
 13456  0002AC  6EE2               	movwf	fsr1h,c
 13457  0002AE  CFDF FFE7          	movff	indf2,indf1
 13458                           
 13459                           ; BSR set to: 0
 13460  0002B2  2B9D               	incf	Terminal@Index& (0+255),f,b
 13461  0002B4                     l1819:
 13462                           
 13463                           ; BSR set to: 0
 13464                           
 13465                           ; BSR set to: 0
 13466  0002B4  519D               	movf	Terminal@Index& (0+255),w,b
 13467  0002B6  0102               	movlb	2	; () banked
 13468  0002B8  5DD3               	subwf	Terminal@PackageLen& (0+255),w,b
 13469  0002BA  B0D8               	btfsc	status,0,c
 13470  0002BC  D7C9               	goto	l1820
 13471                           
 13472                           ; BSR set to: 2
 13473                           ;term.c: 529: }
 13474                           ;term.c: 531: for (Index = 0; Index <= PackageLen; Index++)
 13475                           
 13476                           ; BSR set to: 2
 13477  0002BE  0E00               	movlw	0
 13478  0002C0  0100               	movlb	0	; () banked
 13479  0002C2  6F9D               	movwf	Terminal@Index& (0+255),b
 13480  0002C4  D01F               	goto	l1822
 13481  0002C6                     
 13482                           ;term.c: 532: {
 13483                           ;term.c: 536: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 13484                           
 13485                           ; BSR set to: 0
 13486  0002C6  0100               	movlb	0	; () banked
 13487  0002C8  519D               	movf	Terminal@Index& (0+255),w,b
 13488  0002CA  0D04               	mullw	4
 13489  0002CC  0E00               	movlw	low Terminal@Payload
 13490  0002CE  24F3               	addwf	prodl,w,c
 13491  0002D0  6F81               	movwf	strtol@s& (0+255),b
 13492  0002D2  0E06               	movlw	high Terminal@Payload
 13493  0002D4  20F4               	addwfc	prodh,w,c
 13494  0002D6  6F82               	movwf	(strtol@s+1)& (0+255),b
 13495  0002D8  0E00               	movlw	0
 13496  0002DA  6F83               	movwf	strtol@endptr& (0+255),b
 13497  0002DC  0E00               	movlw	0
 13498  0002DE  6F84               	movwf	(strtol@endptr+1)& (0+255),b
 13499  0002E0  0E00               	movlw	0
 13500  0002E2  6F86               	movwf	(strtol@base+1)& (0+255),b
 13501  0002E4  0E10               	movlw	16
 13502  0002E6  6F85               	movwf	strtol@base& (0+255),b
 13503  0002E8  EC60  F006         	call	_strtol	;wreg free
 13504  0002EC  0100               	movlb	0	; () banked
 13505  0002EE  519D               	movf	Terminal@Index& (0+255),w,b
 13506  0002F0  0D01               	mullw	1
 13507  0002F2  0E38               	movlw	low Terminal@TermTxBuffer
 13508  0002F4  24F3               	addwf	prodl,w,c
 13509  0002F6  6ED9               	movwf	fsr2l,c
 13510  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 13511  0002FA  20F4               	addwfc	prodh,w,c
 13512  0002FC  6EDA               	movwf	fsr2h,c
 13513  0002FE  C081  FFDF         	movff	?_strtol,indf2
 13514                           
 13515                           ; BSR set to: 0
 13516  000302  2B9D               	incf	Terminal@Index& (0+255),f,b
 13517  000304                     l1822:
 13518                           
 13519                           ; BSR set to: 0
 13520                           
 13521                           ; BSR set to: 0
 13522  000304  519D               	movf	Terminal@Index& (0+255),w,b
 13523  000306  0102               	movlb	2	; () banked
 13524  000308  5DD3               	subwf	Terminal@PackageLen& (0+255),w,b
 13525  00030A  B0D8               	btfsc	status,0,c
 13526  00030C  D7DC               	goto	l1823
 13527                           
 13528                           ; BSR set to: 2
 13529                           ;term.c: 538: }
 13530                           ;term.c: 541: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 13531                           
 13532                           ; BSR set to: 2
 13533  00030E  0E38               	movlw	low Terminal@TermTxBuffer
 13534  000310  0100               	movlb	0	; () banked
 13535  000312  6F78               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 13536  000314  0E01               	movlw	high Terminal@TermTxBuffer
 13537  000316  6F79               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 13538  000318  C2D2  F07A         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 13539  00031C  C2D3  F07B         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 13540  000320  ECE6  F01E         	call	_I2cSlv_SendI2cMsg	;wreg free
 13541                           
 13542                           ;term.c: 542: }
 13543  000324  0012               	return	
 13544  000326                     l1818:
 13545                           
 13546                           ;term.c: 543: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 13547  000326  0E52               	movlw	82
 13548  000328  0107               	movlb	7	; () banked
 13549  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13550  00032C  A4D8               	btfss	status,2,c
 13551  00032E  0012               	return	
 13552                           
 13553                           ; BSR set to: 7
 13554  000330  0E3A               	movlw	58
 13555  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13556  000334  A4D8               	btfss	status,2,c
 13557  000336  0012               	return	
 13558                           
 13559                           ; BSR set to: 7
 13560                           ;term.c: 544: {
 13561                           ;term.c: 546: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 13562  000338  C705  F2FA         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 13563                           
 13564                           ;term.c: 547: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 13565  00033C  C706  F2FB         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 13566                           
 13567                           ;term.c: 549: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 13568  000340  C708  F2F6         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 13569                           
 13570                           ;term.c: 550: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 13571  000344  C709  F2F7         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 13572                           
 13573                           ; BSR set to: 7
 13574                           ;term.c: 552: PackageLen = atoi((void*)Len);
 13575  000348  0EFA               	movlw	low Terminal@Len
 13576  00034A  0100               	movlb	0	; () banked
 13577  00034C  6F7B               	movwf	atoi@s& (0+255),b
 13578  00034E  0E02               	movlw	high Terminal@Len
 13579  000350  6F7C               	movwf	(atoi@s+1)& (0+255),b
 13580  000352  EC83  F010         	call	_atoi	;wreg free
 13581  000356  0100               	movlb	0	; () banked
 13582  000358  517B               	movf	?_atoi& (0+255),w,b
 13583  00035A  0102               	movlb	2	; () banked
 13584  00035C  6FD3               	movwf	Terminal@PackageLen& (0+255),b
 13585                           
 13586                           ; BSR set to: 2
 13587                           ;term.c: 553: SlaveAddr = xtoi((void*)Addr);
 13588  00035E  0EF6               	movlw	low Terminal@Addr
 13589  000360  0100               	movlb	0	; () banked
 13590  000362  6F7B               	movwf	xtoi@s& (0+255),b
 13591  000364  0E02               	movlw	high Terminal@Addr
 13592  000366  6F7C               	movwf	(xtoi@s+1)& (0+255),b
 13593  000368  EC9E  F00F         	call	_xtoi	;wreg free
 13594  00036C  0100               	movlb	0	; () banked
 13595  00036E  517B               	movf	?_xtoi& (0+255),w,b
 13596  000370  0102               	movlb	2	; () banked
 13597  000372  6FD2               	movwf	Terminal@SlaveAddr& (0+255),b
 13598                           
 13599                           ; BSR set to: 2
 13600                           ;term.c: 556: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 13601  000374  0EC0               	movlw	low Terminal@TermRxBuffer
 13602  000376  0100               	movlb	0	; () banked
 13603  000378  6F78               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 13604  00037A  0E04               	movlw	high Terminal@TermRxBuffer
 13605  00037C  6F79               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 13606  00037E  C2D2  F07A         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 13607  000382  C2D3  F07B         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 13608  000386  ECA7  F01E         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 13609                           
 13610                           ;term.c: 559: TermState = Term_PrepSlvI2cResp;
 13611  00038A  0E01               	movlw	1
 13612  00038C  0102               	movlb	2	; () banked
 13613  00038E  6FD4               	movwf	Terminal@TermState& (0+255),b
 13614                           
 13615                           ; BSR set to: 2
 13616                           ;term.c: 567: }
 13617                           ;term.c: 599: }
 13618                           ;term.c: 600: break;
 13619                           
 13620                           ; BSR set to: 2
 13621                           
 13622                           ; BSR set to: 2
 13623                           
 13624                           ; BSR set to: 2
 13625                           
 13626                           ;term.c: 565: {
 13627                           
 13628                           ; BSR set to: 2
 13629                           
 13630                           ; BSR set to: 2
 13631                           
 13632                           ; BSR set to: 2
 13633                           
 13634                           ; BSR set to: 2
 13635                           
 13636                           ; BSR set to: 2
 13637                           ;term.c: 560: }
 13638                           ;term.c: 561: }
 13639                           
 13640                           ; BSR set to: 2
 13641  000390  0012               	return	
 13642  000392                     
 13643                           ; BSR set to: 2
 13644                           ;term.c: 604: if((cdc_trf_state == 0))
 13645                           
 13646                           ; BSR set to: 2
 13647  000392  0100               	movlb	0	; () banked
 13648  000394  51C2               	movf	_cdc_trf_state& (0+255),w,b
 13649  000396  A4D8               	btfss	status,2,c
 13650  000398  0012               	return	
 13651                           
 13652                           ; BSR set to: 0
 13653                           ;term.c: 605: {
 13654                           ;term.c: 606: UsbTxBuffer[0] = 'S';
 13655  00039A  0E53               	movlw	83
 13656  00039C  0102               	movlb	2	; () banked
 13657  00039E  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 13658                           
 13659                           ;term.c: 607: UsbTxBuffer[1] = 'B';
 13660  0003A0  0E42               	movlw	66
 13661  0003A2  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 13662                           
 13663                           ;term.c: 608: UsbTxBuffer[2] = '[';
 13664  0003A4  0E5B               	movlw	91
 13665  0003A6  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 13666                           
 13667                           ; BSR set to: 2
 13668                           ;term.c: 609: UsbTxBuffer[3] = Addr[0];
 13669  0003A8  C2F6  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 13670                           
 13671                           ; BSR set to: 2
 13672                           ;term.c: 610: UsbTxBuffer[4] = Addr[1];
 13673  0003AC  C2F7  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 13674                           
 13675                           ;term.c: 611: UsbTxBuffer[5] = ']';
 13676  0003B0  0E5D               	movlw	93
 13677  0003B2  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 13678                           
 13679                           ;term.c: 612: UsbTxBuffer[6] = ':';
 13680  0003B4  0E3A               	movlw	58
 13681  0003B6  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 13682                           
 13683                           ; BSR set to: 2
 13684                           ;term.c: 613: putUSBUSART(UsbTxBuffer,7);
 13685  0003B8  0E00               	movlw	low Terminal@UsbTxBuffer
 13686  0003BA  0100               	movlb	0	; () banked
 13687  0003BC  6F7B               	movwf	putUSBUSART@data& (0+255),b
 13688  0003BE  0E02               	movlw	high Terminal@UsbTxBuffer
 13689  0003C0  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 13690  0003C2  0E07               	movlw	7
 13691  0003C4  6F7D               	movwf	putUSBUSART@length& (0+255),b
 13692  0003C6  EC34  F021         	call	_putUSBUSART	;wreg free
 13693                           
 13694                           ;term.c: 616: TermState = Term_ReadSlvI2cData;
 13695  0003CA  0E02               	movlw	2
 13696  0003CC  0102               	movlb	2	; () banked
 13697  0003CE  6FD4               	movwf	Terminal@TermState& (0+255),b
 13698                           
 13699                           ; BSR set to: 2
 13700                           ;term.c: 617: }
 13701                           ;term.c: 618: break;
 13702  0003D0  0012               	return	
 13703  0003D2                     
 13704                           ; BSR set to: 2
 13705                           ;term.c: 622: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 13706                           
 13707                           ; BSR set to: 2
 13708  0003D2  ECF3  F020         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 13709  0003D6  06E8               	decf	wreg,f,c
 13710  0003D8  A4D8               	btfss	status,2,c
 13711  0003DA  D088               	goto	l1833
 13712                           
 13713                           ;term.c: 623: {
 13714                           ;term.c: 625: if (FormatOption == 1u)
 13715  0003DC  0102               	movlb	2	; () banked
 13716  0003DE  05D1               	decf	Terminal@FormatOption& (0+255),w,b
 13717  0003E0  A4D8               	btfss	status,2,c
 13718  0003E2  D027               	goto	u9180
 13719                           
 13720                           ; BSR set to: 2
 13721                           ;term.c: 626: {
 13722                           ;term.c: 628: for (Index = 0; Index <= PackageLen; Index++)
 13723  0003E4  0E00               	movlw	0
 13724  0003E6  0100               	movlb	0	; () banked
 13725  0003E8  6F9D               	movwf	Terminal@Index& (0+255),b
 13726  0003EA  D01E               	goto	l1835
 13727  0003EC                     
 13728                           ;term.c: 629: {
 13729                           ;term.c: 630: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 13730                           
 13731                           ; BSR set to: 0
 13732  0003EC  0100               	movlb	0	; () banked
 13733  0003EE  519D               	movf	Terminal@Index& (0+255),w,b
 13734  0003F0  0D04               	mullw	4
 13735  0003F2  0E00               	movlw	low Terminal@Payload
 13736  0003F4  24F3               	addwf	prodl,w,c
 13737  0003F6  6F85               	movwf	itoa@buf& (0+255),b
 13738  0003F8  0E06               	movlw	high Terminal@Payload
 13739  0003FA  20F4               	addwfc	prodh,w,c
 13740  0003FC  6F86               	movwf	(itoa@buf+1)& (0+255),b
 13741  0003FE  519D               	movf	Terminal@Index& (0+255),w,b
 13742  000400  0D01               	mullw	1
 13743  000402  0EC0               	movlw	low Terminal@TermRxBuffer
 13744  000404  24F3               	addwf	prodl,w,c
 13745  000406  6ED9               	movwf	fsr2l,c
 13746  000408  0E04               	movlw	high Terminal@TermRxBuffer
 13747  00040A  20F4               	addwfc	prodh,w,c
 13748  00040C  6EDA               	movwf	fsr2h,c
 13749  00040E  50DF               	movf	indf2,w,c
 13750  000410  6F9A               	movwf	??_Terminal& (0+255),b
 13751  000412  519A               	movf	??_Terminal& (0+255),w,b
 13752  000414  6F87               	movwf	itoa@val& (0+255),b
 13753  000416  6B88               	clrf	(itoa@val+1)& (0+255),b
 13754  000418  0E00               	movlw	0
 13755  00041A  6F8A               	movwf	(itoa@base+1)& (0+255),b
 13756  00041C  0E0A               	movlw	10
 13757  00041E  6F89               	movwf	itoa@base& (0+255),b
 13758  000420  EC41  F01E         	call	_itoa	;wreg free
 13759  000424  0100               	movlb	0	; () banked
 13760  000426  2B9D               	incf	Terminal@Index& (0+255),f,b
 13761  000428                     l1835:
 13762                           
 13763                           ; BSR set to: 0
 13764                           
 13765                           ; BSR set to: 0
 13766  000428  519D               	movf	Terminal@Index& (0+255),w,b
 13767  00042A  0102               	movlb	2	; () banked
 13768  00042C  5DD3               	subwf	Terminal@PackageLen& (0+255),w,b
 13769  00042E  B0D8               	btfsc	status,0,c
 13770  000430  D7DD               	goto	l1836
 13771  000432                     u9180:
 13772                           
 13773                           ; BSR set to: 2
 13774                           ;term.c: 631: }
 13775                           ;term.c: 632: }
 13776                           ;term.c: 635: if((cdc_trf_state == 0))
 13777                           
 13778                           ; BSR set to: 2
 13779                           
 13780                           ; BSR set to: 2
 13781  000432  0100               	movlb	0	; () banked
 13782  000434  51C2               	movf	_cdc_trf_state& (0+255),w,b
 13783  000436  A4D8               	btfss	status,2,c
 13784  000438  0012               	return	
 13785                           
 13786                           ; BSR set to: 0
 13787                           ;term.c: 636: {
 13788                           ;term.c: 638: if (FormatOption == 1u)
 13789  00043A  0102               	movlb	2	; () banked
 13790  00043C  05D1               	decf	Terminal@FormatOption& (0+255),w,b
 13791  00043E  A4D8               	btfss	status,2,c
 13792  000440  D02B               	goto	l1839
 13793                           
 13794                           ; BSR set to: 2
 13795                           ;term.c: 639: {
 13796                           ;term.c: 640: Payload[(2*PackageLen)].Byte[3] = '\r';
 13797  000442  51D3               	movf	Terminal@PackageLen& (0+255),w,b
 13798  000444  0D08               	mullw	8
 13799  000446  0E03               	movlw	3
 13800  000448  26F3               	addwf	prodl,f,c
 13801  00044A  0E00               	movlw	0
 13802  00044C  22F4               	addwfc	prodh,f,c
 13803  00044E  0E00               	movlw	low Terminal@Payload
 13804  000450  24F3               	addwf	prodl,w,c
 13805  000452  6ED9               	movwf	fsr2l,c
 13806  000454  0E06               	movlw	high Terminal@Payload
 13807  000456  20F4               	addwfc	prodh,w,c
 13808  000458  6EDA               	movwf	fsr2h,c
 13809  00045A  0E0D               	movlw	13
 13810  00045C  6EDF               	movwf	indf2,c
 13811                           
 13812                           ;term.c: 641: Payload[(2*PackageLen)].Byte[2] = '\n';
 13813  00045E  51D3               	movf	Terminal@PackageLen& (0+255),w,b
 13814  000460  0D08               	mullw	8
 13815  000462  0E02               	movlw	2
 13816  000464  26F3               	addwf	prodl,f,c
 13817  000466  0E00               	movlw	0
 13818  000468  22F4               	addwfc	prodh,f,c
 13819  00046A  0E00               	movlw	low Terminal@Payload
 13820  00046C  24F3               	addwf	prodl,w,c
 13821  00046E  6ED9               	movwf	fsr2l,c
 13822  000470  0E06               	movlw	high Terminal@Payload
 13823  000472  20F4               	addwfc	prodh,w,c
 13824  000474  6EDA               	movwf	fsr2h,c
 13825  000476  0E0A               	movlw	10
 13826  000478  6EDF               	movwf	indf2,c
 13827                           
 13828                           ; BSR set to: 2
 13829                           ;term.c: 643: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 13830  00047A  0E00               	movlw	low Terminal@Payload
 13831  00047C  0100               	movlb	0	; () banked
 13832  00047E  6F7B               	movwf	putUSBUSART@data& (0+255),b
 13833  000480  0E06               	movlw	high Terminal@Payload
 13834  000482  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 13835  000484  0102               	movlb	2	; () banked
 13836  000486  51D3               	movf	Terminal@PackageLen& (0+255),w,b
 13837  000488  0D02               	mullw	2
 13838  00048A  50F3               	movf	prodl,w,c
 13839  00048C  0F04               	addlw	4
 13840  00048E  0100               	movlb	0	; () banked
 13841  000490  6F7D               	movwf	putUSBUSART@length& (0+255),b
 13842  000492  EC34  F021         	call	_putUSBUSART	;wreg free
 13843                           
 13844                           ;term.c: 644: }
 13845  000496  D026               	goto	l1840
 13846  000498                     l1839:
 13847                           
 13848                           ;term.c: 645: else
 13849                           ;term.c: 646: {
 13850                           ;term.c: 647: TermRxBuffer[PackageLen] = '\r';
 13851  000498  0102               	movlb	2	; () banked
 13852  00049A  51D3               	movf	Terminal@PackageLen& (0+255),w,b
 13853  00049C  0D01               	mullw	1
 13854  00049E  0EC0               	movlw	low Terminal@TermRxBuffer
 13855  0004A0  24F3               	addwf	prodl,w,c
 13856  0004A2  6ED9               	movwf	fsr2l,c
 13857  0004A4  0E04               	movlw	high Terminal@TermRxBuffer
 13858  0004A6  20F4               	addwfc	prodh,w,c
 13859  0004A8  6EDA               	movwf	fsr2h,c
 13860  0004AA  0E0D               	movlw	13
 13861  0004AC  6EDF               	movwf	indf2,c
 13862                           
 13863                           ; BSR set to: 2
 13864                           ;term.c: 648: TermRxBuffer[PackageLen + 1] = '\n';
 13865  0004AE  51D3               	movf	Terminal@PackageLen& (0+255),w,b
 13866  0004B0  0100               	movlb	0	; () banked
 13867  0004B2  6F9A               	movwf	??_Terminal& (0+255),b
 13868  0004B4  6B9B               	clrf	(??_Terminal+1)& (0+255),b
 13869  0004B6  0E01               	movlw	1
 13870  0004B8  279A               	addwf	??_Terminal& (0+255),f,b
 13871  0004BA  0E00               	movlw	0
 13872  0004BC  239B               	addwfc	(??_Terminal+1)& (0+255),f,b
 13873  0004BE  0EC0               	movlw	low Terminal@TermRxBuffer
 13874  0004C0  259A               	addwf	??_Terminal& (0+255),w,b
 13875  0004C2  6ED9               	movwf	fsr2l,c
 13876  0004C4  0E04               	movlw	high Terminal@TermRxBuffer
 13877  0004C6  219B               	addwfc	(??_Terminal+1)& (0+255),w,b
 13878  0004C8  6EDA               	movwf	fsr2h,c
 13879  0004CA  0E0A               	movlw	10
 13880  0004CC  6EDF               	movwf	indf2,c
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;term.c: 650: putUSBUSART(TermRxBuffer,PackageLen + 2);
 13884  0004CE  0EC0               	movlw	low Terminal@TermRxBuffer
 13885  0004D0  6F7B               	movwf	putUSBUSART@data& (0+255),b
 13886  0004D2  0E04               	movlw	high Terminal@TermRxBuffer
 13887  0004D4  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 13888  0004D6  0102               	movlb	2	; () banked
 13889  0004D8  51D3               	movf	Terminal@PackageLen& (0+255),w,b
 13890  0004DA  0F02               	addlw	2
 13891  0004DC  0100               	movlb	0	; () banked
 13892  0004DE  6F7D               	movwf	putUSBUSART@length& (0+255),b
 13893  0004E0  EC34  F021         	call	_putUSBUSART	;wreg free
 13894  0004E4                     l1840:
 13895                           
 13896                           ;term.c: 651: }
 13897                           ;term.c: 653: TermState = Term_GetData;
 13898  0004E4  0E00               	movlw	0
 13899  0004E6  0102               	movlb	2	; () banked
 13900  0004E8  6FD4               	movwf	Terminal@TermState& (0+255),b
 13901                           
 13902                           ; BSR set to: 2
 13903                           ;term.c: 654: }
 13904                           ;term.c: 655: }
 13905  0004EA  0012               	return	
 13906  0004EC                     l1833:
 13907                           
 13908                           ;term.c: 656: else
 13909                           ;term.c: 657: {
 13910                           ;term.c: 659: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 13911                           
 13912                           ; BSR set to: 2
 13913  0004EC  0E54               	movlw	low Terminal@SwTimer
 13914  0004EE  0100               	movlb	0	; () banked
 13915  0004F0  6F93               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 13916  0004F2  0E03               	movlw	high Terminal@SwTimer
 13917  0004F4  6F94               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 13918  0004F6  0EB8               	movlw	184
 13919  0004F8  6F95               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 13920  0004FA  0E0B               	movlw	11
 13921  0004FC  6F96               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 13922  0004FE  0E00               	movlw	0
 13923  000500  6F97               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 13924  000502  0E00               	movlw	0
 13925  000504  6F98               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 13926  000506  EC47  F01A         	call	_OsTmr_Wait	;wreg free
 13927  00050A  06E8               	decf	wreg,f,c
 13928  00050C  A4D8               	btfss	status,2,c
 13929  00050E  0012               	return	
 13930                           
 13931                           ;term.c: 660: {
 13932                           ;term.c: 662: if((cdc_trf_state == 0))
 13933  000510  0100               	movlb	0	; () banked
 13934  000512  51C2               	movf	_cdc_trf_state& (0+255),w,b
 13935  000514  A4D8               	btfss	status,2,c
 13936  000516  0012               	return	
 13937                           
 13938                           ; BSR set to: 0
 13939                           ;term.c: 663: {
 13940                           ;term.c: 664: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 13941  000518  0E00               	movlw	low Terminal@UsbTxBuffer
 13942  00051A  6F75               	movwf	strcpy@to& (0+255),b
 13943  00051C  0E02               	movlw	high Terminal@UsbTxBuffer
 13944  00051E  6F76               	movwf	(strcpy@to+1)& (0+255),b
 13945  000520  0E92               	movlw	low STR_1
 13946  000522  6F77               	movwf	strcpy@from& (0+255),b
 13947  000524  0EFF               	movlw	high STR_1
 13948  000526  6F78               	movwf	(strcpy@from+1)& (0+255),b
 13949  000528  EC77  F01F         	call	_strcpy	;wreg free
 13950                           
 13951                           ;term.c: 665: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 13952  00052C  0E00               	movlw	low Terminal@UsbTxBuffer
 13953  00052E  0100               	movlb	0	; () banked
 13954  000530  6F7B               	movwf	putUSBUSART@data& (0+255),b
 13955  000532  0E02               	movlw	high Terminal@UsbTxBuffer
 13956  000534  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 13957  000536  0E29               	movlw	41
 13958  000538  6F7D               	movwf	putUSBUSART@length& (0+255),b
 13959  00053A  EC34  F021         	call	_putUSBUSART	;wreg free
 13960                           
 13961                           ;term.c: 667: TermState = Term_GetData;
 13962  00053E  0E00               	movlw	0
 13963  000540  0102               	movlb	2	; () banked
 13964  000542  6FD4               	movwf	Terminal@TermState& (0+255),b
 13965                           
 13966                           ; BSR set to: 2
 13967                           ;term.c: 678: }
 13968                           
 13969                           ; BSR set to: 2
 13970                           ;term.c: 677: break;
 13971                           
 13972                           ;term.c: 676: default:
 13973                           
 13974                           ; BSR set to: 2
 13975                           ;term.c: 674: break;
 13976                           
 13977                           ;term.c: 673: case Term_ReadSlvUartData:
 13978                           
 13979                           ; BSR set to: 2
 13980                           ;term.c: 668: }
 13981                           ;term.c: 669: }
 13982                           ;term.c: 670: }
 13983                           ;term.c: 671: break;
 13984                           
 13985                           ; BSR set to: 2
 13986                           
 13987                           ; BSR set to: 2
 13988  000544  0012               	return	
 13989  000546                     l1799:
 13990                           
 13991                           ; BSR set to: 2
 13992  000546  0102               	movlb	2	; () banked
 13993  000548  51D4               	movf	Terminal@TermState& (0+255),w,b
 13994                           
 13995                           ; Switch size 1, requested type "space"
 13996                           ; Number of cases is 4, Range of values is 0 to 3
 13997                           ; switch strategies available:
 13998                           ; Name         Instructions Cycles
 13999                           ; simple_byte           13     7 (average)
 14000                           ;	Chosen strategy is simple_byte
 14001  00054A  0A00               	xorlw	0	; case 0
 14002  00054C  B4D8               	btfsc	status,2,c
 14003  00054E  D5C9               	goto	l1800
 14004  000550  0A01               	xorlw	1	; case 1
 14005  000552  B4D8               	btfsc	status,2,c
 14006  000554  D71E               	goto	l1830
 14007  000556  0A03               	xorlw	3	; case 2
 14008  000558  B4D8               	btfsc	status,2,c
 14009  00055A  D73B               	goto	l1832
 14010  00055C  0A01               	xorlw	1	; case 3
 14011  00055E  0012               	return	
 14012  000560                     __end_of_Terminal:
 14013                           	opt stack 0
 14014                           tosu	equ	0xFFF
 14015                           tosh	equ	0xFFE
 14016                           tosl	equ	0xFFD
 14017                           pclath	equ	0xFFA
 14018                           tblptru	equ	0xFF8
 14019                           tblptrh	equ	0xFF7
 14020                           tblptrl	equ	0xFF6
 14021                           tablat	equ	0xFF5
 14022                           prodh	equ	0xFF4
 14023                           prodl	equ	0xFF3
 14024                           intcon	equ	0xFF2
 14025                           intcon2	equ	0xFF1
 14026                           intcon3	equ	0xFF0
 14027                           indf0	equ	0xFEF
 14028                           postinc0	equ	0xFEE
 14029                           plusw0	equ	0xFEB
 14030                           fsr0h	equ	0xFEA
 14031                           fsr0l	equ	0xFE9
 14032                           wreg	equ	0xFE8
 14033                           indf1	equ	0xFE7
 14034                           postinc1	equ	0xFE6
 14035                           postdec1	equ	0xFE5
 14036                           fsr1h	equ	0xFE2
 14037                           fsr1l	equ	0xFE1
 14038                           indf2	equ	0xFDF
 14039                           postinc2	equ	0xFDE
 14040                           postdec2	equ	0xFDD
 14041                           plusw2	equ	0xFDB
 14042                           fsr2h	equ	0xFDA
 14043                           fsr2l	equ	0xFD9
 14044                           status	equ	0xFD8
 14045                           
 14046 ;; *************** function _xtoi *****************
 14047 ;; Defined at:
 14048 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xtoi.c"
 14049 ;; Parameters:    Size  Location     Type
 14050 ;;  s               2   27[BANK0 ] PTR const unsigned char 
 14051 ;;		 -> Terminal@Addr(4), 
 14052 ;; Auto vars:     Size  Location     Type
 14053 ;;  val             2   32[BANK0 ] unsigned int 
 14054 ;;  c               1   34[BANK0 ] unsigned char 
 14055 ;;  sign            1   31[BANK0 ] unsigned char 
 14056 ;; Return value:  Size  Location     Type
 14057 ;;                  2   27[BANK0 ] unsigned int 
 14058 ;; Registers used:
 14059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14060 ;; Tracked objects:
 14061 ;;		On entry : 0/0
 14062 ;;		On exit  : 0/0
 14063 ;;		Unchanged: 0/0
 14064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14065 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14066 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14067 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14068 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14069 ;;Total ram usage:        8 bytes
 14070 ;; Hardware stack levels used:    1
 14071 ;; Hardware stack levels required when called:   11
 14072 ;; This function calls:
 14073 ;;		_isdigit
 14074 ;;		_isspace
 14075 ;;		_isupper
 14076 ;;		_isxdigit
 14077 ;;		_tolower
 14078 ;; This function is called by:
 14079 ;;		_Terminal
 14080 ;; This function uses a non-reentrant model
 14081 ;;
 14082                           
 14083                           	psect	text58
 14084  001F3C                     __ptext58:
 14085                           	opt stack 0
 14086  001F3C                     _xtoi:
 14087                           	opt stack 14
 14088                           
 14089                           ;incstack = 0
 14090  001F3C  0E00               	movlw	0
 14091  001F3E  0100               	movlb	0	; () banked
 14092  001F40  6F7F               	movwf	xtoi@sign& (0+255),b
 14093  001F42  0E00               	movlw	0
 14094  001F44  6F81               	movwf	(xtoi@val+1)& (0+255),b
 14095  001F46  0E00               	movlw	0
 14096  001F48  6F80               	movwf	xtoi@val& (0+255),b
 14097  001F4A  D003               	goto	l2620
 14098  001F4C                     
 14099                           ; BSR set to: 0
 14100  001F4C  0100               	movlb	0	; () banked
 14101  001F4E  4B7B               	infsnz	xtoi@s& (0+255),f,b
 14102  001F50  2B7C               	incf	(xtoi@s+1)& (0+255),f,b
 14103  001F52                     l2620:
 14104                           
 14105                           ; BSR set to: 0
 14106                           
 14107                           ; BSR set to: 0
 14108  001F52  C07B  FFD9         	movff	xtoi@s,fsr2l
 14109  001F56  C07C  FFDA         	movff	xtoi@s+1,fsr2h
 14110  001F5A  50DF               	movf	indf2,w,c
 14111  001F5C  EC61  F020         	call	_isspace
 14112  001F60  B0D8               	btfsc	status,0,c
 14113  001F62  D7F4               	goto	l2621
 14114  001F64  C07B  FFD9         	movff	xtoi@s,fsr2l
 14115  001F68  C07C  FFDA         	movff	xtoi@s+1,fsr2h
 14116  001F6C  0E2D               	movlw	45
 14117  001F6E  18DE               	xorwf	postinc2,w,c
 14118  001F70  A4D8               	btfss	status,2,c
 14119  001F72  D003               	goto	l2623
 14120  001F74  0100               	movlb	0	; () banked
 14121  001F76  2B7F               	incf	xtoi@sign& (0+255),f,b
 14122  001F78  D009               	goto	L15
 14123  001F7A                     l2623:
 14124                           
 14125                           ; BSR set to: 0
 14126  001F7A  C07B  FFD9         	movff	xtoi@s,fsr2l
 14127  001F7E  C07C  FFDA         	movff	xtoi@s+1,fsr2h
 14128  001F82  0E2B               	movlw	43
 14129  001F84  18DE               	xorwf	postinc2,w,c
 14130  001F86  A4D8               	btfss	status,2,c
 14131  001F88  D028               	goto	l2626
 14132  001F8A  0100               	movlb	0	; () banked
 14133  001F8C                     L15:
 14134  001F8C  4B7B               	infsnz	xtoi@s& (0+255),f,b
 14135  001F8E  2B7C               	incf	(xtoi@s+1)& (0+255),f,b
 14136                           
 14137                           ; BSR set to: 0
 14138                           
 14139                           ; BSR set to: 0
 14140  001F90  D024               	goto	l2626
 14141  001F92                     
 14142                           ; BSR set to: 0
 14143  001F92  0100               	movlb	0	; () banked
 14144  001F94  5182               	movf	xtoi@c& (0+255),w,b
 14145  001F96  ECD1  F020         	call	_isupper
 14146  001F9A  A0D8               	btfss	status,0,c
 14147  001F9C  D006               	goto	l2628
 14148  001F9E  0100               	movlb	0	; () banked
 14149  001FA0  5182               	movf	xtoi@c& (0+255),w,b
 14150  001FA2  EC87  F021         	call	_tolower
 14151  001FA6  0100               	movlb	0	; () banked
 14152  001FA8  6F82               	movwf	xtoi@c& (0+255),b
 14153  001FAA                     l2628:
 14154  001FAA  0100               	movlb	0	; () banked
 14155  001FAC  5182               	movf	xtoi@c& (0+255),w,b
 14156  001FAE  ECE2  F020         	call	_isdigit
 14157  001FB2  A0D8               	btfss	status,0,c
 14158  001FB4  D002               	goto	l2629
 14159  001FB6  0E30               	movlw	48
 14160  001FB8  D001               	goto	L14
 14161  001FBA                     l2629:
 14162                           
 14163                           ; BSR set to: 0
 14164  001FBA  0E57               	movlw	87
 14165  001FBC                     L14:
 14166  001FBC  0100               	movlb	0	; () banked
 14167  001FBE  5F82               	subwf	xtoi@c& (0+255),f,b
 14168                           
 14169                           ; BSR set to: 0
 14170  001FC0  3B80               	swapf	xtoi@val& (0+255),f,b
 14171  001FC2  3B81               	swapf	(xtoi@val+1)& (0+255),f,b
 14172  001FC4  0EF0               	movlw	240
 14173  001FC6  1781               	andwf	(xtoi@val+1)& (0+255),f,b
 14174  001FC8  5180               	movf	xtoi@val& (0+255),w,b
 14175  001FCA  0B0F               	andlw	15
 14176  001FCC  1381               	iorwf	(xtoi@val+1)& (0+255),f,b
 14177  001FCE  0EF0               	movlw	240
 14178  001FD0  1780               	andwf	xtoi@val& (0+255),f,b
 14179  001FD2  5182               	movf	xtoi@c& (0+255),w,b
 14180  001FD4  2780               	addwf	xtoi@val& (0+255),f,b
 14181  001FD6  0E00               	movlw	0
 14182  001FD8  2381               	addwfc	(xtoi@val+1)& (0+255),f,b
 14183  001FDA                     l2626:
 14184                           
 14185                           ; BSR set to: 0
 14186  001FDA  C07B  FFD9         	movff	xtoi@s,fsr2l
 14187  001FDE  C07C  FFDA         	movff	xtoi@s+1,fsr2h
 14188  001FE2  0100               	movlb	0	; () banked
 14189  001FE4  4B7B               	infsnz	xtoi@s& (0+255),f,b
 14190  001FE6  2B7C               	incf	(xtoi@s+1)& (0+255),f,b
 14191  001FE8  50DF               	movf	indf2,w,c
 14192  001FEA  6F82               	movwf	xtoi@c& (0+255),b
 14193  001FEC  5182               	movf	xtoi@c& (0+255),w,b
 14194  001FEE  EC05  F01F         	call	_isxdigit
 14195  001FF2  B0D8               	btfsc	status,0,c
 14196  001FF4  D7CE               	goto	l2627
 14197  001FF6  0100               	movlb	0	; () banked
 14198  001FF8  517F               	movf	xtoi@sign& (0+255),w,b
 14199  001FFA  B4D8               	btfsc	status,2,c
 14200  001FFC  D00D               	goto	l2632
 14201                           
 14202                           ; BSR set to: 0
 14203  001FFE  C080  F07D         	movff	xtoi@val,??_xtoi
 14204  002002  C081  F07E         	movff	xtoi@val+1,??_xtoi+1
 14205  002006  1F7D               	comf	??_xtoi& (0+255),f,b
 14206  002008  1F7E               	comf	(??_xtoi+1)& (0+255),f,b
 14207  00200A  4B7D               	infsnz	??_xtoi& (0+255),f,b
 14208  00200C  2B7E               	incf	(??_xtoi+1)& (0+255),f,b
 14209  00200E  C07D  F07B         	movff	??_xtoi,?_xtoi
 14210  002012  C07E  F07C         	movff	??_xtoi+1,?_xtoi+1
 14211  002016  0012               	return	
 14212  002018                     l2632:
 14213                           
 14214                           ; BSR set to: 0
 14215  002018  C080  F07B         	movff	xtoi@val,?_xtoi
 14216  00201C  C081  F07C         	movff	xtoi@val+1,?_xtoi+1
 14217                           
 14218                           ; BSR set to: 0
 14219  002020  0012               	return		;funcret
 14220  002022                     __end_of_xtoi:
 14221                           	opt stack 0
 14222                           tosu	equ	0xFFF
 14223                           tosh	equ	0xFFE
 14224                           tosl	equ	0xFFD
 14225                           pclath	equ	0xFFA
 14226                           tblptru	equ	0xFF8
 14227                           tblptrh	equ	0xFF7
 14228                           tblptrl	equ	0xFF6
 14229                           tablat	equ	0xFF5
 14230                           prodh	equ	0xFF4
 14231                           prodl	equ	0xFF3
 14232                           intcon	equ	0xFF2
 14233                           intcon2	equ	0xFF1
 14234                           intcon3	equ	0xFF0
 14235                           indf0	equ	0xFEF
 14236                           postinc0	equ	0xFEE
 14237                           plusw0	equ	0xFEB
 14238                           fsr0h	equ	0xFEA
 14239                           fsr0l	equ	0xFE9
 14240                           wreg	equ	0xFE8
 14241                           indf1	equ	0xFE7
 14242                           postinc1	equ	0xFE6
 14243                           postdec1	equ	0xFE5
 14244                           fsr1h	equ	0xFE2
 14245                           fsr1l	equ	0xFE1
 14246                           indf2	equ	0xFDF
 14247                           postinc2	equ	0xFDE
 14248                           postdec2	equ	0xFDD
 14249                           plusw2	equ	0xFDB
 14250                           fsr2h	equ	0xFDA
 14251                           fsr2l	equ	0xFD9
 14252                           status	equ	0xFD8
 14253                           
 14254 ;; *************** function _tolower *****************
 14255 ;; Defined at:
 14256 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\tolower.c"
 14257 ;; Parameters:    Size  Location     Type
 14258 ;;  c               1    wreg     unsigned char 
 14259 ;; Auto vars:     Size  Location     Type
 14260 ;;  c               1   21[BANK0 ] unsigned char 
 14261 ;; Return value:  Size  Location     Type
 14262 ;;                  1    wreg      unsigned char 
 14263 ;; Registers used:
 14264 ;;		wreg, status,2, status,0
 14265 ;; Tracked objects:
 14266 ;;		On entry : 0/0
 14267 ;;		On exit  : 0/0
 14268 ;;		Unchanged: 0/0
 14269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14273 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14274 ;;Total ram usage:        1 bytes
 14275 ;; Hardware stack levels used:    1
 14276 ;; Hardware stack levels required when called:    9
 14277 ;; This function calls:
 14278 ;;		Nothing
 14279 ;; This function is called by:
 14280 ;;		_xtoi
 14281 ;; This function uses a non-reentrant model
 14282 ;;
 14283                           
 14284                           	psect	text59
 14285  00430E                     __ptext59:
 14286                           	opt stack 0
 14287  00430E                     _tolower:
 14288                           	opt stack 15
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;incstack = 0
 14292                           ;tolower@c stored from wreg
 14293  00430E  0100               	movlb	0	; () banked
 14294  004310  6F75               	movwf	tolower@c& (0+255),b
 14295  004312  0E5B               	movlw	91
 14296  004314  0100               	movlb	0	; () banked
 14297  004316  6175               	cpfslt	tolower@c& (0+255),b
 14298  004318  D004               	goto	l2679
 14299                           
 14300                           ; BSR set to: 0
 14301  00431A  0E40               	movlw	64
 14302  00431C  6575               	cpfsgt	tolower@c& (0+255),b
 14303  00431E  D001               	goto	l2679
 14304                           
 14305                           ; BSR set to: 0
 14306  004320  8B75               	bsf	tolower@c& (0+255),5,b
 14307  004322                     l2679:
 14308                           
 14309                           ; BSR set to: 0
 14310                           
 14311                           ; BSR set to: 0
 14312  004322  5175               	movf	tolower@c& (0+255),w,b
 14313  004324  0012               	return	
 14314  004326                     __end_of_tolower:
 14315                           	opt stack 0
 14316                           tosu	equ	0xFFF
 14317                           tosh	equ	0xFFE
 14318                           tosl	equ	0xFFD
 14319                           pclath	equ	0xFFA
 14320                           tblptru	equ	0xFF8
 14321                           tblptrh	equ	0xFF7
 14322                           tblptrl	equ	0xFF6
 14323                           tablat	equ	0xFF5
 14324                           prodh	equ	0xFF4
 14325                           prodl	equ	0xFF3
 14326                           intcon	equ	0xFF2
 14327                           intcon2	equ	0xFF1
 14328                           intcon3	equ	0xFF0
 14329                           indf0	equ	0xFEF
 14330                           postinc0	equ	0xFEE
 14331                           plusw0	equ	0xFEB
 14332                           fsr0h	equ	0xFEA
 14333                           fsr0l	equ	0xFE9
 14334                           wreg	equ	0xFE8
 14335                           indf1	equ	0xFE7
 14336                           postinc1	equ	0xFE6
 14337                           postdec1	equ	0xFE5
 14338                           fsr1h	equ	0xFE2
 14339                           fsr1l	equ	0xFE1
 14340                           indf2	equ	0xFDF
 14341                           postinc2	equ	0xFDE
 14342                           postdec2	equ	0xFDD
 14343                           plusw2	equ	0xFDB
 14344                           fsr2h	equ	0xFDA
 14345                           fsr2l	equ	0xFD9
 14346                           status	equ	0xFD8
 14347                           
 14348 ;; *************** function _isxdigit *****************
 14349 ;; Defined at:
 14350 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isxdigit.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;  c               1    wreg     unsigned char 
 14353 ;; Auto vars:     Size  Location     Type
 14354 ;;  c               1   26[BANK0 ] unsigned char 
 14355 ;; Return value:  Size  Location     Type
 14356 ;;		None               void
 14357 ;; Registers used:
 14358 ;;		wreg, status,2, status,0, cstack
 14359 ;; Tracked objects:
 14360 ;;		On entry : 0/0
 14361 ;;		On exit  : 0/0
 14362 ;;		Unchanged: 0/0
 14363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14365 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14367 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14368 ;;Total ram usage:        3 bytes
 14369 ;; Hardware stack levels used:    1
 14370 ;; Hardware stack levels required when called:   10
 14371 ;; This function calls:
 14372 ;;		_isdigit
 14373 ;; This function is called by:
 14374 ;;		_xtoi
 14375 ;; This function uses a non-reentrant model
 14376 ;;
 14377                           
 14378                           	psect	text60
 14379  003E0A                     __ptext60:
 14380                           	opt stack 0
 14381  003E0A                     _isxdigit:
 14382                           	opt stack 14
 14383                           
 14384                           ; BSR set to: 0
 14385                           ;incstack = 0
 14386                           ;isxdigit@c stored from wreg
 14387  003E0A  0100               	movlb	0	; () banked
 14388  003E0C  6F7A               	movwf	isxdigit@c& (0+255),b
 14389  003E0E  0E01               	movlw	1
 14390  003E10  0100               	movlb	0	; () banked
 14391  003E12  6F79               	movwf	_isxdigit$5702& (0+255),b
 14392                           
 14393                           ; BSR set to: 0
 14394  003E14  0E67               	movlw	103
 14395  003E16  617A               	cpfslt	isxdigit@c& (0+255),b
 14396  003E18  D003               	goto	u8250
 14397                           
 14398                           ; BSR set to: 0
 14399  003E1A  0E61               	movlw	97
 14400  003E1C  617A               	cpfslt	isxdigit@c& (0+255),b
 14401  003E1E  D00E               	goto	l2675
 14402  003E20                     u8250:
 14403                           
 14404                           ; BSR set to: 0
 14405                           
 14406                           ; BSR set to: 0
 14407  003E20  0E47               	movlw	71
 14408  003E22  617A               	cpfslt	isxdigit@c& (0+255),b
 14409  003E24  D003               	goto	u8270
 14410                           
 14411                           ; BSR set to: 0
 14412  003E26  0E41               	movlw	65
 14413  003E28  617A               	cpfslt	isxdigit@c& (0+255),b
 14414  003E2A  D008               	goto	l2675
 14415  003E2C                     u8270:
 14416                           
 14417                           ; BSR set to: 0
 14418                           
 14419                           ; BSR set to: 0
 14420  003E2C  517A               	movf	isxdigit@c& (0+255),w,b
 14421  003E2E  ECE2  F020         	call	_isdigit
 14422  003E32  B0D8               	btfsc	status,0,c
 14423  003E34  D003               	goto	l2675
 14424  003E36  0E00               	movlw	0
 14425  003E38  0100               	movlb	0	; () banked
 14426  003E3A  6F79               	movwf	_isxdigit$5702& (0+255),b
 14427  003E3C                     l2675:
 14428                           
 14429                           ; BSR set to: 0
 14430  003E3C  C079  F078         	movff	_isxdigit$5702,??_isxdigit
 14431  003E40  0100               	movlb	0	; () banked
 14432  003E42  3178               	rrcf	??_isxdigit& (0+255),w,b
 14433  003E44  0012               	return	
 14434  003E46                     __end_of_isxdigit:
 14435                           	opt stack 0
 14436                           tosu	equ	0xFFF
 14437                           tosh	equ	0xFFE
 14438                           tosl	equ	0xFFD
 14439                           pclath	equ	0xFFA
 14440                           tblptru	equ	0xFF8
 14441                           tblptrh	equ	0xFF7
 14442                           tblptrl	equ	0xFF6
 14443                           tablat	equ	0xFF5
 14444                           prodh	equ	0xFF4
 14445                           prodl	equ	0xFF3
 14446                           intcon	equ	0xFF2
 14447                           intcon2	equ	0xFF1
 14448                           intcon3	equ	0xFF0
 14449                           indf0	equ	0xFEF
 14450                           postinc0	equ	0xFEE
 14451                           plusw0	equ	0xFEB
 14452                           fsr0h	equ	0xFEA
 14453                           fsr0l	equ	0xFE9
 14454                           wreg	equ	0xFE8
 14455                           indf1	equ	0xFE7
 14456                           postinc1	equ	0xFE6
 14457                           postdec1	equ	0xFE5
 14458                           fsr1h	equ	0xFE2
 14459                           fsr1l	equ	0xFE1
 14460                           indf2	equ	0xFDF
 14461                           postinc2	equ	0xFDE
 14462                           postdec2	equ	0xFDD
 14463                           plusw2	equ	0xFDB
 14464                           fsr2h	equ	0xFDA
 14465                           fsr2l	equ	0xFD9
 14466                           status	equ	0xFD8
 14467                           
 14468 ;; *************** function _strtol *****************
 14469 ;; Defined at:
 14470 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtol.c"
 14471 ;; Parameters:    Size  Location     Type
 14472 ;;  s               2   33[BANK0 ] PTR const unsigned char 
 14473 ;;		 -> Terminal@Payload(80), 
 14474 ;;  endptr          2   35[BANK0 ] PTR PTR unsigned char 
 14475 ;;		 -> NULL(0), 
 14476 ;;  base            2   37[BANK0 ] int 
 14477 ;; Auto vars:     Size  Location     Type
 14478 ;;  a               4   44[BANK0 ] long 
 14479 ;;  c               1   48[BANK0 ] unsigned char 
 14480 ;;  sign            1   43[BANK0 ] unsigned char 
 14481 ;; Return value:  Size  Location     Type
 14482 ;;                  4   33[BANK0 ] long 
 14483 ;; Registers used:
 14484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14485 ;; Tracked objects:
 14486 ;;		On entry : 0/0
 14487 ;;		On exit  : 0/0
 14488 ;;		Unchanged: 0/0
 14489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14490 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14491 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14492 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14493 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14494 ;;Total ram usage:       16 bytes
 14495 ;; Hardware stack levels used:    1
 14496 ;; Hardware stack levels required when called:   11
 14497 ;; This function calls:
 14498 ;;		___lmul
 14499 ;;		_isalpha
 14500 ;;		_isdigit
 14501 ;;		_isspace
 14502 ;;		_toupper
 14503 ;; This function is called by:
 14504 ;;		_Terminal
 14505 ;; This function uses a non-reentrant model
 14506 ;;
 14507                           
 14508                           	psect	text61
 14509  000CC0                     __ptext61:
 14510                           	opt stack 0
 14511  000CC0                     _strtol:
 14512                           	opt stack 14
 14513                           
 14514                           ; BSR set to: 0
 14515                           ;incstack = 0
 14516  000CC0  C081  FFD9         	movff	strtol@s,fsr2l
 14517  000CC4  C082  FFDA         	movff	strtol@s+1,fsr2h
 14518  000CC8  50DF               	movf	indf2,w,c
 14519  000CCA  0100               	movlb	0	; () banked
 14520  000CCC  6F90               	movwf	strtol@c& (0+255),b
 14521                           
 14522                           ; BSR set to: 0
 14523  000CCE  4B81               	infsnz	strtol@s& (0+255),f,b
 14524  000CD0  2B82               	incf	(strtol@s+1)& (0+255),f,b
 14525                           
 14526                           ; BSR set to: 0
 14527  000CD2  5190               	movf	strtol@c& (0+255),w,b
 14528  000CD4  EC61  F020         	call	_isspace
 14529  000CD8  B0D8               	btfsc	status,0,c
 14530  000CDA  D7F2               	goto	_strtol
 14531  000CDC  0E00               	movlw	0
 14532  000CDE  0100               	movlb	0	; () banked
 14533  000CE0  6F8C               	movwf	strtol@a& (0+255),b
 14534  000CE2  0E00               	movlw	0
 14535  000CE4  6F8D               	movwf	(strtol@a+1)& (0+255),b
 14536  000CE6  0E00               	movlw	0
 14537  000CE8  6F8E               	movwf	(strtol@a+2)& (0+255),b
 14538  000CEA  0E00               	movlw	0
 14539  000CEC  6F8F               	movwf	(strtol@a+3)& (0+255),b
 14540  000CEE  0E00               	movlw	0
 14541  000CF0  6F8B               	movwf	strtol@sign& (0+255),b
 14542                           
 14543                           ; BSR set to: 0
 14544  000CF2  0E2D               	movlw	45
 14545  000CF4  1990               	xorwf	strtol@c& (0+255),w,b
 14546  000CF6  A4D8               	btfss	status,2,c
 14547  000CF8  D003               	goto	l2582
 14548                           
 14549                           ; BSR set to: 0
 14550  000CFA  0E01               	movlw	1
 14551  000CFC  6F8B               	movwf	strtol@sign& (0+255),b
 14552  000CFE  D004               	goto	u8530
 14553  000D00                     l2582:
 14554                           
 14555                           ; BSR set to: 0
 14556                           
 14557                           ; BSR set to: 0
 14558  000D00  0E2B               	movlw	43
 14559  000D02  1990               	xorwf	strtol@c& (0+255),w,b
 14560  000D04  A4D8               	btfss	status,2,c
 14561  000D06  D008               	goto	l2584
 14562  000D08                     u8530:
 14563                           
 14564                           ; BSR set to: 0
 14565  000D08  C081  FFD9         	movff	strtol@s,fsr2l
 14566  000D0C  C082  FFDA         	movff	strtol@s+1,fsr2h
 14567  000D10  50DF               	movf	indf2,w,c
 14568  000D12  6F90               	movwf	strtol@c& (0+255),b
 14569                           
 14570                           ; BSR set to: 0
 14571  000D14  4B81               	infsnz	strtol@s& (0+255),f,b
 14572  000D16  2B82               	incf	(strtol@s+1)& (0+255),f,b
 14573  000D18                     l2584:
 14574                           
 14575                           ; BSR set to: 0
 14576                           
 14577                           ; BSR set to: 0
 14578                           
 14579                           ; BSR set to: 0
 14580  000D18  0E30               	movlw	48
 14581  000D1A  1990               	xorwf	strtol@c& (0+255),w,b
 14582  000D1C  A4D8               	btfss	status,2,c
 14583  000D1E  D02E               	goto	l2592
 14584                           
 14585                           ; BSR set to: 0
 14586  000D20  C081  FFD9         	movff	strtol@s,fsr2l
 14587  000D24  C082  FFDA         	movff	strtol@s+1,fsr2h
 14588  000D28  50DF               	movf	indf2,w,c
 14589  000D2A  6F90               	movwf	strtol@c& (0+255),b
 14590                           
 14591                           ; BSR set to: 0
 14592  000D2C  4B81               	infsnz	strtol@s& (0+255),f,b
 14593  000D2E  2B82               	incf	(strtol@s+1)& (0+255),f,b
 14594                           
 14595                           ; BSR set to: 0
 14596  000D30  5185               	movf	strtol@base& (0+255),w,b
 14597  000D32  1186               	iorwf	(strtol@base+1)& (0+255),w,b
 14598  000D34  B4D8               	btfsc	status,2,c
 14599  000D36  D005               	goto	u8560
 14600                           
 14601                           ; BSR set to: 0
 14602  000D38  0E10               	movlw	16
 14603  000D3A  1985               	xorwf	strtol@base& (0+255),w,b
 14604  000D3C  1186               	iorwf	(strtol@base+1)& (0+255),w,b
 14605  000D3E  A4D8               	btfss	status,2,c
 14606  000D40  D015               	goto	l2586
 14607  000D42                     u8560:
 14608                           
 14609                           ; BSR set to: 0
 14610                           
 14611                           ; BSR set to: 0
 14612  000D42  0E78               	movlw	120
 14613  000D44  1990               	xorwf	strtol@c& (0+255),w,b
 14614  000D46  B4D8               	btfsc	status,2,c
 14615  000D48  D004               	goto	u8580
 14616                           
 14617                           ; BSR set to: 0
 14618  000D4A  0E58               	movlw	88
 14619  000D4C  1990               	xorwf	strtol@c& (0+255),w,b
 14620  000D4E  A4D8               	btfss	status,2,c
 14621  000D50  D00D               	goto	l2586
 14622  000D52                     u8580:
 14623                           
 14624                           ; BSR set to: 0
 14625                           
 14626                           ; BSR set to: 0
 14627  000D52  0E00               	movlw	0
 14628  000D54  6F86               	movwf	(strtol@base+1)& (0+255),b
 14629  000D56  0E10               	movlw	16
 14630  000D58  6F85               	movwf	strtol@base& (0+255),b
 14631                           
 14632                           ; BSR set to: 0
 14633  000D5A  C081  FFD9         	movff	strtol@s,fsr2l
 14634  000D5E  C082  FFDA         	movff	strtol@s+1,fsr2h
 14635  000D62  50DF               	movf	indf2,w,c
 14636  000D64  6F90               	movwf	strtol@c& (0+255),b
 14637                           
 14638                           ; BSR set to: 0
 14639  000D66  4B81               	infsnz	strtol@s& (0+255),f,b
 14640  000D68  2B82               	incf	(strtol@s+1)& (0+255),f,b
 14641  000D6A  D008               	goto	l2592
 14642  000D6C                     l2586:
 14643                           
 14644                           ; BSR set to: 0
 14645                           
 14646                           ; BSR set to: 0
 14647  000D6C  5185               	movf	strtol@base& (0+255),w,b
 14648  000D6E  1186               	iorwf	(strtol@base+1)& (0+255),w,b
 14649  000D70  A4D8               	btfss	status,2,c
 14650  000D72  D004               	goto	l2592
 14651                           
 14652                           ; BSR set to: 0
 14653  000D74  0E00               	movlw	0
 14654  000D76  6F86               	movwf	(strtol@base+1)& (0+255),b
 14655  000D78  0E08               	movlw	8
 14656  000D7A  6F85               	movwf	strtol@base& (0+255),b
 14657  000D7C                     l2592:
 14658                           
 14659                           ; BSR set to: 0
 14660                           
 14661                           ; BSR set to: 0
 14662                           
 14663                           ; BSR set to: 0
 14664                           
 14665                           ; BSR set to: 0
 14666  000D7C  5185               	movf	strtol@base& (0+255),w,b
 14667  000D7E  1186               	iorwf	(strtol@base+1)& (0+255),w,b
 14668  000D80  A4D8               	btfss	status,2,c
 14669  000D82  D004               	goto	l2593
 14670                           
 14671                           ; BSR set to: 0
 14672  000D84  0E00               	movlw	0
 14673  000D86  6F86               	movwf	(strtol@base+1)& (0+255),b
 14674  000D88  0E0A               	movlw	10
 14675  000D8A  6F85               	movwf	strtol@base& (0+255),b
 14676  000D8C                     l2593:
 14677                           
 14678                           ; BSR set to: 0
 14679                           
 14680                           ; BSR set to: 0
 14681                           
 14682                           ; BSR set to: 0
 14683  000D8C  5190               	movf	strtol@c& (0+255),w,b
 14684  000D8E  ECD8  F01F         	call	_isalpha
 14685  000D92  A0D8               	btfss	status,0,c
 14686  000D94  D008               	goto	l2595
 14687  000D96  0100               	movlb	0	; () banked
 14688  000D98  5190               	movf	strtol@c& (0+255),w,b
 14689  000D9A  EC93  F021         	call	_toupper
 14690  000D9E  0FC9               	addlw	201
 14691  000DA0  0100               	movlb	0	; () banked
 14692  000DA2  6F90               	movwf	strtol@c& (0+255),b
 14693  000DA4  D009               	goto	l2598
 14694  000DA6                     l2595:
 14695                           
 14696                           ; BSR set to: 0
 14697  000DA6  0100               	movlb	0	; () banked
 14698  000DA8  5190               	movf	strtol@c& (0+255),w,b
 14699  000DAA  ECE2  F020         	call	_isdigit
 14700  000DAE  A0D8               	btfss	status,0,c
 14701  000DB0  D039               	goto	l2599
 14702  000DB2  0E30               	movlw	48
 14703  000DB4  0100               	movlb	0	; () banked
 14704  000DB6  5F90               	subwf	strtol@c& (0+255),f,b
 14705  000DB8                     l2598:
 14706                           
 14707                           ; BSR set to: 0
 14708                           
 14709                           ; BSR set to: 0
 14710                           
 14711                           ; BSR set to: 0
 14712  000DB8  5190               	movf	strtol@c& (0+255),w,b
 14713  000DBA  6F87               	movwf	??_strtol& (0+255),b
 14714  000DBC  6B88               	clrf	(??_strtol+1)& (0+255),b
 14715  000DBE  5185               	movf	strtol@base& (0+255),w,b
 14716  000DC0  5D87               	subwf	??_strtol& (0+255),w,b
 14717  000DC2  5188               	movf	(??_strtol+1)& (0+255),w,b
 14718  000DC4  0A80               	xorlw	128
 14719  000DC6  6F89               	movwf	(??_strtol+2)& (0+255),b
 14720  000DC8  5186               	movf	(strtol@base+1)& (0+255),w,b
 14721  000DCA  0A80               	xorlw	128
 14722  000DCC  5989               	subwfb	(??_strtol+2)& (0+255),w,b
 14723  000DCE  B0D8               	btfsc	status,0,c
 14724  000DD0  D029               	goto	l2599
 14725                           
 14726                           ; BSR set to: 0
 14727                           
 14728                           ; BSR set to: 0
 14729                           
 14730                           ; BSR set to: 0
 14731  000DD2  C085  F075         	movff	strtol@base,___lmul@multiplier
 14732  000DD6  C086  F076         	movff	strtol@base+1,___lmul@multiplier+1
 14733  000DDA  0E00               	movlw	0
 14734  000DDC  BF76               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 14735  000DDE  0EFF               	movlw	-1
 14736  000DE0  6F77               	movwf	(___lmul@multiplier+2)& (0+255),b
 14737  000DE2  6F78               	movwf	(___lmul@multiplier+3)& (0+255),b
 14738  000DE4  C08C  F079         	movff	strtol@a,___lmul@multiplicand
 14739  000DE8  C08D  F07A         	movff	strtol@a+1,___lmul@multiplicand+1
 14740  000DEC  C08E  F07B         	movff	strtol@a+2,___lmul@multiplicand+2
 14741  000DF0  C08F  F07C         	movff	strtol@a+3,___lmul@multiplicand+3
 14742  000DF4  EC8C  F01C         	call	___lmul	;wreg free
 14743  000DF8  0100               	movlb	0	; () banked
 14744  000DFA  5190               	movf	strtol@c& (0+255),w,b
 14745  000DFC  2575               	addwf	?___lmul& (0+255),w,b
 14746  000DFE  6F8C               	movwf	strtol@a& (0+255),b
 14747  000E00  0E00               	movlw	0
 14748  000E02  2176               	addwfc	(?___lmul+1)& (0+255),w,b
 14749  000E04  6F8D               	movwf	(strtol@a+1)& (0+255),b
 14750  000E06  0E00               	movlw	0
 14751  000E08  2177               	addwfc	(?___lmul+2)& (0+255),w,b
 14752  000E0A  6F8E               	movwf	(strtol@a+2)& (0+255),b
 14753  000E0C  0E00               	movlw	0
 14754  000E0E  2178               	addwfc	(?___lmul+3)& (0+255),w,b
 14755  000E10  6F8F               	movwf	(strtol@a+3)& (0+255),b
 14756                           
 14757                           ; BSR set to: 0
 14758  000E12  C081  FFD9         	movff	strtol@s,fsr2l
 14759  000E16  C082  FFDA         	movff	strtol@s+1,fsr2h
 14760  000E1A  50DF               	movf	indf2,w,c
 14761  000E1C  6F90               	movwf	strtol@c& (0+255),b
 14762                           
 14763                           ; BSR set to: 0
 14764  000E1E  4B81               	infsnz	strtol@s& (0+255),f,b
 14765  000E20  2B82               	incf	(strtol@s+1)& (0+255),f,b
 14766  000E22  D7B4               	goto	l2593
 14767  000E24                     l2599:
 14768                           
 14769                           ; BSR set to: 0
 14770  000E24  0100               	movlb	0	; () banked
 14771  000E26  5183               	movf	strtol@endptr& (0+255),w,b
 14772  000E28  1184               	iorwf	(strtol@endptr+1)& (0+255),w,b
 14773  000E2A  B4D8               	btfsc	status,2,c
 14774  000E2C  D00E               	goto	l2601
 14775                           
 14776                           ; BSR set to: 0
 14777  000E2E  0EFF               	movlw	255
 14778  000E30  2581               	addwf	strtol@s& (0+255),w,b
 14779  000E32  6F87               	movwf	??_strtol& (0+255),b
 14780  000E34  0EFF               	movlw	255
 14781  000E36  2182               	addwfc	(strtol@s+1)& (0+255),w,b
 14782  000E38  6F88               	movwf	(??_strtol+1)& (0+255),b
 14783  000E3A  C083  FFD9         	movff	strtol@endptr,fsr2l
 14784  000E3E  C084  FFDA         	movff	strtol@endptr+1,fsr2h
 14785  000E42  C087  FFDE         	movff	??_strtol,postinc2
 14786  000E46  C088  FFDD         	movff	??_strtol+1,postdec2
 14787  000E4A                     l2601:
 14788                           
 14789                           ; BSR set to: 0
 14790                           
 14791                           ; BSR set to: 0
 14792  000E4A  518B               	movf	strtol@sign& (0+255),w,b
 14793  000E4C  B4D8               	btfsc	status,2,c
 14794  000E4E  D01A               	goto	l2602
 14795                           
 14796                           ; BSR set to: 0
 14797  000E50  C08C  F087         	movff	strtol@a,??_strtol
 14798  000E54  C08D  F088         	movff	strtol@a+1,??_strtol+1
 14799  000E58  C08E  F089         	movff	strtol@a+2,??_strtol+2
 14800  000E5C  C08F  F08A         	movff	strtol@a+3,??_strtol+3
 14801  000E60  1F87               	comf	??_strtol& (0+255),f,b
 14802  000E62  1F88               	comf	(??_strtol+1)& (0+255),f,b
 14803  000E64  1F89               	comf	(??_strtol+2)& (0+255),f,b
 14804  000E66  1F8A               	comf	(??_strtol+3)& (0+255),f,b
 14805  000E68  2B87               	incf	??_strtol& (0+255),f,b
 14806  000E6A  0E00               	movlw	0
 14807  000E6C  2388               	addwfc	(??_strtol+1)& (0+255),f,b
 14808  000E6E  2389               	addwfc	(??_strtol+2)& (0+255),f,b
 14809  000E70  238A               	addwfc	(??_strtol+3)& (0+255),f,b
 14810  000E72  C087  F081         	movff	??_strtol,?_strtol
 14811  000E76  C088  F082         	movff	??_strtol+1,?_strtol+1
 14812  000E7A  C089  F083         	movff	??_strtol+2,?_strtol+2
 14813  000E7E  C08A  F084         	movff	??_strtol+3,?_strtol+3
 14814                           
 14815                           ; BSR set to: 0
 14816  000E82  0012               	return	
 14817  000E84                     l2602:
 14818                           
 14819                           ; BSR set to: 0
 14820  000E84  C08C  F081         	movff	strtol@a,?_strtol
 14821  000E88  C08D  F082         	movff	strtol@a+1,?_strtol+1
 14822  000E8C  C08E  F083         	movff	strtol@a+2,?_strtol+2
 14823  000E90  C08F  F084         	movff	strtol@a+3,?_strtol+3
 14824                           
 14825                           ; BSR set to: 0
 14826  000E94  0012               	return		;funcret
 14827  000E96                     __end_of_strtol:
 14828                           	opt stack 0
 14829                           tosu	equ	0xFFF
 14830                           tosh	equ	0xFFE
 14831                           tosl	equ	0xFFD
 14832                           pclath	equ	0xFFA
 14833                           tblptru	equ	0xFF8
 14834                           tblptrh	equ	0xFF7
 14835                           tblptrl	equ	0xFF6
 14836                           tablat	equ	0xFF5
 14837                           prodh	equ	0xFF4
 14838                           prodl	equ	0xFF3
 14839                           intcon	equ	0xFF2
 14840                           intcon2	equ	0xFF1
 14841                           intcon3	equ	0xFF0
 14842                           indf0	equ	0xFEF
 14843                           postinc0	equ	0xFEE
 14844                           plusw0	equ	0xFEB
 14845                           fsr0h	equ	0xFEA
 14846                           fsr0l	equ	0xFE9
 14847                           wreg	equ	0xFE8
 14848                           indf1	equ	0xFE7
 14849                           postinc1	equ	0xFE6
 14850                           postdec1	equ	0xFE5
 14851                           fsr1h	equ	0xFE2
 14852                           fsr1l	equ	0xFE1
 14853                           indf2	equ	0xFDF
 14854                           postinc2	equ	0xFDE
 14855                           postdec2	equ	0xFDD
 14856                           plusw2	equ	0xFDB
 14857                           fsr2h	equ	0xFDA
 14858                           fsr2l	equ	0xFD9
 14859                           status	equ	0xFD8
 14860                           
 14861 ;; *************** function _toupper *****************
 14862 ;; Defined at:
 14863 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
 14864 ;; Parameters:    Size  Location     Type
 14865 ;;  c               1    wreg     unsigned char 
 14866 ;; Auto vars:     Size  Location     Type
 14867 ;;  c               1   21[BANK0 ] unsigned char 
 14868 ;; Return value:  Size  Location     Type
 14869 ;;                  1    wreg      unsigned char 
 14870 ;; Registers used:
 14871 ;;		wreg, status,2, status,0
 14872 ;; Tracked objects:
 14873 ;;		On entry : 0/0
 14874 ;;		On exit  : 0/0
 14875 ;;		Unchanged: 0/0
 14876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14880 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14881 ;;Total ram usage:        1 bytes
 14882 ;; Hardware stack levels used:    1
 14883 ;; Hardware stack levels required when called:    9
 14884 ;; This function calls:
 14885 ;;		Nothing
 14886 ;; This function is called by:
 14887 ;;		_strtol
 14888 ;; This function uses a non-reentrant model
 14889 ;;
 14890                           
 14891                           	psect	text62
 14892  004326                     __ptext62:
 14893                           	opt stack 0
 14894  004326                     _toupper:
 14895                           	opt stack 15
 14896                           
 14897                           ; BSR set to: 0
 14898                           ;incstack = 0
 14899                           ;toupper@c stored from wreg
 14900  004326  0100               	movlb	0	; () banked
 14901  004328  6F75               	movwf	toupper@c& (0+255),b
 14902  00432A  0E7B               	movlw	123
 14903  00432C  0100               	movlb	0	; () banked
 14904  00432E  6175               	cpfslt	toupper@c& (0+255),b
 14905  004330  D004               	goto	l2606
 14906                           
 14907                           ; BSR set to: 0
 14908  004332  0E60               	movlw	96
 14909  004334  6575               	cpfsgt	toupper@c& (0+255),b
 14910  004336  D001               	goto	l2606
 14911                           
 14912                           ; BSR set to: 0
 14913  004338  9B75               	bcf	toupper@c& (0+255),5,b
 14914  00433A                     l2606:
 14915                           
 14916                           ; BSR set to: 0
 14917                           
 14918                           ; BSR set to: 0
 14919  00433A  5175               	movf	toupper@c& (0+255),w,b
 14920  00433C  0012               	return	
 14921  00433E                     __end_of_toupper:
 14922                           	opt stack 0
 14923                           tosu	equ	0xFFF
 14924                           tosh	equ	0xFFE
 14925                           tosl	equ	0xFFD
 14926                           pclath	equ	0xFFA
 14927                           tblptru	equ	0xFF8
 14928                           tblptrh	equ	0xFF7
 14929                           tblptrl	equ	0xFF6
 14930                           tablat	equ	0xFF5
 14931                           prodh	equ	0xFF4
 14932                           prodl	equ	0xFF3
 14933                           intcon	equ	0xFF2
 14934                           intcon2	equ	0xFF1
 14935                           intcon3	equ	0xFF0
 14936                           indf0	equ	0xFEF
 14937                           postinc0	equ	0xFEE
 14938                           plusw0	equ	0xFEB
 14939                           fsr0h	equ	0xFEA
 14940                           fsr0l	equ	0xFE9
 14941                           wreg	equ	0xFE8
 14942                           indf1	equ	0xFE7
 14943                           postinc1	equ	0xFE6
 14944                           postdec1	equ	0xFE5
 14945                           fsr1h	equ	0xFE2
 14946                           fsr1l	equ	0xFE1
 14947                           indf2	equ	0xFDF
 14948                           postinc2	equ	0xFDE
 14949                           postdec2	equ	0xFDD
 14950                           plusw2	equ	0xFDB
 14951                           fsr2h	equ	0xFDA
 14952                           fsr2l	equ	0xFD9
 14953                           status	equ	0xFD8
 14954                           
 14955 ;; *************** function _isspace *****************
 14956 ;; Defined at:
 14957 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isspace.c"
 14958 ;; Parameters:    Size  Location     Type
 14959 ;;  c               1    wreg     unsigned char 
 14960 ;; Auto vars:     Size  Location     Type
 14961 ;;  c               1   23[BANK0 ] unsigned char 
 14962 ;; Return value:  Size  Location     Type
 14963 ;;		None               void
 14964 ;; Registers used:
 14965 ;;		wreg, status,2, status,0
 14966 ;; Tracked objects:
 14967 ;;		On entry : 0/0
 14968 ;;		On exit  : 0/0
 14969 ;;		Unchanged: 0/0
 14970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14972 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14973 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14974 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14975 ;;Total ram usage:        3 bytes
 14976 ;; Hardware stack levels used:    1
 14977 ;; Hardware stack levels required when called:    9
 14978 ;; This function calls:
 14979 ;;		Nothing
 14980 ;; This function is called by:
 14981 ;;		_strtol
 14982 ;;		_xtoi
 14983 ;; This function uses a non-reentrant model
 14984 ;;
 14985                           
 14986                           	psect	text63
 14987  0040C2                     __ptext63:
 14988                           	opt stack 0
 14989  0040C2                     _isspace:
 14990                           	opt stack 15
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;incstack = 0
 14994                           ;isspace@c stored from wreg
 14995  0040C2  0100               	movlb	0	; () banked
 14996  0040C4  6F77               	movwf	isspace@c& (0+255),b
 14997  0040C6  0E01               	movlw	1
 14998  0040C8  0100               	movlb	0	; () banked
 14999  0040CA  6F76               	movwf	_isspace$5695& (0+255),b
 15000                           
 15001                           ; BSR set to: 0
 15002  0040CC  0E20               	movlw	32
 15003  0040CE  1977               	xorwf	isspace@c& (0+255),w,b
 15004  0040D0  B4D8               	btfsc	status,2,c
 15005  0040D2  D008               	goto	l2663
 15006                           
 15007                           ; BSR set to: 0
 15008  0040D4  0E0E               	movlw	14
 15009  0040D6  6177               	cpfslt	isspace@c& (0+255),b
 15010  0040D8  D003               	goto	u8160
 15011                           
 15012                           ; BSR set to: 0
 15013  0040DA  0E09               	movlw	9
 15014  0040DC  6177               	cpfslt	isspace@c& (0+255),b
 15015  0040DE  D002               	goto	l2663
 15016  0040E0                     u8160:
 15017                           
 15018                           ; BSR set to: 0
 15019                           
 15020                           ; BSR set to: 0
 15021  0040E0  0E00               	movlw	0
 15022  0040E2  6F76               	movwf	_isspace$5695& (0+255),b
 15023  0040E4                     l2663:
 15024                           
 15025                           ; BSR set to: 0
 15026                           
 15027                           ; BSR set to: 0
 15028  0040E4  C076  F075         	movff	_isspace$5695,??_isspace
 15029  0040E8  3175               	rrcf	??_isspace& (0+255),w,b
 15030  0040EA  0012               	return	
 15031  0040EC                     __end_of_isspace:
 15032                           	opt stack 0
 15033                           tosu	equ	0xFFF
 15034                           tosh	equ	0xFFE
 15035                           tosl	equ	0xFFD
 15036                           pclath	equ	0xFFA
 15037                           tblptru	equ	0xFF8
 15038                           tblptrh	equ	0xFF7
 15039                           tblptrl	equ	0xFF6
 15040                           tablat	equ	0xFF5
 15041                           prodh	equ	0xFF4
 15042                           prodl	equ	0xFF3
 15043                           intcon	equ	0xFF2
 15044                           intcon2	equ	0xFF1
 15045                           intcon3	equ	0xFF0
 15046                           indf0	equ	0xFEF
 15047                           postinc0	equ	0xFEE
 15048                           plusw0	equ	0xFEB
 15049                           fsr0h	equ	0xFEA
 15050                           fsr0l	equ	0xFE9
 15051                           wreg	equ	0xFE8
 15052                           indf1	equ	0xFE7
 15053                           postinc1	equ	0xFE6
 15054                           postdec1	equ	0xFE5
 15055                           fsr1h	equ	0xFE2
 15056                           fsr1l	equ	0xFE1
 15057                           indf2	equ	0xFDF
 15058                           postinc2	equ	0xFDE
 15059                           postdec2	equ	0xFDD
 15060                           plusw2	equ	0xFDB
 15061                           fsr2h	equ	0xFDA
 15062                           fsr2l	equ	0xFD9
 15063                           status	equ	0xFD8
 15064                           
 15065 ;; *************** function _isalpha *****************
 15066 ;; Defined at:
 15067 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isalpha.c"
 15068 ;; Parameters:    Size  Location     Type
 15069 ;;  c               1    wreg     unsigned char 
 15070 ;; Auto vars:     Size  Location     Type
 15071 ;;  c               1   26[BANK0 ] unsigned char 
 15072 ;; Return value:  Size  Location     Type
 15073 ;;		None               void
 15074 ;; Registers used:
 15075 ;;		wreg, status,2, status,0, cstack
 15076 ;; Tracked objects:
 15077 ;;		On entry : 0/0
 15078 ;;		On exit  : 0/0
 15079 ;;		Unchanged: 0/0
 15080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15082 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15083 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15084 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15085 ;;Total ram usage:        3 bytes
 15086 ;; Hardware stack levels used:    1
 15087 ;; Hardware stack levels required when called:   10
 15088 ;; This function calls:
 15089 ;;		_isupper
 15090 ;; This function is called by:
 15091 ;;		_strtol
 15092 ;; This function uses a non-reentrant model
 15093 ;;
 15094                           
 15095                           	psect	text64
 15096  003FB0                     __ptext64:
 15097                           	opt stack 0
 15098  003FB0                     _isalpha:
 15099                           	opt stack 14
 15100                           
 15101                           ; BSR set to: 0
 15102                           ;incstack = 0
 15103                           ;isalpha@c stored from wreg
 15104  003FB0  0100               	movlb	0	; () banked
 15105  003FB2  6F7A               	movwf	isalpha@c& (0+255),b
 15106  003FB4  0E01               	movlw	1
 15107  003FB6  0100               	movlb	0	; () banked
 15108  003FB8  6F79               	movwf	_isalpha$5692& (0+255),b
 15109                           
 15110                           ; BSR set to: 0
 15111  003FBA  0E7B               	movlw	123
 15112  003FBC  617A               	cpfslt	isalpha@c& (0+255),b
 15113  003FBE  D003               	goto	u8180
 15114                           
 15115                           ; BSR set to: 0
 15116  003FC0  0E61               	movlw	97
 15117  003FC2  617A               	cpfslt	isalpha@c& (0+255),b
 15118  003FC4  D008               	goto	l2658
 15119  003FC6                     u8180:
 15120                           
 15121                           ; BSR set to: 0
 15122                           
 15123                           ; BSR set to: 0
 15124  003FC6  517A               	movf	isalpha@c& (0+255),w,b
 15125  003FC8  ECD1  F020         	call	_isupper
 15126  003FCC  B0D8               	btfsc	status,0,c
 15127  003FCE  D003               	goto	l2658
 15128  003FD0  0E00               	movlw	0
 15129  003FD2  0100               	movlb	0	; () banked
 15130  003FD4  6F79               	movwf	_isalpha$5692& (0+255),b
 15131  003FD6                     l2658:
 15132                           
 15133                           ; BSR set to: 0
 15134  003FD6  C079  F078         	movff	_isalpha$5692,??_isalpha
 15135  003FDA  0100               	movlb	0	; () banked
 15136  003FDC  3178               	rrcf	??_isalpha& (0+255),w,b
 15137  003FDE  0012               	return	
 15138  003FE0                     __end_of_isalpha:
 15139                           	opt stack 0
 15140                           tosu	equ	0xFFF
 15141                           tosh	equ	0xFFE
 15142                           tosl	equ	0xFFD
 15143                           pclath	equ	0xFFA
 15144                           tblptru	equ	0xFF8
 15145                           tblptrh	equ	0xFF7
 15146                           tblptrl	equ	0xFF6
 15147                           tablat	equ	0xFF5
 15148                           prodh	equ	0xFF4
 15149                           prodl	equ	0xFF3
 15150                           intcon	equ	0xFF2
 15151                           intcon2	equ	0xFF1
 15152                           intcon3	equ	0xFF0
 15153                           indf0	equ	0xFEF
 15154                           postinc0	equ	0xFEE
 15155                           plusw0	equ	0xFEB
 15156                           fsr0h	equ	0xFEA
 15157                           fsr0l	equ	0xFE9
 15158                           wreg	equ	0xFE8
 15159                           indf1	equ	0xFE7
 15160                           postinc1	equ	0xFE6
 15161                           postdec1	equ	0xFE5
 15162                           fsr1h	equ	0xFE2
 15163                           fsr1l	equ	0xFE1
 15164                           indf2	equ	0xFDF
 15165                           postinc2	equ	0xFDE
 15166                           postdec2	equ	0xFDD
 15167                           plusw2	equ	0xFDB
 15168                           fsr2h	equ	0xFDA
 15169                           fsr2l	equ	0xFD9
 15170                           status	equ	0xFD8
 15171                           
 15172 ;; *************** function _isupper *****************
 15173 ;; Defined at:
 15174 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isupper.c"
 15175 ;; Parameters:    Size  Location     Type
 15176 ;;  c               1    wreg     unsigned char 
 15177 ;; Auto vars:     Size  Location     Type
 15178 ;;  c               1   23[BANK0 ] unsigned char 
 15179 ;; Return value:  Size  Location     Type
 15180 ;;		None               void
 15181 ;; Registers used:
 15182 ;;		wreg, status,2, status,0
 15183 ;; Tracked objects:
 15184 ;;		On entry : 0/0
 15185 ;;		On exit  : 0/0
 15186 ;;		Unchanged: 0/0
 15187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15189 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15190 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15191 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15192 ;;Total ram usage:        3 bytes
 15193 ;; Hardware stack levels used:    1
 15194 ;; Hardware stack levels required when called:    9
 15195 ;; This function calls:
 15196 ;;		Nothing
 15197 ;; This function is called by:
 15198 ;;		_xtoi
 15199 ;;		_isalpha
 15200 ;; This function uses a non-reentrant model
 15201 ;;
 15202                           
 15203                           	psect	text65
 15204  0041A2                     __ptext65:
 15205                           	opt stack 0
 15206  0041A2                     _isupper:
 15207                           	opt stack 15
 15208                           
 15209                           ; BSR set to: 0
 15210                           ;incstack = 0
 15211                           ;isupper@c stored from wreg
 15212  0041A2  0100               	movlb	0	; () banked
 15213  0041A4  6F77               	movwf	isupper@c& (0+255),b
 15214  0041A6  0E00               	movlw	0
 15215  0041A8  0100               	movlb	0	; () banked
 15216  0041AA  6F76               	movwf	_isupper$5698& (0+255),b
 15217                           
 15218                           ; BSR set to: 0
 15219  0041AC  0E5B               	movlw	91
 15220  0041AE  6177               	cpfslt	isupper@c& (0+255),b
 15221  0041B0  D005               	goto	l2668
 15222                           
 15223                           ; BSR set to: 0
 15224  0041B2  0E40               	movlw	64
 15225  0041B4  6577               	cpfsgt	isupper@c& (0+255),b
 15226  0041B6  D002               	goto	l2668
 15227                           
 15228                           ; BSR set to: 0
 15229  0041B8  0E01               	movlw	1
 15230  0041BA  6F76               	movwf	_isupper$5698& (0+255),b
 15231  0041BC                     l2668:
 15232                           
 15233                           ; BSR set to: 0
 15234                           
 15235                           ; BSR set to: 0
 15236  0041BC  C076  F075         	movff	_isupper$5698,??_isupper
 15237  0041C0  3175               	rrcf	??_isupper& (0+255),w,b
 15238  0041C2  0012               	return	
 15239  0041C4                     __end_of_isupper:
 15240                           	opt stack 0
 15241                           tosu	equ	0xFFF
 15242                           tosh	equ	0xFFE
 15243                           tosl	equ	0xFFD
 15244                           pclath	equ	0xFFA
 15245                           tblptru	equ	0xFF8
 15246                           tblptrh	equ	0xFF7
 15247                           tblptrl	equ	0xFF6
 15248                           tablat	equ	0xFF5
 15249                           prodh	equ	0xFF4
 15250                           prodl	equ	0xFF3
 15251                           intcon	equ	0xFF2
 15252                           intcon2	equ	0xFF1
 15253                           intcon3	equ	0xFF0
 15254                           indf0	equ	0xFEF
 15255                           postinc0	equ	0xFEE
 15256                           plusw0	equ	0xFEB
 15257                           fsr0h	equ	0xFEA
 15258                           fsr0l	equ	0xFE9
 15259                           wreg	equ	0xFE8
 15260                           indf1	equ	0xFE7
 15261                           postinc1	equ	0xFE6
 15262                           postdec1	equ	0xFE5
 15263                           fsr1h	equ	0xFE2
 15264                           fsr1l	equ	0xFE1
 15265                           indf2	equ	0xFDF
 15266                           postinc2	equ	0xFDE
 15267                           postdec2	equ	0xFDD
 15268                           plusw2	equ	0xFDB
 15269                           fsr2h	equ	0xFDA
 15270                           fsr2l	equ	0xFD9
 15271                           status	equ	0xFD8
 15272                           
 15273 ;; *************** function ___lmul *****************
 15274 ;; Defined at:
 15275 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 15276 ;; Parameters:    Size  Location     Type
 15277 ;;  multiplier      4   21[BANK0 ] unsigned long 
 15278 ;;  multiplicand    4   25[BANK0 ] unsigned long 
 15279 ;; Auto vars:     Size  Location     Type
 15280 ;;  product         4   29[BANK0 ] unsigned long 
 15281 ;; Return value:  Size  Location     Type
 15282 ;;                  4   21[BANK0 ] unsigned long 
 15283 ;; Registers used:
 15284 ;;		wreg, status,2, status,0
 15285 ;; Tracked objects:
 15286 ;;		On entry : 0/0
 15287 ;;		On exit  : 0/0
 15288 ;;		Unchanged: 0/0
 15289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15290 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15291 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15293 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15294 ;;Total ram usage:       12 bytes
 15295 ;; Hardware stack levels used:    1
 15296 ;; Hardware stack levels required when called:    9
 15297 ;; This function calls:
 15298 ;;		Nothing
 15299 ;; This function is called by:
 15300 ;;		_Tmr_TmrBPrSet
 15301 ;;		_strtol
 15302 ;;		_SetUartBaudRate
 15303 ;; This function uses a non-reentrant model
 15304 ;;
 15305                           
 15306                           	psect	text66
 15307  003918                     __ptext66:
 15308                           	opt stack 0
 15309  003918                     ___lmul:
 15310                           	opt stack 17
 15311                           
 15312                           ; BSR set to: 0
 15313                           ;incstack = 0
 15314  003918  0E00               	movlw	0
 15315  00391A  0100               	movlb	0	; () banked
 15316  00391C  6F7D               	movwf	___lmul@product& (0+255),b
 15317  00391E  0E00               	movlw	0
 15318  003920  6F7E               	movwf	(___lmul@product+1)& (0+255),b
 15319  003922  0E00               	movlw	0
 15320  003924  6F7F               	movwf	(___lmul@product+2)& (0+255),b
 15321  003926  0E00               	movlw	0
 15322  003928  6F80               	movwf	(___lmul@product+3)& (0+255),b
 15323  00392A                     
 15324                           ; BSR set to: 0
 15325                           
 15326                           ; BSR set to: 0
 15327  00392A  A175               	btfss	___lmul@multiplier& (0+255),0,b
 15328  00392C  D008               	goto	l1970
 15329                           
 15330                           ; BSR set to: 0
 15331  00392E  5179               	movf	___lmul@multiplicand& (0+255),w,b
 15332  003930  277D               	addwf	___lmul@product& (0+255),f,b
 15333  003932  517A               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 15334  003934  237E               	addwfc	(___lmul@product+1)& (0+255),f,b
 15335  003936  517B               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 15336  003938  237F               	addwfc	(___lmul@product+2)& (0+255),f,b
 15337  00393A  517C               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 15338  00393C  2380               	addwfc	(___lmul@product+3)& (0+255),f,b
 15339  00393E                     l1970:
 15340                           
 15341                           ; BSR set to: 0
 15342                           
 15343                           ; BSR set to: 0
 15344  00393E  90D8               	bcf	status,0,c
 15345  003940  3779               	rlcf	___lmul@multiplicand& (0+255),f,b
 15346  003942  377A               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 15347  003944  377B               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 15348  003946  377C               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 15349                           
 15350                           ; BSR set to: 0
 15351  003948  90D8               	bcf	status,0,c
 15352  00394A  3378               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 15353  00394C  3377               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 15354  00394E  3376               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 15355  003950  3375               	rrcf	___lmul@multiplier& (0+255),f,b
 15356  003952  5175               	movf	___lmul@multiplier& (0+255),w,b
 15357  003954  1176               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 15358  003956  1177               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 15359  003958  1178               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 15360  00395A  A4D8               	btfss	status,2,c
 15361  00395C  D7E6               	goto	l1969
 15362                           
 15363                           ; BSR set to: 0
 15364  00395E  C07D  F075         	movff	___lmul@product,?___lmul
 15365  003962  C07E  F076         	movff	___lmul@product+1,?___lmul+1
 15366  003966  C07F  F077         	movff	___lmul@product+2,?___lmul+2
 15367  00396A  C080  F078         	movff	___lmul@product+3,?___lmul+3
 15368                           
 15369                           ; BSR set to: 0
 15370  00396E  0012               	return		;funcret
 15371  003970                     __end_of___lmul:
 15372                           	opt stack 0
 15373                           tosu	equ	0xFFF
 15374                           tosh	equ	0xFFE
 15375                           tosl	equ	0xFFD
 15376                           pclath	equ	0xFFA
 15377                           tblptru	equ	0xFF8
 15378                           tblptrh	equ	0xFF7
 15379                           tblptrl	equ	0xFF6
 15380                           tablat	equ	0xFF5
 15381                           prodh	equ	0xFF4
 15382                           prodl	equ	0xFF3
 15383                           intcon	equ	0xFF2
 15384                           intcon2	equ	0xFF1
 15385                           intcon3	equ	0xFF0
 15386                           indf0	equ	0xFEF
 15387                           postinc0	equ	0xFEE
 15388                           plusw0	equ	0xFEB
 15389                           fsr0h	equ	0xFEA
 15390                           fsr0l	equ	0xFE9
 15391                           wreg	equ	0xFE8
 15392                           indf1	equ	0xFE7
 15393                           postinc1	equ	0xFE6
 15394                           postdec1	equ	0xFE5
 15395                           fsr1h	equ	0xFE2
 15396                           fsr1l	equ	0xFE1
 15397                           indf2	equ	0xFDF
 15398                           postinc2	equ	0xFDE
 15399                           postdec2	equ	0xFDD
 15400                           plusw2	equ	0xFDB
 15401                           fsr2h	equ	0xFDA
 15402                           fsr2l	equ	0xFD9
 15403                           status	equ	0xFD8
 15404                           
 15405 ;; *************** function _strcpy *****************
 15406 ;; Defined at:
 15407 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 15408 ;; Parameters:    Size  Location     Type
 15409 ;;  to              2   21[BANK0 ] PTR unsigned char 
 15410 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 15411 ;;  from            2   23[BANK0 ] PTR const unsigned char 
 15412 ;;		 -> STR_3(20), STR_1(42), 
 15413 ;; Auto vars:     Size  Location     Type
 15414 ;;  cp              2   25[BANK0 ] PTR unsigned char 
 15415 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 15416 ;; Return value:  Size  Location     Type
 15417 ;;                  2   21[BANK0 ] PTR unsigned char 
 15418 ;; Registers used:
 15419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15420 ;; Tracked objects:
 15421 ;;		On entry : 0/0
 15422 ;;		On exit  : 0/0
 15423 ;;		Unchanged: 0/0
 15424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15425 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15426 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15428 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15429 ;;Total ram usage:        6 bytes
 15430 ;; Hardware stack levels used:    1
 15431 ;; Hardware stack levels required when called:    9
 15432 ;; This function calls:
 15433 ;;		Nothing
 15434 ;; This function is called by:
 15435 ;;		_Terminal
 15436 ;;		_Term_MainSm
 15437 ;; This function uses a non-reentrant model
 15438 ;;
 15439                           
 15440                           	psect	text67
 15441  003EEE                     __ptext67:
 15442                           	opt stack 0
 15443  003EEE                     _strcpy:
 15444                           	opt stack 17
 15445                           
 15446                           ; BSR set to: 0
 15447                           ;incstack = 0
 15448  003EEE  C075  F079         	movff	strcpy@to,strcpy@cp
 15449  003EF2  C076  F07A         	movff	strcpy@to+1,strcpy@cp+1
 15450  003EF6  D005               	goto	l2560
 15451  003EF8  0100               	movlb	0	; () banked
 15452  003EFA  4B79               	infsnz	strcpy@cp& (0+255),f,b
 15453  003EFC  2B7A               	incf	(strcpy@cp+1)& (0+255),f,b
 15454  003EFE  4B77               	infsnz	strcpy@from& (0+255),f,b
 15455  003F00  2B78               	incf	(strcpy@from+1)& (0+255),f,b
 15456  003F02                     l2560:
 15457                           
 15458                           ; BSR set to: 0
 15459  003F02  C077  FFF6         	movff	strcpy@from,tblptrl
 15460  003F06  C078  FFF7         	movff	strcpy@from+1,tblptrh
 15461  003F0A                     	if	0	;tblptru may be non-zero
 15462  003F0A                     	endif
 15463  003F0A                     	if	0	;tblptru may be non-zero
 15464  003F0A                     	endif
 15465  003F0A  C079  FFD9         	movff	strcpy@cp,fsr2l
 15466  003F0E  C07A  FFDA         	movff	strcpy@cp+1,fsr2h
 15467  003F12  0008               	tblrd		*
 15468  003F14  CFF5 FFDF          	movff	tablat,indf2
 15469  003F18  50DF               	movf	indf2,w,c
 15470  003F1A  B4D8               	btfsc	status,2,c
 15471  003F1C  0012               	return	
 15472  003F1E  D7EC               	goto	l2561
 15473  003F20                     __end_of_strcpy:
 15474                           	opt stack 0
 15475                           tosu	equ	0xFFF
 15476                           tosh	equ	0xFFE
 15477                           tosl	equ	0xFFD
 15478                           pclath	equ	0xFFA
 15479                           tblptru	equ	0xFF8
 15480                           tblptrh	equ	0xFF7
 15481                           tblptrl	equ	0xFF6
 15482                           tablat	equ	0xFF5
 15483                           prodh	equ	0xFF4
 15484                           prodl	equ	0xFF3
 15485                           intcon	equ	0xFF2
 15486                           intcon2	equ	0xFF1
 15487                           intcon3	equ	0xFF0
 15488                           indf0	equ	0xFEF
 15489                           postinc0	equ	0xFEE
 15490                           plusw0	equ	0xFEB
 15491                           fsr0h	equ	0xFEA
 15492                           fsr0l	equ	0xFE9
 15493                           wreg	equ	0xFE8
 15494                           indf1	equ	0xFE7
 15495                           postinc1	equ	0xFE6
 15496                           postdec1	equ	0xFE5
 15497                           fsr1h	equ	0xFE2
 15498                           fsr1l	equ	0xFE1
 15499                           indf2	equ	0xFDF
 15500                           postinc2	equ	0xFDE
 15501                           postdec2	equ	0xFDD
 15502                           plusw2	equ	0xFDB
 15503                           fsr2h	equ	0xFDA
 15504                           fsr2l	equ	0xFD9
 15505                           status	equ	0xFD8
 15506                           
 15507 ;; *************** function _putUSBUSART *****************
 15508 ;; Defined at:
 15509 ;;		line 559 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 15510 ;; Parameters:    Size  Location     Type
 15511 ;;  data            2   27[BANK0 ] PTR unsigned char 
 15512 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(236), Welcome(137), 
 15513 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 15514 ;;  length          1   29[BANK0 ] unsigned char 
 15515 ;; Auto vars:     Size  Location     Type
 15516 ;;		None
 15517 ;; Return value:  Size  Location     Type
 15518 ;;                  1    wreg      void 
 15519 ;; Registers used:
 15520 ;;		wreg, status,2, status,0
 15521 ;; Tracked objects:
 15522 ;;		On entry : 0/0
 15523 ;;		On exit  : 0/0
 15524 ;;		Unchanged: 0/0
 15525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15526 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15529 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15530 ;;Total ram usage:        3 bytes
 15531 ;; Hardware stack levels used:    1
 15532 ;; Hardware stack levels required when called:    9
 15533 ;; This function calls:
 15534 ;;		Nothing
 15535 ;; This function is called by:
 15536 ;;		_Terminal
 15537 ;;		_Term_MainSm
 15538 ;; This function uses a non-reentrant model
 15539 ;;
 15540                           
 15541                           	psect	text68
 15542  004268                     __ptext68:
 15543                           	opt stack 0
 15544  004268                     _putUSBUSART:
 15545                           	opt stack 17
 15546                           
 15547                           ;usb_device_cdc.c: 584: ;
 15548                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 15549                           
 15550                           ;incstack = 0
 15551  004268  0100               	movlb	0	; () banked
 15552  00426A  51C2               	movf	_cdc_trf_state& (0+255),w,b
 15553  00426C  A4D8               	btfss	status,2,c
 15554  00426E  0012               	return	
 15555                           
 15556                           ; BSR set to: 0
 15557                           ;usb_device_cdc.c: 586: {
 15558                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 15559  004270  C07B  F10D         	movff	putUSBUSART@data,_pCDCSrc
 15560  004274  C07C  F10E         	movff	putUSBUSART@data+1,_pCDCSrc+1
 15561                           
 15562                           ; BSR set to: 0
 15563  004278  C07D  F0C1         	movff	putUSBUSART@length,_cdc_tx_len
 15564                           
 15565                           ; BSR set to: 0
 15566  00427C  0E01               	movlw	1
 15567  00427E  6E18               	movwf	_cdc_mem_type,c
 15568                           
 15569                           ; BSR set to: 0
 15570  004280  0E01               	movlw	1
 15571  004282  6FC2               	movwf	_cdc_trf_state& (0+255),b
 15572  004284  0012               	return	
 15573  004286                     __end_of_putUSBUSART:
 15574                           	opt stack 0
 15575                           tosu	equ	0xFFF
 15576                           tosh	equ	0xFFE
 15577                           tosl	equ	0xFFD
 15578                           pclath	equ	0xFFA
 15579                           tblptru	equ	0xFF8
 15580                           tblptrh	equ	0xFF7
 15581                           tblptrl	equ	0xFF6
 15582                           tablat	equ	0xFF5
 15583                           prodh	equ	0xFF4
 15584                           prodl	equ	0xFF3
 15585                           intcon	equ	0xFF2
 15586                           intcon2	equ	0xFF1
 15587                           intcon3	equ	0xFF0
 15588                           indf0	equ	0xFEF
 15589                           postinc0	equ	0xFEE
 15590                           plusw0	equ	0xFEB
 15591                           fsr0h	equ	0xFEA
 15592                           fsr0l	equ	0xFE9
 15593                           wreg	equ	0xFE8
 15594                           indf1	equ	0xFE7
 15595                           postinc1	equ	0xFE6
 15596                           postdec1	equ	0xFE5
 15597                           fsr1h	equ	0xFE2
 15598                           fsr1l	equ	0xFE1
 15599                           indf2	equ	0xFDF
 15600                           postinc2	equ	0xFDE
 15601                           postdec2	equ	0xFDD
 15602                           plusw2	equ	0xFDB
 15603                           fsr2h	equ	0xFDA
 15604                           fsr2l	equ	0xFD9
 15605                           status	equ	0xFD8
 15606                           
 15607 ;; *************** function _itoa *****************
 15608 ;; Defined at:
 15609 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 15610 ;; Parameters:    Size  Location     Type
 15611 ;;  buf             2   37[BANK0 ] PTR unsigned char 
 15612 ;;		 -> Terminal@Payload(80), 
 15613 ;;  val             2   39[BANK0 ] int 
 15614 ;;  base            2   41[BANK0 ] int 
 15615 ;; Auto vars:     Size  Location     Type
 15616 ;;  cp              2   43[BANK0 ] PTR unsigned char 
 15617 ;;		 -> Terminal@Payload(80), 
 15618 ;; Return value:  Size  Location     Type
 15619 ;;                  2   37[BANK0 ] PTR unsigned char 
 15620 ;; Registers used:
 15621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15622 ;; Tracked objects:
 15623 ;;		On entry : 0/0
 15624 ;;		On exit  : 0/0
 15625 ;;		Unchanged: 0/0
 15626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15627 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15628 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15630 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15631 ;;Total ram usage:        8 bytes
 15632 ;; Hardware stack levels used:    1
 15633 ;; Hardware stack levels required when called:   11
 15634 ;; This function calls:
 15635 ;;		_utoa
 15636 ;; This function is called by:
 15637 ;;		_Terminal
 15638 ;; This function uses a non-reentrant model
 15639 ;;
 15640                           
 15641                           	psect	text69
 15642  003C82                     __ptext69:
 15643                           	opt stack 0
 15644  003C82                     _itoa:
 15645                           	opt stack 14
 15646                           
 15647                           ; BSR set to: 0
 15648                           ;incstack = 0
 15649  003C82  C085  F08B         	movff	itoa@buf,itoa@cp
 15650  003C86  C086  F08C         	movff	itoa@buf+1,itoa@cp+1
 15651  003C8A  0100               	movlb	0	; () banked
 15652  003C8C  AF88               	btfss	(itoa@val+1)& (0+255),7,b
 15653  003C8E  D00C               	goto	l2308
 15654                           
 15655                           ; BSR set to: 0
 15656  003C90  C085  FFD9         	movff	itoa@buf,fsr2l
 15657  003C94  C086  FFDA         	movff	itoa@buf+1,fsr2h
 15658  003C98  0E2D               	movlw	45
 15659  003C9A  6EDF               	movwf	indf2,c
 15660                           
 15661                           ; BSR set to: 0
 15662  003C9C  4B85               	infsnz	itoa@buf& (0+255),f,b
 15663  003C9E  2B86               	incf	(itoa@buf+1)& (0+255),f,b
 15664                           
 15665                           ; BSR set to: 0
 15666  003CA0  6D87               	negf	itoa@val& (0+255),b
 15667  003CA2  1F88               	comf	(itoa@val+1)& (0+255),f,b
 15668  003CA4  B0D8               	btfsc	status,0,c
 15669  003CA6  2B88               	incf	(itoa@val+1)& (0+255),f,b
 15670  003CA8                     l2308:
 15671                           
 15672                           ; BSR set to: 0
 15673                           
 15674                           ; BSR set to: 0
 15675  003CA8  C085  F07C         	movff	itoa@buf,utoa@buf
 15676  003CAC  C086  F07D         	movff	itoa@buf+1,utoa@buf+1
 15677  003CB0  C087  F07E         	movff	itoa@val,utoa@val
 15678  003CB4  C088  F07F         	movff	itoa@val+1,utoa@val+1
 15679  003CB8  C089  F080         	movff	itoa@base,utoa@base
 15680  003CBC  C08A  F081         	movff	itoa@base+1,utoa@base+1
 15681  003CC0  EC32  F016         	call	_utoa	;wreg free
 15682  003CC4  0012               	return	
 15683  003CC6                     __end_of_itoa:
 15684                           	opt stack 0
 15685                           tosu	equ	0xFFF
 15686                           tosh	equ	0xFFE
 15687                           tosl	equ	0xFFD
 15688                           pclath	equ	0xFFA
 15689                           tblptru	equ	0xFF8
 15690                           tblptrh	equ	0xFF7
 15691                           tblptrl	equ	0xFF6
 15692                           tablat	equ	0xFF5
 15693                           prodh	equ	0xFF4
 15694                           prodl	equ	0xFF3
 15695                           intcon	equ	0xFF2
 15696                           intcon2	equ	0xFF1
 15697                           intcon3	equ	0xFF0
 15698                           indf0	equ	0xFEF
 15699                           postinc0	equ	0xFEE
 15700                           plusw0	equ	0xFEB
 15701                           fsr0h	equ	0xFEA
 15702                           fsr0l	equ	0xFE9
 15703                           wreg	equ	0xFE8
 15704                           indf1	equ	0xFE7
 15705                           postinc1	equ	0xFE6
 15706                           postdec1	equ	0xFE5
 15707                           fsr1h	equ	0xFE2
 15708                           fsr1l	equ	0xFE1
 15709                           indf2	equ	0xFDF
 15710                           postinc2	equ	0xFDE
 15711                           postdec2	equ	0xFDD
 15712                           plusw2	equ	0xFDB
 15713                           fsr2h	equ	0xFDA
 15714                           fsr2l	equ	0xFD9
 15715                           status	equ	0xFD8
 15716                           
 15717 ;; *************** function _utoa *****************
 15718 ;; Defined at:
 15719 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 15720 ;; Parameters:    Size  Location     Type
 15721 ;;  buf             2   28[BANK0 ] PTR unsigned char 
 15722 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 15723 ;;  val             2   30[BANK0 ] unsigned int 
 15724 ;;  base            2   32[BANK0 ] int 
 15725 ;; Auto vars:     Size  Location     Type
 15726 ;;  v               2   34[BANK0 ] unsigned int 
 15727 ;;  c               1   36[BANK0 ] unsigned char 
 15728 ;; Return value:  Size  Location     Type
 15729 ;;                  2   28[BANK0 ] PTR unsigned char 
 15730 ;; Registers used:
 15731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15732 ;; Tracked objects:
 15733 ;;		On entry : 0/0
 15734 ;;		On exit  : 0/0
 15735 ;;		Unchanged: 0/0
 15736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15737 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15738 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15740 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15741 ;;Total ram usage:        9 bytes
 15742 ;; Hardware stack levels used:    1
 15743 ;; Hardware stack levels required when called:   10
 15744 ;; This function calls:
 15745 ;;		___lwdiv
 15746 ;;		___lwmod
 15747 ;; This function is called by:
 15748 ;;		_Term_MainSm
 15749 ;;		_itoa
 15750 ;; This function uses a non-reentrant model
 15751 ;;
 15752                           
 15753                           	psect	text70
 15754  002C64                     __ptext70:
 15755                           	opt stack 0
 15756  002C64                     _utoa:
 15757                           	opt stack 16
 15758                           
 15759                           ;incstack = 0
 15760  002C64  C07E  F082         	movff	utoa@val,utoa@v
 15761  002C68  C07F  F083         	movff	utoa@val+1,utoa@v+1
 15762  002C6C  C082  F075         	movff	utoa@v,___lwdiv@dividend
 15763  002C70  C083  F076         	movff	utoa@v+1,___lwdiv@dividend+1
 15764  002C74  C080  F077         	movff	utoa@base,___lwdiv@divisor
 15765  002C78  C081  F078         	movff	utoa@base+1,___lwdiv@divisor+1
 15766  002C7C  EC62  F01D         	call	___lwdiv	;wreg free
 15767  002C80  C075  F082         	movff	?___lwdiv,utoa@v
 15768  002C84  C076  F083         	movff	?___lwdiv+1,utoa@v+1
 15769  002C88  0100               	movlb	0	; () banked
 15770  002C8A  4B7C               	infsnz	utoa@buf& (0+255),f,b
 15771  002C8C  2B7D               	incf	(utoa@buf+1)& (0+255),f,b
 15772                           
 15773                           ; BSR set to: 0
 15774  002C8E  5182               	movf	utoa@v& (0+255),w,b
 15775  002C90  1183               	iorwf	(utoa@v+1)& (0+255),w,b
 15776  002C92  A4D8               	btfss	status,2,c
 15777  002C94  D7EB               	goto	l2312
 15778                           
 15779                           ; BSR set to: 0
 15780                           
 15781                           ; BSR set to: 0
 15782  002C96  C07C  FFD9         	movff	utoa@buf,fsr2l
 15783  002C9A  C07D  FFDA         	movff	utoa@buf+1,fsr2h
 15784  002C9E  0E00               	movlw	0
 15785  002CA0  6EDF               	movwf	indf2,c
 15786                           
 15787                           ; BSR set to: 0
 15788  002CA2  077C               	decf	utoa@buf& (0+255),f,b
 15789  002CA4  A0D8               	btfss	status,0,c
 15790  002CA6  077D               	decf	(utoa@buf+1)& (0+255),f,b
 15791  002CA8                     
 15792                           ; BSR set to: 0
 15793                           
 15794                           ; BSR set to: 0
 15795  002CA8  C07E  F075         	movff	utoa@val,___lwmod@dividend
 15796  002CAC  C07F  F076         	movff	utoa@val+1,___lwmod@dividend+1
 15797  002CB0  C080  F077         	movff	utoa@base,___lwmod@divisor
 15798  002CB4  C081  F078         	movff	utoa@base+1,___lwmod@divisor+1
 15799  002CB8  EC63  F01E         	call	___lwmod	;wreg free
 15800  002CBC  0100               	movlb	0	; () banked
 15801  002CBE  5175               	movf	?___lwmod& (0+255),w,b
 15802  002CC0  6F84               	movwf	utoa@c& (0+255),b
 15803                           
 15804                           ; BSR set to: 0
 15805  002CC2  C07E  F075         	movff	utoa@val,___lwdiv@dividend
 15806  002CC6  C07F  F076         	movff	utoa@val+1,___lwdiv@dividend+1
 15807  002CCA  C080  F077         	movff	utoa@base,___lwdiv@divisor
 15808  002CCE  C081  F078         	movff	utoa@base+1,___lwdiv@divisor+1
 15809  002CD2  EC62  F01D         	call	___lwdiv	;wreg free
 15810  002CD6  C075  F07E         	movff	?___lwdiv,utoa@val
 15811  002CDA  C076  F07F         	movff	?___lwdiv+1,utoa@val+1
 15812  002CDE  0E09               	movlw	9
 15813  002CE0  0100               	movlb	0	; () banked
 15814  002CE2  6584               	cpfsgt	utoa@c& (0+255),b
 15815  002CE4  D002               	goto	l2315
 15816                           
 15817                           ; BSR set to: 0
 15818  002CE6  0E07               	movlw	7
 15819  002CE8  2784               	addwf	utoa@c& (0+255),f,b
 15820  002CEA                     l2315:
 15821                           
 15822                           ; BSR set to: 0
 15823  002CEA  0E30               	movlw	48
 15824  002CEC  2784               	addwf	utoa@c& (0+255),f,b
 15825                           
 15826                           ; BSR set to: 0
 15827  002CEE  C07C  FFD9         	movff	utoa@buf,fsr2l
 15828  002CF2  C07D  FFDA         	movff	utoa@buf+1,fsr2h
 15829  002CF6  C084  FFDF         	movff	utoa@c,indf2
 15830                           
 15831                           ; BSR set to: 0
 15832  002CFA  077C               	decf	utoa@buf& (0+255),f,b
 15833  002CFC  A0D8               	btfss	status,0,c
 15834  002CFE  077D               	decf	(utoa@buf+1)& (0+255),f,b
 15835                           
 15836                           ; BSR set to: 0
 15837  002D00  517E               	movf	utoa@val& (0+255),w,b
 15838  002D02  117F               	iorwf	(utoa@val+1)& (0+255),w,b
 15839  002D04  A4D8               	btfss	status,2,c
 15840  002D06  D7D0               	goto	l2314
 15841                           
 15842                           ; BSR set to: 0
 15843                           ;	Return value of _utoa is never used
 15844                           
 15845                           ; BSR set to: 0
 15846  002D08  4B7C               	infsnz	utoa@buf& (0+255),f,b
 15847  002D0A  2B7D               	incf	(utoa@buf+1)& (0+255),f,b
 15848  002D0C  0012               	return	
 15849  002D0E                     __end_of_utoa:
 15850                           	opt stack 0
 15851                           tosu	equ	0xFFF
 15852                           tosh	equ	0xFFE
 15853                           tosl	equ	0xFFD
 15854                           pclath	equ	0xFFA
 15855                           tblptru	equ	0xFF8
 15856                           tblptrh	equ	0xFF7
 15857                           tblptrl	equ	0xFF6
 15858                           tablat	equ	0xFF5
 15859                           prodh	equ	0xFF4
 15860                           prodl	equ	0xFF3
 15861                           intcon	equ	0xFF2
 15862                           intcon2	equ	0xFF1
 15863                           intcon3	equ	0xFF0
 15864                           indf0	equ	0xFEF
 15865                           postinc0	equ	0xFEE
 15866                           plusw0	equ	0xFEB
 15867                           fsr0h	equ	0xFEA
 15868                           fsr0l	equ	0xFE9
 15869                           wreg	equ	0xFE8
 15870                           indf1	equ	0xFE7
 15871                           postinc1	equ	0xFE6
 15872                           postdec1	equ	0xFE5
 15873                           fsr1h	equ	0xFE2
 15874                           fsr1l	equ	0xFE1
 15875                           indf2	equ	0xFDF
 15876                           postinc2	equ	0xFDE
 15877                           postdec2	equ	0xFDD
 15878                           plusw2	equ	0xFDB
 15879                           fsr2h	equ	0xFDA
 15880                           fsr2l	equ	0xFD9
 15881                           status	equ	0xFD8
 15882                           
 15883 ;; *************** function ___lwmod *****************
 15884 ;; Defined at:
 15885 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 15886 ;; Parameters:    Size  Location     Type
 15887 ;;  dividend        2   21[BANK0 ] unsigned int 
 15888 ;;  divisor         2   23[BANK0 ] unsigned int 
 15889 ;; Auto vars:     Size  Location     Type
 15890 ;;  counter         1   25[BANK0 ] unsigned char 
 15891 ;; Return value:  Size  Location     Type
 15892 ;;                  2   21[BANK0 ] unsigned int 
 15893 ;; Registers used:
 15894 ;;		wreg, status,2, status,0
 15895 ;; Tracked objects:
 15896 ;;		On entry : 0/0
 15897 ;;		On exit  : 0/0
 15898 ;;		Unchanged: 0/0
 15899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15900 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15901 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15903 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15904 ;;Total ram usage:        5 bytes
 15905 ;; Hardware stack levels used:    1
 15906 ;; Hardware stack levels required when called:    9
 15907 ;; This function calls:
 15908 ;;		Nothing
 15909 ;; This function is called by:
 15910 ;;		_utoa
 15911 ;; This function uses a non-reentrant model
 15912 ;;
 15913                           
 15914                           	psect	text71
 15915  003CC6                     __ptext71:
 15916                           	opt stack 0
 15917  003CC6                     ___lwmod:
 15918                           	opt stack 16
 15919                           
 15920                           ; BSR set to: 0
 15921                           ;incstack = 0
 15922  003CC6  0100               	movlb	0	; () banked
 15923  003CC8  5177               	movf	___lwmod@divisor& (0+255),w,b
 15924  003CCA  1178               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 15925  003CCC  B4D8               	btfsc	status,2,c
 15926  003CCE  D018               	goto	l2410
 15927                           
 15928                           ; BSR set to: 0
 15929  003CD0  0E01               	movlw	1
 15930  003CD2  6F79               	movwf	___lwmod@counter& (0+255),b
 15931  003CD4  D004               	goto	l2405
 15932  003CD6                     
 15933                           ; BSR set to: 0
 15934                           
 15935                           ; BSR set to: 0
 15936  003CD6  90D8               	bcf	status,0,c
 15937  003CD8  3777               	rlcf	___lwmod@divisor& (0+255),f,b
 15938  003CDA  3778               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 15939  003CDC  2B79               	incf	___lwmod@counter& (0+255),f,b
 15940  003CDE                     l2405:
 15941                           
 15942                           ; BSR set to: 0
 15943                           
 15944                           ; BSR set to: 0
 15945  003CDE  AF78               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 15946  003CE0  D7FA               	goto	l2406
 15947  003CE2                     u8010:
 15948                           
 15949                           ; BSR set to: 0
 15950                           
 15951                           ; BSR set to: 0
 15952                           
 15953                           ; BSR set to: 0
 15954  003CE2  5177               	movf	___lwmod@divisor& (0+255),w,b
 15955  003CE4  5D75               	subwf	___lwmod@dividend& (0+255),w,b
 15956  003CE6  5178               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15957  003CE8  5976               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 15958  003CEA  A0D8               	btfss	status,0,c
 15959  003CEC  D004               	goto	l2409
 15960                           
 15961                           ; BSR set to: 0
 15962  003CEE  5177               	movf	___lwmod@divisor& (0+255),w,b
 15963  003CF0  5F75               	subwf	___lwmod@dividend& (0+255),f,b
 15964  003CF2  5178               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15965  003CF4  5B76               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 15966  003CF6                     l2409:
 15967                           
 15968                           ; BSR set to: 0
 15969                           
 15970                           ; BSR set to: 0
 15971  003CF6  90D8               	bcf	status,0,c
 15972  003CF8  3378               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 15973  003CFA  3377               	rrcf	___lwmod@divisor& (0+255),f,b
 15974                           
 15975                           ; BSR set to: 0
 15976  003CFC  2F79               	decfsz	___lwmod@counter& (0+255),f,b
 15977  003CFE  D7F1               	goto	u8010
 15978  003D00                     l2410:
 15979                           
 15980                           ; BSR set to: 0
 15981                           
 15982                           ; BSR set to: 0
 15983  003D00  C075  F075         	movff	___lwmod@dividend,?___lwmod
 15984  003D04  C076  F076         	movff	___lwmod@dividend+1,?___lwmod+1
 15985                           
 15986                           ; BSR set to: 0
 15987  003D08  0012               	return		;funcret
 15988  003D0A                     __end_of___lwmod:
 15989                           	opt stack 0
 15990                           tosu	equ	0xFFF
 15991                           tosh	equ	0xFFE
 15992                           tosl	equ	0xFFD
 15993                           pclath	equ	0xFFA
 15994                           tblptru	equ	0xFF8
 15995                           tblptrh	equ	0xFF7
 15996                           tblptrl	equ	0xFF6
 15997                           tablat	equ	0xFF5
 15998                           prodh	equ	0xFF4
 15999                           prodl	equ	0xFF3
 16000                           intcon	equ	0xFF2
 16001                           intcon2	equ	0xFF1
 16002                           intcon3	equ	0xFF0
 16003                           indf0	equ	0xFEF
 16004                           postinc0	equ	0xFEE
 16005                           plusw0	equ	0xFEB
 16006                           fsr0h	equ	0xFEA
 16007                           fsr0l	equ	0xFE9
 16008                           wreg	equ	0xFE8
 16009                           indf1	equ	0xFE7
 16010                           postinc1	equ	0xFE6
 16011                           postdec1	equ	0xFE5
 16012                           fsr1h	equ	0xFE2
 16013                           fsr1l	equ	0xFE1
 16014                           indf2	equ	0xFDF
 16015                           postinc2	equ	0xFDE
 16016                           postdec2	equ	0xFDD
 16017                           plusw2	equ	0xFDB
 16018                           fsr2h	equ	0xFDA
 16019                           fsr2l	equ	0xFD9
 16020                           status	equ	0xFD8
 16021                           
 16022 ;; *************** function _getsUSBUSART *****************
 16023 ;; Defined at:
 16024 ;;		line 488 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 16025 ;; Parameters:    Size  Location     Type
 16026 ;;  buffer          2   28[BANK0 ] PTR unsigned char 
 16027 ;;		 -> Terminal@UsbRxBuffer(200), 
 16028 ;;  len             1   30[BANK0 ] unsigned char 
 16029 ;; Auto vars:     Size  Location     Type
 16030 ;;		None
 16031 ;; Return value:  Size  Location     Type
 16032 ;;                  1    wreg      unsigned char 
 16033 ;; Registers used:
 16034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16035 ;; Tracked objects:
 16036 ;;		On entry : 0/0
 16037 ;;		On exit  : 0/0
 16038 ;;		Unchanged: 0/0
 16039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16040 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16042 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16043 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16044 ;;Total ram usage:        4 bytes
 16045 ;; Hardware stack levels used:    1
 16046 ;; Hardware stack levels required when called:   10
 16047 ;; This function calls:
 16048 ;;		_USBTransferOnePacket
 16049 ;; This function is called by:
 16050 ;;		_Terminal
 16051 ;; This function uses a non-reentrant model
 16052 ;;
 16053                           
 16054                           	psect	text72
 16055  003022                     __ptext72:
 16056                           	opt stack 0
 16057  003022                     _getsUSBUSART:
 16058                           	opt stack 15
 16059                           
 16060                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 16061                           
 16062                           ; BSR set to: 0
 16063                           ;incstack = 0
 16064  003022  0E00               	movlw	0
 16065  003024  0100               	movlb	0	; () banked
 16066  003026  6FC3               	movwf	_cdc_rx_len& (0+255),b
 16067                           
 16068                           ; BSR set to: 0
 16069                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 16070  003028  51BB               	movf	_CDCDataOutHandle& (0+255),w,b
 16071  00302A  11BC               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 16072  00302C  B4D8               	btfsc	status,2,c
 16073  00302E  D006               	goto	u8340
 16074                           
 16075                           ; BSR set to: 0
 16076  003030  C0BB  FFD9         	movff	_CDCDataOutHandle,fsr2l
 16077  003034  C0BC  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 16078  003038  BEDF               	btfsc	indf2,7,c
 16079  00303A  D03B               	goto	l1403
 16080  00303C                     u8340:
 16081                           
 16082                           ; BSR set to: 0
 16083                           ;usb_device_cdc.c: 493: {
 16084                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 16085                           
 16086                           ; BSR set to: 0
 16087  00303C  EE20 F001          	lfsr	2,1
 16088  003040  51BB               	movf	_CDCDataOutHandle& (0+255),w,b
 16089  003042  26D9               	addwf	fsr2l,f,c
 16090  003044  51BC               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 16091  003046  22DA               	addwfc	fsr2h,f,c
 16092  003048  517E               	movf	getsUSBUSART@len& (0+255),w,b
 16093  00304A  5CDE               	subwf	postinc2,w,c
 16094  00304C  B0D8               	btfsc	status,0,c
 16095  00304E  D008               	goto	l1406
 16096                           
 16097                           ; BSR set to: 0
 16098                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 16099  003050  EE20 F001          	lfsr	2,1
 16100  003054  51BB               	movf	_CDCDataOutHandle& (0+255),w,b
 16101  003056  26D9               	addwf	fsr2l,f,c
 16102  003058  51BC               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 16103  00305A  22DA               	addwfc	fsr2h,f,c
 16104  00305C  50DF               	movf	indf2,w,c
 16105  00305E  6F7E               	movwf	getsUSBUSART@len& (0+255),b
 16106  003060                     l1406:
 16107                           
 16108                           ; BSR set to: 0
 16109                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 16110                           
 16111                           ; BSR set to: 0
 16112  003060  0E00               	movlw	0
 16113  003062  6FC3               	movwf	_cdc_rx_len& (0+255),b
 16114  003064  D013               	goto	l1407
 16115  003066                     
 16116                           ; BSR set to: 0
 16117                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 16118                           
 16119                           ; BSR set to: 0
 16120  003066  51C3               	movf	_cdc_rx_len& (0+255),w,b
 16121  003068  0D01               	mullw	1
 16122  00306A  0E40               	movlw	low _cdc_data_rx
 16123  00306C  24F3               	addwf	prodl,w,c
 16124  00306E  6ED9               	movwf	fsr2l,c
 16125  003070  0E04               	movlw	high _cdc_data_rx
 16126  003072  20F4               	addwfc	prodh,w,c
 16127  003074  6EDA               	movwf	fsr2h,c
 16128  003076  51C3               	movf	_cdc_rx_len& (0+255),w,b
 16129  003078  0D01               	mullw	1
 16130  00307A  50F3               	movf	prodl,w,c
 16131  00307C  257C               	addwf	getsUSBUSART@buffer& (0+255),w,b
 16132  00307E  6EE1               	movwf	fsr1l,c
 16133  003080  50F4               	movf	prodh,w,c
 16134  003082  217D               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 16135  003084  6EE2               	movwf	fsr1h,c
 16136  003086  CFDF FFE7          	movff	indf2,indf1
 16137                           
 16138                           ; BSR set to: 0
 16139  00308A  2BC3               	incf	_cdc_rx_len& (0+255),f,b
 16140  00308C                     l1407:
 16141                           
 16142                           ; BSR set to: 0
 16143                           
 16144                           ; BSR set to: 0
 16145  00308C  517E               	movf	getsUSBUSART@len& (0+255),w,b
 16146  00308E  5DC3               	subwf	_cdc_rx_len& (0+255),w,b
 16147  003090  A0D8               	btfss	status,0,c
 16148  003092  D7E9               	goto	l1408
 16149                           
 16150                           ; BSR set to: 0
 16151                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 16152                           
 16153                           ; BSR set to: 0
 16154  003094  0E00               	movlw	0
 16155  003096  6F75               	movwf	USBTransferOnePacket@dir& (0+255),b
 16156  003098  0E40               	movlw	low _cdc_data_rx
 16157  00309A  6F76               	movwf	USBTransferOnePacket@data& (0+255),b
 16158  00309C  0E04               	movlw	high _cdc_data_rx
 16159  00309E  6F77               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 16160  0030A0  0E40               	movlw	64
 16161  0030A2  6F78               	movwf	USBTransferOnePacket@len& (0+255),b
 16162  0030A4  0E02               	movlw	2
 16163  0030A6  EC72  F014         	call	_USBTransferOnePacket
 16164  0030AA  C075  F0BB         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 16165  0030AE  C076  F0BC         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 16166  0030B2                     l1403:
 16167                           
 16168                           ;usb_device_cdc.c: 513: }
 16169                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 16170  0030B2  0100               	movlb	0	; () banked
 16171  0030B4  51C3               	movf	_cdc_rx_len& (0+255),w,b
 16172  0030B6  0012               	return	
 16173  0030B8                     __end_of_getsUSBUSART:
 16174                           	opt stack 0
 16175                           tosu	equ	0xFFF
 16176                           tosh	equ	0xFFE
 16177                           tosl	equ	0xFFD
 16178                           pclath	equ	0xFFA
 16179                           tblptru	equ	0xFF8
 16180                           tblptrh	equ	0xFF7
 16181                           tblptrl	equ	0xFF6
 16182                           tablat	equ	0xFF5
 16183                           prodh	equ	0xFF4
 16184                           prodl	equ	0xFF3
 16185                           intcon	equ	0xFF2
 16186                           intcon2	equ	0xFF1
 16187                           intcon3	equ	0xFF0
 16188                           indf0	equ	0xFEF
 16189                           postinc0	equ	0xFEE
 16190                           plusw0	equ	0xFEB
 16191                           fsr0h	equ	0xFEA
 16192                           fsr0l	equ	0xFE9
 16193                           wreg	equ	0xFE8
 16194                           indf1	equ	0xFE7
 16195                           postinc1	equ	0xFE6
 16196                           postdec1	equ	0xFE5
 16197                           fsr1h	equ	0xFE2
 16198                           fsr1l	equ	0xFE1
 16199                           indf2	equ	0xFDF
 16200                           postinc2	equ	0xFDE
 16201                           postdec2	equ	0xFDD
 16202                           plusw2	equ	0xFDB
 16203                           fsr2h	equ	0xFDA
 16204                           fsr2l	equ	0xFD9
 16205                           status	equ	0xFD8
 16206                           
 16207 ;; *************** function _USBTransferOnePacket *****************
 16208 ;; Defined at:
 16209 ;;		line 1013 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 16210 ;; Parameters:    Size  Location     Type
 16211 ;;  ep              1    wreg     unsigned char 
 16212 ;;  dir             1   21[BANK0 ] unsigned char 
 16213 ;;  data            2   22[BANK0 ] PTR unsigned char 
 16214 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 16215 ;;  len             1   24[BANK0 ] unsigned char 
 16216 ;; Auto vars:     Size  Location     Type
 16217 ;;  ep              1   25[BANK0 ] unsigned char 
 16218 ;;  handle          2   26[BANK0 ] PTR volatile struct __BD
 16219 ;;		 -> NULL(0), BDT(48), 
 16220 ;; Return value:  Size  Location     Type
 16221 ;;                  2   21[BANK0 ] PTR void 
 16222 ;; Registers used:
 16223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16224 ;; Tracked objects:
 16225 ;;		On entry : 0/0
 16226 ;;		On exit  : 0/0
 16227 ;;		Unchanged: 0/0
 16228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16230 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16232 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16233 ;;Total ram usage:        7 bytes
 16234 ;; Hardware stack levels used:    1
 16235 ;; Hardware stack levels required when called:    9
 16236 ;; This function calls:
 16237 ;;		Nothing
 16238 ;; This function is called by:
 16239 ;;		_CDCInitEP
 16240 ;;		_getsUSBUSART
 16241 ;;		_CDCTxService
 16242 ;;		_USBCDCEventHandler
 16243 ;; This function uses a non-reentrant model
 16244 ;;
 16245                           
 16246                           	psect	text73
 16247  0028E4                     __ptext73:
 16248                           	opt stack 0
 16249  0028E4                     _USBTransferOnePacket:
 16250                           	opt stack 15
 16251                           
 16252                           ; BSR set to: 0
 16253                           ;incstack = 0
 16254                           ;USBTransferOnePacket@ep stored from wreg
 16255  0028E4  0100               	movlb	0	; () banked
 16256  0028E6  6F79               	movwf	USBTransferOnePacket@ep& (0+255),b
 16257                           
 16258                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 16259                           ;usb_device.c: 1018: if(dir != 0)
 16260  0028E8  0100               	movlb	0	; () banked
 16261  0028EA  5175               	movf	USBTransferOnePacket@dir& (0+255),w,b
 16262  0028EC  B4D8               	btfsc	status,2,c
 16263  0028EE  D007               	goto	l1127
 16264                           
 16265                           ; BSR set to: 0
 16266                           ;usb_device.c: 1019: {
 16267                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 16268  0028F0  5179               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16269  0028F2  0D02               	mullw	2
 16270  0028F4  0EB5               	movlw	low _pBDTEntryIn
 16271  0028F6  24F3               	addwf	prodl,w,c
 16272  0028F8  6ED9               	movwf	fsr2l,c
 16273  0028FA  0E00               	movlw	high _pBDTEntryIn
 16274  0028FC  D006               	goto	L16
 16275  0028FE                     l1127:
 16276                           
 16277                           ; BSR set to: 0
 16278                           ;usb_device.c: 1023: else
 16279                           ;usb_device.c: 1024: {
 16280                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 16281                           
 16282                           ; BSR set to: 0
 16283  0028FE  5179               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16284  002900  0D02               	mullw	2
 16285  002902  0E00               	movlw	low _pBDTEntryOut
 16286  002904  24F3               	addwf	prodl,w,c
 16287  002906  6ED9               	movwf	fsr2l,c
 16288  002908  0E01               	movlw	high _pBDTEntryOut
 16289  00290A                     L16:
 16290  00290A  20F4               	addwfc	prodh,w,c
 16291  00290C  6EDA               	movwf	fsr2h,c
 16292  00290E  CFDE F07A          	movff	postinc2,USBTransferOnePacket@handle
 16293  002912  CFDD F07B          	movff	postdec2,USBTransferOnePacket@handle+1
 16294                           
 16295                           ; BSR set to: 0
 16296                           ;usb_device.c: 1027: }
 16297                           ;usb_device.c: 1031: if(handle == 0)
 16298                           
 16299                           ; BSR set to: 0
 16300  002916  517A               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16301  002918  117B               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16302  00291A  A4D8               	btfss	status,2,c
 16303  00291C  D005               	goto	l1129
 16304                           
 16305                           ; BSR set to: 0
 16306                           ;usb_device.c: 1032: {
 16307                           ;usb_device.c: 1033: return 0;
 16308  00291E  0E00               	movlw	0
 16309  002920  6F75               	movwf	?_USBTransferOnePacket& (0+255),b
 16310  002922  0E00               	movlw	0
 16311  002924  6F76               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 16312                           
 16313                           ; BSR set to: 0
 16314  002926  0012               	return	
 16315  002928                     l1129:
 16316                           
 16317                           ; BSR set to: 0
 16318                           ;usb_device.c: 1034: }
 16319                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 16320                           
 16321                           ; BSR set to: 0
 16322  002928  EE20 F002          	lfsr	2,2
 16323  00292C  517A               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16324  00292E  26D9               	addwf	fsr2l,f,c
 16325  002930  517B               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16326  002932  22DA               	addwfc	fsr2h,f,c
 16327  002934  C076  FFDE         	movff	USBTransferOnePacket@data,postinc2
 16328  002938  C077  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 16329                           
 16330                           ;usb_device.c: 1048: handle->CNT = len;
 16331  00293C  EE20 F001          	lfsr	2,1
 16332  002940  517A               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16333  002942  26D9               	addwf	fsr2l,f,c
 16334  002944  517B               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16335  002946  22DA               	addwfc	fsr2h,f,c
 16336  002948  C078  FFDF         	movff	USBTransferOnePacket@len,indf2
 16337                           
 16338                           ; BSR set to: 0
 16339                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 16340  00294C  C07A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16341  002950  C07B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16342  002954  0E40               	movlw	64
 16343  002956  16DF               	andwf	indf2,f,c
 16344                           
 16345                           ; BSR set to: 0
 16346                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 16347  002958  C07A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16348  00295C  C07B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16349  002960  0E00               	movlw	0
 16350  002962  86DB               	bsf	plusw2,3,c
 16351                           
 16352                           ; BSR set to: 0
 16353                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 16354  002964  C07A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16355  002968  C07B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16356  00296C  0E00               	movlw	0
 16357  00296E  8EDB               	bsf	plusw2,7,c
 16358                           
 16359                           ; BSR set to: 0
 16360                           ;usb_device.c: 1054: if(dir != 0)
 16361  002970  5175               	movf	USBTransferOnePacket@dir& (0+255),w,b
 16362  002972  B4D8               	btfsc	status,2,c
 16363  002974  D007               	goto	l1131
 16364                           
 16365                           ; BSR set to: 0
 16366                           ;usb_device.c: 1055: {
 16367                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 16368  002976  5179               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16369  002978  0D02               	mullw	2
 16370  00297A  0EB5               	movlw	low _pBDTEntryIn
 16371  00297C  24F3               	addwf	prodl,w,c
 16372  00297E  6ED9               	movwf	fsr2l,c
 16373  002980  0E00               	movlw	high _pBDTEntryIn
 16374  002982  D006               	goto	L17
 16375  002984                     l1131:
 16376                           
 16377                           ; BSR set to: 0
 16378                           ;usb_device.c: 1059: else
 16379                           ;usb_device.c: 1060: {
 16380                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 16381                           
 16382                           ; BSR set to: 0
 16383  002984  5179               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16384  002986  0D02               	mullw	2
 16385  002988  0E00               	movlw	low _pBDTEntryOut
 16386  00298A  24F3               	addwf	prodl,w,c
 16387  00298C  6ED9               	movwf	fsr2l,c
 16388  00298E  0E01               	movlw	high _pBDTEntryOut
 16389  002990                     L17:
 16390  002990  20F4               	addwfc	prodh,w,c
 16391  002992  6EDA               	movwf	fsr2h,c
 16392  002994  0E04               	movlw	4
 16393  002996  1ADF               	xorwf	indf2,f,c
 16394                           
 16395                           ; BSR set to: 0
 16396                           ;usb_device.c: 1063: }
 16397                           ;usb_device.c: 1064: return (void*)handle;
 16398                           
 16399                           ; BSR set to: 0
 16400  002998  C07A  F075         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 16401  00299C  C07B  F076         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 16402  0029A0  0012               	return	
 16403  0029A2                     __end_of_USBTransferOnePacket:
 16404                           	opt stack 0
 16405                           tosu	equ	0xFFF
 16406                           tosh	equ	0xFFE
 16407                           tosl	equ	0xFFD
 16408                           pclath	equ	0xFFA
 16409                           tblptru	equ	0xFF8
 16410                           tblptrh	equ	0xFF7
 16411                           tblptrl	equ	0xFF6
 16412                           tablat	equ	0xFF5
 16413                           prodh	equ	0xFF4
 16414                           prodl	equ	0xFF3
 16415                           intcon	equ	0xFF2
 16416                           intcon2	equ	0xFF1
 16417                           intcon3	equ	0xFF0
 16418                           indf0	equ	0xFEF
 16419                           postinc0	equ	0xFEE
 16420                           plusw0	equ	0xFEB
 16421                           fsr0h	equ	0xFEA
 16422                           fsr0l	equ	0xFE9
 16423                           wreg	equ	0xFE8
 16424                           indf1	equ	0xFE7
 16425                           postinc1	equ	0xFE6
 16426                           postdec1	equ	0xFE5
 16427                           fsr1h	equ	0xFE2
 16428                           fsr1l	equ	0xFE1
 16429                           indf2	equ	0xFDF
 16430                           postinc2	equ	0xFDE
 16431                           postdec2	equ	0xFDD
 16432                           plusw2	equ	0xFDB
 16433                           fsr2h	equ	0xFDA
 16434                           fsr2l	equ	0xFD9
 16435                           status	equ	0xFD8
 16436                           
 16437 ;; *************** function _atoi *****************
 16438 ;; Defined at:
 16439 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 16440 ;; Parameters:    Size  Location     Type
 16441 ;;  s               2   27[BANK0 ] PTR const unsigned char 
 16442 ;;		 -> Terminal@Len(4), 
 16443 ;; Auto vars:     Size  Location     Type
 16444 ;;  a               2   32[BANK0 ] int 
 16445 ;;  sign            1   31[BANK0 ] unsigned char 
 16446 ;; Return value:  Size  Location     Type
 16447 ;;                  2   27[BANK0 ] int 
 16448 ;; Registers used:
 16449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16450 ;; Tracked objects:
 16451 ;;		On entry : 0/0
 16452 ;;		On exit  : 0/0
 16453 ;;		Unchanged: 0/0
 16454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16455 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16456 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16457 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16458 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16459 ;;Total ram usage:        7 bytes
 16460 ;; Hardware stack levels used:    1
 16461 ;; Hardware stack levels required when called:   10
 16462 ;; This function calls:
 16463 ;;		___wmul
 16464 ;;		_isdigit
 16465 ;; This function is called by:
 16466 ;;		_Terminal
 16467 ;; This function uses a non-reentrant model
 16468 ;;
 16469                           
 16470                           	psect	text74
 16471  002106                     __ptext74:
 16472                           	opt stack 0
 16473  002106                     _atoi:
 16474                           	opt stack 15
 16475                           
 16476                           ; BSR set to: 0
 16477                           ;incstack = 0
 16478  002106  D003               	goto	l2121
 16479  002108  0100               	movlb	0	; () banked
 16480  00210A  4B7B               	infsnz	atoi@s& (0+255),f,b
 16481  00210C  2B7C               	incf	(atoi@s+1)& (0+255),f,b
 16482  00210E                     l2121:
 16483                           
 16484                           ; BSR set to: 0
 16485  00210E  C07B  FFD9         	movff	atoi@s,fsr2l
 16486  002112  C07C  FFDA         	movff	atoi@s+1,fsr2h
 16487  002116  0E20               	movlw	32
 16488  002118  18DE               	xorwf	postinc2,w,c
 16489  00211A  B4D8               	btfsc	status,2,c
 16490  00211C  D7F5               	goto	l2122
 16491  00211E  C07B  FFD9         	movff	atoi@s,fsr2l
 16492  002122  C07C  FFDA         	movff	atoi@s+1,fsr2h
 16493  002126  0E09               	movlw	9
 16494  002128  18DE               	xorwf	postinc2,w,c
 16495  00212A  B4D8               	btfsc	status,2,c
 16496  00212C  D7ED               	goto	l2122
 16497  00212E  0E00               	movlw	0
 16498  002130  0100               	movlb	0	; () banked
 16499  002132  6F81               	movwf	(atoi@a+1)& (0+255),b
 16500  002134  0E00               	movlw	0
 16501  002136  6F80               	movwf	atoi@a& (0+255),b
 16502  002138  0E00               	movlw	0
 16503  00213A  6F7F               	movwf	atoi@sign& (0+255),b
 16504                           
 16505                           ; BSR set to: 0
 16506  00213C  C07B  FFD9         	movff	atoi@s,fsr2l
 16507  002140  C07C  FFDA         	movff	atoi@s+1,fsr2h
 16508  002144  0E2D               	movlw	45
 16509  002146  18DE               	xorwf	postinc2,w,c
 16510  002148  A4D8               	btfss	status,2,c
 16511  00214A  D002               	goto	l2124
 16512                           
 16513                           ; BSR set to: 0
 16514  00214C  2B7F               	incf	atoi@sign& (0+255),f,b
 16515  00214E  D026               	goto	l9510
 16516  002150                     l2124:
 16517                           
 16518                           ; BSR set to: 0
 16519                           
 16520                           ; BSR set to: 0
 16521  002150  C07B  FFD9         	movff	atoi@s,fsr2l
 16522  002154  C07C  FFDA         	movff	atoi@s+1,fsr2h
 16523  002158  0E2B               	movlw	43
 16524  00215A  18DE               	xorwf	postinc2,w,c
 16525  00215C  A4D8               	btfss	status,2,c
 16526  00215E  D020               	goto	l2127
 16527  002160  D01D               	goto	l9510
 16528  002162                     
 16529                           ; BSR set to: 0
 16530  002162  C080  F075         	movff	atoi@a,___wmul@multiplier
 16531  002166  C081  F076         	movff	atoi@a+1,___wmul@multiplier+1
 16532  00216A  0E00               	movlw	0
 16533  00216C  0100               	movlb	0	; () banked
 16534  00216E  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16535  002170  0E0A               	movlw	10
 16536  002172  6F77               	movwf	___wmul@multiplicand& (0+255),b
 16537  002174  EC76  F020         	call	___wmul	;wreg free
 16538  002178  C07B  FFD9         	movff	atoi@s,fsr2l
 16539  00217C  C07C  FFDA         	movff	atoi@s+1,fsr2h
 16540  002180  50DF               	movf	indf2,w,c
 16541  002182  0100               	movlb	0	; () banked
 16542  002184  6F7D               	movwf	??_atoi& (0+255),b
 16543  002186  6B7E               	clrf	(??_atoi+1)& (0+255),b
 16544  002188  5175               	movf	?___wmul& (0+255),w,b
 16545  00218A  277D               	addwf	??_atoi& (0+255),f,b
 16546  00218C  5176               	movf	(?___wmul+1)& (0+255),w,b
 16547  00218E  237E               	addwfc	(??_atoi+1)& (0+255),f,b
 16548  002190  0ED0               	movlw	208
 16549  002192  257D               	addwf	??_atoi& (0+255),w,b
 16550  002194  6F80               	movwf	atoi@a& (0+255),b
 16551  002196  0EFF               	movlw	255
 16552  002198  217E               	addwfc	(??_atoi+1)& (0+255),w,b
 16553  00219A  6F81               	movwf	(atoi@a+1)& (0+255),b
 16554  00219C                     l9510:
 16555                           
 16556                           ; BSR set to: 0
 16557  00219C  4B7B               	infsnz	atoi@s& (0+255),f,b
 16558  00219E  2B7C               	incf	(atoi@s+1)& (0+255),f,b
 16559  0021A0                     l2127:
 16560                           
 16561                           ; BSR set to: 0
 16562                           
 16563                           ; BSR set to: 0
 16564  0021A0  C07B  FFD9         	movff	atoi@s,fsr2l
 16565  0021A4  C07C  FFDA         	movff	atoi@s+1,fsr2h
 16566  0021A8  50DF               	movf	indf2,w,c
 16567  0021AA  ECE2  F020         	call	_isdigit
 16568  0021AE  B0D8               	btfsc	status,0,c
 16569  0021B0  D7D8               	goto	l2128
 16570  0021B2  0100               	movlb	0	; () banked
 16571  0021B4  517F               	movf	atoi@sign& (0+255),w,b
 16572  0021B6  B4D8               	btfsc	status,2,c
 16573  0021B8  D00D               	goto	l2130
 16574                           
 16575                           ; BSR set to: 0
 16576  0021BA  C080  F07D         	movff	atoi@a,??_atoi
 16577  0021BE  C081  F07E         	movff	atoi@a+1,??_atoi+1
 16578  0021C2  1F7D               	comf	??_atoi& (0+255),f,b
 16579  0021C4  1F7E               	comf	(??_atoi+1)& (0+255),f,b
 16580  0021C6  4B7D               	infsnz	??_atoi& (0+255),f,b
 16581  0021C8  2B7E               	incf	(??_atoi+1)& (0+255),f,b
 16582  0021CA  C07D  F07B         	movff	??_atoi,?_atoi
 16583  0021CE  C07E  F07C         	movff	??_atoi+1,?_atoi+1
 16584  0021D2  0012               	return	
 16585  0021D4                     l2130:
 16586                           
 16587                           ; BSR set to: 0
 16588  0021D4  C080  F07B         	movff	atoi@a,?_atoi
 16589  0021D8  C081  F07C         	movff	atoi@a+1,?_atoi+1
 16590                           
 16591                           ; BSR set to: 0
 16592  0021DC  0012               	return		;funcret
 16593  0021DE                     __end_of_atoi:
 16594                           	opt stack 0
 16595                           tosu	equ	0xFFF
 16596                           tosh	equ	0xFFE
 16597                           tosl	equ	0xFFD
 16598                           pclath	equ	0xFFA
 16599                           tblptru	equ	0xFF8
 16600                           tblptrh	equ	0xFF7
 16601                           tblptrl	equ	0xFF6
 16602                           tablat	equ	0xFF5
 16603                           prodh	equ	0xFF4
 16604                           prodl	equ	0xFF3
 16605                           intcon	equ	0xFF2
 16606                           intcon2	equ	0xFF1
 16607                           intcon3	equ	0xFF0
 16608                           indf0	equ	0xFEF
 16609                           postinc0	equ	0xFEE
 16610                           plusw0	equ	0xFEB
 16611                           fsr0h	equ	0xFEA
 16612                           fsr0l	equ	0xFE9
 16613                           wreg	equ	0xFE8
 16614                           indf1	equ	0xFE7
 16615                           postinc1	equ	0xFE6
 16616                           postdec1	equ	0xFE5
 16617                           fsr1h	equ	0xFE2
 16618                           fsr1l	equ	0xFE1
 16619                           indf2	equ	0xFDF
 16620                           postinc2	equ	0xFDE
 16621                           postdec2	equ	0xFDD
 16622                           plusw2	equ	0xFDB
 16623                           fsr2h	equ	0xFDA
 16624                           fsr2l	equ	0xFD9
 16625                           status	equ	0xFD8
 16626                           
 16627 ;; *************** function _isdigit *****************
 16628 ;; Defined at:
 16629 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 16630 ;; Parameters:    Size  Location     Type
 16631 ;;  c               1    wreg     unsigned char 
 16632 ;; Auto vars:     Size  Location     Type
 16633 ;;  c               1   23[BANK0 ] unsigned char 
 16634 ;; Return value:  Size  Location     Type
 16635 ;;		None               void
 16636 ;; Registers used:
 16637 ;;		wreg, status,2, status,0
 16638 ;; Tracked objects:
 16639 ;;		On entry : 0/0
 16640 ;;		On exit  : 0/0
 16641 ;;		Unchanged: 0/0
 16642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16644 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16645 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16646 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16647 ;;Total ram usage:        3 bytes
 16648 ;; Hardware stack levels used:    1
 16649 ;; Hardware stack levels required when called:    9
 16650 ;; This function calls:
 16651 ;;		Nothing
 16652 ;; This function is called by:
 16653 ;;		_atoi
 16654 ;;		_strtol
 16655 ;;		_xtoi
 16656 ;;		_isxdigit
 16657 ;; This function uses a non-reentrant model
 16658 ;;
 16659                           
 16660                           	psect	text75
 16661  0041C4                     __ptext75:
 16662                           	opt stack 0
 16663  0041C4                     _isdigit:
 16664                           	opt stack 14
 16665                           
 16666                           ; BSR set to: 0
 16667                           ;incstack = 0
 16668                           ;isdigit@c stored from wreg
 16669  0041C4  0100               	movlb	0	; () banked
 16670  0041C6  6F77               	movwf	isdigit@c& (0+255),b
 16671  0041C8  0E00               	movlw	0
 16672  0041CA  0100               	movlb	0	; () banked
 16673  0041CC  6F76               	movwf	_isdigit$5426& (0+255),b
 16674                           
 16675                           ; BSR set to: 0
 16676  0041CE  0E3A               	movlw	58
 16677  0041D0  6177               	cpfslt	isdigit@c& (0+255),b
 16678  0041D2  D005               	goto	l2302
 16679                           
 16680                           ; BSR set to: 0
 16681  0041D4  0E2F               	movlw	47
 16682  0041D6  6577               	cpfsgt	isdigit@c& (0+255),b
 16683  0041D8  D002               	goto	l2302
 16684                           
 16685                           ; BSR set to: 0
 16686  0041DA  0E01               	movlw	1
 16687  0041DC  6F76               	movwf	_isdigit$5426& (0+255),b
 16688  0041DE                     l2302:
 16689                           
 16690                           ; BSR set to: 0
 16691                           
 16692                           ; BSR set to: 0
 16693  0041DE  C076  F075         	movff	_isdigit$5426,??_isdigit
 16694  0041E2  3175               	rrcf	??_isdigit& (0+255),w,b
 16695  0041E4  0012               	return	
 16696  0041E6                     __end_of_isdigit:
 16697                           	opt stack 0
 16698                           tosu	equ	0xFFF
 16699                           tosh	equ	0xFFE
 16700                           tosl	equ	0xFFD
 16701                           pclath	equ	0xFFA
 16702                           tblptru	equ	0xFF8
 16703                           tblptrh	equ	0xFF7
 16704                           tblptrl	equ	0xFF6
 16705                           tablat	equ	0xFF5
 16706                           prodh	equ	0xFF4
 16707                           prodl	equ	0xFF3
 16708                           intcon	equ	0xFF2
 16709                           intcon2	equ	0xFF1
 16710                           intcon3	equ	0xFF0
 16711                           indf0	equ	0xFEF
 16712                           postinc0	equ	0xFEE
 16713                           plusw0	equ	0xFEB
 16714                           fsr0h	equ	0xFEA
 16715                           fsr0l	equ	0xFE9
 16716                           wreg	equ	0xFE8
 16717                           indf1	equ	0xFE7
 16718                           postinc1	equ	0xFE6
 16719                           postdec1	equ	0xFE5
 16720                           fsr1h	equ	0xFE2
 16721                           fsr1l	equ	0xFE1
 16722                           indf2	equ	0xFDF
 16723                           postinc2	equ	0xFDE
 16724                           postdec2	equ	0xFDD
 16725                           plusw2	equ	0xFDB
 16726                           fsr2h	equ	0xFDA
 16727                           fsr2l	equ	0xFD9
 16728                           status	equ	0xFD8
 16729                           
 16730 ;; *************** function _OsTmr_Wait *****************
 16731 ;; Defined at:
 16732 ;;		line 154 in file "../../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 16733 ;; Parameters:    Size  Location     Type
 16734 ;;  WaitTimer       2   51[BANK0 ] PTR struct _SwTimerType
 16735 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 16736 ;;  DelayMs         4   53[BANK0 ] unsigned long 
 16737 ;; Auto vars:     Size  Location     Type
 16738 ;;  Ret             1   57[BANK0 ] enum E7749
 16739 ;; Return value:  Size  Location     Type
 16740 ;;                  1    wreg      enum E7749
 16741 ;; Registers used:
 16742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16743 ;; Tracked objects:
 16744 ;;		On entry : 0/0
 16745 ;;		On exit  : 0/0
 16746 ;;		Unchanged: 0/0
 16747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16748 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16751 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16752 ;;Total ram usage:        7 bytes
 16753 ;; Hardware stack levels used:    1
 16754 ;; Hardware stack levels required when called:   12
 16755 ;; This function calls:
 16756 ;;		_OsTmr_GetTimerStatus
 16757 ;;		_OsTmr_StartTimer
 16758 ;; This function is called by:
 16759 ;;		_Terminal
 16760 ;;		_I2cSlv_QueryI2cData
 16761 ;; This function uses a non-reentrant model
 16762 ;;
 16763                           
 16764                           	psect	text76
 16765  00348E                     __ptext76:
 16766                           	opt stack 0
 16767  00348E                     _OsTmr_Wait:
 16768                           	opt stack 13
 16769                           
 16770                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 16771                           
 16772                           ; BSR set to: 0
 16773                           ;incstack = 0
 16774  00348E  0E00               	movlw	0
 16775  003490  0100               	movlb	0	; () banked
 16776  003492  6F99               	movwf	OsTmr_Wait@Ret& (0+255),b
 16777                           
 16778                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 16779  003494  D02D               	goto	l746
 16780  003496                     
 16781                           ; BSR set to: 0
 16782                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 16783                           
 16784                           ; BSR set to: 0
 16785  003496  C093  F079         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 16786  00349A  C094  F07A         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 16787  00349E  C095  F07B         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 16788  0034A2  C096  F07C         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 16789  0034A6  C097  F07D         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 16790  0034AA  C098  F07E         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 16791  0034AE  EC2F  F01C         	call	_OsTmr_StartTimer	;wreg free
 16792                           
 16793                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 16794  0034B2  0100               	movlb	0	; () banked
 16795  0034B4  EE20 F00A          	lfsr	2,10
 16796  0034B8  5193               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 16797  0034BA  26D9               	addwf	fsr2l,f,c
 16798  0034BC  5194               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 16799  0034BE  22DA               	addwfc	fsr2h,f,c
 16800  0034C0  0E01               	movlw	1
 16801  0034C2  6EDF               	movwf	indf2,c
 16802                           
 16803                           ;os_timers.c: 165: break;
 16804  0034C4  D022               	goto	l748
 16805  0034C6                     
 16806                           ; BSR set to: 0
 16807                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 16808                           
 16809                           ; BSR set to: 0
 16810  0034C6  C093  F08D         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 16811  0034CA  C094  F08E         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 16812  0034CE  ECF0  F018         	call	_OsTmr_GetTimerStatus	;wreg free
 16813  0034D2  06E8               	decf	wreg,f,c
 16814  0034D4  A4D8               	btfss	status,2,c
 16815  0034D6  D019               	goto	l748
 16816                           
 16817                           ;os_timers.c: 170: {
 16818                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 16819  0034D8  0100               	movlb	0	; () banked
 16820  0034DA  EE20 F00A          	lfsr	2,10
 16821  0034DE  5193               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 16822  0034E0  26D9               	addwf	fsr2l,f,c
 16823  0034E2  5194               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 16824  0034E4  22DA               	addwfc	fsr2h,f,c
 16825  0034E6  0E00               	movlw	0
 16826  0034E8  6EDF               	movwf	indf2,c
 16827                           
 16828                           ; BSR set to: 0
 16829                           ;os_timers.c: 174: Ret = DelayExpired;
 16830  0034EA  0E01               	movlw	1
 16831  0034EC  6F99               	movwf	OsTmr_Wait@Ret& (0+255),b
 16832                           
 16833                           ; BSR set to: 0
 16834                           ;os_timers.c: 180: }
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;os_timers.c: 179: break;
 16838                           
 16839                           ;os_timers.c: 178: default:
 16840                           
 16841                           ; BSR set to: 0
 16842                           ;os_timers.c: 175: }
 16843                           ;os_timers.c: 176: break;
 16844  0034EE  D00D               	goto	l748
 16845  0034F0                     l746:
 16846                           
 16847                           ; BSR set to: 0
 16848                           
 16849                           ; BSR set to: 0
 16850  0034F0  EE20 F00A          	lfsr	2,10
 16851  0034F4  5193               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 16852  0034F6  26D9               	addwf	fsr2l,f,c
 16853  0034F8  5194               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 16854  0034FA  22DA               	addwfc	fsr2h,f,c
 16855  0034FC  50DF               	movf	indf2,w,c
 16856                           
 16857                           ; Switch size 1, requested type "space"
 16858                           ; Number of cases is 2, Range of values is 0 to 1
 16859                           ; switch strategies available:
 16860                           ; Name         Instructions Cycles
 16861                           ; simple_byte            7     4 (average)
 16862                           ;	Chosen strategy is simple_byte
 16863  0034FE  0A00               	xorlw	0	; case 0
 16864  003500  B4D8               	btfsc	status,2,c
 16865  003502  D7C9               	goto	l747
 16866  003504  0A01               	xorlw	1	; case 1
 16867  003506  B4D8               	btfsc	status,2,c
 16868  003508  D7DE               	goto	l749
 16869  00350A                     l748:
 16870                           
 16871                           ;os_timers.c: 182: return Ret;
 16872                           
 16873                           ; BSR set to: 0
 16874  00350A  0100               	movlb	0	; () banked
 16875  00350C  5199               	movf	OsTmr_Wait@Ret& (0+255),w,b
 16876  00350E  0012               	return	
 16877  003510                     __end_of_OsTmr_Wait:
 16878                           	opt stack 0
 16879                           tosu	equ	0xFFF
 16880                           tosh	equ	0xFFE
 16881                           tosl	equ	0xFFD
 16882                           pclath	equ	0xFFA
 16883                           tblptru	equ	0xFF8
 16884                           tblptrh	equ	0xFF7
 16885                           tblptrl	equ	0xFF6
 16886                           tablat	equ	0xFF5
 16887                           prodh	equ	0xFF4
 16888                           prodl	equ	0xFF3
 16889                           intcon	equ	0xFF2
 16890                           intcon2	equ	0xFF1
 16891                           intcon3	equ	0xFF0
 16892                           indf0	equ	0xFEF
 16893                           postinc0	equ	0xFEE
 16894                           plusw0	equ	0xFEB
 16895                           fsr0h	equ	0xFEA
 16896                           fsr0l	equ	0xFE9
 16897                           wreg	equ	0xFE8
 16898                           indf1	equ	0xFE7
 16899                           postinc1	equ	0xFE6
 16900                           postdec1	equ	0xFE5
 16901                           fsr1h	equ	0xFE2
 16902                           fsr1l	equ	0xFE1
 16903                           indf2	equ	0xFDF
 16904                           postinc2	equ	0xFDE
 16905                           postdec2	equ	0xFDD
 16906                           plusw2	equ	0xFDB
 16907                           fsr2h	equ	0xFDA
 16908                           fsr2l	equ	0xFD9
 16909                           status	equ	0xFD8
 16910                           
 16911 ;; *************** function _OsTmr_StartTimer *****************
 16912 ;; Defined at:
 16913 ;;		line 118 in file "../../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 16914 ;; Parameters:    Size  Location     Type
 16915 ;;  Timer           2   25[BANK0 ] PTR struct _SwTimerType
 16916 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 16917 ;;  Timeout         4   27[BANK0 ] unsigned long 
 16918 ;; Auto vars:     Size  Location     Type
 16919 ;;		None
 16920 ;; Return value:  Size  Location     Type
 16921 ;;                  1    wreg      void 
 16922 ;; Registers used:
 16923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16924 ;; Tracked objects:
 16925 ;;		On entry : 0/0
 16926 ;;		On exit  : 0/0
 16927 ;;		Unchanged: 0/0
 16928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16929 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16932 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16933 ;;Total ram usage:        6 bytes
 16934 ;; Hardware stack levels used:    1
 16935 ;; Hardware stack levels required when called:   10
 16936 ;; This function calls:
 16937 ;;		_GetOsTickCounter
 16938 ;; This function is called by:
 16939 ;;		_OsTmr_Wait
 16940 ;;		_Term_MainSm
 16941 ;;		_I2cSlv_QueryI2cData
 16942 ;; This function uses a non-reentrant model
 16943 ;;
 16944                           
 16945                           	psect	text77
 16946  00385E                     __ptext77:
 16947                           	opt stack 0
 16948  00385E                     _OsTmr_StartTimer:
 16949                           	opt stack 14
 16950                           
 16951                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 16952                           
 16953                           ; BSR set to: 0
 16954                           ;incstack = 0
 16955  00385E  0100               	movlb	0	; () banked
 16956  003860  EE20 F001          	lfsr	2,1
 16957  003864  5179               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 16958  003866  26D9               	addwf	fsr2l,f,c
 16959  003868  517A               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 16960  00386A  22DA               	addwfc	fsr2h,f,c
 16961  00386C  0E00               	movlw	0
 16962  00386E  6EDF               	movwf	indf2,c
 16963                           
 16964                           ; BSR set to: 0
 16965                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 16966  003870  ECDF  F021         	call	_GetOsTickCounter	;wreg free
 16967  003874  0100               	movlb	0	; () banked
 16968  003876  EE20 F002          	lfsr	2,2
 16969  00387A  5179               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 16970  00387C  26D9               	addwf	fsr2l,f,c
 16971  00387E  517A               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 16972  003880  22DA               	addwfc	fsr2h,f,c
 16973  003882  C075  FFDE         	movff	?_GetOsTickCounter,postinc2
 16974  003886  C076  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 16975  00388A  C077  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 16976  00388E  C078  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 16977                           
 16978                           ; BSR set to: 0
 16979                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 16980  003892  EE20 F006          	lfsr	2,6
 16981  003896  5179               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 16982  003898  26D9               	addwf	fsr2l,f,c
 16983  00389A  517A               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 16984  00389C  22DA               	addwfc	fsr2h,f,c
 16985  00389E  C07B  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 16986  0038A2  C07C  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 16987  0038A6  C07D  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 16988  0038AA  C07E  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 16989                           
 16990                           ; BSR set to: 0
 16991                           ;os_timers.c: 127: Timer->Enabled = 1u;
 16992  0038AE  C079  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 16993  0038B2  C07A  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 16994  0038B6  0E01               	movlw	1
 16995  0038B8  6EDF               	movwf	indf2,c
 16996                           
 16997                           ; BSR set to: 0
 16998  0038BA  0012               	return		;funcret
 16999  0038BC                     __end_of_OsTmr_StartTimer:
 17000                           	opt stack 0
 17001                           tosu	equ	0xFFF
 17002                           tosh	equ	0xFFE
 17003                           tosl	equ	0xFFD
 17004                           pclath	equ	0xFFA
 17005                           tblptru	equ	0xFF8
 17006                           tblptrh	equ	0xFF7
 17007                           tblptrl	equ	0xFF6
 17008                           tablat	equ	0xFF5
 17009                           prodh	equ	0xFF4
 17010                           prodl	equ	0xFF3
 17011                           intcon	equ	0xFF2
 17012                           intcon2	equ	0xFF1
 17013                           intcon3	equ	0xFF0
 17014                           indf0	equ	0xFEF
 17015                           postinc0	equ	0xFEE
 17016                           plusw0	equ	0xFEB
 17017                           fsr0h	equ	0xFEA
 17018                           fsr0l	equ	0xFE9
 17019                           wreg	equ	0xFE8
 17020                           indf1	equ	0xFE7
 17021                           postinc1	equ	0xFE6
 17022                           postdec1	equ	0xFE5
 17023                           fsr1h	equ	0xFE2
 17024                           fsr1l	equ	0xFE1
 17025                           indf2	equ	0xFDF
 17026                           postinc2	equ	0xFDE
 17027                           postdec2	equ	0xFDD
 17028                           plusw2	equ	0xFDB
 17029                           fsr2h	equ	0xFDA
 17030                           fsr2l	equ	0xFD9
 17031                           status	equ	0xFD8
 17032                           
 17033 ;; *************** function _OsTmr_GetTimerStatus *****************
 17034 ;; Defined at:
 17035 ;;		line 193 in file "../../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 17036 ;; Parameters:    Size  Location     Type
 17037 ;;  Timer           2   45[BANK0 ] PTR struct _SwTimerType
 17038 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 17039 ;; Auto vars:     Size  Location     Type
 17040 ;;		None
 17041 ;; Return value:  Size  Location     Type
 17042 ;;                  1    wreg      enum E7740
 17043 ;; Registers used:
 17044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17045 ;; Tracked objects:
 17046 ;;		On entry : 0/0
 17047 ;;		On exit  : 0/0
 17048 ;;		Unchanged: 0/0
 17049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17050 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17052 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17053 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17054 ;;Total ram usage:        6 bytes
 17055 ;; Hardware stack levels used:    1
 17056 ;; Hardware stack levels required when called:   11
 17057 ;; This function calls:
 17058 ;;		_GetElapsedTime
 17059 ;; This function is called by:
 17060 ;;		_OsTmr_Wait
 17061 ;;		_Term_MainSm
 17062 ;;		_I2cSlv_QueryI2cData
 17063 ;; This function uses a non-reentrant model
 17064 ;;
 17065                           
 17066                           	psect	text78
 17067  0031E0                     __ptext78:
 17068                           	opt stack 0
 17069  0031E0                     _OsTmr_GetTimerStatus:
 17070                           	opt stack 13
 17071                           
 17072                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 17073                           
 17074                           ; BSR set to: 0
 17075                           ;incstack = 0
 17076  0031E0  C08D  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 17077  0031E4  C08E  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 17078  0031E8  04DE               	decf	postinc2,w,c
 17079  0031EA  A4D8               	btfss	status,2,c
 17080  0031EC  D030               	goto	l755
 17081                           
 17082                           ;os_timers.c: 197: {
 17083                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 17084  0031EE  0100               	movlb	0	; () banked
 17085  0031F0  EE20 F006          	lfsr	2,6
 17086  0031F4  518D               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 17087  0031F6  26D9               	addwf	fsr2l,f,c
 17088  0031F8  518E               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 17089  0031FA  22DA               	addwfc	fsr2h,f,c
 17090  0031FC  EE10 F002          	lfsr	1,2
 17091  003200  518D               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 17092  003202  26E1               	addwf	fsr1l,f,c
 17093  003204  518E               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 17094  003206  22E2               	addwfc	fsr1h,f,c
 17095  003208  CFE6 F079          	movff	postinc1,GetElapsedTime@StartTime
 17096  00320C  CFE6 F07A          	movff	postinc1,GetElapsedTime@StartTime+1
 17097  003210  CFE6 F07B          	movff	postinc1,GetElapsedTime@StartTime+2
 17098  003214  CFE6 F07C          	movff	postinc1,GetElapsedTime@StartTime+3
 17099  003218  EC86  F012         	call	_GetElapsedTime	;wreg free
 17100  00321C  50DE               	movf	postinc2,w,c
 17101  00321E  0100               	movlb	0	; () banked
 17102  003220  5D79               	subwf	?_GetElapsedTime& (0+255),w,b
 17103  003222  50DE               	movf	postinc2,w,c
 17104  003224  597A               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 17105  003226  50DE               	movf	postinc2,w,c
 17106  003228  597B               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 17107  00322A  50DE               	movf	postinc2,w,c
 17108  00322C  597C               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 17109  00322E  A0D8               	btfss	status,0,c
 17110  003230  D017               	goto	l758
 17111                           
 17112                           ; BSR set to: 0
 17113                           ;os_timers.c: 200: {
 17114                           ;os_timers.c: 202: Timer->Enabled = 0u;
 17115  003232  C08D  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 17116  003236  C08E  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 17117  00323A  0E00               	movlw	0
 17118  00323C  6EDF               	movwf	indf2,c
 17119                           
 17120                           ; BSR set to: 0
 17121                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 17122  00323E  EE20 F001          	lfsr	2,1
 17123  003242  518D               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 17124  003244  26D9               	addwf	fsr2l,f,c
 17125  003246  518E               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 17126  003248  22DA               	addwfc	fsr2h,f,c
 17127  00324A  0E01               	movlw	1
 17128  00324C  D008               	goto	L47
 17129  00324E                     l755:
 17130                           
 17131                           ;os_timers.c: 211: else
 17132                           ;os_timers.c: 212: {
 17133                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 17134                           
 17135                           ; BSR set to: 0
 17136  00324E  0100               	movlb	0	; () banked
 17137  003250  EE20 F001          	lfsr	2,1
 17138  003254  518D               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 17139  003256  26D9               	addwf	fsr2l,f,c
 17140  003258  518E               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 17141  00325A  22DA               	addwfc	fsr2h,f,c
 17142  00325C  0E02               	movlw	2
 17143  00325E                     L47:
 17144  00325E  6EDF               	movwf	indf2,c
 17145  003260                     l758:
 17146                           
 17147                           ; BSR set to: 0
 17148                           ;os_timers.c: 215: }
 17149                           ;os_timers.c: 218: return Timer->Status;
 17150  003260  EE20 F001          	lfsr	2,1
 17151  003264  518D               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 17152  003266  26D9               	addwf	fsr2l,f,c
 17153  003268  518E               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 17154  00326A  22DA               	addwfc	fsr2h,f,c
 17155  00326C  50DF               	movf	indf2,w,c
 17156  00326E  0012               	return	
 17157  003270                     __end_of_OsTmr_GetTimerStatus:
 17158                           	opt stack 0
 17159                           tosu	equ	0xFFF
 17160                           tosh	equ	0xFFE
 17161                           tosl	equ	0xFFD
 17162                           pclath	equ	0xFFA
 17163                           tblptru	equ	0xFF8
 17164                           tblptrh	equ	0xFF7
 17165                           tblptrl	equ	0xFF6
 17166                           tablat	equ	0xFF5
 17167                           prodh	equ	0xFF4
 17168                           prodl	equ	0xFF3
 17169                           intcon	equ	0xFF2
 17170                           intcon2	equ	0xFF1
 17171                           intcon3	equ	0xFF0
 17172                           indf0	equ	0xFEF
 17173                           postinc0	equ	0xFEE
 17174                           plusw0	equ	0xFEB
 17175                           fsr0h	equ	0xFEA
 17176                           fsr0l	equ	0xFE9
 17177                           wreg	equ	0xFE8
 17178                           indf1	equ	0xFE7
 17179                           postinc1	equ	0xFE6
 17180                           postdec1	equ	0xFE5
 17181                           fsr1h	equ	0xFE2
 17182                           fsr1l	equ	0xFE1
 17183                           indf2	equ	0xFDF
 17184                           postinc2	equ	0xFDE
 17185                           postdec2	equ	0xFDD
 17186                           plusw2	equ	0xFDB
 17187                           fsr2h	equ	0xFDA
 17188                           fsr2l	equ	0xFD9
 17189                           status	equ	0xFD8
 17190                           
 17191 ;; *************** function _GetElapsedTime *****************
 17192 ;; Defined at:
 17193 ;;		line 84 in file "../../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 17194 ;; Parameters:    Size  Location     Type
 17195 ;;  StartTime       4   25[BANK0 ] unsigned long 
 17196 ;; Auto vars:     Size  Location     Type
 17197 ;;  CurrentTimes    4   41[BANK0 ] unsigned long 
 17198 ;;  TimeValue       4   37[BANK0 ] unsigned long 
 17199 ;; Return value:  Size  Location     Type
 17200 ;;                  4   25[BANK0 ] unsigned long 
 17201 ;; Registers used:
 17202 ;;		wreg, status,2, status,0, cstack
 17203 ;; Tracked objects:
 17204 ;;		On entry : 0/0
 17205 ;;		On exit  : 0/0
 17206 ;;		Unchanged: 0/0
 17207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17208 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17209 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17210 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17211 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17212 ;;Total ram usage:       20 bytes
 17213 ;; Hardware stack levels used:    1
 17214 ;; Hardware stack levels required when called:   10
 17215 ;; This function calls:
 17216 ;;		_GetOsTickCounter
 17217 ;; This function is called by:
 17218 ;;		_OsTmr_GetTimerStatus
 17219 ;;		_OsTmr_GetRemainingTime
 17220 ;; This function uses a non-reentrant model
 17221 ;;
 17222                           
 17223                           	psect	text79
 17224  00250C                     __ptext79:
 17225                           	opt stack 0
 17226  00250C                     _GetElapsedTime:
 17227                           	opt stack 13
 17228                           
 17229                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 17230                           ;os_timers.c: 87: UINT32 TimeValue;
 17231                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 17232                           
 17233                           ; BSR set to: 0
 17234                           ;incstack = 0
 17235  00250C  ECDF  F021         	call	_GetOsTickCounter	;wreg free
 17236  002510  C075  F089         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 17237  002514  C076  F08A         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 17238  002518  C077  F08B         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 17239  00251C  C078  F08C         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 17240                           
 17241                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 17242  002520  0100               	movlb	0	; () banked
 17243  002522  5179               	movf	GetElapsedTime@StartTime& (0+255),w,b
 17244  002524  5D89               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 17245  002526  517A               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 17246  002528  598A               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 17247  00252A  517B               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 17248  00252C  598B               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 17249  00252E  517C               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 17250  002530  598C               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 17251  002532  A0D8               	btfss	status,0,c
 17252  002534  D01D               	goto	l735
 17253                           
 17254                           ; BSR set to: 0
 17255                           ;os_timers.c: 94: {
 17256                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 17257  002536  C079  F07D         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 17258  00253A  C07A  F07E         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 17259  00253E  C07B  F07F         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 17260  002542  C07C  F080         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 17261  002546  1F7D               	comf	??_GetElapsedTime& (0+255),f,b
 17262  002548  1F7E               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 17263  00254A  1F7F               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 17264  00254C  1F80               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 17265  00254E  2B7D               	incf	??_GetElapsedTime& (0+255),f,b
 17266  002550  0E00               	movlw	0
 17267  002552  237E               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 17268  002554  237F               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 17269  002556  2380               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 17270  002558  5189               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 17271  00255A  257D               	addwf	??_GetElapsedTime& (0+255),w,b
 17272  00255C  6F85               	movwf	GetElapsedTime@TimeValue& (0+255),b
 17273  00255E  518A               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 17274  002560  217E               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 17275  002562  6F86               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 17276  002564  518B               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 17277  002566  217F               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 17278  002568  6F87               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 17279  00256A  518C               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 17280  00256C  2180               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 17281  00256E  D028               	goto	L18
 17282  002570                     l735:
 17283                           
 17284                           ; BSR set to: 0
 17285                           ;os_timers.c: 97: else
 17286                           ;os_timers.c: 98: {
 17287                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 17288                           
 17289                           ; BSR set to: 0
 17290  002570  C079  F07D         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 17291  002574  C07A  F07E         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 17292  002578  C07B  F07F         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 17293  00257C  C07C  F080         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 17294  002580  1F7D               	comf	??_GetElapsedTime& (0+255),f,b
 17295  002582  1F7E               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 17296  002584  1F7F               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 17297  002586  1F80               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 17298  002588  2B7D               	incf	??_GetElapsedTime& (0+255),f,b
 17299  00258A  0E00               	movlw	0
 17300  00258C  237E               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 17301  00258E  237F               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 17302  002590  2380               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 17303  002592  5189               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 17304  002594  257D               	addwf	??_GetElapsedTime& (0+255),w,b
 17305  002596  6F81               	movwf	(??_GetElapsedTime+4)& (0+255),b
 17306  002598  518A               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 17307  00259A  217E               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 17308  00259C  6F82               	movwf	(??_GetElapsedTime+5)& (0+255),b
 17309  00259E  518B               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 17310  0025A0  217F               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 17311  0025A2  6F83               	movwf	(??_GetElapsedTime+6)& (0+255),b
 17312  0025A4  518C               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 17313  0025A6  2180               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 17314  0025A8  6F84               	movwf	(??_GetElapsedTime+7)& (0+255),b
 17315  0025AA  0EFF               	movlw	255
 17316  0025AC  2581               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 17317  0025AE  6F85               	movwf	GetElapsedTime@TimeValue& (0+255),b
 17318  0025B0  0EFF               	movlw	255
 17319  0025B2  2182               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 17320  0025B4  6F86               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 17321  0025B6  0EFF               	movlw	255
 17322  0025B8  2183               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 17323  0025BA  6F87               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 17324  0025BC  0EFF               	movlw	255
 17325  0025BE  2184               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 17326  0025C0                     L18:
 17327  0025C0  6F88               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 17328                           
 17329                           ; BSR set to: 0
 17330                           ;os_timers.c: 100: }
 17331                           ;os_timers.c: 102: return TimeValue;
 17332                           
 17333                           ; BSR set to: 0
 17334  0025C2  C085  F079         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 17335  0025C6  C086  F07A         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 17336  0025CA  C087  F07B         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 17337  0025CE  C088  F07C         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 17338  0025D2  0012               	return	
 17339  0025D4                     __end_of_GetElapsedTime:
 17340                           	opt stack 0
 17341                           tosu	equ	0xFFF
 17342                           tosh	equ	0xFFE
 17343                           tosl	equ	0xFFD
 17344                           pclath	equ	0xFFA
 17345                           tblptru	equ	0xFF8
 17346                           tblptrh	equ	0xFF7
 17347                           tblptrl	equ	0xFF6
 17348                           tablat	equ	0xFF5
 17349                           prodh	equ	0xFF4
 17350                           prodl	equ	0xFF3
 17351                           intcon	equ	0xFF2
 17352                           intcon2	equ	0xFF1
 17353                           intcon3	equ	0xFF0
 17354                           indf0	equ	0xFEF
 17355                           postinc0	equ	0xFEE
 17356                           plusw0	equ	0xFEB
 17357                           fsr0h	equ	0xFEA
 17358                           fsr0l	equ	0xFE9
 17359                           wreg	equ	0xFE8
 17360                           indf1	equ	0xFE7
 17361                           postinc1	equ	0xFE6
 17362                           postdec1	equ	0xFE5
 17363                           fsr1h	equ	0xFE2
 17364                           fsr1l	equ	0xFE1
 17365                           indf2	equ	0xFDF
 17366                           postinc2	equ	0xFDE
 17367                           postdec2	equ	0xFDD
 17368                           plusw2	equ	0xFDB
 17369                           fsr2h	equ	0xFDA
 17370                           fsr2l	equ	0xFD9
 17371                           status	equ	0xFD8
 17372                           
 17373 ;; *************** function _GetOsTickCounter *****************
 17374 ;; Defined at:
 17375 ;;		line 70 in file "../../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 17376 ;; Parameters:    Size  Location     Type
 17377 ;;		None
 17378 ;; Auto vars:     Size  Location     Type
 17379 ;;		None
 17380 ;; Return value:  Size  Location     Type
 17381 ;;                  4   21[BANK0 ] unsigned long 
 17382 ;; Registers used:
 17383 ;;		None
 17384 ;; Tracked objects:
 17385 ;;		On entry : 0/0
 17386 ;;		On exit  : 0/0
 17387 ;;		Unchanged: 0/0
 17388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17389 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17392 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17393 ;;Total ram usage:        4 bytes
 17394 ;; Hardware stack levels used:    1
 17395 ;; Hardware stack levels required when called:    9
 17396 ;; This function calls:
 17397 ;;		Nothing
 17398 ;; This function is called by:
 17399 ;;		_GetElapsedTime
 17400 ;;		_OsTmr_StartTimer
 17401 ;;		_OsTmr_GetElapsedTime
 17402 ;; This function uses a non-reentrant model
 17403 ;;
 17404                           
 17405                           	psect	text80
 17406  0043BE                     __ptext80:
 17407                           	opt stack 0
 17408  0043BE                     _GetOsTickCounter:
 17409                           	opt stack 14
 17410                           
 17411                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 17412                           
 17413                           ; BSR set to: 0
 17414                           ;incstack = 0
 17415  0043BE  C106  F075         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 17416  0043C2  C107  F076         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 17417  0043C6  C108  F077         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 17418  0043CA  C109  F078         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 17419  0043CE  0012               	return		;funcret
 17420  0043D0                     __end_of_GetOsTickCounter:
 17421                           	opt stack 0
 17422                           tosu	equ	0xFFF
 17423                           tosh	equ	0xFFE
 17424                           tosl	equ	0xFFD
 17425                           pclath	equ	0xFFA
 17426                           tblptru	equ	0xFF8
 17427                           tblptrh	equ	0xFF7
 17428                           tblptrl	equ	0xFF6
 17429                           tablat	equ	0xFF5
 17430                           prodh	equ	0xFF4
 17431                           prodl	equ	0xFF3
 17432                           intcon	equ	0xFF2
 17433                           intcon2	equ	0xFF1
 17434                           intcon3	equ	0xFF0
 17435                           indf0	equ	0xFEF
 17436                           postinc0	equ	0xFEE
 17437                           plusw0	equ	0xFEB
 17438                           fsr0h	equ	0xFEA
 17439                           fsr0l	equ	0xFE9
 17440                           wreg	equ	0xFE8
 17441                           indf1	equ	0xFE7
 17442                           postinc1	equ	0xFE6
 17443                           postdec1	equ	0xFE5
 17444                           fsr1h	equ	0xFE2
 17445                           fsr1l	equ	0xFE1
 17446                           indf2	equ	0xFDF
 17447                           postinc2	equ	0xFDE
 17448                           postdec2	equ	0xFDD
 17449                           plusw2	equ	0xFDB
 17450                           fsr2h	equ	0xFDA
 17451                           fsr2l	equ	0xFD9
 17452                           status	equ	0xFD8
 17453                           
 17454 ;; *************** function _I2cSlv_SendI2cMsg *****************
 17455 ;; Defined at:
 17456 ;;		line 252 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 17457 ;; Parameters:    Size  Location     Type
 17458 ;;  TxBuffer        2   24[BANK0 ] PTR unsigned char 
 17459 ;;		 -> Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 17460 ;;  SlaveAddr       1   26[BANK0 ] unsigned char 
 17461 ;;  DataLenght      1   27[BANK0 ] unsigned char 
 17462 ;; Auto vars:     Size  Location     Type
 17463 ;;  TxSts           1   28[BANK0 ] unsigned char 
 17464 ;; Return value:  Size  Location     Type
 17465 ;;                  1    wreg      unsigned char 
 17466 ;; Registers used:
 17467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17468 ;; Tracked objects:
 17469 ;;		On entry : 0/0
 17470 ;;		On exit  : 0/0
 17471 ;;		Unchanged: 0/0
 17472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17473 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17474 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17476 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17477 ;;Total ram usage:        5 bytes
 17478 ;; Hardware stack levels used:    1
 17479 ;; Hardware stack levels required when called:   10
 17480 ;; This function calls:
 17481 ;;		_GenerateEvt
 17482 ;; This function is called by:
 17483 ;;		_Terminal
 17484 ;;		_I2cSlv_QueryI2cData
 17485 ;; This function uses a non-reentrant model
 17486 ;;
 17487                           
 17488                           	psect	text81
 17489  003DCC                     __ptext81:
 17490                           	opt stack 0
 17491  003DCC                     _I2cSlv_SendI2cMsg:
 17492                           	opt stack 15
 17493                           
 17494                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 17495                           
 17496                           ;incstack = 0
 17497  003DCC  0E00               	movlw	0
 17498  003DCE  0100               	movlb	0	; () banked
 17499  003DD0  6F7C               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 17500                           
 17501                           ; BSR set to: 0
 17502                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 17503  003DD2  05D4               	decf	_I2cComSts& (0+255),w,b
 17504  003DD4  B4D8               	btfsc	status,2,c
 17505  003DD6  D016               	goto	l891
 17506                           
 17507                           ; BSR set to: 0
 17508                           ;i2c_slv.c: 257: {
 17509                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 17510  003DD8  C07A  F12B         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 17511                           
 17512                           ; BSR set to: 0
 17513                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 17514  003DDC  0E00               	movlw	0
 17515  003DDE  0101               	movlb	1	; () banked
 17516  003DE0  6F2C               	movwf	(_I2cTxPacket+1)& (0+255),b
 17517                           
 17518                           ; BSR set to: 1
 17519                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 17520  003DE2  C07B  F12F         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 17521                           
 17522                           ; BSR set to: 1
 17523                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 17524  003DE6  C078  F12D         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 17525  003DEA  C079  F12E         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 17526                           
 17527                           ; BSR set to: 1
 17528                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 17529  003DEE  0EE1               	movlw	low _I2cWriteDataEvt
 17530  003DF0  0100               	movlb	0	; () banked
 17531  003DF2  6F75               	movwf	GenerateEvt@Event& (0+255),b
 17532  003DF4  0E00               	movlw	high _I2cWriteDataEvt
 17533  003DF6  6F76               	movwf	(GenerateEvt@Event+1)& (0+255),b
 17534  003DF8  EC9F  F021         	call	_GenerateEvt	;wreg free
 17535                           
 17536                           ;i2c_slv.c: 267: TxSts = 1u;
 17537  003DFC  0E01               	movlw	1
 17538  003DFE  0100               	movlb	0	; () banked
 17539  003E00  6F7C               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 17540                           
 17541                           ;i2c_slv.c: 268: }
 17542  003E02  0012               	return	
 17543  003E04                     l891:
 17544                           
 17545                           ; BSR set to: 0
 17546                           ;i2c_slv.c: 269: else
 17547                           ;i2c_slv.c: 270: {
 17548                           ;i2c_slv.c: 272: TxSts = 0u;
 17549                           
 17550                           ; BSR set to: 0
 17551  003E04  0E00               	movlw	0
 17552  003E06  6F7C               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 17553                           
 17554                           ; BSR set to: 0
 17555  003E08  0012               	return	
 17556  003E0A                     __end_of_I2cSlv_SendI2cMsg:
 17557                           	opt stack 0
 17558                           tosu	equ	0xFFF
 17559                           tosh	equ	0xFFE
 17560                           tosl	equ	0xFFD
 17561                           pclath	equ	0xFFA
 17562                           tblptru	equ	0xFF8
 17563                           tblptrh	equ	0xFF7
 17564                           tblptrl	equ	0xFF6
 17565                           tablat	equ	0xFF5
 17566                           prodh	equ	0xFF4
 17567                           prodl	equ	0xFF3
 17568                           intcon	equ	0xFF2
 17569                           intcon2	equ	0xFF1
 17570                           intcon3	equ	0xFF0
 17571                           indf0	equ	0xFEF
 17572                           postinc0	equ	0xFEE
 17573                           plusw0	equ	0xFEB
 17574                           fsr0h	equ	0xFEA
 17575                           fsr0l	equ	0xFE9
 17576                           wreg	equ	0xFE8
 17577                           indf1	equ	0xFE7
 17578                           postinc1	equ	0xFE6
 17579                           postdec1	equ	0xFE5
 17580                           fsr1h	equ	0xFE2
 17581                           fsr1l	equ	0xFE1
 17582                           indf2	equ	0xFDF
 17583                           postinc2	equ	0xFDE
 17584                           postdec2	equ	0xFDD
 17585                           plusw2	equ	0xFDB
 17586                           fsr2h	equ	0xFDA
 17587                           fsr2l	equ	0xFD9
 17588                           status	equ	0xFD8
 17589                           
 17590 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 17591 ;; Defined at:
 17592 ;;		line 289 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 17593 ;; Parameters:    Size  Location     Type
 17594 ;;  RxBuffer        2   24[BANK0 ] PTR unsigned char 
 17595 ;;		 -> Terminal@TermRxBuffer(50), 
 17596 ;;  SlaveAddr       1   26[BANK0 ] unsigned char 
 17597 ;;  DataLenght      1   27[BANK0 ] unsigned char 
 17598 ;; Auto vars:     Size  Location     Type
 17599 ;;  RxSts           1   28[BANK0 ] unsigned char 
 17600 ;; Return value:  Size  Location     Type
 17601 ;;                  1    wreg      unsigned char 
 17602 ;; Registers used:
 17603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17604 ;; Tracked objects:
 17605 ;;		On entry : 0/0
 17606 ;;		On exit  : 0/0
 17607 ;;		Unchanged: 0/0
 17608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17609 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17612 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17613 ;;Total ram usage:        5 bytes
 17614 ;; Hardware stack levels used:    1
 17615 ;; Hardware stack levels required when called:   10
 17616 ;; This function calls:
 17617 ;;		_GenerateEvt
 17618 ;; This function is called by:
 17619 ;;		_Terminal
 17620 ;;		_I2cSlv_QueryI2cData
 17621 ;; This function uses a non-reentrant model
 17622 ;;
 17623                           
 17624                           	psect	text82
 17625  003D4E                     __ptext82:
 17626                           	opt stack 0
 17627  003D4E                     _I2cSlv_ReceiveI2cMsg:
 17628                           	opt stack 15
 17629                           
 17630                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 17631                           
 17632                           ; BSR set to: 0
 17633                           ;incstack = 0
 17634  003D4E  0E00               	movlw	0
 17635  003D50  0100               	movlb	0	; () banked
 17636  003D52  6F7C               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 17637                           
 17638                           ; BSR set to: 0
 17639                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 17640  003D54  0E02               	movlw	2
 17641  003D56  19D4               	xorwf	_I2cComSts& (0+255),w,b
 17642  003D58  B4D8               	btfsc	status,2,c
 17643  003D5A  D016               	goto	l896
 17644                           
 17645                           ; BSR set to: 0
 17646                           ;i2c_slv.c: 294: {
 17647                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 17648  003D5C  C07A  F2F0         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 17649                           
 17650                           ; BSR set to: 0
 17651                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 17652  003D60  0E01               	movlw	1
 17653  003D62  0102               	movlb	2	; () banked
 17654  003D64  6FF1               	movwf	(_I2cRxPacket+1)& (0+255),b
 17655                           
 17656                           ; BSR set to: 2
 17657                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 17658  003D66  C07B  F2F4         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 17659                           
 17660                           ; BSR set to: 2
 17661                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 17662  003D6A  C078  F2F2         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 17663  003D6E  C079  F2F3         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 17664                           
 17665                           ; BSR set to: 2
 17666                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 17667  003D72  0EE0               	movlw	low _I2cReadDataEvt
 17668  003D74  0100               	movlb	0	; () banked
 17669  003D76  6F75               	movwf	GenerateEvt@Event& (0+255),b
 17670  003D78  0E00               	movlw	high _I2cReadDataEvt
 17671  003D7A  6F76               	movwf	(GenerateEvt@Event+1)& (0+255),b
 17672  003D7C  EC9F  F021         	call	_GenerateEvt	;wreg free
 17673                           
 17674                           ;i2c_slv.c: 304: RxSts = 1u;
 17675  003D80  0E01               	movlw	1
 17676  003D82  0100               	movlb	0	; () banked
 17677  003D84  6F7C               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 17678                           
 17679                           ;i2c_slv.c: 305: }
 17680  003D86  0012               	return	
 17681  003D88                     l896:
 17682                           
 17683                           ; BSR set to: 0
 17684                           ;i2c_slv.c: 306: else
 17685                           ;i2c_slv.c: 307: {
 17686                           ;i2c_slv.c: 309: RxSts = 0u;
 17687                           
 17688                           ; BSR set to: 0
 17689  003D88  0E00               	movlw	0
 17690  003D8A  6F7C               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 17691                           
 17692                           ; BSR set to: 0
 17693  003D8C  0012               	return	
 17694  003D8E                     __end_of_I2cSlv_ReceiveI2cMsg:
 17695                           	opt stack 0
 17696                           tosu	equ	0xFFF
 17697                           tosh	equ	0xFFE
 17698                           tosl	equ	0xFFD
 17699                           pclath	equ	0xFFA
 17700                           tblptru	equ	0xFF8
 17701                           tblptrh	equ	0xFF7
 17702                           tblptrl	equ	0xFF6
 17703                           tablat	equ	0xFF5
 17704                           prodh	equ	0xFF4
 17705                           prodl	equ	0xFF3
 17706                           intcon	equ	0xFF2
 17707                           intcon2	equ	0xFF1
 17708                           intcon3	equ	0xFF0
 17709                           indf0	equ	0xFEF
 17710                           postinc0	equ	0xFEE
 17711                           plusw0	equ	0xFEB
 17712                           fsr0h	equ	0xFEA
 17713                           fsr0l	equ	0xFE9
 17714                           wreg	equ	0xFE8
 17715                           indf1	equ	0xFE7
 17716                           postinc1	equ	0xFE6
 17717                           postdec1	equ	0xFE5
 17718                           fsr1h	equ	0xFE2
 17719                           fsr1l	equ	0xFE1
 17720                           indf2	equ	0xFDF
 17721                           postinc2	equ	0xFDE
 17722                           postdec2	equ	0xFDD
 17723                           plusw2	equ	0xFDB
 17724                           fsr2h	equ	0xFDA
 17725                           fsr2l	equ	0xFD9
 17726                           status	equ	0xFD8
 17727                           
 17728 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 17729 ;; Defined at:
 17730 ;;		line 324 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 17731 ;; Parameters:    Size  Location     Type
 17732 ;;		None
 17733 ;; Auto vars:     Size  Location     Type
 17734 ;;  Result          1   25[BANK0 ] enum E8792
 17735 ;; Return value:  Size  Location     Type
 17736 ;;                  1    wreg      enum E8792
 17737 ;; Registers used:
 17738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17739 ;; Tracked objects:
 17740 ;;		On entry : 0/0
 17741 ;;		On exit  : 0/0
 17742 ;;		Unchanged: 0/0
 17743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17745 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17747 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17748 ;;Total ram usage:        1 bytes
 17749 ;; Hardware stack levels used:    1
 17750 ;; Hardware stack levels required when called:   10
 17751 ;; This function calls:
 17752 ;;		_ReceiveEvt
 17753 ;; This function is called by:
 17754 ;;		_Terminal
 17755 ;;		_I2cSlv_QueryI2cData
 17756 ;; This function uses a non-reentrant model
 17757 ;;
 17758                           
 17759                           	psect	text83
 17760  0041E6                     __ptext83:
 17761                           	opt stack 0
 17762  0041E6                     _I2cSlv_I2cReadMsgSts:
 17763                           	opt stack 15
 17764                           
 17765                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 17766                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 17767                           
 17768                           ; BSR set to: 0
 17769                           ;incstack = 0
 17770  0041E6  0EF5               	movlw	low (_I2cRxPacket+5)
 17771  0041E8  0100               	movlb	0	; () banked
 17772  0041EA  6F75               	movwf	ReceiveEvt@Event& (0+255),b
 17773  0041EC  0E02               	movlw	high (_I2cRxPacket+5)
 17774  0041EE  6F76               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 17775  0041F0  EC1F  F020         	call	_ReceiveEvt	;wreg free
 17776  0041F4  0900               	iorlw	0
 17777  0041F6  B4D8               	btfsc	status,2,c
 17778  0041F8  D002               	goto	l901
 17779                           
 17780                           ;i2c_slv.c: 331: {
 17781                           ;i2c_slv.c: 332: Result = MessageReceived;
 17782  0041FA  0E01               	movlw	1
 17783  0041FC  D001               	goto	L19
 17784  0041FE                     l901:
 17785                           
 17786                           ;i2c_slv.c: 334: else
 17787                           ;i2c_slv.c: 335: {
 17788                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 17789                           
 17790                           ; BSR set to: 0
 17791  0041FE  0E00               	movlw	0
 17792  004200                     L19:
 17793  004200  0100               	movlb	0	; () banked
 17794  004202  6F79               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 17795                           
 17796                           ; BSR set to: 0
 17797                           ;i2c_slv.c: 337: }
 17798                           ;i2c_slv.c: 339: return Result;
 17799  004204  5179               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 17800  004206  0012               	return	
 17801  004208                     __end_of_I2cSlv_I2cReadMsgSts:
 17802                           	opt stack 0
 17803                           tosu	equ	0xFFF
 17804                           tosh	equ	0xFFE
 17805                           tosl	equ	0xFFD
 17806                           pclath	equ	0xFFA
 17807                           tblptru	equ	0xFF8
 17808                           tblptrh	equ	0xFF7
 17809                           tblptrl	equ	0xFF6
 17810                           tablat	equ	0xFF5
 17811                           prodh	equ	0xFF4
 17812                           prodl	equ	0xFF3
 17813                           intcon	equ	0xFF2
 17814                           intcon2	equ	0xFF1
 17815                           intcon3	equ	0xFF0
 17816                           indf0	equ	0xFEF
 17817                           postinc0	equ	0xFEE
 17818                           plusw0	equ	0xFEB
 17819                           fsr0h	equ	0xFEA
 17820                           fsr0l	equ	0xFE9
 17821                           wreg	equ	0xFE8
 17822                           indf1	equ	0xFE7
 17823                           postinc1	equ	0xFE6
 17824                           postdec1	equ	0xFE5
 17825                           fsr1h	equ	0xFE2
 17826                           fsr1l	equ	0xFE1
 17827                           indf2	equ	0xFDF
 17828                           postinc2	equ	0xFDE
 17829                           postdec2	equ	0xFDD
 17830                           plusw2	equ	0xFDB
 17831                           fsr2h	equ	0xFDA
 17832                           fsr2l	equ	0xFD9
 17833                           status	equ	0xFD8
 17834                           
 17835 ;; *************** function _Rtcm_SetRtccDate *****************
 17836 ;; Defined at:
 17837 ;;		line 176 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 17838 ;; Parameters:    Size  Location     Type
 17839 ;;  Date            8   33[BANK0 ] struct _RtccDateType
 17840 ;; Auto vars:     Size  Location     Type
 17841 ;;		None
 17842 ;; Return value:  Size  Location     Type
 17843 ;;                  1    wreg      void 
 17844 ;; Registers used:
 17845 ;;		wreg, status,2, status,0, cstack
 17846 ;; Tracked objects:
 17847 ;;		On entry : 0/0
 17848 ;;		On exit  : 0/0
 17849 ;;		Unchanged: 0/0
 17850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17851 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17854 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17855 ;;Total ram usage:        8 bytes
 17856 ;; Hardware stack levels used:    1
 17857 ;; Hardware stack levels required when called:   11
 17858 ;; This function calls:
 17859 ;;		_Rtcc_LockRtc
 17860 ;;		_Rtcc_SetRtccValue
 17861 ;;		_Rtcc_UnlockRtc
 17862 ;; This function is called by:
 17863 ;;		_Rtcm_MainTask
 17864 ;; This function uses a non-reentrant model
 17865 ;;
 17866                           
 17867                           	psect	text84
 17868  003A1C                     __ptext84:
 17869                           	opt stack 0
 17870  003A1C                     _Rtcm_SetRtccDate:
 17871                           	opt stack 16
 17872                           
 17873                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 17874                           
 17875                           ; BSR set to: 0
 17876                           ;incstack = 0
 17877  003A1C  ECE8  F021         	call	_Rtcc_UnlockRtc	;wreg free
 17878                           
 17879                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 17880  003A20  0100               	movlb	0	; () banked
 17881  003A22  5181               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 17882  003A24  0F30               	addlw	48
 17883  003A26  6F7D               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 17884  003A28  0E00               	movlw	0
 17885  003A2A  EC49  F005         	call	_Rtcc_SetRtccValue
 17886                           
 17887                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 17888  003A2E  C083  F07D         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 17889  003A32  0E01               	movlw	1
 17890  003A34  EC49  F005         	call	_Rtcc_SetRtccValue
 17891                           
 17892                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 17893  003A38  C084  F07D         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 17894  003A3C  0E02               	movlw	2
 17895  003A3E  EC49  F005         	call	_Rtcc_SetRtccValue
 17896                           
 17897                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 17898  003A42  C085  F07D         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 17899  003A46  0E03               	movlw	3
 17900  003A48  EC49  F005         	call	_Rtcc_SetRtccValue
 17901                           
 17902                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 17903  003A4C  C086  F07D         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 17904  003A50  0E04               	movlw	4
 17905  003A52  EC49  F005         	call	_Rtcc_SetRtccValue
 17906                           
 17907                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 17908  003A56  C087  F07D         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 17909  003A5A  0E05               	movlw	5
 17910  003A5C  EC49  F005         	call	_Rtcc_SetRtccValue
 17911                           
 17912                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 17913  003A60  C088  F07D         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 17914  003A64  0E06               	movlw	6
 17915  003A66  EC49  F005         	call	_Rtcc_SetRtccValue
 17916                           
 17917                           ;rtcm.c: 191: Rtcc_LockRtc();
 17918  003A6A  ECF0  F021         	call	_Rtcc_LockRtc	;wreg free
 17919  003A6E  0012               	return		;funcret
 17920  003A70                     __end_of_Rtcm_SetRtccDate:
 17921                           	opt stack 0
 17922                           tosu	equ	0xFFF
 17923                           tosh	equ	0xFFE
 17924                           tosl	equ	0xFFD
 17925                           pclath	equ	0xFFA
 17926                           tblptru	equ	0xFF8
 17927                           tblptrh	equ	0xFF7
 17928                           tblptrl	equ	0xFF6
 17929                           tablat	equ	0xFF5
 17930                           prodh	equ	0xFF4
 17931                           prodl	equ	0xFF3
 17932                           intcon	equ	0xFF2
 17933                           intcon2	equ	0xFF1
 17934                           intcon3	equ	0xFF0
 17935                           indf0	equ	0xFEF
 17936                           postinc0	equ	0xFEE
 17937                           plusw0	equ	0xFEB
 17938                           fsr0h	equ	0xFEA
 17939                           fsr0l	equ	0xFE9
 17940                           wreg	equ	0xFE8
 17941                           indf1	equ	0xFE7
 17942                           postinc1	equ	0xFE6
 17943                           postdec1	equ	0xFE5
 17944                           fsr1h	equ	0xFE2
 17945                           fsr1l	equ	0xFE1
 17946                           indf2	equ	0xFDF
 17947                           postinc2	equ	0xFDE
 17948                           postdec2	equ	0xFDD
 17949                           plusw2	equ	0xFDB
 17950                           fsr2h	equ	0xFDA
 17951                           fsr2l	equ	0xFD9
 17952                           status	equ	0xFD8
 17953                           
 17954 ;; *************** function _Rtcc_UnlockRtc *****************
 17955 ;; Defined at:
 17956 ;;		line 163 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17957 ;; Parameters:    Size  Location     Type
 17958 ;;		None
 17959 ;; Auto vars:     Size  Location     Type
 17960 ;;		None
 17961 ;; Return value:  Size  Location     Type
 17962 ;;                  1    wreg      void 
 17963 ;; Registers used:
 17964 ;;		None
 17965 ;; Tracked objects:
 17966 ;;		On entry : 0/0
 17967 ;;		On exit  : 0/0
 17968 ;;		Unchanged: 0/0
 17969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17974 ;;Total ram usage:        0 bytes
 17975 ;; Hardware stack levels used:    1
 17976 ;; Hardware stack levels required when called:    9
 17977 ;; This function calls:
 17978 ;;		Nothing
 17979 ;; This function is called by:
 17980 ;;		_Rtcm_MainTask
 17981 ;;		_Rtcm_SetRtccDate
 17982 ;;		_Rtcm_SetRtccAlarm
 17983 ;; This function uses a non-reentrant model
 17984 ;;
 17985                           
 17986                           	psect	text85
 17987  0043D0                     __ptext85:
 17988                           	opt stack 0
 17989  0043D0                     _Rtcc_UnlockRtc:
 17990                           	opt stack 17
 17991                           
 17992                           ;incstack = 0
 17993  0043D0  010F               	movlb	15	;# 
 17994  0043D2  0E55               	movlw	85	;# 
 17995  0043D4  6EA7               	movwf	4007,c	;# 
 17996  0043D6  0EAA               	movlw	170	;# 
 17997  0043D8  6EA7               	movwf	4007,c	;# 
 17998                           
 17999                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18000  0043DA  010F               	movlb	15	; () banked
 18001  0043DC  8B3F               	bsf	63,5,b	;volatile
 18002                           
 18003                           ; BSR set to: 15
 18004  0043DE  0012               	return		;funcret
 18005  0043E0                     __end_of_Rtcc_UnlockRtc:
 18006                           	opt stack 0
 18007                           tosu	equ	0xFFF
 18008                           tosh	equ	0xFFE
 18009                           tosl	equ	0xFFD
 18010                           pclath	equ	0xFFA
 18011                           tblptru	equ	0xFF8
 18012                           tblptrh	equ	0xFF7
 18013                           tblptrl	equ	0xFF6
 18014                           tablat	equ	0xFF5
 18015                           prodh	equ	0xFF4
 18016                           prodl	equ	0xFF3
 18017                           intcon	equ	0xFF2
 18018                           intcon2	equ	0xFF1
 18019                           intcon3	equ	0xFF0
 18020                           indf0	equ	0xFEF
 18021                           postinc0	equ	0xFEE
 18022                           plusw0	equ	0xFEB
 18023                           fsr0h	equ	0xFEA
 18024                           fsr0l	equ	0xFE9
 18025                           wreg	equ	0xFE8
 18026                           indf1	equ	0xFE7
 18027                           postinc1	equ	0xFE6
 18028                           postdec1	equ	0xFE5
 18029                           fsr1h	equ	0xFE2
 18030                           fsr1l	equ	0xFE1
 18031                           indf2	equ	0xFDF
 18032                           postinc2	equ	0xFDE
 18033                           postdec2	equ	0xFDD
 18034                           plusw2	equ	0xFDB
 18035                           fsr2h	equ	0xFDA
 18036                           fsr2l	equ	0xFD9
 18037                           status	equ	0xFD8
 18038                           
 18039 ;; *************** function _Rtcc_SetRtccValue *****************
 18040 ;; Defined at:
 18041 ;;		line 383 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18042 ;; Parameters:    Size  Location     Type
 18043 ;;  RtccPtrVal      1    wreg     enum E7757
 18044 ;;  Value           1   29[BANK0 ] unsigned char 
 18045 ;; Auto vars:     Size  Location     Type
 18046 ;;  RtccPtrVal      1   32[BANK0 ] enum E7757
 18047 ;; Return value:  Size  Location     Type
 18048 ;;                  1    wreg      void 
 18049 ;; Registers used:
 18050 ;;		wreg, status,2, status,0, cstack
 18051 ;; Tracked objects:
 18052 ;;		On entry : 0/0
 18053 ;;		On exit  : 0/0
 18054 ;;		Unchanged: 0/0
 18055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18056 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18057 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18058 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18059 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18060 ;;Total ram usage:        4 bytes
 18061 ;; Hardware stack levels used:    1
 18062 ;; Hardware stack levels required when called:   10
 18063 ;; This function calls:
 18064 ;;		___awdiv
 18065 ;;		___awmod
 18066 ;; This function is called by:
 18067 ;;		_Rtcm_SetRtccDate
 18068 ;; This function uses a non-reentrant model
 18069 ;;
 18070                           
 18071                           	psect	text86
 18072  000A92                     __ptext86:
 18073                           	opt stack 0
 18074  000A92                     _Rtcc_SetRtccValue:
 18075                           	opt stack 16
 18076                           
 18077                           ; BSR set to: 15
 18078                           ;incstack = 0
 18079                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18080  000A92  0100               	movlb	0	; () banked
 18081  000A94  6F80               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18082                           
 18083                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18084  000A96  D0FC               	goto	l369
 18085  000A98                     l370:
 18086                           
 18087                           ; BSR set to: 0
 18088                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18089  000A98  010F               	movlb	15	; () banked
 18090  000A9A  833F               	bsf	63,1,b	;volatile
 18091                           
 18092                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18093  000A9C  813F               	bsf	63,0,b	;volatile
 18094                           
 18095                           ; BSR set to: 15
 18096                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18097  000A9E  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18098  000AA2  0100               	movlb	0	; () banked
 18099  000AA4  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 18100  000AA6  0E00               	movlw	0
 18101  000AA8  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 18102  000AAA  0E0A               	movlw	10
 18103  000AAC  6F77               	movwf	___awmod@divisor& (0+255),b
 18104  000AAE  EC88  F01A         	call	___awmod	;wreg free
 18105  000AB2  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 18106  000AB6  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18107  000ABA  0E0F               	movlw	15
 18108  000ABC  0100               	movlb	0	; () banked
 18109  000ABE  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18110  000AC0  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18111  000AC4  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 18112  000AC6  0E00               	movlw	0
 18113  000AC8  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 18114  000ACA  0E0A               	movlw	10
 18115  000ACC  6F77               	movwf	___awdiv@divisor& (0+255),b
 18116  000ACE  ECC2  F019         	call	___awdiv	;wreg free
 18117  000AD2  0100               	movlb	0	; () banked
 18118  000AD4  3975               	swapf	?___awdiv& (0+255),w,b
 18119  000AD6  0BF0               	andlw	240
 18120  000AD8  0BF0               	andlw	240
 18121  000ADA  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18122  000ADC  6E98               	movwf	3992,c	;volatile
 18123                           
 18124                           ;rtcc_drv.c: 393: break;
 18125  000ADE  0012               	return	
 18126  000AE0                     l372:
 18127                           
 18128                           ; BSR set to: 0
 18129                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18130  000AE0  010F               	movlb	15	; () banked
 18131  000AE2  833F               	bsf	63,1,b	;volatile
 18132                           
 18133                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18134  000AE4  913F               	bcf	63,0,b	;volatile
 18135                           
 18136                           ; BSR set to: 15
 18137                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18138  000AE6  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18139  000AEA  0100               	movlb	0	; () banked
 18140  000AEC  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 18141  000AEE  0E00               	movlw	0
 18142  000AF0  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 18143  000AF2  0E0A               	movlw	10
 18144  000AF4  6F77               	movwf	___awmod@divisor& (0+255),b
 18145  000AF6  EC88  F01A         	call	___awmod	;wreg free
 18146  000AFA  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 18147  000AFE  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18148  000B02  0E0F               	movlw	15
 18149  000B04  0100               	movlb	0	; () banked
 18150  000B06  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18151  000B08  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18152  000B0C  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 18153  000B0E  0E00               	movlw	0
 18154  000B10  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 18155  000B12  0E0A               	movlw	10
 18156  000B14  6F77               	movwf	___awdiv@divisor& (0+255),b
 18157  000B16  ECC2  F019         	call	___awdiv	;wreg free
 18158  000B1A  0100               	movlb	0	; () banked
 18159  000B1C  3975               	swapf	?___awdiv& (0+255),w,b
 18160  000B1E  0BF0               	andlw	240
 18161  000B20  0BF0               	andlw	240
 18162  000B22  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18163  000B24  6E99               	movwf	3993,c	;volatile
 18164                           
 18165                           ;rtcc_drv.c: 401: break;
 18166  000B26  0012               	return	
 18167  000B28                     l373:
 18168                           
 18169                           ; BSR set to: 0
 18170                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18171  000B28  010F               	movlb	15	; () banked
 18172  000B2A  833F               	bsf	63,1,b	;volatile
 18173                           
 18174                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18175  000B2C  913F               	bcf	63,0,b	;volatile
 18176                           
 18177                           ; BSR set to: 15
 18178                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18179  000B2E  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18180  000B32  0100               	movlb	0	; () banked
 18181  000B34  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 18182  000B36  0E00               	movlw	0
 18183  000B38  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 18184  000B3A  0E0A               	movlw	10
 18185  000B3C  6F77               	movwf	___awmod@divisor& (0+255),b
 18186  000B3E  EC88  F01A         	call	___awmod	;wreg free
 18187  000B42  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 18188  000B46  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18189  000B4A  0E0F               	movlw	15
 18190  000B4C  0100               	movlb	0	; () banked
 18191  000B4E  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18192  000B50  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18193  000B54  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 18194  000B56  0E00               	movlw	0
 18195  000B58  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 18196  000B5A  0E0A               	movlw	10
 18197  000B5C  6F77               	movwf	___awdiv@divisor& (0+255),b
 18198  000B5E  ECC2  F019         	call	___awdiv	;wreg free
 18199  000B62  0100               	movlb	0	; () banked
 18200  000B64  3975               	swapf	?___awdiv& (0+255),w,b
 18201  000B66  0BF0               	andlw	240
 18202  000B68  0BF0               	andlw	240
 18203  000B6A  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18204  000B6C  6E98               	movwf	3992,c	;volatile
 18205                           
 18206                           ;rtcc_drv.c: 409: break;
 18207  000B6E  0012               	return	
 18208  000B70                     l374:
 18209                           
 18210                           ; BSR set to: 0
 18211                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 18212  000B70  010F               	movlb	15	; () banked
 18213  000B72  933F               	bcf	63,1,b	;volatile
 18214                           
 18215                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 18216  000B74  813F               	bsf	63,0,b	;volatile
 18217                           
 18218                           ; BSR set to: 15
 18219                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18220  000B76  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18221  000B7A  0100               	movlb	0	; () banked
 18222  000B7C  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 18223  000B7E  0E00               	movlw	0
 18224  000B80  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 18225  000B82  0E0A               	movlw	10
 18226  000B84  6F77               	movwf	___awmod@divisor& (0+255),b
 18227  000B86  EC88  F01A         	call	___awmod	;wreg free
 18228  000B8A  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 18229  000B8E  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18230  000B92  0E0F               	movlw	15
 18231  000B94  0100               	movlb	0	; () banked
 18232  000B96  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18233  000B98  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18234  000B9C  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 18235  000B9E  0E00               	movlw	0
 18236  000BA0  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 18237  000BA2  0E0A               	movlw	10
 18238  000BA4  6F77               	movwf	___awdiv@divisor& (0+255),b
 18239  000BA6  ECC2  F019         	call	___awdiv	;wreg free
 18240  000BAA  0100               	movlb	0	; () banked
 18241  000BAC  3975               	swapf	?___awdiv& (0+255),w,b
 18242  000BAE  0BF0               	andlw	240
 18243  000BB0  0BF0               	andlw	240
 18244  000BB2  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18245  000BB4  6E99               	movwf	3993,c	;volatile
 18246                           
 18247                           ;rtcc_drv.c: 417: break;
 18248  000BB6  0012               	return	
 18249  000BB8                     l375:
 18250                           
 18251                           ; BSR set to: 0
 18252                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 18253  000BB8  010F               	movlb	15	; () banked
 18254  000BBA  933F               	bcf	63,1,b	;volatile
 18255                           
 18256                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 18257  000BBC  813F               	bsf	63,0,b	;volatile
 18258                           
 18259                           ; BSR set to: 15
 18260                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18261  000BBE  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18262  000BC2  0100               	movlb	0	; () banked
 18263  000BC4  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 18264  000BC6  0E00               	movlw	0
 18265  000BC8  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 18266  000BCA  0E0A               	movlw	10
 18267  000BCC  6F77               	movwf	___awmod@divisor& (0+255),b
 18268  000BCE  EC88  F01A         	call	___awmod	;wreg free
 18269  000BD2  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 18270  000BD6  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18271  000BDA  0E0F               	movlw	15
 18272  000BDC  0100               	movlb	0	; () banked
 18273  000BDE  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18274  000BE0  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18275  000BE4  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 18276  000BE6  0E00               	movlw	0
 18277  000BE8  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 18278  000BEA  0E0A               	movlw	10
 18279  000BEC  6F77               	movwf	___awdiv@divisor& (0+255),b
 18280  000BEE  ECC2  F019         	call	___awdiv	;wreg free
 18281  000BF2  0100               	movlb	0	; () banked
 18282  000BF4  3975               	swapf	?___awdiv& (0+255),w,b
 18283  000BF6  0BF0               	andlw	240
 18284  000BF8  0BF0               	andlw	240
 18285  000BFA  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18286  000BFC  6E98               	movwf	3992,c	;volatile
 18287                           
 18288                           ;rtcc_drv.c: 425: break;
 18289  000BFE  0012               	return	
 18290  000C00                     l376:
 18291                           
 18292                           ; BSR set to: 0
 18293                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 18294  000C00  010F               	movlb	15	; () banked
 18295  000C02  933F               	bcf	63,1,b	;volatile
 18296                           
 18297                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 18298  000C04  913F               	bcf	63,0,b	;volatile
 18299                           
 18300                           ; BSR set to: 15
 18301                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18302  000C06  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18303  000C0A  0100               	movlb	0	; () banked
 18304  000C0C  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 18305  000C0E  0E00               	movlw	0
 18306  000C10  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 18307  000C12  0E0A               	movlw	10
 18308  000C14  6F77               	movwf	___awmod@divisor& (0+255),b
 18309  000C16  EC88  F01A         	call	___awmod	;wreg free
 18310  000C1A  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 18311  000C1E  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18312  000C22  0E0F               	movlw	15
 18313  000C24  0100               	movlb	0	; () banked
 18314  000C26  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18315  000C28  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18316  000C2C  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 18317  000C2E  0E00               	movlw	0
 18318  000C30  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 18319  000C32  0E0A               	movlw	10
 18320  000C34  6F77               	movwf	___awdiv@divisor& (0+255),b
 18321  000C36  ECC2  F019         	call	___awdiv	;wreg free
 18322  000C3A  0100               	movlb	0	; () banked
 18323  000C3C  3975               	swapf	?___awdiv& (0+255),w,b
 18324  000C3E  0BF0               	andlw	240
 18325  000C40  0BF0               	andlw	240
 18326  000C42  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18327  000C44  6E99               	movwf	3993,c	;volatile
 18328                           
 18329                           ;rtcc_drv.c: 433: break;
 18330  000C46  0012               	return	
 18331  000C48                     l377:
 18332                           
 18333                           ; BSR set to: 0
 18334                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 18335  000C48  010F               	movlb	15	; () banked
 18336  000C4A  933F               	bcf	63,1,b	;volatile
 18337                           
 18338                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 18339  000C4C  913F               	bcf	63,0,b	;volatile
 18340                           
 18341                           ; BSR set to: 15
 18342                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18343  000C4E  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18344  000C52  0100               	movlb	0	; () banked
 18345  000C54  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 18346  000C56  0E00               	movlw	0
 18347  000C58  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 18348  000C5A  0E0A               	movlw	10
 18349  000C5C  6F77               	movwf	___awmod@divisor& (0+255),b
 18350  000C5E  EC88  F01A         	call	___awmod	;wreg free
 18351  000C62  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 18352  000C66  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18353  000C6A  0E0F               	movlw	15
 18354  000C6C  0100               	movlb	0	; () banked
 18355  000C6E  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18356  000C70  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18357  000C74  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 18358  000C76  0E00               	movlw	0
 18359  000C78  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 18360  000C7A  0E0A               	movlw	10
 18361  000C7C  6F77               	movwf	___awdiv@divisor& (0+255),b
 18362  000C7E  ECC2  F019         	call	___awdiv	;wreg free
 18363  000C82  0100               	movlb	0	; () banked
 18364  000C84  3975               	swapf	?___awdiv& (0+255),w,b
 18365  000C86  0BF0               	andlw	240
 18366  000C88  0BF0               	andlw	240
 18367  000C8A  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18368  000C8C  6E98               	movwf	3992,c	;volatile
 18369                           
 18370                           ; BSR set to: 0
 18371                           ;rtcc_drv.c: 445: }
 18372                           
 18373                           ; BSR set to: 0
 18374                           ;rtcc_drv.c: 444: break;
 18375                           
 18376                           ;rtcc_drv.c: 443: default:
 18377                           
 18378                           ;rtcc_drv.c: 441: break;
 18379  000C8E  0012               	return	
 18380  000C90                     l369:
 18381                           
 18382                           ; BSR set to: 0
 18383  000C90  0100               	movlb	0	; () banked
 18384  000C92  5180               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 18385                           
 18386                           ; Switch size 1, requested type "space"
 18387                           ; Number of cases is 7, Range of values is 0 to 6
 18388                           ; switch strategies available:
 18389                           ; Name         Instructions Cycles
 18390                           ; simple_byte           22    12 (average)
 18391                           ;	Chosen strategy is simple_byte
 18392  000C94  0A00               	xorlw	0	; case 0
 18393  000C96  B4D8               	btfsc	status,2,c
 18394  000C98  D6FF               	goto	l370
 18395  000C9A  0A01               	xorlw	1	; case 1
 18396  000C9C  B4D8               	btfsc	status,2,c
 18397  000C9E  D720               	goto	l372
 18398  000CA0  0A03               	xorlw	3	; case 2
 18399  000CA2  B4D8               	btfsc	status,2,c
 18400  000CA4  D741               	goto	l373
 18401  000CA6  0A01               	xorlw	1	; case 3
 18402  000CA8  B4D8               	btfsc	status,2,c
 18403  000CAA  D762               	goto	l374
 18404  000CAC  0A07               	xorlw	7	; case 4
 18405  000CAE  B4D8               	btfsc	status,2,c
 18406  000CB0  D783               	goto	l375
 18407  000CB2  0A01               	xorlw	1	; case 5
 18408  000CB4  B4D8               	btfsc	status,2,c
 18409  000CB6  D7A4               	goto	l376
 18410  000CB8  0A03               	xorlw	3	; case 6
 18411  000CBA  A4D8               	btfss	status,2,c
 18412  000CBC  0012               	return	
 18413  000CBE  D7C4               	goto	l377
 18414  000CC0                     __end_of_Rtcc_SetRtccValue:
 18415                           	opt stack 0
 18416                           tosu	equ	0xFFF
 18417                           tosh	equ	0xFFE
 18418                           tosl	equ	0xFFD
 18419                           pclath	equ	0xFFA
 18420                           tblptru	equ	0xFF8
 18421                           tblptrh	equ	0xFF7
 18422                           tblptrl	equ	0xFF6
 18423                           tablat	equ	0xFF5
 18424                           prodh	equ	0xFF4
 18425                           prodl	equ	0xFF3
 18426                           intcon	equ	0xFF2
 18427                           intcon2	equ	0xFF1
 18428                           intcon3	equ	0xFF0
 18429                           indf0	equ	0xFEF
 18430                           postinc0	equ	0xFEE
 18431                           plusw0	equ	0xFEB
 18432                           fsr0h	equ	0xFEA
 18433                           fsr0l	equ	0xFE9
 18434                           wreg	equ	0xFE8
 18435                           indf1	equ	0xFE7
 18436                           postinc1	equ	0xFE6
 18437                           postdec1	equ	0xFE5
 18438                           fsr1h	equ	0xFE2
 18439                           fsr1l	equ	0xFE1
 18440                           indf2	equ	0xFDF
 18441                           postinc2	equ	0xFDE
 18442                           postdec2	equ	0xFDD
 18443                           plusw2	equ	0xFDB
 18444                           fsr2h	equ	0xFDA
 18445                           fsr2l	equ	0xFD9
 18446                           status	equ	0xFD8
 18447                           
 18448 ;; *************** function ___awmod *****************
 18449 ;; Defined at:
 18450 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 18451 ;; Parameters:    Size  Location     Type
 18452 ;;  dividend        2   21[BANK0 ] int 
 18453 ;;  divisor         2   23[BANK0 ] int 
 18454 ;; Auto vars:     Size  Location     Type
 18455 ;;  sign            1   26[BANK0 ] unsigned char 
 18456 ;;  counter         1   25[BANK0 ] unsigned char 
 18457 ;; Return value:  Size  Location     Type
 18458 ;;                  2   21[BANK0 ] int 
 18459 ;; Registers used:
 18460 ;;		wreg, status,2, status,0
 18461 ;; Tracked objects:
 18462 ;;		On entry : 0/0
 18463 ;;		On exit  : 0/0
 18464 ;;		Unchanged: 0/0
 18465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18466 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18467 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18469 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18470 ;;Total ram usage:        6 bytes
 18471 ;; Hardware stack levels used:    1
 18472 ;; Hardware stack levels required when called:    9
 18473 ;; This function calls:
 18474 ;;		Nothing
 18475 ;; This function is called by:
 18476 ;;		_Rtcc_SetRtccValue
 18477 ;;		_Rtcc_SetRtccAlarm
 18478 ;; This function uses a non-reentrant model
 18479 ;;
 18480                           
 18481                           	psect	text87
 18482  003510                     __ptext87:
 18483                           	opt stack 0
 18484  003510                     ___awmod:
 18485                           	opt stack 16
 18486                           
 18487                           ; BSR set to: 0
 18488                           ;incstack = 0
 18489  003510  0E00               	movlw	0
 18490  003512  0100               	movlb	0	; () banked
 18491  003514  6F7A               	movwf	___awmod@sign& (0+255),b
 18492                           
 18493                           ; BSR set to: 0
 18494  003516  AF76               	btfss	(___awmod@dividend+1)& (0+255),7,b
 18495  003518  D006               	goto	l2153
 18496                           
 18497                           ; BSR set to: 0
 18498  00351A  6D75               	negf	___awmod@dividend& (0+255),b
 18499  00351C  1F76               	comf	(___awmod@dividend+1)& (0+255),f,b
 18500  00351E  B0D8               	btfsc	status,0,c
 18501  003520  2B76               	incf	(___awmod@dividend+1)& (0+255),f,b
 18502                           
 18503                           ; BSR set to: 0
 18504  003522  0E01               	movlw	1
 18505  003524  6F7A               	movwf	___awmod@sign& (0+255),b
 18506  003526                     l2153:
 18507                           
 18508                           ; BSR set to: 0
 18509                           
 18510                           ; BSR set to: 0
 18511  003526  AF78               	btfss	(___awmod@divisor+1)& (0+255),7,b
 18512  003528  D004               	goto	l2154
 18513                           
 18514                           ; BSR set to: 0
 18515  00352A  6D77               	negf	___awmod@divisor& (0+255),b
 18516  00352C  1F78               	comf	(___awmod@divisor+1)& (0+255),f,b
 18517  00352E  B0D8               	btfsc	status,0,c
 18518  003530  2B78               	incf	(___awmod@divisor+1)& (0+255),f,b
 18519  003532                     l2154:
 18520                           
 18521                           ; BSR set to: 0
 18522                           
 18523                           ; BSR set to: 0
 18524  003532  5177               	movf	___awmod@divisor& (0+255),w,b
 18525  003534  1178               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 18526  003536  B4D8               	btfsc	status,2,c
 18527  003538  D018               	goto	l2161
 18528                           
 18529                           ; BSR set to: 0
 18530  00353A  0E01               	movlw	1
 18531  00353C  6F79               	movwf	___awmod@counter& (0+255),b
 18532  00353E  D004               	goto	l2156
 18533  003540                     
 18534                           ; BSR set to: 0
 18535                           
 18536                           ; BSR set to: 0
 18537  003540  90D8               	bcf	status,0,c
 18538  003542  3777               	rlcf	___awmod@divisor& (0+255),f,b
 18539  003544  3778               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 18540  003546  2B79               	incf	___awmod@counter& (0+255),f,b
 18541  003548                     l2156:
 18542                           
 18543                           ; BSR set to: 0
 18544                           
 18545                           ; BSR set to: 0
 18546  003548  AF78               	btfss	(___awmod@divisor+1)& (0+255),7,b
 18547  00354A  D7FA               	goto	l2157
 18548  00354C                     u5590:
 18549                           
 18550                           ; BSR set to: 0
 18551                           
 18552                           ; BSR set to: 0
 18553                           
 18554                           ; BSR set to: 0
 18555  00354C  5177               	movf	___awmod@divisor& (0+255),w,b
 18556  00354E  5D75               	subwf	___awmod@dividend& (0+255),w,b
 18557  003550  5178               	movf	(___awmod@divisor+1)& (0+255),w,b
 18558  003552  5976               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 18559  003554  A0D8               	btfss	status,0,c
 18560  003556  D004               	goto	l2160
 18561                           
 18562                           ; BSR set to: 0
 18563  003558  5177               	movf	___awmod@divisor& (0+255),w,b
 18564  00355A  5F75               	subwf	___awmod@dividend& (0+255),f,b
 18565  00355C  5178               	movf	(___awmod@divisor+1)& (0+255),w,b
 18566  00355E  5B76               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 18567  003560                     l2160:
 18568                           
 18569                           ; BSR set to: 0
 18570                           
 18571                           ; BSR set to: 0
 18572  003560  90D8               	bcf	status,0,c
 18573  003562  3378               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 18574  003564  3377               	rrcf	___awmod@divisor& (0+255),f,b
 18575                           
 18576                           ; BSR set to: 0
 18577  003566  2F79               	decfsz	___awmod@counter& (0+255),f,b
 18578  003568  D7F1               	goto	u5590
 18579  00356A                     l2161:
 18580                           
 18581                           ; BSR set to: 0
 18582                           
 18583                           ; BSR set to: 0
 18584                           
 18585                           ; BSR set to: 0
 18586  00356A  517A               	movf	___awmod@sign& (0+255),w,b
 18587  00356C  B4D8               	btfsc	status,2,c
 18588  00356E  D004               	goto	l2162
 18589                           
 18590                           ; BSR set to: 0
 18591  003570  6D75               	negf	___awmod@dividend& (0+255),b
 18592  003572  1F76               	comf	(___awmod@dividend+1)& (0+255),f,b
 18593  003574  B0D8               	btfsc	status,0,c
 18594  003576  2B76               	incf	(___awmod@dividend+1)& (0+255),f,b
 18595  003578                     l2162:
 18596                           
 18597                           ; BSR set to: 0
 18598                           
 18599                           ; BSR set to: 0
 18600  003578  C075  F075         	movff	___awmod@dividend,?___awmod
 18601  00357C  C076  F076         	movff	___awmod@dividend+1,?___awmod+1
 18602  003580  0012               	return	
 18603  003582                     __end_of___awmod:
 18604                           	opt stack 0
 18605                           tosu	equ	0xFFF
 18606                           tosh	equ	0xFFE
 18607                           tosl	equ	0xFFD
 18608                           pclath	equ	0xFFA
 18609                           tblptru	equ	0xFF8
 18610                           tblptrh	equ	0xFF7
 18611                           tblptrl	equ	0xFF6
 18612                           tablat	equ	0xFF5
 18613                           prodh	equ	0xFF4
 18614                           prodl	equ	0xFF3
 18615                           intcon	equ	0xFF2
 18616                           intcon2	equ	0xFF1
 18617                           intcon3	equ	0xFF0
 18618                           indf0	equ	0xFEF
 18619                           postinc0	equ	0xFEE
 18620                           plusw0	equ	0xFEB
 18621                           fsr0h	equ	0xFEA
 18622                           fsr0l	equ	0xFE9
 18623                           wreg	equ	0xFE8
 18624                           indf1	equ	0xFE7
 18625                           postinc1	equ	0xFE6
 18626                           postdec1	equ	0xFE5
 18627                           fsr1h	equ	0xFE2
 18628                           fsr1l	equ	0xFE1
 18629                           indf2	equ	0xFDF
 18630                           postinc2	equ	0xFDE
 18631                           postdec2	equ	0xFDD
 18632                           plusw2	equ	0xFDB
 18633                           fsr2h	equ	0xFDA
 18634                           fsr2l	equ	0xFD9
 18635                           status	equ	0xFD8
 18636                           
 18637 ;; *************** function ___awdiv *****************
 18638 ;; Defined at:
 18639 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 18640 ;; Parameters:    Size  Location     Type
 18641 ;;  dividend        2   21[BANK0 ] int 
 18642 ;;  divisor         2   23[BANK0 ] int 
 18643 ;; Auto vars:     Size  Location     Type
 18644 ;;  quotient        2   27[BANK0 ] int 
 18645 ;;  sign            1   26[BANK0 ] unsigned char 
 18646 ;;  counter         1   25[BANK0 ] unsigned char 
 18647 ;; Return value:  Size  Location     Type
 18648 ;;                  2   21[BANK0 ] int 
 18649 ;; Registers used:
 18650 ;;		wreg, status,2, status,0
 18651 ;; Tracked objects:
 18652 ;;		On entry : 0/0
 18653 ;;		On exit  : 0/0
 18654 ;;		Unchanged: 0/0
 18655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18656 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18657 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18659 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18660 ;;Total ram usage:        8 bytes
 18661 ;; Hardware stack levels used:    1
 18662 ;; Hardware stack levels required when called:    9
 18663 ;; This function calls:
 18664 ;;		Nothing
 18665 ;; This function is called by:
 18666 ;;		_Rtcc_SetRtccValue
 18667 ;;		_Rtcc_SetRtccAlarm
 18668 ;; This function uses a non-reentrant model
 18669 ;;
 18670                           
 18671                           	psect	text88
 18672  003384                     __ptext88:
 18673                           	opt stack 0
 18674  003384                     ___awdiv:
 18675                           	opt stack 16
 18676                           
 18677                           ; BSR set to: 0
 18678                           ;incstack = 0
 18679  003384  0E00               	movlw	0
 18680  003386  0100               	movlb	0	; () banked
 18681  003388  6F7A               	movwf	___awdiv@sign& (0+255),b
 18682                           
 18683                           ; BSR set to: 0
 18684  00338A  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18685  00338C  D006               	goto	l2140
 18686                           
 18687                           ; BSR set to: 0
 18688  00338E  6D77               	negf	___awdiv@divisor& (0+255),b
 18689  003390  1F78               	comf	(___awdiv@divisor+1)& (0+255),f,b
 18690  003392  B0D8               	btfsc	status,0,c
 18691  003394  2B78               	incf	(___awdiv@divisor+1)& (0+255),f,b
 18692                           
 18693                           ; BSR set to: 0
 18694  003396  0E01               	movlw	1
 18695  003398  6F7A               	movwf	___awdiv@sign& (0+255),b
 18696  00339A                     l2140:
 18697                           
 18698                           ; BSR set to: 0
 18699                           
 18700                           ; BSR set to: 0
 18701  00339A  AF76               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 18702  00339C  D006               	goto	l2141
 18703                           
 18704                           ; BSR set to: 0
 18705  00339E  6D75               	negf	___awdiv@dividend& (0+255),b
 18706  0033A0  1F76               	comf	(___awdiv@dividend+1)& (0+255),f,b
 18707  0033A2  B0D8               	btfsc	status,0,c
 18708  0033A4  2B76               	incf	(___awdiv@dividend+1)& (0+255),f,b
 18709                           
 18710                           ; BSR set to: 0
 18711  0033A6  0E01               	movlw	1
 18712  0033A8  1B7A               	xorwf	___awdiv@sign& (0+255),f,b
 18713  0033AA                     l2141:
 18714                           
 18715                           ; BSR set to: 0
 18716                           
 18717                           ; BSR set to: 0
 18718  0033AA  0E00               	movlw	0
 18719  0033AC  6F7C               	movwf	(___awdiv@quotient+1)& (0+255),b
 18720  0033AE  0E00               	movlw	0
 18721  0033B0  6F7B               	movwf	___awdiv@quotient& (0+255),b
 18722                           
 18723                           ; BSR set to: 0
 18724  0033B2  5177               	movf	___awdiv@divisor& (0+255),w,b
 18725  0033B4  1178               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 18726  0033B6  B4D8               	btfsc	status,2,c
 18727  0033B8  D01C               	goto	l2148
 18728                           
 18729                           ; BSR set to: 0
 18730  0033BA  0E01               	movlw	1
 18731  0033BC  6F79               	movwf	___awdiv@counter& (0+255),b
 18732  0033BE  D004               	goto	l2143
 18733  0033C0                     
 18734                           ; BSR set to: 0
 18735                           
 18736                           ; BSR set to: 0
 18737  0033C0  90D8               	bcf	status,0,c
 18738  0033C2  3777               	rlcf	___awdiv@divisor& (0+255),f,b
 18739  0033C4  3778               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 18740  0033C6  2B79               	incf	___awdiv@counter& (0+255),f,b
 18741  0033C8                     l2143:
 18742                           
 18743                           ; BSR set to: 0
 18744                           
 18745                           ; BSR set to: 0
 18746  0033C8  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18747  0033CA  D7FA               	goto	l2144
 18748  0033CC                     u5530:
 18749                           
 18750                           ; BSR set to: 0
 18751                           
 18752                           ; BSR set to: 0
 18753                           
 18754                           ; BSR set to: 0
 18755  0033CC  90D8               	bcf	status,0,c
 18756  0033CE  377B               	rlcf	___awdiv@quotient& (0+255),f,b
 18757  0033D0  377C               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 18758                           
 18759                           ; BSR set to: 0
 18760  0033D2  5177               	movf	___awdiv@divisor& (0+255),w,b
 18761  0033D4  5D75               	subwf	___awdiv@dividend& (0+255),w,b
 18762  0033D6  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18763  0033D8  5976               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 18764  0033DA  A0D8               	btfss	status,0,c
 18765  0033DC  D005               	goto	l2147
 18766                           
 18767                           ; BSR set to: 0
 18768  0033DE  5177               	movf	___awdiv@divisor& (0+255),w,b
 18769  0033E0  5F75               	subwf	___awdiv@dividend& (0+255),f,b
 18770  0033E2  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18771  0033E4  5B76               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 18772                           
 18773                           ; BSR set to: 0
 18774  0033E6  817B               	bsf	___awdiv@quotient& (0+255),0,b
 18775  0033E8                     l2147:
 18776                           
 18777                           ; BSR set to: 0
 18778                           
 18779                           ; BSR set to: 0
 18780  0033E8  90D8               	bcf	status,0,c
 18781  0033EA  3378               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 18782  0033EC  3377               	rrcf	___awdiv@divisor& (0+255),f,b
 18783                           
 18784                           ; BSR set to: 0
 18785  0033EE  2F79               	decfsz	___awdiv@counter& (0+255),f,b
 18786  0033F0  D7ED               	goto	u5530
 18787  0033F2                     l2148:
 18788                           
 18789                           ; BSR set to: 0
 18790                           
 18791                           ; BSR set to: 0
 18792                           
 18793                           ; BSR set to: 0
 18794  0033F2  517A               	movf	___awdiv@sign& (0+255),w,b
 18795  0033F4  B4D8               	btfsc	status,2,c
 18796  0033F6  D004               	goto	l2149
 18797                           
 18798                           ; BSR set to: 0
 18799  0033F8  6D7B               	negf	___awdiv@quotient& (0+255),b
 18800  0033FA  1F7C               	comf	(___awdiv@quotient+1)& (0+255),f,b
 18801  0033FC  B0D8               	btfsc	status,0,c
 18802  0033FE  2B7C               	incf	(___awdiv@quotient+1)& (0+255),f,b
 18803  003400                     l2149:
 18804                           
 18805                           ; BSR set to: 0
 18806                           
 18807                           ; BSR set to: 0
 18808  003400  C07B  F075         	movff	___awdiv@quotient,?___awdiv
 18809  003404  C07C  F076         	movff	___awdiv@quotient+1,?___awdiv+1
 18810  003408  0012               	return	
 18811  00340A                     __end_of___awdiv:
 18812                           	opt stack 0
 18813                           tosu	equ	0xFFF
 18814                           tosh	equ	0xFFE
 18815                           tosl	equ	0xFFD
 18816                           pclath	equ	0xFFA
 18817                           tblptru	equ	0xFF8
 18818                           tblptrh	equ	0xFF7
 18819                           tblptrl	equ	0xFF6
 18820                           tablat	equ	0xFF5
 18821                           prodh	equ	0xFF4
 18822                           prodl	equ	0xFF3
 18823                           intcon	equ	0xFF2
 18824                           intcon2	equ	0xFF1
 18825                           intcon3	equ	0xFF0
 18826                           indf0	equ	0xFEF
 18827                           postinc0	equ	0xFEE
 18828                           plusw0	equ	0xFEB
 18829                           fsr0h	equ	0xFEA
 18830                           fsr0l	equ	0xFE9
 18831                           wreg	equ	0xFE8
 18832                           indf1	equ	0xFE7
 18833                           postinc1	equ	0xFE6
 18834                           postdec1	equ	0xFE5
 18835                           fsr1h	equ	0xFE2
 18836                           fsr1l	equ	0xFE1
 18837                           indf2	equ	0xFDF
 18838                           postinc2	equ	0xFDE
 18839                           postdec2	equ	0xFDD
 18840                           plusw2	equ	0xFDB
 18841                           fsr2h	equ	0xFDA
 18842                           fsr2l	equ	0xFD9
 18843                           status	equ	0xFD8
 18844                           
 18845 ;; *************** function _Rtcc_LockRtc *****************
 18846 ;; Defined at:
 18847 ;;		line 183 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18848 ;; Parameters:    Size  Location     Type
 18849 ;;		None
 18850 ;; Auto vars:     Size  Location     Type
 18851 ;;		None
 18852 ;; Return value:  Size  Location     Type
 18853 ;;                  1    wreg      void 
 18854 ;; Registers used:
 18855 ;;		None
 18856 ;; Tracked objects:
 18857 ;;		On entry : 0/0
 18858 ;;		On exit  : 0/0
 18859 ;;		Unchanged: 0/0
 18860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18865 ;;Total ram usage:        0 bytes
 18866 ;; Hardware stack levels used:    1
 18867 ;; Hardware stack levels required when called:    9
 18868 ;; This function calls:
 18869 ;;		Nothing
 18870 ;; This function is called by:
 18871 ;;		_Rtcm_MainTask
 18872 ;;		_Rtcm_SetRtccDate
 18873 ;;		_Rtcm_SetRtccAlarm
 18874 ;; This function uses a non-reentrant model
 18875 ;;
 18876                           
 18877                           	psect	text89
 18878  0043E0                     __ptext89:
 18879                           	opt stack 0
 18880  0043E0                     _Rtcc_LockRtc:
 18881                           	opt stack 17
 18882                           
 18883                           ; BSR set to: 0
 18884                           ;incstack = 0
 18885  0043E0  010F               	movlb	15	;# 
 18886  0043E2  0E55               	movlw	85	;# 
 18887  0043E4  6EA7               	movwf	4007,c	;# 
 18888  0043E6  0EAA               	movlw	170	;# 
 18889  0043E8  6EA7               	movwf	4007,c	;# 
 18890                           
 18891                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 18892  0043EA  010F               	movlb	15	; () banked
 18893  0043EC  9B3F               	bcf	63,5,b	;volatile
 18894                           
 18895                           ; BSR set to: 15
 18896  0043EE  0012               	return		;funcret
 18897  0043F0                     __end_of_Rtcc_LockRtc:
 18898                           	opt stack 0
 18899                           tosu	equ	0xFFF
 18900                           tosh	equ	0xFFE
 18901                           tosl	equ	0xFFD
 18902                           pclath	equ	0xFFA
 18903                           tblptru	equ	0xFF8
 18904                           tblptrh	equ	0xFF7
 18905                           tblptrl	equ	0xFF6
 18906                           tablat	equ	0xFF5
 18907                           prodh	equ	0xFF4
 18908                           prodl	equ	0xFF3
 18909                           intcon	equ	0xFF2
 18910                           intcon2	equ	0xFF1
 18911                           intcon3	equ	0xFF0
 18912                           indf0	equ	0xFEF
 18913                           postinc0	equ	0xFEE
 18914                           plusw0	equ	0xFEB
 18915                           fsr0h	equ	0xFEA
 18916                           fsr0l	equ	0xFE9
 18917                           wreg	equ	0xFE8
 18918                           indf1	equ	0xFE7
 18919                           postinc1	equ	0xFE6
 18920                           postdec1	equ	0xFE5
 18921                           fsr1h	equ	0xFE2
 18922                           fsr1l	equ	0xFE1
 18923                           indf2	equ	0xFDF
 18924                           postinc2	equ	0xFDE
 18925                           postdec2	equ	0xFDD
 18926                           plusw2	equ	0xFDB
 18927                           fsr2h	equ	0xFDA
 18928                           fsr2l	equ	0xFD9
 18929                           status	equ	0xFD8
 18930                           
 18931 ;; *************** function _Rtcm_GetRtccDate *****************
 18932 ;; Defined at:
 18933 ;;		line 202 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18934 ;; Parameters:    Size  Location     Type
 18935 ;;		None
 18936 ;; Auto vars:     Size  Location     Type
 18937 ;;  LocalDate       8   34[BANK0 ] struct _RtccDateType
 18938 ;; Return value:  Size  Location     Type
 18939 ;;                  8   25[BANK0 ] struct _RtccDateType
 18940 ;; Registers used:
 18941 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18942 ;; Tracked objects:
 18943 ;;		On entry : 0/0
 18944 ;;		On exit  : 0/0
 18945 ;;		Unchanged: 0/0
 18946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18947 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18948 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18950 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18951 ;;Total ram usage:       17 bytes
 18952 ;; Hardware stack levels used:    1
 18953 ;; Hardware stack levels required when called:   10
 18954 ;; This function calls:
 18955 ;;		_Rtcc_GetRtccValue
 18956 ;; This function is called by:
 18957 ;;		_Rtcm_MainTask
 18958 ;; This function uses a non-reentrant model
 18959 ;;
 18960                           
 18961                           	psect	text90
 18962  00373A                     __ptext90:
 18963                           	opt stack 0
 18964  00373A                     _Rtcm_GetRtccDate:
 18965                           	opt stack 17
 18966                           
 18967                           ;rtcm.c: 204: RtccDateType LocalDate;
 18968                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 18969                           
 18970                           ; BSR set to: 15
 18971                           ;incstack = 0
 18972  00373A  0E00               	movlw	0
 18973  00373C  ECA6  F018         	call	_Rtcc_GetRtccValue
 18974  003740  0100               	movlb	0	; () banked
 18975  003742  6F81               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 18976  003744  0ED0               	movlw	208
 18977  003746  2581               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 18978  003748  6F82               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 18979  00374A  6B83               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 18980  00374C  0E07               	movlw	7
 18981  00374E  2383               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 18982                           
 18983                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 18984  003750  0E01               	movlw	1
 18985  003752  ECA6  F018         	call	_Rtcc_GetRtccValue
 18986  003756  0100               	movlb	0	; () banked
 18987  003758  6F84               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 18988                           
 18989                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 18990  00375A  0E02               	movlw	2
 18991  00375C  ECA6  F018         	call	_Rtcc_GetRtccValue
 18992  003760  0100               	movlb	0	; () banked
 18993  003762  6F85               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 18994                           
 18995                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 18996  003764  0E03               	movlw	3
 18997  003766  ECA6  F018         	call	_Rtcc_GetRtccValue
 18998  00376A  0100               	movlb	0	; () banked
 18999  00376C  6F86               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19000                           
 19001                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19002  00376E  0E04               	movlw	4
 19003  003770  ECA6  F018         	call	_Rtcc_GetRtccValue
 19004  003774  0100               	movlb	0	; () banked
 19005  003776  6F87               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19006                           
 19007                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19008  003778  0E05               	movlw	5
 19009  00377A  ECA6  F018         	call	_Rtcc_GetRtccValue
 19010  00377E  0100               	movlb	0	; () banked
 19011  003780  6F88               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19012                           
 19013                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19014  003782  0E06               	movlw	6
 19015  003784  ECA6  F018         	call	_Rtcc_GetRtccValue
 19016  003788  0100               	movlb	0	; () banked
 19017  00378A  6F89               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19018                           
 19019                           ; BSR set to: 0
 19020                           ;rtcm.c: 216: return LocalDate;
 19021  00378C  EE20  F082         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19022  003790  EE00  F079         	lfsr	0,?_Rtcm_GetRtccDate
 19023  003794  0E07               	movlw	7
 19024  003796                     u6951:
 19025  003796  CFDB FFEB          	movff	plusw2,plusw0
 19026  00379A  06E8               	decf	wreg,f,c
 19027  00379C  E2FC               	bc	u6951
 19028  00379E  0012               	return	
 19029  0037A0                     __end_of_Rtcm_GetRtccDate:
 19030                           	opt stack 0
 19031                           tosu	equ	0xFFF
 19032                           tosh	equ	0xFFE
 19033                           tosl	equ	0xFFD
 19034                           pclath	equ	0xFFA
 19035                           tblptru	equ	0xFF8
 19036                           tblptrh	equ	0xFF7
 19037                           tblptrl	equ	0xFF6
 19038                           tablat	equ	0xFF5
 19039                           prodh	equ	0xFF4
 19040                           prodl	equ	0xFF3
 19041                           intcon	equ	0xFF2
 19042                           intcon2	equ	0xFF1
 19043                           intcon3	equ	0xFF0
 19044                           indf0	equ	0xFEF
 19045                           postinc0	equ	0xFEE
 19046                           plusw0	equ	0xFEB
 19047                           fsr0h	equ	0xFEA
 19048                           fsr0l	equ	0xFE9
 19049                           wreg	equ	0xFE8
 19050                           indf1	equ	0xFE7
 19051                           postinc1	equ	0xFE6
 19052                           postdec1	equ	0xFE5
 19053                           fsr1h	equ	0xFE2
 19054                           fsr1l	equ	0xFE1
 19055                           indf2	equ	0xFDF
 19056                           postinc2	equ	0xFDE
 19057                           postdec2	equ	0xFDD
 19058                           plusw2	equ	0xFDB
 19059                           fsr2h	equ	0xFDA
 19060                           fsr2l	equ	0xFD9
 19061                           status	equ	0xFD8
 19062                           
 19063 ;; *************** function _Rtcc_GetRtccValue *****************
 19064 ;; Defined at:
 19065 ;;		line 205 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19066 ;; Parameters:    Size  Location     Type
 19067 ;;  RtccPtrVal      1    wreg     enum E7757
 19068 ;; Auto vars:     Size  Location     Type
 19069 ;;  RtccPtrVal      1   22[BANK0 ] enum E7757
 19070 ;;  RegValue        1   24[BANK0 ] unsigned char 
 19071 ;;  RetValue        1   23[BANK0 ] unsigned char 
 19072 ;; Return value:  Size  Location     Type
 19073 ;;                  1    wreg      unsigned char 
 19074 ;; Registers used:
 19075 ;;		wreg, status,2, status,0, prodl, prodh
 19076 ;; Tracked objects:
 19077 ;;		On entry : 0/0
 19078 ;;		On exit  : 0/0
 19079 ;;		Unchanged: 0/0
 19080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19082 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19083 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19084 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19085 ;;Total ram usage:        4 bytes
 19086 ;; Hardware stack levels used:    1
 19087 ;; Hardware stack levels required when called:    9
 19088 ;; This function calls:
 19089 ;;		Nothing
 19090 ;; This function is called by:
 19091 ;;		_Rtcm_GetRtccDate
 19092 ;; This function uses a non-reentrant model
 19093 ;;
 19094                           
 19095                           	psect	text91
 19096  00314C                     __ptext91:
 19097                           	opt stack 0
 19098  00314C                     _Rtcc_GetRtccValue:
 19099                           	opt stack 17
 19100                           
 19101                           ; BSR set to: 0
 19102                           ;incstack = 0
 19103                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19104  00314C  0100               	movlb	0	; () banked
 19105  00314E  6F76               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19106                           
 19107                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19108                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19109                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19110  003150  D02D               	goto	l344
 19111  003152                     l345:
 19112                           
 19113                           ; BSR set to: 0
 19114                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19115  003152  010F               	movlb	15	; () banked
 19116  003154  833F               	bsf	63,1,b	;volatile
 19117  003156                     
 19118                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19119  003156  813F               	bsf	63,0,b	;volatile
 19120  003158  D01C               	goto	L20
 19121  00315A                     l347:
 19122                           
 19123                           ; BSR set to: 0
 19124                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19125  00315A  010F               	movlb	15	; () banked
 19126  00315C  833F               	bsf	63,1,b	;volatile
 19127  00315E  D01E               	goto	L21
 19128  003160                     l348:
 19129                           
 19130                           ; BSR set to: 0
 19131                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19132  003160  010F               	movlb	15	; () banked
 19133  003162  833F               	bsf	63,1,b	;volatile
 19134  003164  D021               	goto	L24
 19135  003166                     l7378:
 19136                           
 19137                           ; BSR set to: 15
 19138                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19139  003166  C078  F075         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19140  00316A  0E0F               	movlw	15
 19141  00316C  0100               	movlb	0	; () banked
 19142  00316E  1775               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19143  003170  3978               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19144  003172  0B0F               	andlw	15
 19145  003174  0B0F               	andlw	15
 19146  003176  0D0A               	mullw	10
 19147  003178  50F3               	movf	prodl,w,c
 19148  00317A  2575               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19149  00317C  6F77               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19150                           
 19151                           ;rtcc_drv.c: 241: break;
 19152  00317E  D02D               	goto	l346
 19153  003180                     l349:
 19154                           
 19155                           ; BSR set to: 0
 19156                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19157  003180  010F               	movlb	15	; () banked
 19158  003182  933F               	bcf	63,1,b	;volatile
 19159                           
 19160                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19161  003184  813F               	bsf	63,0,b	;volatile
 19162                           
 19163                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19164  003186  CF99 F077          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19165                           
 19166                           ;rtcc_drv.c: 249: break;
 19167  00318A  D027               	goto	l346
 19168  00318C                     l350:
 19169                           
 19170                           ; BSR set to: 0
 19171                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19172  00318C  010F               	movlb	15	; () banked
 19173  00318E  933F               	bcf	63,1,b	;volatile
 19174  003190  D7E2               	goto	L22
 19175  003192                     L20:
 19176                           
 19177                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19178  003192  CF98 F078          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19179  003196  D7E7               	goto	l7378
 19180  003198                     l351:
 19181                           
 19182                           ; BSR set to: 0
 19183                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19184  003198  010F               	movlb	15	; () banked
 19185  00319A  933F               	bcf	63,1,b	;volatile
 19186  00319C                     L21:
 19187                           
 19188                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19189  00319C  913F               	bcf	63,0,b	;volatile
 19190                           
 19191                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19192  00319E  CF99 F078          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19193  0031A2  D7E1               	goto	l7378
 19194  0031A4                     l352:
 19195                           
 19196                           ; BSR set to: 0
 19197                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 19198  0031A4  010F               	movlb	15	; () banked
 19199  0031A6  933F               	bcf	63,1,b	;volatile
 19200  0031A8                     L24:
 19201                           
 19202                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 19203  0031A8  913F               	bcf	63,0,b	;volatile
 19204  0031AA  D7F3               	goto	L20
 19205  0031AC                     l344:
 19206                           
 19207                           ; BSR set to: 0
 19208  0031AC  0100               	movlb	0	; () banked
 19209  0031AE  5176               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 19210                           
 19211                           ; Switch size 1, requested type "space"
 19212                           ; Number of cases is 7, Range of values is 0 to 6
 19213                           ; switch strategies available:
 19214                           ; Name         Instructions Cycles
 19215                           ; simple_byte           22    12 (average)
 19216                           ;	Chosen strategy is simple_byte
 19217  0031B0  0A00               	xorlw	0	; case 0
 19218  0031B2  B4D8               	btfsc	status,2,c
 19219  0031B4  D7CE               	goto	l345
 19220  0031B6  0A01               	xorlw	1	; case 1
 19221  0031B8  B4D8               	btfsc	status,2,c
 19222  0031BA  D7CF               	goto	l347
 19223  0031BC  0A03               	xorlw	3	; case 2
 19224  0031BE  B4D8               	btfsc	status,2,c
 19225  0031C0  D7CF               	goto	l348
 19226  0031C2  0A01               	xorlw	1	; case 3
 19227  0031C4  B4D8               	btfsc	status,2,c
 19228  0031C6  D7DC               	goto	l349
 19229  0031C8  0A07               	xorlw	7	; case 4
 19230  0031CA  B4D8               	btfsc	status,2,c
 19231  0031CC  D7DF               	goto	l350
 19232  0031CE  0A01               	xorlw	1	; case 5
 19233  0031D0  B4D8               	btfsc	status,2,c
 19234  0031D2  D7E2               	goto	l351
 19235  0031D4  0A03               	xorlw	3	; case 6
 19236  0031D6  B4D8               	btfsc	status,2,c
 19237  0031D8  D7E5               	goto	l352
 19238  0031DA                     l346:
 19239                           
 19240                           ;rtcc_drv.c: 286: return RetValue;
 19241                           
 19242                           ; BSR set to: 0
 19243  0031DA  0100               	movlb	0	; () banked
 19244  0031DC  5177               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 19245  0031DE  0012               	return	
 19246  0031E0                     __end_of_Rtcc_GetRtccValue:
 19247                           	opt stack 0
 19248                           tosu	equ	0xFFF
 19249                           tosh	equ	0xFFE
 19250                           tosl	equ	0xFFD
 19251                           pclath	equ	0xFFA
 19252                           tblptru	equ	0xFF8
 19253                           tblptrh	equ	0xFF7
 19254                           tblptrl	equ	0xFF6
 19255                           tablat	equ	0xFF5
 19256                           prodh	equ	0xFF4
 19257                           prodl	equ	0xFF3
 19258                           intcon	equ	0xFF2
 19259                           intcon2	equ	0xFF1
 19260                           intcon3	equ	0xFF0
 19261                           indf0	equ	0xFEF
 19262                           postinc0	equ	0xFEE
 19263                           plusw0	equ	0xFEB
 19264                           fsr0h	equ	0xFEA
 19265                           fsr0l	equ	0xFE9
 19266                           wreg	equ	0xFE8
 19267                           indf1	equ	0xFE7
 19268                           postinc1	equ	0xFE6
 19269                           postdec1	equ	0xFE5
 19270                           fsr1h	equ	0xFE2
 19271                           fsr1l	equ	0xFE1
 19272                           indf2	equ	0xFDF
 19273                           postinc2	equ	0xFDE
 19274                           postdec2	equ	0xFDD
 19275                           plusw2	equ	0xFDB
 19276                           fsr2h	equ	0xFDA
 19277                           fsr2l	equ	0xFD9
 19278                           status	equ	0xFD8
 19279                           
 19280 ;; *************** function _Rtcc_SetRtcStatus *****************
 19281 ;; Defined at:
 19282 ;;		line 149 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19283 ;; Parameters:    Size  Location     Type
 19284 ;;  Status          1    wreg     unsigned char 
 19285 ;; Auto vars:     Size  Location     Type
 19286 ;;  Status          1   21[BANK0 ] unsigned char 
 19287 ;; Return value:  Size  Location     Type
 19288 ;;                  1    wreg      void 
 19289 ;; Registers used:
 19290 ;;		wreg
 19291 ;; Tracked objects:
 19292 ;;		On entry : 0/0
 19293 ;;		On exit  : 0/0
 19294 ;;		Unchanged: 0/0
 19295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19299 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19300 ;;Total ram usage:        1 bytes
 19301 ;; Hardware stack levels used:    1
 19302 ;; Hardware stack levels required when called:    9
 19303 ;; This function calls:
 19304 ;;		Nothing
 19305 ;; This function is called by:
 19306 ;;		_Rtcm_MainTask
 19307 ;; This function uses a non-reentrant model
 19308 ;;
 19309                           
 19310                           	psect	text92
 19311  004356                     __ptext92:
 19312                           	opt stack 0
 19313  004356                     _Rtcc_SetRtcStatus:
 19314                           	opt stack 18
 19315                           
 19316                           ; BSR set to: 0
 19317                           ;incstack = 0
 19318                           ;Rtcc_SetRtcStatus@Status stored from wreg
 19319  004356  0100               	movlb	0	; () banked
 19320  004358  6F75               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 19321                           
 19322                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 19323  00435A  0100               	movlb	0	; () banked
 19324  00435C  B175               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 19325  00435E  D003               	bra	u6445
 19326  004360  010F               	movlb	15	; () banked
 19327  004362  9F3F               	bcf	63,7,b	;volatile
 19328  004364  D002               	bra	u6446
 19329  004366                     u6445:
 19330  004366  010F               	movlb	15	; () banked
 19331  004368  8F3F               	bsf	63,7,b	;volatile
 19332  00436A                     u6446:
 19333                           
 19334                           ; BSR set to: 15
 19335  00436A  0012               	return		;funcret
 19336  00436C                     __end_of_Rtcc_SetRtcStatus:
 19337                           	opt stack 0
 19338                           tosu	equ	0xFFF
 19339                           tosh	equ	0xFFE
 19340                           tosl	equ	0xFFD
 19341                           pclath	equ	0xFFA
 19342                           tblptru	equ	0xFF8
 19343                           tblptrh	equ	0xFF7
 19344                           tblptrl	equ	0xFF6
 19345                           tablat	equ	0xFF5
 19346                           prodh	equ	0xFF4
 19347                           prodl	equ	0xFF3
 19348                           intcon	equ	0xFF2
 19349                           intcon2	equ	0xFF1
 19350                           intcon3	equ	0xFF0
 19351                           indf0	equ	0xFEF
 19352                           postinc0	equ	0xFEE
 19353                           plusw0	equ	0xFEB
 19354                           fsr0h	equ	0xFEA
 19355                           fsr0l	equ	0xFE9
 19356                           wreg	equ	0xFE8
 19357                           indf1	equ	0xFE7
 19358                           postinc1	equ	0xFE6
 19359                           postdec1	equ	0xFE5
 19360                           fsr1h	equ	0xFE2
 19361                           fsr1l	equ	0xFE1
 19362                           indf2	equ	0xFDF
 19363                           postinc2	equ	0xFDE
 19364                           postdec2	equ	0xFDD
 19365                           plusw2	equ	0xFDB
 19366                           fsr2h	equ	0xFDA
 19367                           fsr2l	equ	0xFD9
 19368                           status	equ	0xFD8
 19369                           
 19370 ;; *************** function _Rtcc_RtcConfig *****************
 19371 ;; Defined at:
 19372 ;;		line 106 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19373 ;; Parameters:    Size  Location     Type
 19374 ;;  RtcConfig       2   22[BANK0 ] PTR struct _RtccConfigTy
 19375 ;;		 -> RtcConfig(4), 
 19376 ;; Auto vars:     Size  Location     Type
 19377 ;;		None
 19378 ;; Return value:  Size  Location     Type
 19379 ;;                  1    wreg      void 
 19380 ;; Registers used:
 19381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19382 ;; Tracked objects:
 19383 ;;		On entry : 0/0
 19384 ;;		On exit  : 0/0
 19385 ;;		Unchanged: 0/0
 19386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19387 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19389 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19390 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19391 ;;Total ram usage:        3 bytes
 19392 ;; Hardware stack levels used:    1
 19393 ;; Hardware stack levels required when called:   10
 19394 ;; This function calls:
 19395 ;;		_RtccIrqInit
 19396 ;; This function is called by:
 19397 ;;		_Rtcm_MainTask
 19398 ;; This function uses a non-reentrant model
 19399 ;;
 19400                           
 19401                           	psect	text93
 19402  002DB6                     __ptext93:
 19403                           	opt stack 0
 19404  002DB6                     _Rtcc_RtcConfig:
 19405                           	opt stack 17
 19406                           
 19407                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 19408                           
 19409                           ; BSR set to: 15
 19410                           ;incstack = 0
 19411  002DB6  C076  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 19412  002DBA  C077  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 19413  002DBE  50DF               	movf	indf2,w,c
 19414  002DC0  0100               	movlb	0	; () banked
 19415  002DC2  6F78               	movwf	??_Rtcc_RtcConfig& (0+255),b
 19416  002DC4  4778               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 19417  002DC6  4778               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 19418  002DC8  010F               	movlb	15	; () banked
 19419  002DCA  513F               	movf	63,w,b	;volatile
 19420  002DCC  0100               	movlb	0	; () banked
 19421  002DCE  1978               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19422  002DD0  0BFB               	andlw	-5
 19423  002DD2  1978               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19424  002DD4  010F               	movlb	15	; () banked
 19425  002DD6  6F3F               	movwf	63,b	;volatile
 19426                           
 19427                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 19428  002DD8  0100               	movlb	0	; () banked
 19429  002DDA  EE20 F001          	lfsr	2,1
 19430  002DDE  5176               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 19431  002DE0  26D9               	addwf	fsr2l,f,c
 19432  002DE2  5177               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 19433  002DE4  22DA               	addwfc	fsr2h,f,c
 19434  002DE6  50DF               	movf	indf2,w,c
 19435  002DE8  6F78               	movwf	??_Rtcc_RtcConfig& (0+255),b
 19436  002DEA  0E01               	movlw	1
 19437  002DEC  1778               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 19438  002DEE  4778               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 19439  002DF0  010F               	movlb	15	; () banked
 19440  002DF2  513C               	movf	60,w,b	;volatile
 19441  002DF4  0100               	movlb	0	; () banked
 19442  002DF6  1978               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19443  002DF8  0BFD               	andlw	-3
 19444  002DFA  1978               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19445  002DFC  010F               	movlb	15	; () banked
 19446  002DFE  6F3C               	movwf	60,b	;volatile
 19447                           
 19448                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 19449  002E00  0100               	movlb	0	; () banked
 19450  002E02  EE20 F001          	lfsr	2,1
 19451  002E06  5176               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 19452  002E08  26D9               	addwf	fsr2l,f,c
 19453  002E0A  5177               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 19454  002E0C  22DA               	addwfc	fsr2h,f,c
 19455  002E0E  50DF               	movf	indf2,w,c
 19456  002E10  6F78               	movwf	??_Rtcc_RtcConfig& (0+255),b
 19457  002E12  90D8               	bcf	status,0,c
 19458  002E14  3378               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 19459  002E16  0E01               	movlw	1
 19460  002E18  1778               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 19461  002E1A  4778               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 19462  002E1C  4778               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 19463  002E1E  010F               	movlb	15	; () banked
 19464  002E20  513C               	movf	60,w,b	;volatile
 19465  002E22  0100               	movlb	0	; () banked
 19466  002E24  1978               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19467  002E26  0BFB               	andlw	-5
 19468  002E28  1978               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19469  002E2A  010F               	movlb	15	; () banked
 19470  002E2C  6F3C               	movwf	60,b	;volatile
 19471                           
 19472                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 19473  002E2E  0100               	movlb	0	; () banked
 19474  002E30  EE20 F002          	lfsr	2,2
 19475  002E34  5176               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 19476  002E36  26D9               	addwf	fsr2l,f,c
 19477  002E38  5177               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 19478  002E3A  22DA               	addwfc	fsr2h,f,c
 19479  002E3C  04DE               	decf	postinc2,w,c
 19480  002E3E  A4D8               	btfss	status,2,c
 19481  002E40  0012               	return	
 19482                           
 19483                           ; BSR set to: 0
 19484                           ;rtcc_drv.c: 115: {
 19485                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 19486  002E42  EE20 F003          	lfsr	2,3
 19487  002E46  5176               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 19488  002E48  26D9               	addwf	fsr2l,f,c
 19489  002E4A  5177               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 19490  002E4C  22DA               	addwfc	fsr2h,f,c
 19491  002E4E  50DF               	movf	indf2,w,c
 19492  002E50  ECB6  F021         	call	_RtccIrqInit
 19493  002E54  0012               	return	
 19494  002E56                     __end_of_Rtcc_RtcConfig:
 19495                           	opt stack 0
 19496                           tosu	equ	0xFFF
 19497                           tosh	equ	0xFFE
 19498                           tosl	equ	0xFFD
 19499                           pclath	equ	0xFFA
 19500                           tblptru	equ	0xFF8
 19501                           tblptrh	equ	0xFF7
 19502                           tblptrl	equ	0xFF6
 19503                           tablat	equ	0xFF5
 19504                           prodh	equ	0xFF4
 19505                           prodl	equ	0xFF3
 19506                           intcon	equ	0xFF2
 19507                           intcon2	equ	0xFF1
 19508                           intcon3	equ	0xFF0
 19509                           indf0	equ	0xFEF
 19510                           postinc0	equ	0xFEE
 19511                           plusw0	equ	0xFEB
 19512                           fsr0h	equ	0xFEA
 19513                           fsr0l	equ	0xFE9
 19514                           wreg	equ	0xFE8
 19515                           indf1	equ	0xFE7
 19516                           postinc1	equ	0xFE6
 19517                           postdec1	equ	0xFE5
 19518                           fsr1h	equ	0xFE2
 19519                           fsr1l	equ	0xFE1
 19520                           indf2	equ	0xFDF
 19521                           postinc2	equ	0xFDE
 19522                           postdec2	equ	0xFDD
 19523                           plusw2	equ	0xFDB
 19524                           fsr2h	equ	0xFDA
 19525                           fsr2l	equ	0xFD9
 19526                           status	equ	0xFD8
 19527                           
 19528 ;; *************** function _RtccIrqInit *****************
 19529 ;; Defined at:
 19530 ;;		line 84 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19531 ;; Parameters:    Size  Location     Type
 19532 ;;  Priority        1    wreg     enum E7716
 19533 ;; Auto vars:     Size  Location     Type
 19534 ;;  Priority        1   21[BANK0 ] enum E7716
 19535 ;; Return value:  Size  Location     Type
 19536 ;;                  1    wreg      void 
 19537 ;; Registers used:
 19538 ;;		wreg
 19539 ;; Tracked objects:
 19540 ;;		On entry : 0/0
 19541 ;;		On exit  : 0/0
 19542 ;;		Unchanged: 0/0
 19543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19547 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19548 ;;Total ram usage:        1 bytes
 19549 ;; Hardware stack levels used:    1
 19550 ;; Hardware stack levels required when called:    9
 19551 ;; This function calls:
 19552 ;;		Nothing
 19553 ;; This function is called by:
 19554 ;;		_Rtcc_RtcConfig
 19555 ;; This function uses a non-reentrant model
 19556 ;;
 19557                           
 19558                           	psect	text94
 19559  00436C                     __ptext94:
 19560                           	opt stack 0
 19561  00436C                     _RtccIrqInit:
 19562                           	opt stack 17
 19563                           
 19564                           ;incstack = 0
 19565                           ;RtccIrqInit@Priority stored from wreg
 19566  00436C  0100               	movlb	0	; () banked
 19567  00436E  6F75               	movwf	RtccIrqInit@Priority& (0+255),b
 19568                           
 19569                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 19570  004370  90A4               	bcf	4004,0,c	;volatile
 19571                           
 19572                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 19573  004372  0100               	movlb	0	; () banked
 19574  004374  B175               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 19575  004376  D002               	bra	u5775
 19576  004378  90A5               	bcf	4005,0,c	;volatile
 19577  00437A  D001               	bra	u5776
 19578  00437C                     u5775:
 19579  00437C  80A5               	bsf	4005,0,c	;volatile
 19580  00437E                     u5776:
 19581                           
 19582                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 19583  00437E  80A3               	bsf	4003,0,c	;volatile
 19584  004380  0012               	return		;funcret
 19585  004382                     __end_of_RtccIrqInit:
 19586                           	opt stack 0
 19587                           tosu	equ	0xFFF
 19588                           tosh	equ	0xFFE
 19589                           tosl	equ	0xFFD
 19590                           pclath	equ	0xFFA
 19591                           tblptru	equ	0xFF8
 19592                           tblptrh	equ	0xFF7
 19593                           tblptrl	equ	0xFF6
 19594                           tablat	equ	0xFF5
 19595                           prodh	equ	0xFF4
 19596                           prodl	equ	0xFF3
 19597                           intcon	equ	0xFF2
 19598                           intcon2	equ	0xFF1
 19599                           intcon3	equ	0xFF0
 19600                           indf0	equ	0xFEF
 19601                           postinc0	equ	0xFEE
 19602                           plusw0	equ	0xFEB
 19603                           fsr0h	equ	0xFEA
 19604                           fsr0l	equ	0xFE9
 19605                           wreg	equ	0xFE8
 19606                           indf1	equ	0xFE7
 19607                           postinc1	equ	0xFE6
 19608                           postdec1	equ	0xFE5
 19609                           fsr1h	equ	0xFE2
 19610                           fsr1l	equ	0xFE1
 19611                           indf2	equ	0xFDF
 19612                           postinc2	equ	0xFDE
 19613                           postdec2	equ	0xFDD
 19614                           plusw2	equ	0xFDB
 19615                           fsr2h	equ	0xFDA
 19616                           fsr2l	equ	0xFD9
 19617                           status	equ	0xFD8
 19618                           
 19619 ;; *************** function _Rtcc_AlarmConfig *****************
 19620 ;; Defined at:
 19621 ;;		line 129 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19622 ;; Parameters:    Size  Location     Type
 19623 ;;  AlarmConfig     2   21[BANK0 ] PTR struct _RtccAlarmCon
 19624 ;;		 -> AlCfg(4), 
 19625 ;; Auto vars:     Size  Location     Type
 19626 ;;		None
 19627 ;; Return value:  Size  Location     Type
 19628 ;;                  1    wreg      void 
 19629 ;; Registers used:
 19630 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19631 ;; Tracked objects:
 19632 ;;		On entry : 0/0
 19633 ;;		On exit  : 0/0
 19634 ;;		Unchanged: 0/0
 19635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19636 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19639 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19640 ;;Total ram usage:        3 bytes
 19641 ;; Hardware stack levels used:    1
 19642 ;; Hardware stack levels required when called:    9
 19643 ;; This function calls:
 19644 ;;		Nothing
 19645 ;; This function is called by:
 19646 ;;		_Rtcm_MainTask
 19647 ;; This function uses a non-reentrant model
 19648 ;;
 19649                           
 19650                           	psect	text95
 19651  003664                     __ptext95:
 19652                           	opt stack 0
 19653  003664                     _Rtcc_AlarmConfig:
 19654                           	opt stack 18
 19655                           
 19656                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 19657                           
 19658                           ;incstack = 0
 19659  003664  C075  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 19660  003668  C076  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 19661  00366C  50DF               	movf	indf2,w,c
 19662  00366E  0100               	movlb	0	; () banked
 19663  003670  6F77               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 19664  003672  3377               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 19665  003674  3377               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 19666  003676  5091               	movf	3985,w,c	;volatile
 19667  003678  1977               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 19668  00367A  0B7F               	andlw	-129
 19669  00367C  1977               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 19670  00367E  6E91               	movwf	3985,c	;volatile
 19671                           
 19672                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 19673  003680  EE20 F001          	lfsr	2,1
 19674  003684  5175               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 19675  003686  26D9               	addwf	fsr2l,f,c
 19676  003688  5176               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 19677  00368A  22DA               	addwfc	fsr2h,f,c
 19678  00368C  50DF               	movf	indf2,w,c
 19679  00368E  6F77               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 19680  003690  3B77               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 19681  003692  4777               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 19682  003694  4777               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 19683  003696  5091               	movf	3985,w,c	;volatile
 19684  003698  1977               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 19685  00369A  0BBF               	andlw	-65
 19686  00369C  1977               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 19687  00369E  6E91               	movwf	3985,c	;volatile
 19688                           
 19689                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 19690  0036A0  EE20 F002          	lfsr	2,2
 19691  0036A4  5175               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 19692  0036A6  26D9               	addwf	fsr2l,f,c
 19693  0036A8  5176               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 19694  0036AA  22DA               	addwfc	fsr2h,f,c
 19695  0036AC  50DF               	movf	indf2,w,c
 19696  0036AE  6F77               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 19697  0036B0  4777               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 19698  0036B2  4777               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 19699  0036B4  5091               	movf	3985,w,c	;volatile
 19700  0036B6  1977               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 19701  0036B8  0BC3               	andlw	-61
 19702  0036BA  1977               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 19703  0036BC  6E91               	movwf	3985,c	;volatile
 19704                           
 19705                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 19706  0036BE  EE20 F003          	lfsr	2,3
 19707  0036C2  5175               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 19708  0036C4  26D9               	addwf	fsr2l,f,c
 19709  0036C6  5176               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 19710  0036C8  22DA               	addwfc	fsr2h,f,c
 19711  0036CA  50DF               	movf	indf2,w,c
 19712  0036CC  6E90               	movwf	3984,c	;volatile
 19713                           
 19714                           ; BSR set to: 0
 19715  0036CE  0012               	return		;funcret
 19716  0036D0                     __end_of_Rtcc_AlarmConfig:
 19717                           	opt stack 0
 19718                           tosu	equ	0xFFF
 19719                           tosh	equ	0xFFE
 19720                           tosl	equ	0xFFD
 19721                           pclath	equ	0xFFA
 19722                           tblptru	equ	0xFF8
 19723                           tblptrh	equ	0xFF7
 19724                           tblptrl	equ	0xFF6
 19725                           tablat	equ	0xFF5
 19726                           prodh	equ	0xFF4
 19727                           prodl	equ	0xFF3
 19728                           intcon	equ	0xFF2
 19729                           intcon2	equ	0xFF1
 19730                           intcon3	equ	0xFF0
 19731                           indf0	equ	0xFEF
 19732                           postinc0	equ	0xFEE
 19733                           plusw0	equ	0xFEB
 19734                           fsr0h	equ	0xFEA
 19735                           fsr0l	equ	0xFE9
 19736                           wreg	equ	0xFE8
 19737                           indf1	equ	0xFE7
 19738                           postinc1	equ	0xFE6
 19739                           postdec1	equ	0xFE5
 19740                           fsr1h	equ	0xFE2
 19741                           fsr1l	equ	0xFE1
 19742                           indf2	equ	0xFDF
 19743                           postinc2	equ	0xFDE
 19744                           postdec2	equ	0xFDD
 19745                           plusw2	equ	0xFDB
 19746                           fsr2h	equ	0xFDA
 19747                           fsr2l	equ	0xFD9
 19748                           status	equ	0xFD8
 19749                           
 19750 ;; *************** function _Led_SetLedBlinkTime *****************
 19751 ;; Defined at:
 19752 ;;		line 371 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 19753 ;; Parameters:    Size  Location     Type
 19754 ;;  Led             1    wreg     unsigned char 
 19755 ;;  OnTimeMs        2   21[BANK0 ] unsigned short 
 19756 ;;  OffTimeMs       2   23[BANK0 ] unsigned short 
 19757 ;; Auto vars:     Size  Location     Type
 19758 ;;  Led             1   25[BANK0 ] unsigned char 
 19759 ;; Return value:  Size  Location     Type
 19760 ;;                  1    wreg      void 
 19761 ;; Registers used:
 19762 ;;		wreg, status,2, status,0
 19763 ;; Tracked objects:
 19764 ;;		On entry : 0/0
 19765 ;;		On exit  : 0/0
 19766 ;;		Unchanged: 0/0
 19767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19768 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19771 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19772 ;;Total ram usage:        5 bytes
 19773 ;; Hardware stack levels used:    1
 19774 ;; Hardware stack levels required when called:    9
 19775 ;; This function calls:
 19776 ;;		Nothing
 19777 ;; This function is called by:
 19778 ;;		_MyApp_Task
 19779 ;; This function uses a non-reentrant model
 19780 ;;
 19781                           
 19782                           	psect	text96
 19783  003A70                     __ptext96:
 19784                           	opt stack 0
 19785  003A70                     _Led_SetLedBlinkTime:
 19786                           	opt stack 18
 19787                           
 19788                           ; BSR set to: 0
 19789                           ;incstack = 0
 19790                           ;Led_SetLedBlinkTime@Led stored from wreg
 19791  003A70  0100               	movlb	0	; () banked
 19792  003A72  6F79               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 19793                           
 19794                           ;led.c: 374: switch (Led)
 19795  003A74  D01B               	goto	l1585
 19796  003A76                     l1586:
 19797                           
 19798                           ; BSR set to: 0
 19799                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 19800  003A76  C075  F382         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 19801  003A7A  C076  F383         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 19802                           
 19803                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 19804  003A7E  C077  F384         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 19805  003A82  C078  F385         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 19806                           
 19807                           ;led.c: 379: break;
 19808  003A86  0012               	return	
 19809  003A88                     l1588:
 19810                           
 19811                           ; BSR set to: 0
 19812                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 19813  003A88  C075  F2D9         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 19814  003A8C  C076  F2DA         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 19815                           
 19816                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 19817  003A90  C077  F2DB         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 19818  003A94  C078  F2DC         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 19819                           
 19820                           ;led.c: 384: break;
 19821  003A98  0012               	return	
 19822  003A9A                     l1589:
 19823                           
 19824                           ; BSR set to: 0
 19825                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 19826  003A9A  C075  F2D9         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 19827  003A9E  C076  F2DA         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 19828                           
 19829                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 19830  003AA2  C077  F2DB         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 19831  003AA6  C078  F2DC         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 19832                           
 19833                           ; BSR set to: 0
 19834                           ;led.c: 393: }
 19835                           
 19836                           ; BSR set to: 0
 19837                           ;led.c: 392: break;
 19838                           
 19839                           ;led.c: 391: default:
 19840                           
 19841                           ;led.c: 389: break;
 19842  003AAA  0012               	return	
 19843  003AAC                     l1585:
 19844                           
 19845                           ; BSR set to: 0
 19846  003AAC  0100               	movlb	0	; () banked
 19847  003AAE  5179               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 19848                           
 19849                           ; Switch size 1, requested type "space"
 19850                           ; Number of cases is 3, Range of values is 1 to 3
 19851                           ; switch strategies available:
 19852                           ; Name         Instructions Cycles
 19853                           ; simple_byte           10     6 (average)
 19854                           ;	Chosen strategy is simple_byte
 19855  003AB0  0A01               	xorlw	1	; case 1
 19856  003AB2  B4D8               	btfsc	status,2,c
 19857  003AB4  D7E0               	goto	l1586
 19858  003AB6  0A03               	xorlw	3	; case 2
 19859  003AB8  B4D8               	btfsc	status,2,c
 19860  003ABA  D7E6               	goto	l1588
 19861  003ABC  0A01               	xorlw	1	; case 3
 19862  003ABE  A4D8               	btfss	status,2,c
 19863  003AC0  0012               	return	
 19864  003AC2  D7EB               	goto	l1589
 19865  003AC4                     __end_of_Led_SetLedBlinkTime:
 19866                           	opt stack 0
 19867                           tosu	equ	0xFFF
 19868                           tosh	equ	0xFFE
 19869                           tosl	equ	0xFFD
 19870                           pclath	equ	0xFFA
 19871                           tblptru	equ	0xFF8
 19872                           tblptrh	equ	0xFF7
 19873                           tblptrl	equ	0xFF6
 19874                           tablat	equ	0xFF5
 19875                           prodh	equ	0xFF4
 19876                           prodl	equ	0xFF3
 19877                           intcon	equ	0xFF2
 19878                           intcon2	equ	0xFF1
 19879                           intcon3	equ	0xFF0
 19880                           indf0	equ	0xFEF
 19881                           postinc0	equ	0xFEE
 19882                           plusw0	equ	0xFEB
 19883                           fsr0h	equ	0xFEA
 19884                           fsr0l	equ	0xFE9
 19885                           wreg	equ	0xFE8
 19886                           indf1	equ	0xFE7
 19887                           postinc1	equ	0xFE6
 19888                           postdec1	equ	0xFE5
 19889                           fsr1h	equ	0xFE2
 19890                           fsr1l	equ	0xFE1
 19891                           indf2	equ	0xFDF
 19892                           postinc2	equ	0xFDE
 19893                           postdec2	equ	0xFDD
 19894                           plusw2	equ	0xFDB
 19895                           fsr2h	equ	0xFDA
 19896                           fsr2l	equ	0xFD9
 19897                           status	equ	0xFD8
 19898                           
 19899 ;; *************** function _LedStateMachine *****************
 19900 ;; Defined at:
 19901 ;;		line 235 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 19902 ;; Parameters:    Size  Location     Type
 19903 ;;  Led             1    wreg     unsigned char 
 19904 ;;  LedSts          2   33[BANK0 ] PTR enum E8811
 19905 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 19906 ;;  LedOut          2   35[BANK0 ] PTR unsigned char 
 19907 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 19908 ;;  LedBlink        2   37[BANK0 ] PTR struct _LedBlinkType
 19909 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 19910 ;;  LedPulse        2   39[BANK0 ] PTR struct _LedPulseType
 19911 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 19912 ;; Auto vars:     Size  Location     Type
 19913 ;;  Led             1   43[BANK0 ] unsigned char 
 19914 ;;  LedOutSts       1   42[BANK0 ] unsigned char 
 19915 ;; Return value:  Size  Location     Type
 19916 ;;                  1    wreg      unsigned char 
 19917 ;; Registers used:
 19918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19919 ;; Tracked objects:
 19920 ;;		On entry : 0/0
 19921 ;;		On exit  : 0/0
 19922 ;;		Unchanged: 0/0
 19923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19924 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19925 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19926 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19927 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19928 ;;Total ram usage:       11 bytes
 19929 ;; Hardware stack levels used:    1
 19930 ;; Hardware stack levels required when called:   11
 19931 ;; This function calls:
 19932 ;;		_LedBlinkStateMachine
 19933 ;;		_LedPulseStateMachine
 19934 ;;		_Led_SetLedStatus
 19935 ;; This function is called by:
 19936 ;;		_Led_MainTask
 19937 ;; This function uses a non-reentrant model
 19938 ;;
 19939                           
 19940                           	psect	text97
 19941  002D0E                     __ptext97:
 19942                           	opt stack 0
 19943  002D0E                     _LedStateMachine:
 19944                           	opt stack 16
 19945                           
 19946                           ; BSR set to: 0
 19947                           ;incstack = 0
 19948                           ;LedStateMachine@Led stored from wreg
 19949  002D0E  0100               	movlb	0	; () banked
 19950  002D10  6F8B               	movwf	LedStateMachine@Led& (0+255),b
 19951                           
 19952                           ;led.c: 238: UINT8 LedOutSts = 0u;
 19953  002D12  0E00               	movlw	0
 19954  002D14  0100               	movlb	0	; () banked
 19955  002D16  6F8A               	movwf	LedStateMachine@LedOutSts& (0+255),b
 19956                           
 19957                           ;led.c: 241: switch (*LedSts)
 19958  002D18  D037               	goto	l1555
 19959  002D1A                     
 19960                           ; BSR set to: 0
 19961                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 19962                           
 19963                           ; BSR set to: 0
 19964  002D1A  0E00               	movlw	0
 19965  002D1C  6F8A               	movwf	LedStateMachine@LedOutSts& (0+255),b
 19966                           
 19967                           ; BSR set to: 0
 19968                           ;led.c: 246: *LedOut = ((UINT8)(0));
 19969  002D1E  C083  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 19970  002D22  C084  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 19971  002D26  0E00               	movlw	0
 19972  002D28  D007               	goto	L25
 19973  002D2A                     
 19974                           ; BSR set to: 0
 19975                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 19976                           
 19977                           ; BSR set to: 0
 19978  002D2A  0E01               	movlw	1
 19979  002D2C  6F8A               	movwf	LedStateMachine@LedOutSts& (0+255),b
 19980                           
 19981                           ; BSR set to: 0
 19982                           ;led.c: 252: *LedOut = ((UINT8)(1));
 19983  002D2E  C083  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 19984  002D32  C084  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 19985  002D36  0E01               	movlw	1
 19986  002D38                     L25:
 19987  002D38  6EDF               	movwf	indf2,c
 19988                           
 19989                           ;led.c: 253: break;
 19990  002D3A  D03A               	goto	l1557
 19991  002D3C                     
 19992                           ; BSR set to: 0
 19993                           ;led.c: 257: if (*LedOut == 1)
 19994                           
 19995                           ; BSR set to: 0
 19996  002D3C  C083  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 19997  002D40  C084  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 19998  002D44  04DE               	decf	postinc2,w,c
 19999  002D46  A4D8               	btfss	status,2,c
 20000  002D48  D006               	goto	l1560
 20001                           
 20002                           ; BSR set to: 0
 20003                           ;led.c: 258: {
 20004                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 20005  002D4A  0E00               	movlw	0
 20006  002D4C  6F75               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20007  002D4E  518B               	movf	LedStateMachine@Led& (0+255),w,b
 20008  002D50  ECF0  F01F         	call	_Led_SetLedStatus
 20009                           
 20010                           ;led.c: 261: }
 20011  002D54  D02D               	goto	l1557
 20012  002D56                     l1560:
 20013                           
 20014                           ;led.c: 262: else
 20015                           ;led.c: 263: {
 20016                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 20017  002D56  0E01               	movlw	1
 20018  002D58  0100               	movlb	0	; () banked
 20019  002D5A  6F75               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20020  002D5C  518B               	movf	LedStateMachine@Led& (0+255),w,b
 20021  002D5E  ECF0  F01F         	call	_Led_SetLedStatus
 20022                           
 20023                           ;led.c: 266: }
 20024                           ;led.c: 267: break;
 20025  002D62  D026               	goto	l1557
 20026  002D64                     
 20027                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 20028  002D64  C085  F07C         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 20029  002D68  C086  F07D         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 20030  002D6C  ECCF  F00A         	call	_LedBlinkStateMachine	;wreg free
 20031  002D70  D008               	goto	L26
 20032  002D72                     
 20033                           ; BSR set to: 0
 20034                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 20035                           
 20036                           ; BSR set to: 0
 20037  002D72  C087  F07C         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 20038  002D76  C088  F07D         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 20039  002D7A  C08B  F07E         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 20040  002D7E  ECB7  F00E         	call	_LedPulseStateMachine	;wreg free
 20041  002D82                     L26:
 20042  002D82  0100               	movlb	0	; () banked
 20043  002D84  6F8A               	movwf	LedStateMachine@LedOutSts& (0+255),b
 20044                           
 20045                           ; BSR set to: 0
 20046                           ;led.c: 281: }
 20047                           
 20048                           ; BSR set to: 0
 20049                           ;led.c: 280: break;
 20050                           
 20051                           ;led.c: 279: default:
 20052                           
 20053                           ;led.c: 277: break;
 20054  002D86  D014               	goto	l1557
 20055  002D88                     l1555:
 20056                           
 20057                           ; BSR set to: 0
 20058                           
 20059                           ; BSR set to: 0
 20060  002D88  C081  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 20061  002D8C  C082  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 20062  002D90  50DF               	movf	indf2,w,c
 20063                           
 20064                           ; Switch size 1, requested type "space"
 20065                           ; Number of cases is 5, Range of values is 0 to 4
 20066                           ; switch strategies available:
 20067                           ; Name         Instructions Cycles
 20068                           ; simple_byte           16     9 (average)
 20069                           ;	Chosen strategy is simple_byte
 20070  002D92  0A00               	xorlw	0	; case 0
 20071  002D94  B4D8               	btfsc	status,2,c
 20072  002D96  D7C1               	goto	l1556
 20073  002D98  0A01               	xorlw	1	; case 1
 20074  002D9A  B4D8               	btfsc	status,2,c
 20075  002D9C  D7C6               	goto	l1558
 20076  002D9E  0A03               	xorlw	3	; case 2
 20077  002DA0  B4D8               	btfsc	status,2,c
 20078  002DA2  D7CC               	goto	l1559
 20079  002DA4  0A01               	xorlw	1	; case 3
 20080  002DA6  B4D8               	btfsc	status,2,c
 20081  002DA8  D7DD               	goto	l1562
 20082  002DAA  0A07               	xorlw	7	; case 4
 20083  002DAC  B4D8               	btfsc	status,2,c
 20084  002DAE  D7E1               	goto	l1563
 20085  002DB0                     l1557:
 20086                           
 20087                           ;led.c: 283: return LedOutSts;
 20088                           
 20089                           ; BSR set to: 0
 20090  002DB0  0100               	movlb	0	; () banked
 20091  002DB2  518A               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 20092  002DB4  0012               	return	
 20093  002DB6                     __end_of_LedStateMachine:
 20094                           	opt stack 0
 20095                           tosu	equ	0xFFF
 20096                           tosh	equ	0xFFE
 20097                           tosl	equ	0xFFD
 20098                           pclath	equ	0xFFA
 20099                           tblptru	equ	0xFF8
 20100                           tblptrh	equ	0xFF7
 20101                           tblptrl	equ	0xFF6
 20102                           tablat	equ	0xFF5
 20103                           prodh	equ	0xFF4
 20104                           prodl	equ	0xFF3
 20105                           intcon	equ	0xFF2
 20106                           intcon2	equ	0xFF1
 20107                           intcon3	equ	0xFF0
 20108                           indf0	equ	0xFEF
 20109                           postinc0	equ	0xFEE
 20110                           plusw0	equ	0xFEB
 20111                           fsr0h	equ	0xFEA
 20112                           fsr0l	equ	0xFE9
 20113                           wreg	equ	0xFE8
 20114                           indf1	equ	0xFE7
 20115                           postinc1	equ	0xFE6
 20116                           postdec1	equ	0xFE5
 20117                           fsr1h	equ	0xFE2
 20118                           fsr1l	equ	0xFE1
 20119                           indf2	equ	0xFDF
 20120                           postinc2	equ	0xFDE
 20121                           postdec2	equ	0xFDD
 20122                           plusw2	equ	0xFDB
 20123                           fsr2h	equ	0xFDA
 20124                           fsr2l	equ	0xFD9
 20125                           status	equ	0xFD8
 20126                           
 20127 ;; *************** function _LedPulseStateMachine *****************
 20128 ;; Defined at:
 20129 ;;		line 182 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 20130 ;; Parameters:    Size  Location     Type
 20131 ;;  LedPulse        2   28[BANK0 ] PTR struct _LedPulseType
 20132 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 20133 ;;  Led             1   30[BANK0 ] unsigned char 
 20134 ;; Auto vars:     Size  Location     Type
 20135 ;;		None
 20136 ;; Return value:  Size  Location     Type
 20137 ;;                  1    wreg      unsigned char 
 20138 ;; Registers used:
 20139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20140 ;; Tracked objects:
 20141 ;;		On entry : 0/0
 20142 ;;		On exit  : 0/0
 20143 ;;		Unchanged: 0/0
 20144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20145 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20147 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20148 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20149 ;;Total ram usage:        5 bytes
 20150 ;; Hardware stack levels used:    1
 20151 ;; Hardware stack levels required when called:   10
 20152 ;; This function calls:
 20153 ;;		_Led_SetLedStatus
 20154 ;;		___lwdiv
 20155 ;; This function is called by:
 20156 ;;		_LedStateMachine
 20157 ;; This function uses a non-reentrant model
 20158 ;;
 20159                           
 20160                           	psect	text98
 20161  001D6E                     __ptext98:
 20162                           	opt stack 0
 20163  001D6E                     _LedPulseStateMachine:
 20164                           	opt stack 16
 20165                           
 20166                           ;led.c: 185: switch (LedPulse->LedPulseState)
 20167                           
 20168                           ; BSR set to: 0
 20169                           ;incstack = 0
 20170  001D6E  D05C               	goto	l1545
 20171  001D70                     
 20172                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 20173  001D70  0100               	movlb	0	; () banked
 20174  001D72  EE20 F001          	lfsr	2,1
 20175  001D76  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 20176  001D78  26D9               	addwf	fsr2l,f,c
 20177  001D7A  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 20178  001D7C  22DA               	addwfc	fsr2h,f,c
 20179  001D7E  0E01               	movlw	1
 20180  001D80  6EDF               	movwf	indf2,c
 20181                           
 20182                           ; BSR set to: 0
 20183                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 20184  001D82  C07C  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 20185  001D86  C07D  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 20186  001D8A  0E01               	movlw	1
 20187  001D8C  D036               	goto	L27
 20188  001D8E                     
 20189                           ;led.c: 196: LedPulse->LedPulseCounter++;
 20190                           
 20191                           ; BSR set to: 0
 20192  001D8E  0100               	movlb	0	; () banked
 20193  001D90  EE20 F002          	lfsr	2,2
 20194  001D94  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 20195  001D96  26D9               	addwf	fsr2l,f,c
 20196  001D98  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 20197  001D9A  22DA               	addwfc	fsr2h,f,c
 20198  001D9C  2ADE               	incf	postinc2,f,c
 20199  001D9E  0E00               	movlw	0
 20200  001DA0  22DD               	addwfc	postdec2,f,c
 20201                           
 20202                           ; BSR set to: 0
 20203                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 20204  001DA2  EE20 F004          	lfsr	2,4
 20205  001DA6  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 20206  001DA8  26D9               	addwf	fsr2l,f,c
 20207  001DAA  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 20208  001DAC  22DA               	addwfc	fsr2h,f,c
 20209  001DAE  CFDE F075          	movff	postinc2,___lwdiv@dividend
 20210  001DB2  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
 20211  001DB6  0E00               	movlw	0
 20212  001DB8  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
 20213  001DBA  0E32               	movlw	50
 20214  001DBC  6F77               	movwf	___lwdiv@divisor& (0+255),b
 20215  001DBE  EC62  F01D         	call	___lwdiv	;wreg free
 20216  001DC2  0100               	movlb	0	; () banked
 20217  001DC4  EE20 F002          	lfsr	2,2
 20218  001DC8  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 20219  001DCA  26D9               	addwf	fsr2l,f,c
 20220  001DCC  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 20221  001DCE  22DA               	addwfc	fsr2h,f,c
 20222  001DD0  5175               	movf	?___lwdiv& (0+255),w,b
 20223  001DD2  5CDE               	subwf	postinc2,w,c
 20224  001DD4  5176               	movf	(?___lwdiv+1)& (0+255),w,b
 20225  001DD6  58DE               	subwfb	postinc2,w,c
 20226  001DD8  A0D8               	btfss	status,0,c
 20227  001DDA  D034               	goto	l1547
 20228                           
 20229                           ; BSR set to: 0
 20230                           ;led.c: 199: {
 20231                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 20232  001DDC  EE20 F002          	lfsr	2,2
 20233  001DE0  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 20234  001DE2  26D9               	addwf	fsr2l,f,c
 20235  001DE4  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 20236  001DE6  22DA               	addwfc	fsr2h,f,c
 20237  001DE8  0E00               	movlw	0
 20238  001DEA  6EDE               	movwf	postinc2,c
 20239  001DEC  0E00               	movlw	0
 20240  001DEE  6EDD               	movwf	postdec2,c
 20241                           
 20242                           ; BSR set to: 0
 20243                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 20244  001DF0  C07C  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 20245  001DF4  C07D  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 20246  001DF8  0E02               	movlw	2
 20247  001DFA                     L27:
 20248  001DFA  6EDF               	movwf	indf2,c
 20249                           
 20250                           ; BSR set to: 0
 20251                           ;led.c: 204: }
 20252                           ;led.c: 205: break;
 20253  001DFC  D023               	goto	l1547
 20254  001DFE                     
 20255                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 20256                           
 20257                           ; BSR set to: 0
 20258  001DFE  0100               	movlb	0	; () banked
 20259  001E00  EE20 F001          	lfsr	2,1
 20260  001E04  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 20261  001E06  26D9               	addwf	fsr2l,f,c
 20262  001E08  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 20263  001E0A  22DA               	addwfc	fsr2h,f,c
 20264  001E0C  0E00               	movlw	0
 20265  001E0E  6EDF               	movwf	indf2,c
 20266                           
 20267                           ; BSR set to: 0
 20268                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 20269  001E10  C07C  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 20270  001E14  C07D  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 20271  001E18  0E00               	movlw	0
 20272  001E1A  6EDF               	movwf	indf2,c
 20273                           
 20274                           ; BSR set to: 0
 20275                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 20276  001E1C  0E00               	movlw	0
 20277  001E1E  6F75               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20278  001E20  517E               	movf	LedPulseStateMachine@Led& (0+255),w,b
 20279  001E22  ECF0  F01F         	call	_Led_SetLedStatus
 20280                           
 20281                           ;led.c: 218: }
 20282                           
 20283                           ;led.c: 217: break;
 20284                           
 20285                           ;led.c: 216: default:
 20286                           
 20287                           ;led.c: 214: break;
 20288  001E26  D00E               	goto	l1547
 20289  001E28                     l1545:
 20290  001E28  C07C  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 20291  001E2C  C07D  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 20292  001E30  50DF               	movf	indf2,w,c
 20293                           
 20294                           ; Switch size 1, requested type "space"
 20295                           ; Number of cases is 3, Range of values is 0 to 2
 20296                           ; switch strategies available:
 20297                           ; Name         Instructions Cycles
 20298                           ; simple_byte           10     6 (average)
 20299                           ;	Chosen strategy is simple_byte
 20300  001E32  0A00               	xorlw	0	; case 0
 20301  001E34  B4D8               	btfsc	status,2,c
 20302  001E36  D79C               	goto	l1546
 20303  001E38  0A01               	xorlw	1	; case 1
 20304  001E3A  B4D8               	btfsc	status,2,c
 20305  001E3C  D7A8               	goto	l1548
 20306  001E3E  0A03               	xorlw	3	; case 2
 20307  001E40  B4D8               	btfsc	status,2,c
 20308  001E42  D7DD               	goto	l1550
 20309  001E44                     l1547:
 20310                           
 20311                           ;led.c: 221: return (LedPulse->LedOutState);
 20312  001E44  0100               	movlb	0	; () banked
 20313  001E46  EE20 F001          	lfsr	2,1
 20314  001E4A  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 20315  001E4C  26D9               	addwf	fsr2l,f,c
 20316  001E4E  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 20317  001E50  22DA               	addwfc	fsr2h,f,c
 20318  001E52  50DF               	movf	indf2,w,c
 20319  001E54  0012               	return	
 20320  001E56                     __end_of_LedPulseStateMachine:
 20321                           	opt stack 0
 20322                           tosu	equ	0xFFF
 20323                           tosh	equ	0xFFE
 20324                           tosl	equ	0xFFD
 20325                           pclath	equ	0xFFA
 20326                           tblptru	equ	0xFF8
 20327                           tblptrh	equ	0xFF7
 20328                           tblptrl	equ	0xFF6
 20329                           tablat	equ	0xFF5
 20330                           prodh	equ	0xFF4
 20331                           prodl	equ	0xFF3
 20332                           intcon	equ	0xFF2
 20333                           intcon2	equ	0xFF1
 20334                           intcon3	equ	0xFF0
 20335                           indf0	equ	0xFEF
 20336                           postinc0	equ	0xFEE
 20337                           plusw0	equ	0xFEB
 20338                           fsr0h	equ	0xFEA
 20339                           fsr0l	equ	0xFE9
 20340                           wreg	equ	0xFE8
 20341                           indf1	equ	0xFE7
 20342                           postinc1	equ	0xFE6
 20343                           postdec1	equ	0xFE5
 20344                           fsr1h	equ	0xFE2
 20345                           fsr1l	equ	0xFE1
 20346                           indf2	equ	0xFDF
 20347                           postinc2	equ	0xFDE
 20348                           postdec2	equ	0xFDD
 20349                           plusw2	equ	0xFDB
 20350                           fsr2h	equ	0xFDA
 20351                           fsr2l	equ	0xFD9
 20352                           status	equ	0xFD8
 20353                           
 20354 ;; *************** function _Led_SetLedStatus *****************
 20355 ;; Defined at:
 20356 ;;		line 338 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 20357 ;; Parameters:    Size  Location     Type
 20358 ;;  Led             1    wreg     unsigned char 
 20359 ;;  LedSts          1   21[BANK0 ] enum E8811
 20360 ;; Auto vars:     Size  Location     Type
 20361 ;;  Led             1   22[BANK0 ] unsigned char 
 20362 ;; Return value:  Size  Location     Type
 20363 ;;                  1    wreg      void 
 20364 ;; Registers used:
 20365 ;;		wreg, status,2, status,0
 20366 ;; Tracked objects:
 20367 ;;		On entry : 0/0
 20368 ;;		On exit  : 0/0
 20369 ;;		Unchanged: 0/0
 20370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20371 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20374 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20375 ;;Total ram usage:        2 bytes
 20376 ;; Hardware stack levels used:    1
 20377 ;; Hardware stack levels required when called:    9
 20378 ;; This function calls:
 20379 ;;		Nothing
 20380 ;; This function is called by:
 20381 ;;		_LedPulseStateMachine
 20382 ;;		_LedStateMachine
 20383 ;;		_MyApp_Task
 20384 ;; This function uses a non-reentrant model
 20385 ;;
 20386                           
 20387                           	psect	text99
 20388  003FE0                     __ptext99:
 20389                           	opt stack 0
 20390  003FE0                     _Led_SetLedStatus:
 20391                           	opt stack 18
 20392                           
 20393                           ; BSR set to: 0
 20394                           ;incstack = 0
 20395                           ;Led_SetLedStatus@Led stored from wreg
 20396  003FE0  0100               	movlb	0	; () banked
 20397  003FE2  6F76               	movwf	Led_SetLedStatus@Led& (0+255),b
 20398                           
 20399                           ;led.c: 341: switch (Led)
 20400  003FE4  D009               	goto	l1576
 20401  003FE6                     l1577:
 20402                           
 20403                           ; BSR set to: 0
 20404                           ;led.c: 344: Led1Sts = LedSts;
 20405  003FE6  C075  F024         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 20406                           
 20407                           ;led.c: 345: break;
 20408  003FEA  0012               	return	
 20409  003FEC                     l1579:
 20410                           
 20411                           ; BSR set to: 0
 20412                           ;led.c: 348: Led2Sts = LedSts;
 20413  003FEC  C075  F022         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 20414                           
 20415                           ;led.c: 349: break;
 20416  003FF0  0012               	return	
 20417  003FF2                     l1580:
 20418                           
 20419                           ; BSR set to: 0
 20420                           ;led.c: 352: Led3Sts = LedSts;
 20421  003FF2  C075  F020         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 20422                           
 20423                           ; BSR set to: 0
 20424                           ;led.c: 357: }
 20425                           
 20426                           ; BSR set to: 0
 20427                           ;led.c: 356: break;
 20428                           
 20429                           ;led.c: 355: default:
 20430                           
 20431                           ;led.c: 353: break;
 20432  003FF6  0012               	return	
 20433  003FF8                     l1576:
 20434                           
 20435                           ; BSR set to: 0
 20436  003FF8  0100               	movlb	0	; () banked
 20437  003FFA  5176               	movf	Led_SetLedStatus@Led& (0+255),w,b
 20438                           
 20439                           ; Switch size 1, requested type "space"
 20440                           ; Number of cases is 3, Range of values is 1 to 3
 20441                           ; switch strategies available:
 20442                           ; Name         Instructions Cycles
 20443                           ; simple_byte           10     6 (average)
 20444                           ;	Chosen strategy is simple_byte
 20445  003FFC  0A01               	xorlw	1	; case 1
 20446  003FFE  B4D8               	btfsc	status,2,c
 20447  004000  D7F2               	goto	l1577
 20448  004002  0A03               	xorlw	3	; case 2
 20449  004004  B4D8               	btfsc	status,2,c
 20450  004006  D7F2               	goto	l1579
 20451  004008  0A01               	xorlw	1	; case 3
 20452  00400A  A4D8               	btfss	status,2,c
 20453  00400C  0012               	return	
 20454  00400E  D7F1               	goto	l1580
 20455  004010                     __end_of_Led_SetLedStatus:
 20456                           	opt stack 0
 20457                           tosu	equ	0xFFF
 20458                           tosh	equ	0xFFE
 20459                           tosl	equ	0xFFD
 20460                           pclath	equ	0xFFA
 20461                           tblptru	equ	0xFF8
 20462                           tblptrh	equ	0xFF7
 20463                           tblptrl	equ	0xFF6
 20464                           tablat	equ	0xFF5
 20465                           prodh	equ	0xFF4
 20466                           prodl	equ	0xFF3
 20467                           intcon	equ	0xFF2
 20468                           intcon2	equ	0xFF1
 20469                           intcon3	equ	0xFF0
 20470                           indf0	equ	0xFEF
 20471                           postinc0	equ	0xFEE
 20472                           plusw0	equ	0xFEB
 20473                           fsr0h	equ	0xFEA
 20474                           fsr0l	equ	0xFE9
 20475                           wreg	equ	0xFE8
 20476                           indf1	equ	0xFE7
 20477                           postinc1	equ	0xFE6
 20478                           postdec1	equ	0xFE5
 20479                           fsr1h	equ	0xFE2
 20480                           fsr1l	equ	0xFE1
 20481                           indf2	equ	0xFDF
 20482                           postinc2	equ	0xFDE
 20483                           postdec2	equ	0xFDD
 20484                           plusw2	equ	0xFDB
 20485                           fsr2h	equ	0xFDA
 20486                           fsr2l	equ	0xFD9
 20487                           status	equ	0xFD8
 20488                           
 20489 ;; *************** function _LedBlinkStateMachine *****************
 20490 ;; Defined at:
 20491 ;;		line 125 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 20492 ;; Parameters:    Size  Location     Type
 20493 ;;  LedBlink        2   28[BANK0 ] PTR struct _LedBlinkType
 20494 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 20495 ;; Auto vars:     Size  Location     Type
 20496 ;;		None
 20497 ;; Return value:  Size  Location     Type
 20498 ;;                  1    wreg      unsigned char 
 20499 ;; Registers used:
 20500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20501 ;; Tracked objects:
 20502 ;;		On entry : 0/0
 20503 ;;		On exit  : 0/0
 20504 ;;		Unchanged: 0/0
 20505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20508 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20509 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20510 ;;Total ram usage:        4 bytes
 20511 ;; Hardware stack levels used:    1
 20512 ;; Hardware stack levels required when called:   10
 20513 ;; This function calls:
 20514 ;;		___lwdiv
 20515 ;; This function is called by:
 20516 ;;		_LedStateMachine
 20517 ;; This function uses a non-reentrant model
 20518 ;;
 20519                           
 20520                           	psect	text100
 20521  00159E                     __ptext100:
 20522                           	opt stack 0
 20523  00159E                     _LedBlinkStateMachine:
 20524                           	opt stack 16
 20525                           
 20526                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 20527                           
 20528                           ; BSR set to: 0
 20529                           ;incstack = 0
 20530  00159E  D08F               	goto	l1532
 20531  0015A0                     
 20532                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 20533  0015A0  0100               	movlb	0	; () banked
 20534  0015A2  EE20 F008          	lfsr	2,8
 20535  0015A6  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20536  0015A8  26D9               	addwf	fsr2l,f,c
 20537  0015AA  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20538  0015AC  22DA               	addwfc	fsr2h,f,c
 20539  0015AE  EE10 F001          	lfsr	1,1
 20540  0015B2  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20541  0015B4  26E1               	addwf	fsr1l,f,c
 20542  0015B6  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20543  0015B8  22E2               	addwfc	fsr1h,f,c
 20544  0015BA  CFDF FFE7          	movff	indf2,indf1
 20545                           
 20546                           ; BSR set to: 0
 20547                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 20548  0015BE  C07C  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 20549  0015C2  C07D  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 20550  0015C6  D040               	goto	L28
 20551  0015C8                     
 20552                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 20553                           
 20554                           ; BSR set to: 0
 20555  0015C8  0100               	movlb	0	; () banked
 20556  0015CA  EE20 F002          	lfsr	2,2
 20557  0015CE  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20558  0015D0  26D9               	addwf	fsr2l,f,c
 20559  0015D2  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20560  0015D4  22DA               	addwfc	fsr2h,f,c
 20561  0015D6  2ADE               	incf	postinc2,f,c
 20562  0015D8  0E00               	movlw	0
 20563  0015DA  22DD               	addwfc	postdec2,f,c
 20564                           
 20565                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 20566  0015DC  EE20 F001          	lfsr	2,1
 20567  0015E0  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20568  0015E2  26D9               	addwf	fsr2l,f,c
 20569  0015E4  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20570  0015E6  22DA               	addwfc	fsr2h,f,c
 20571  0015E8  50DF               	movf	indf2,w,c
 20572  0015EA  A4D8               	btfss	status,2,c
 20573  0015EC  D02F               	goto	l1536
 20574                           
 20575                           ; BSR set to: 0
 20576                           ;led.c: 142: {
 20577                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 20578  0015EE  EE20 F006          	lfsr	2,6
 20579  0015F2  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20580  0015F4  26D9               	addwf	fsr2l,f,c
 20581  0015F6  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20582  0015F8  22DA               	addwfc	fsr2h,f,c
 20583  0015FA  CFDE F075          	movff	postinc2,___lwdiv@dividend
 20584  0015FE  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
 20585  001602  0E00               	movlw	0
 20586  001604  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
 20587  001606  0E32               	movlw	50
 20588  001608  6F77               	movwf	___lwdiv@divisor& (0+255),b
 20589  00160A  EC62  F01D         	call	___lwdiv	;wreg free
 20590  00160E  0100               	movlb	0	; () banked
 20591  001610  EE20 F002          	lfsr	2,2
 20592  001614  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20593  001616  26D9               	addwf	fsr2l,f,c
 20594  001618  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20595  00161A  22DA               	addwfc	fsr2h,f,c
 20596  00161C  5175               	movf	?___lwdiv& (0+255),w,b
 20597  00161E  5CDE               	subwf	postinc2,w,c
 20598  001620  5176               	movf	(?___lwdiv+1)& (0+255),w,b
 20599  001622  58DE               	subwfb	postinc2,w,c
 20600  001624  A0D8               	btfss	status,0,c
 20601  001626  D056               	goto	l1534
 20602                           
 20603                           ; BSR set to: 0
 20604                           ;led.c: 145: {
 20605                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 20606  001628  EE20 F002          	lfsr	2,2
 20607  00162C  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20608  00162E  26D9               	addwf	fsr2l,f,c
 20609  001630  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20610  001632  22DA               	addwfc	fsr2h,f,c
 20611  001634  0E00               	movlw	0
 20612  001636  6EDE               	movwf	postinc2,c
 20613  001638  0E00               	movlw	0
 20614  00163A  6EDD               	movwf	postdec2,c
 20615                           
 20616                           ;led.c: 149: LedBlink->LedOutState = OnState;
 20617  00163C  EE20 F001          	lfsr	2,1
 20618  001640  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20619  001642  26D9               	addwf	fsr2l,f,c
 20620  001644  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20621  001646  22DA               	addwfc	fsr2h,f,c
 20622  001648                     L28:
 20623  001648  0E01               	movlw	1
 20624  00164A  D037               	goto	L29
 20625  00164C                     l1536:
 20626                           
 20627                           ; BSR set to: 0
 20628                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 20629                           
 20630                           ; BSR set to: 0
 20631  00164C  EE20 F001          	lfsr	2,1
 20632  001650  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20633  001652  26D9               	addwf	fsr2l,f,c
 20634  001654  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20635  001656  22DA               	addwfc	fsr2h,f,c
 20636  001658  04DE               	decf	postinc2,w,c
 20637  00165A  A4D8               	btfss	status,2,c
 20638  00165C  D03B               	goto	l1534
 20639                           
 20640                           ; BSR set to: 0
 20641                           ;led.c: 153: {
 20642                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 20643  00165E  EE20 F004          	lfsr	2,4
 20644  001662  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20645  001664  26D9               	addwf	fsr2l,f,c
 20646  001666  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20647  001668  22DA               	addwfc	fsr2h,f,c
 20648  00166A  CFDE F075          	movff	postinc2,___lwdiv@dividend
 20649  00166E  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
 20650  001672  0E00               	movlw	0
 20651  001674  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
 20652  001676  0E32               	movlw	50
 20653  001678  6F77               	movwf	___lwdiv@divisor& (0+255),b
 20654  00167A  EC62  F01D         	call	___lwdiv	;wreg free
 20655  00167E  0100               	movlb	0	; () banked
 20656  001680  EE20 F002          	lfsr	2,2
 20657  001684  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20658  001686  26D9               	addwf	fsr2l,f,c
 20659  001688  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20660  00168A  22DA               	addwfc	fsr2h,f,c
 20661  00168C  5175               	movf	?___lwdiv& (0+255),w,b
 20662  00168E  5CDE               	subwf	postinc2,w,c
 20663  001690  5176               	movf	(?___lwdiv+1)& (0+255),w,b
 20664  001692  58DE               	subwfb	postinc2,w,c
 20665  001694  A0D8               	btfss	status,0,c
 20666  001696  D01E               	goto	l1534
 20667                           
 20668                           ; BSR set to: 0
 20669                           ;led.c: 156: {
 20670                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 20671  001698  EE20 F002          	lfsr	2,2
 20672  00169C  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20673  00169E  26D9               	addwf	fsr2l,f,c
 20674  0016A0  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20675  0016A2  22DA               	addwfc	fsr2h,f,c
 20676  0016A4  0E00               	movlw	0
 20677  0016A6  6EDE               	movwf	postinc2,c
 20678  0016A8  0E00               	movlw	0
 20679  0016AA  6EDD               	movwf	postdec2,c
 20680                           
 20681                           ;led.c: 160: LedBlink->LedOutState = OffState;
 20682  0016AC  EE20 F001          	lfsr	2,1
 20683  0016B0  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20684  0016B2  26D9               	addwf	fsr2l,f,c
 20685  0016B4  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20686  0016B6  22DA               	addwfc	fsr2h,f,c
 20687  0016B8  0E00               	movlw	0
 20688  0016BA                     L29:
 20689  0016BA  6EDF               	movwf	indf2,c
 20690                           
 20691                           ; BSR set to: 0
 20692                           ;led.c: 167: }
 20693                           
 20694                           ; BSR set to: 0
 20695                           ;led.c: 166: break;
 20696                           
 20697                           ;led.c: 165: default:
 20698                           
 20699                           ; BSR set to: 0
 20700                           ;led.c: 161: }
 20701                           ;led.c: 162: }
 20702                           ;led.c: 163: break;
 20703                           
 20704                           ; BSR set to: 0
 20705                           
 20706                           ; BSR set to: 0
 20707  0016BC  D00B               	goto	l1534
 20708  0016BE                     l1532:
 20709                           
 20710                           ; BSR set to: 0
 20711  0016BE  C07C  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 20712  0016C2  C07D  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 20713  0016C6  50DF               	movf	indf2,w,c
 20714                           
 20715                           ; Switch size 1, requested type "space"
 20716                           ; Number of cases is 2, Range of values is 0 to 1
 20717                           ; switch strategies available:
 20718                           ; Name         Instructions Cycles
 20719                           ; simple_byte            7     4 (average)
 20720                           ;	Chosen strategy is simple_byte
 20721  0016C8  0A00               	xorlw	0	; case 0
 20722  0016CA  B4D8               	btfsc	status,2,c
 20723  0016CC  D769               	goto	l1533
 20724  0016CE  0A01               	xorlw	1	; case 1
 20725  0016D0  B4D8               	btfsc	status,2,c
 20726  0016D2  D77A               	goto	l1535
 20727  0016D4                     l1534:
 20728                           
 20729                           ;led.c: 170: return (LedBlink->LedOutState);
 20730  0016D4  0100               	movlb	0	; () banked
 20731  0016D6  EE20 F001          	lfsr	2,1
 20732  0016DA  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20733  0016DC  26D9               	addwf	fsr2l,f,c
 20734  0016DE  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20735  0016E0  22DA               	addwfc	fsr2h,f,c
 20736  0016E2  50DF               	movf	indf2,w,c
 20737  0016E4  0012               	return	
 20738  0016E6                     __end_of_LedBlinkStateMachine:
 20739                           	opt stack 0
 20740                           tosu	equ	0xFFF
 20741                           tosh	equ	0xFFE
 20742                           tosl	equ	0xFFD
 20743                           pclath	equ	0xFFA
 20744                           tblptru	equ	0xFF8
 20745                           tblptrh	equ	0xFF7
 20746                           tblptrl	equ	0xFF6
 20747                           tablat	equ	0xFF5
 20748                           prodh	equ	0xFF4
 20749                           prodl	equ	0xFF3
 20750                           intcon	equ	0xFF2
 20751                           intcon2	equ	0xFF1
 20752                           intcon3	equ	0xFF0
 20753                           indf0	equ	0xFEF
 20754                           postinc0	equ	0xFEE
 20755                           plusw0	equ	0xFEB
 20756                           fsr0h	equ	0xFEA
 20757                           fsr0l	equ	0xFE9
 20758                           wreg	equ	0xFE8
 20759                           indf1	equ	0xFE7
 20760                           postinc1	equ	0xFE6
 20761                           postdec1	equ	0xFE5
 20762                           fsr1h	equ	0xFE2
 20763                           fsr1l	equ	0xFE1
 20764                           indf2	equ	0xFDF
 20765                           postinc2	equ	0xFDE
 20766                           postdec2	equ	0xFDD
 20767                           plusw2	equ	0xFDB
 20768                           fsr2h	equ	0xFDA
 20769                           fsr2l	equ	0xFD9
 20770                           status	equ	0xFD8
 20771                           
 20772 ;; *************** function ___lwdiv *****************
 20773 ;; Defined at:
 20774 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 20775 ;; Parameters:    Size  Location     Type
 20776 ;;  dividend        2   21[BANK0 ] unsigned int 
 20777 ;;  divisor         2   23[BANK0 ] unsigned int 
 20778 ;; Auto vars:     Size  Location     Type
 20779 ;;  quotient        2   26[BANK0 ] unsigned int 
 20780 ;;  counter         1   25[BANK0 ] unsigned char 
 20781 ;; Return value:  Size  Location     Type
 20782 ;;                  2   21[BANK0 ] unsigned int 
 20783 ;; Registers used:
 20784 ;;		wreg, status,2, status,0
 20785 ;; Tracked objects:
 20786 ;;		On entry : 0/0
 20787 ;;		On exit  : 0/0
 20788 ;;		Unchanged: 0/0
 20789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20790 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20791 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20793 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20794 ;;Total ram usage:        7 bytes
 20795 ;; Hardware stack levels used:    1
 20796 ;; Hardware stack levels required when called:    9
 20797 ;; This function calls:
 20798 ;;		Nothing
 20799 ;; This function is called by:
 20800 ;;		_LedBlinkStateMachine
 20801 ;;		_LedPulseStateMachine
 20802 ;;		_utoa
 20803 ;; This function uses a non-reentrant model
 20804 ;;
 20805                           
 20806                           	psect	text101
 20807  003AC4                     __ptext101:
 20808                           	opt stack 0
 20809  003AC4                     ___lwdiv:
 20810                           	opt stack 16
 20811                           
 20812                           ; BSR set to: 0
 20813                           ;incstack = 0
 20814  003AC4  0E00               	movlw	0
 20815  003AC6  0100               	movlb	0	; () banked
 20816  003AC8  6F7B               	movwf	(___lwdiv@quotient+1)& (0+255),b
 20817  003ACA  0E00               	movlw	0
 20818  003ACC  6F7A               	movwf	___lwdiv@quotient& (0+255),b
 20819                           
 20820                           ; BSR set to: 0
 20821  003ACE  5177               	movf	___lwdiv@divisor& (0+255),w,b
 20822  003AD0  1178               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 20823  003AD2  B4D8               	btfsc	status,2,c
 20824  003AD4  D01C               	goto	l2400
 20825                           
 20826                           ; BSR set to: 0
 20827  003AD6  0E01               	movlw	1
 20828  003AD8  6F79               	movwf	___lwdiv@counter& (0+255),b
 20829  003ADA  D004               	goto	l2395
 20830  003ADC                     
 20831                           ; BSR set to: 0
 20832                           
 20833                           ; BSR set to: 0
 20834  003ADC  90D8               	bcf	status,0,c
 20835  003ADE  3777               	rlcf	___lwdiv@divisor& (0+255),f,b
 20836  003AE0  3778               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 20837  003AE2  2B79               	incf	___lwdiv@counter& (0+255),f,b
 20838  003AE4                     l2395:
 20839                           
 20840                           ; BSR set to: 0
 20841                           
 20842                           ; BSR set to: 0
 20843  003AE4  AF78               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 20844  003AE6  D7FA               	goto	l2396
 20845  003AE8                     u7980:
 20846                           
 20847                           ; BSR set to: 0
 20848                           
 20849                           ; BSR set to: 0
 20850                           
 20851                           ; BSR set to: 0
 20852  003AE8  90D8               	bcf	status,0,c
 20853  003AEA  377A               	rlcf	___lwdiv@quotient& (0+255),f,b
 20854  003AEC  377B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 20855                           
 20856                           ; BSR set to: 0
 20857  003AEE  5177               	movf	___lwdiv@divisor& (0+255),w,b
 20858  003AF0  5D75               	subwf	___lwdiv@dividend& (0+255),w,b
 20859  003AF2  5178               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20860  003AF4  5976               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 20861  003AF6  A0D8               	btfss	status,0,c
 20862  003AF8  D005               	goto	l2399
 20863                           
 20864                           ; BSR set to: 0
 20865  003AFA  5177               	movf	___lwdiv@divisor& (0+255),w,b
 20866  003AFC  5F75               	subwf	___lwdiv@dividend& (0+255),f,b
 20867  003AFE  5178               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20868  003B00  5B76               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 20869                           
 20870                           ; BSR set to: 0
 20871  003B02  817A               	bsf	___lwdiv@quotient& (0+255),0,b
 20872  003B04                     l2399:
 20873                           
 20874                           ; BSR set to: 0
 20875                           
 20876                           ; BSR set to: 0
 20877  003B04  90D8               	bcf	status,0,c
 20878  003B06  3378               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 20879  003B08  3377               	rrcf	___lwdiv@divisor& (0+255),f,b
 20880                           
 20881                           ; BSR set to: 0
 20882  003B0A  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
 20883  003B0C  D7ED               	goto	u7980
 20884  003B0E                     l2400:
 20885                           
 20886                           ; BSR set to: 0
 20887                           
 20888                           ; BSR set to: 0
 20889  003B0E  C07A  F075         	movff	___lwdiv@quotient,?___lwdiv
 20890  003B12  C07B  F076         	movff	___lwdiv@quotient+1,?___lwdiv+1
 20891                           
 20892                           ; BSR set to: 0
 20893  003B16  0012               	return		;funcret
 20894  003B18                     __end_of___lwdiv:
 20895                           	opt stack 0
 20896                           tosu	equ	0xFFF
 20897                           tosh	equ	0xFFE
 20898                           tosl	equ	0xFFD
 20899                           pclath	equ	0xFFA
 20900                           tblptru	equ	0xFF8
 20901                           tblptrh	equ	0xFF7
 20902                           tblptrl	equ	0xFF6
 20903                           tablat	equ	0xFF5
 20904                           prodh	equ	0xFF4
 20905                           prodl	equ	0xFF3
 20906                           intcon	equ	0xFF2
 20907                           intcon2	equ	0xFF1
 20908                           intcon3	equ	0xFF0
 20909                           indf0	equ	0xFEF
 20910                           postinc0	equ	0xFEE
 20911                           plusw0	equ	0xFEB
 20912                           fsr0h	equ	0xFEA
 20913                           fsr0l	equ	0xFE9
 20914                           wreg	equ	0xFE8
 20915                           indf1	equ	0xFE7
 20916                           postinc1	equ	0xFE6
 20917                           postdec1	equ	0xFE5
 20918                           fsr1h	equ	0xFE2
 20919                           fsr1l	equ	0xFE1
 20920                           indf2	equ	0xFDF
 20921                           postinc2	equ	0xFDE
 20922                           postdec2	equ	0xFDD
 20923                           plusw2	equ	0xFDB
 20924                           fsr2h	equ	0xFDA
 20925                           fsr2l	equ	0xFD9
 20926                           status	equ	0xFD8
 20927                           
 20928 ;; *************** function _OsAlrm_SetOsAlarm *****************
 20929 ;; Defined at:
 20930 ;;		line 77 in file "../../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 20931 ;; Parameters:    Size  Location     Type
 20932 ;;  OsAlarmId       2   27[BANK0 ] unsigned short 
 20933 ;;  OsAlarmTimeo    4   29[BANK0 ] unsigned long 
 20934 ;;  AlarmCallbac    2   33[BANK0 ] PTR FTN()void 
 20935 ;;		 -> I2cDummyTx(1), 
 20936 ;; Auto vars:     Size  Location     Type
 20937 ;;		None
 20938 ;; Return value:  Size  Location     Type
 20939 ;;                  1    wreg      void 
 20940 ;; Registers used:
 20941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20942 ;; Tracked objects:
 20943 ;;		On entry : 0/0
 20944 ;;		On exit  : 0/0
 20945 ;;		Unchanged: 0/0
 20946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20947 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20950 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20951 ;;Total ram usage:        8 bytes
 20952 ;; Hardware stack levels used:    1
 20953 ;; Hardware stack levels required when called:   10
 20954 ;; This function calls:
 20955 ;;		___wmul
 20956 ;; This function is called by:
 20957 ;;		_I2cSlv_MainTask
 20958 ;; This function uses a non-reentrant model
 20959 ;;
 20960                           
 20961                           	psect	text102
 20962  0025D4                     __ptext102:
 20963                           	opt stack 0
 20964  0025D4                     _OsAlrm_SetOsAlarm:
 20965                           	opt stack 17
 20966                           
 20967                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 20968                           
 20969                           ; BSR set to: 0
 20970                           ;incstack = 0
 20971  0025D4  C07B  F075         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 20972  0025D8  C07C  F076         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 20973  0025DC  0E00               	movlw	0
 20974  0025DE  0100               	movlb	0	; () banked
 20975  0025E0  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20976  0025E2  0E0B               	movlw	11
 20977  0025E4  6F77               	movwf	___wmul@multiplicand& (0+255),b
 20978  0025E6  EC76  F020         	call	___wmul	;wreg free
 20979  0025EA  0E00               	movlw	low _OsAlarms
 20980  0025EC  0100               	movlb	0	; () banked
 20981  0025EE  2575               	addwf	?___wmul& (0+255),w,b
 20982  0025F0  6ED9               	movwf	fsr2l,c
 20983  0025F2  0E05               	movlw	high _OsAlarms
 20984  0025F4  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 20985  0025F6  6EDA               	movwf	fsr2h,c
 20986  0025F8  0E01               	movlw	1
 20987  0025FA  6EDF               	movwf	indf2,c
 20988                           
 20989                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 20990  0025FC  C07B  F075         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 20991  002600  C07C  F076         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 20992  002604  0E00               	movlw	0
 20993  002606  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20994  002608  0E0B               	movlw	11
 20995  00260A  6F77               	movwf	___wmul@multiplicand& (0+255),b
 20996  00260C  EC76  F020         	call	___wmul	;wreg free
 20997  002610  0E01               	movlw	1
 20998  002612  0100               	movlb	0	; () banked
 20999  002614  2775               	addwf	?___wmul& (0+255),f,b
 21000  002616  0E00               	movlw	0
 21001  002618  2376               	addwfc	(?___wmul+1)& (0+255),f,b
 21002  00261A  0E00               	movlw	low _OsAlarms
 21003  00261C  2575               	addwf	?___wmul& (0+255),w,b
 21004  00261E  6ED9               	movwf	fsr2l,c
 21005  002620  0E05               	movlw	high _OsAlarms
 21006  002622  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 21007  002624  6EDA               	movwf	fsr2h,c
 21008  002626  6ADE               	clrf	postinc2,c
 21009  002628  6ADE               	clrf	postinc2,c
 21010  00262A  6ADE               	clrf	postinc2,c
 21011  00262C  6ADD               	clrf	postdec2,c
 21012                           
 21013                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 21014  00262E  C07B  F075         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 21015  002632  C07C  F076         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 21016  002636  0E00               	movlw	0
 21017  002638  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21018  00263A  0E0B               	movlw	11
 21019  00263C  6F77               	movwf	___wmul@multiplicand& (0+255),b
 21020  00263E  EC76  F020         	call	___wmul	;wreg free
 21021  002642  0E05               	movlw	5
 21022  002644  0100               	movlb	0	; () banked
 21023  002646  2775               	addwf	?___wmul& (0+255),f,b
 21024  002648  0E00               	movlw	0
 21025  00264A  2376               	addwfc	(?___wmul+1)& (0+255),f,b
 21026  00264C  0E00               	movlw	low _OsAlarms
 21027  00264E  2575               	addwf	?___wmul& (0+255),w,b
 21028  002650  6ED9               	movwf	fsr2l,c
 21029  002652  0E05               	movlw	high _OsAlarms
 21030  002654  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 21031  002656  6EDA               	movwf	fsr2h,c
 21032  002658  C07D  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 21033  00265C  C07E  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 21034  002660  C07F  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 21035  002664  C080  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 21036                           
 21037                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 21038  002668  C07B  F075         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 21039  00266C  C07C  F076         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 21040  002670  0E00               	movlw	0
 21041  002672  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21042  002674  0E0B               	movlw	11
 21043  002676  6F77               	movwf	___wmul@multiplicand& (0+255),b
 21044  002678  EC76  F020         	call	___wmul	;wreg free
 21045  00267C  0E09               	movlw	9
 21046  00267E  0100               	movlb	0	; () banked
 21047  002680  2775               	addwf	?___wmul& (0+255),f,b
 21048  002682  0E00               	movlw	0
 21049  002684  2376               	addwfc	(?___wmul+1)& (0+255),f,b
 21050  002686  0E00               	movlw	low _OsAlarms
 21051  002688  2575               	addwf	?___wmul& (0+255),w,b
 21052  00268A  6ED9               	movwf	fsr2l,c
 21053  00268C  0E05               	movlw	high _OsAlarms
 21054  00268E  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 21055  002690  6EDA               	movwf	fsr2h,c
 21056  002692  C081  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 21057  002696  C082  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 21058                           
 21059                           ; BSR set to: 0
 21060  00269A  0012               	return		;funcret
 21061  00269C                     __end_of_OsAlrm_SetOsAlarm:
 21062                           	opt stack 0
 21063                           tosu	equ	0xFFF
 21064                           tosh	equ	0xFFE
 21065                           tosl	equ	0xFFD
 21066                           pclath	equ	0xFFA
 21067                           tblptru	equ	0xFF8
 21068                           tblptrh	equ	0xFF7
 21069                           tblptrl	equ	0xFF6
 21070                           tablat	equ	0xFF5
 21071                           prodh	equ	0xFF4
 21072                           prodl	equ	0xFF3
 21073                           intcon	equ	0xFF2
 21074                           intcon2	equ	0xFF1
 21075                           intcon3	equ	0xFF0
 21076                           indf0	equ	0xFEF
 21077                           postinc0	equ	0xFEE
 21078                           plusw0	equ	0xFEB
 21079                           fsr0h	equ	0xFEA
 21080                           fsr0l	equ	0xFE9
 21081                           wreg	equ	0xFE8
 21082                           indf1	equ	0xFE7
 21083                           postinc1	equ	0xFE6
 21084                           postdec1	equ	0xFE5
 21085                           fsr1h	equ	0xFE2
 21086                           fsr1l	equ	0xFE1
 21087                           indf2	equ	0xFDF
 21088                           postinc2	equ	0xFDE
 21089                           postdec2	equ	0xFDD
 21090                           plusw2	equ	0xFDB
 21091                           fsr2h	equ	0xFDA
 21092                           fsr2l	equ	0xFD9
 21093                           status	equ	0xFD8
 21094                           
 21095 ;; *************** function ___wmul *****************
 21096 ;; Defined at:
 21097 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 21098 ;; Parameters:    Size  Location     Type
 21099 ;;  multiplier      2   21[BANK0 ] unsigned int 
 21100 ;;  multiplicand    2   23[BANK0 ] unsigned int 
 21101 ;; Auto vars:     Size  Location     Type
 21102 ;;  product         2   25[BANK0 ] unsigned int 
 21103 ;; Return value:  Size  Location     Type
 21104 ;;                  2   21[BANK0 ] unsigned int 
 21105 ;; Registers used:
 21106 ;;		wreg, status,2, status,0, prodl, prodh
 21107 ;; Tracked objects:
 21108 ;;		On entry : 0/0
 21109 ;;		On exit  : 0/0
 21110 ;;		Unchanged: 0/0
 21111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21112 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21113 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21115 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21116 ;;Total ram usage:        6 bytes
 21117 ;; Hardware stack levels used:    1
 21118 ;; Hardware stack levels required when called:    9
 21119 ;; This function calls:
 21120 ;;		Nothing
 21121 ;; This function is called by:
 21122 ;;		_OsAlrm_SetOsAlarm
 21123 ;;		_atoi
 21124 ;; This function uses a non-reentrant model
 21125 ;;
 21126                           
 21127                           	psect	text103
 21128  0040EC                     __ptext103:
 21129                           	opt stack 0
 21130  0040EC                     ___wmul:
 21131                           	opt stack 15
 21132                           
 21133                           ; BSR set to: 0
 21134                           ;incstack = 0
 21135  0040EC  0100               	movlb	0	; () banked
 21136  0040EE  5175               	movf	___wmul@multiplier& (0+255),w,b
 21137  0040F0  0377               	mulwf	___wmul@multiplicand& (0+255),b
 21138  0040F2  CFF3 F079          	movff	prodl,___wmul@product
 21139  0040F6  CFF4 F07A          	movff	prodh,___wmul@product+1
 21140  0040FA  5175               	movf	___wmul@multiplier& (0+255),w,b
 21141  0040FC  0378               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 21142  0040FE  50F3               	movf	prodl,w,c
 21143  004100  277A               	addwf	(___wmul@product+1)& (0+255),f,b
 21144  004102  5176               	movf	(___wmul@multiplier+1)& (0+255),w,b
 21145  004104  0377               	mulwf	___wmul@multiplicand& (0+255),b
 21146  004106  50F3               	movf	prodl,w,c
 21147  004108  277A               	addwf	(___wmul@product+1)& (0+255),f,b
 21148                           
 21149                           ; BSR set to: 0
 21150  00410A  C079  F075         	movff	___wmul@product,?___wmul
 21151  00410E  C07A  F076         	movff	___wmul@product+1,?___wmul+1
 21152  004112  0012               	return	
 21153  004114                     __end_of___wmul:
 21154                           	opt stack 0
 21155                           tosu	equ	0xFFF
 21156                           tosh	equ	0xFFE
 21157                           tosl	equ	0xFFD
 21158                           pclath	equ	0xFFA
 21159                           tblptru	equ	0xFF8
 21160                           tblptrh	equ	0xFF7
 21161                           tblptrl	equ	0xFF6
 21162                           tablat	equ	0xFF5
 21163                           prodh	equ	0xFF4
 21164                           prodl	equ	0xFF3
 21165                           intcon	equ	0xFF2
 21166                           intcon2	equ	0xFF1
 21167                           intcon3	equ	0xFF0
 21168                           indf0	equ	0xFEF
 21169                           postinc0	equ	0xFEE
 21170                           plusw0	equ	0xFEB
 21171                           fsr0h	equ	0xFEA
 21172                           fsr0l	equ	0xFE9
 21173                           wreg	equ	0xFE8
 21174                           indf1	equ	0xFE7
 21175                           postinc1	equ	0xFE6
 21176                           postdec1	equ	0xFE5
 21177                           fsr1h	equ	0xFE2
 21178                           fsr1l	equ	0xFE1
 21179                           indf2	equ	0xFDF
 21180                           postinc2	equ	0xFDE
 21181                           postdec2	equ	0xFDD
 21182                           plusw2	equ	0xFDB
 21183                           fsr2h	equ	0xFDA
 21184                           fsr2l	equ	0xFD9
 21185                           status	equ	0xFD8
 21186                           
 21187 ;; *************** function _I2c_InitI2cModule *****************
 21188 ;; Defined at:
 21189 ;;		line 228 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 21190 ;; Parameters:    Size  Location     Type
 21191 ;;  I2cConfig       2   46[BANK0 ] PTR struct _I2cConfig
 21192 ;;		 -> I2cConfig(10), 
 21193 ;; Auto vars:     Size  Location     Type
 21194 ;;		None
 21195 ;; Return value:  Size  Location     Type
 21196 ;;                  1    wreg      void 
 21197 ;; Registers used:
 21198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21199 ;; Tracked objects:
 21200 ;;		On entry : 0/0
 21201 ;;		On exit  : 0/0
 21202 ;;		Unchanged: 0/0
 21203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21204 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21206 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21207 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21208 ;;Total ram usage:        4 bytes
 21209 ;; Hardware stack levels used:    1
 21210 ;; Hardware stack levels required when called:   11
 21211 ;; This function calls:
 21212 ;;		_SetBaudRate
 21213 ;; This function is called by:
 21214 ;;		_I2cSlv_MainTask
 21215 ;; This function uses a non-reentrant model
 21216 ;;
 21217                           
 21218                           	psect	text104
 21219  003582                     __ptext104:
 21220                           	opt stack 0
 21221  003582                     _I2c_InitI2cModule:
 21222                           	opt stack 16
 21223                           
 21224                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;incstack = 0
 21228  003582  8295               	bsf	3989,1,c	;volatile
 21229                           
 21230                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 21231  003584  8095               	bsf	3989,0,c	;volatile
 21232                           
 21233                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 21234  003586  C08E  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 21235  00358A  C08F  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 21236  00358E  CFDE F082          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 21237  003592  CFDE F083          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 21238  003596  CFDE F084          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 21239  00359A  CFDE F085          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 21240  00359E  0100               	movlb	0	; () banked
 21241  0035A0  EE20 F004          	lfsr	2,4
 21242  0035A4  518E               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 21243  0035A6  26D9               	addwf	fsr2l,f,c
 21244  0035A8  518F               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 21245  0035AA  22DA               	addwfc	fsr2h,f,c
 21246  0035AC  CFDE F086          	movff	postinc2,SetBaudRate@McuClockHz
 21247  0035B0  CFDE F087          	movff	postinc2,SetBaudRate@McuClockHz+1
 21248  0035B4  CFDE F088          	movff	postinc2,SetBaudRate@McuClockHz+2
 21249  0035B8  CFDE F089          	movff	postinc2,SetBaudRate@McuClockHz+3
 21250  0035BC  EC8C  F01D         	call	_SetBaudRate	;wreg free
 21251                           
 21252                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 21253  0035C0  0100               	movlb	0	; () banked
 21254  0035C2  EE20 F008          	lfsr	2,8
 21255  0035C6  518E               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 21256  0035C8  26D9               	addwf	fsr2l,f,c
 21257  0035CA  518F               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 21258  0035CC  22DA               	addwfc	fsr2h,f,c
 21259  0035CE  50DF               	movf	indf2,w,c
 21260  0035D0  1272               	iorwf	3954,f,c	;volatile
 21261                           
 21262                           ; BSR set to: 0
 21263                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 21264  0035D2  EE20 F009          	lfsr	2,9
 21265  0035D6  518E               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 21266  0035D8  26D9               	addwf	fsr2l,f,c
 21267  0035DA  518F               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 21268  0035DC  22DA               	addwfc	fsr2h,f,c
 21269  0035DE  50DF               	movf	indf2,w,c
 21270  0035E0  6F90               	movwf	??_I2c_InitI2cModule& (0+255),b
 21271  0035E2  0E05               	movlw	5
 21272  0035E4  6F91               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 21273  0035E6                     u6415:
 21274  0035E6  90D8               	bcf	status,0,c
 21275  0035E8  3790               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 21276  0035EA  2F91               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 21277  0035EC  D7FC               	goto	u6415
 21278  0035EE  5190               	movf	??_I2c_InitI2cModule& (0+255),w,b
 21279  0035F0  1272               	iorwf	3954,f,c	;volatile
 21280                           
 21281                           ; BSR set to: 0
 21282  0035F2  0012               	return		;funcret
 21283  0035F4                     __end_of_I2c_InitI2cModule:
 21284                           	opt stack 0
 21285                           tosu	equ	0xFFF
 21286                           tosh	equ	0xFFE
 21287                           tosl	equ	0xFFD
 21288                           pclath	equ	0xFFA
 21289                           tblptru	equ	0xFF8
 21290                           tblptrh	equ	0xFF7
 21291                           tblptrl	equ	0xFF6
 21292                           tablat	equ	0xFF5
 21293                           prodh	equ	0xFF4
 21294                           prodl	equ	0xFF3
 21295                           intcon	equ	0xFF2
 21296                           intcon2	equ	0xFF1
 21297                           intcon3	equ	0xFF0
 21298                           indf0	equ	0xFEF
 21299                           postinc0	equ	0xFEE
 21300                           plusw0	equ	0xFEB
 21301                           fsr0h	equ	0xFEA
 21302                           fsr0l	equ	0xFE9
 21303                           wreg	equ	0xFE8
 21304                           indf1	equ	0xFE7
 21305                           postinc1	equ	0xFE6
 21306                           postdec1	equ	0xFE5
 21307                           fsr1h	equ	0xFE2
 21308                           fsr1l	equ	0xFE1
 21309                           indf2	equ	0xFDF
 21310                           postinc2	equ	0xFDE
 21311                           postdec2	equ	0xFDD
 21312                           plusw2	equ	0xFDB
 21313                           fsr2h	equ	0xFDA
 21314                           fsr2l	equ	0xFD9
 21315                           status	equ	0xFD8
 21316                           
 21317 ;; *************** function _SetBaudRate *****************
 21318 ;; Defined at:
 21319 ;;		line 78 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 21320 ;; Parameters:    Size  Location     Type
 21321 ;;  DesiredI2cBu    4   34[BANK0 ] unsigned long 
 21322 ;;  McuClockHz      4   38[BANK0 ] unsigned long 
 21323 ;; Auto vars:     Size  Location     Type
 21324 ;;		None
 21325 ;; Return value:  Size  Location     Type
 21326 ;;                  1    wreg      void 
 21327 ;; Registers used:
 21328 ;;		wreg, status,2, status,0, cstack
 21329 ;; Tracked objects:
 21330 ;;		On entry : 0/0
 21331 ;;		On exit  : 0/0
 21332 ;;		Unchanged: 0/0
 21333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21334 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21336 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21337 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21338 ;;Total ram usage:       12 bytes
 21339 ;; Hardware stack levels used:    1
 21340 ;; Hardware stack levels required when called:   10
 21341 ;; This function calls:
 21342 ;;		___lldiv
 21343 ;; This function is called by:
 21344 ;;		_I2c_InitI2cModule
 21345 ;; This function uses a non-reentrant model
 21346 ;;
 21347                           
 21348                           	psect	text105
 21349  003B18                     __ptext105:
 21350                           	opt stack 0
 21351  003B18                     _SetBaudRate:
 21352                           	opt stack 16
 21353                           
 21354                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 21355                           
 21356                           ; BSR set to: 0
 21357                           ;incstack = 0
 21358  003B18  C086  F075         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 21359  003B1C  C087  F076         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 21360  003B20  C088  F077         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 21361  003B24  C089  F078         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 21362  003B28  C082  F08A         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 21363  003B2C  C083  F08B         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 21364  003B30  C084  F08C         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 21365  003B34  C085  F08D         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 21366  003B38  0E02               	movlw	2
 21367  003B3A                     u5655:
 21368  003B3A  90D8               	bcf	status,0,c
 21369  003B3C  0100               	movlb	0	; () banked
 21370  003B3E  378A               	rlcf	??_SetBaudRate& (0+255),f,b
 21371  003B40  378B               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 21372  003B42  378C               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 21373  003B44  378D               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 21374  003B46  2EE8               	decfsz	wreg,f,c
 21375  003B48  D7F8               	goto	u5655
 21376  003B4A  C08A  F079         	movff	??_SetBaudRate,___lldiv@divisor
 21377  003B4E  C08B  F07A         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 21378  003B52  C08C  F07B         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 21379  003B56  C08D  F07C         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 21380  003B5A  EC05  F01A         	call	___lldiv	;wreg free
 21381  003B5E  0100               	movlb	0	; () banked
 21382  003B60  0575               	decf	?___lldiv& (0+255),w,b
 21383  003B62  6E74               	movwf	3956,c	;volatile
 21384                           
 21385                           ; BSR set to: 0
 21386  003B64  0012               	return		;funcret
 21387  003B66                     __end_of_SetBaudRate:
 21388                           	opt stack 0
 21389                           tosu	equ	0xFFF
 21390                           tosh	equ	0xFFE
 21391                           tosl	equ	0xFFD
 21392                           pclath	equ	0xFFA
 21393                           tblptru	equ	0xFF8
 21394                           tblptrh	equ	0xFF7
 21395                           tblptrl	equ	0xFF6
 21396                           tablat	equ	0xFF5
 21397                           prodh	equ	0xFF4
 21398                           prodl	equ	0xFF3
 21399                           intcon	equ	0xFF2
 21400                           intcon2	equ	0xFF1
 21401                           intcon3	equ	0xFF0
 21402                           indf0	equ	0xFEF
 21403                           postinc0	equ	0xFEE
 21404                           plusw0	equ	0xFEB
 21405                           fsr0h	equ	0xFEA
 21406                           fsr0l	equ	0xFE9
 21407                           wreg	equ	0xFE8
 21408                           indf1	equ	0xFE7
 21409                           postinc1	equ	0xFE6
 21410                           postdec1	equ	0xFE5
 21411                           fsr1h	equ	0xFE2
 21412                           fsr1l	equ	0xFE1
 21413                           indf2	equ	0xFDF
 21414                           postinc2	equ	0xFDE
 21415                           postdec2	equ	0xFDD
 21416                           plusw2	equ	0xFDB
 21417                           fsr2h	equ	0xFDA
 21418                           fsr2l	equ	0xFD9
 21419                           status	equ	0xFD8
 21420                           
 21421 ;; *************** function ___lldiv *****************
 21422 ;; Defined at:
 21423 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 21424 ;; Parameters:    Size  Location     Type
 21425 ;;  dividend        4   21[BANK0 ] unsigned long 
 21426 ;;  divisor         4   25[BANK0 ] unsigned long 
 21427 ;; Auto vars:     Size  Location     Type
 21428 ;;  quotient        4   29[BANK0 ] unsigned long 
 21429 ;;  counter         1   33[BANK0 ] unsigned char 
 21430 ;; Return value:  Size  Location     Type
 21431 ;;                  4   21[BANK0 ] unsigned long 
 21432 ;; Registers used:
 21433 ;;		wreg, status,2, status,0
 21434 ;; Tracked objects:
 21435 ;;		On entry : 0/0
 21436 ;;		On exit  : 0/0
 21437 ;;		Unchanged: 0/0
 21438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21439 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21440 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21442 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21443 ;;Total ram usage:       13 bytes
 21444 ;; Hardware stack levels used:    1
 21445 ;; Hardware stack levels required when called:    9
 21446 ;; This function calls:
 21447 ;;		Nothing
 21448 ;; This function is called by:
 21449 ;;		_SetBaudRate
 21450 ;;		_Tmr_TmrBPrSet
 21451 ;;		_SetUartBaudRate
 21452 ;; This function uses a non-reentrant model
 21453 ;;
 21454                           
 21455                           	psect	text106
 21456  00340A                     __ptext106:
 21457                           	opt stack 0
 21458  00340A                     ___lldiv:
 21459                           	opt stack 17
 21460                           
 21461                           ; BSR set to: 0
 21462                           ;incstack = 0
 21463  00340A  0E00               	movlw	0
 21464  00340C  0100               	movlb	0	; () banked
 21465  00340E  6F7D               	movwf	___lldiv@quotient& (0+255),b
 21466  003410  0E00               	movlw	0
 21467  003412  6F7E               	movwf	(___lldiv@quotient+1)& (0+255),b
 21468  003414  0E00               	movlw	0
 21469  003416  6F7F               	movwf	(___lldiv@quotient+2)& (0+255),b
 21470  003418  0E00               	movlw	0
 21471  00341A  6F80               	movwf	(___lldiv@quotient+3)& (0+255),b
 21472                           
 21473                           ; BSR set to: 0
 21474  00341C  5179               	movf	___lldiv@divisor& (0+255),w,b
 21475  00341E  117A               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 21476  003420  117B               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 21477  003422  117C               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 21478  003424  B4D8               	btfsc	status,2,c
 21479  003426  D02A               	goto	l2347
 21480                           
 21481                           ; BSR set to: 0
 21482  003428  0E01               	movlw	1
 21483  00342A  6F81               	movwf	___lldiv@counter& (0+255),b
 21484  00342C  D006               	goto	l2342
 21485  00342E                     
 21486                           ; BSR set to: 0
 21487                           
 21488                           ; BSR set to: 0
 21489  00342E  90D8               	bcf	status,0,c
 21490  003430  3779               	rlcf	___lldiv@divisor& (0+255),f,b
 21491  003432  377A               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 21492  003434  377B               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 21493  003436  377C               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 21494  003438  2B81               	incf	___lldiv@counter& (0+255),f,b
 21495  00343A                     l2342:
 21496                           
 21497                           ; BSR set to: 0
 21498                           
 21499                           ; BSR set to: 0
 21500  00343A  AF7C               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 21501  00343C  D7F8               	goto	l2343
 21502  00343E                     u5630:
 21503                           
 21504                           ; BSR set to: 0
 21505                           
 21506                           ; BSR set to: 0
 21507                           
 21508                           ; BSR set to: 0
 21509  00343E  90D8               	bcf	status,0,c
 21510  003440  377D               	rlcf	___lldiv@quotient& (0+255),f,b
 21511  003442  377E               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 21512  003444  377F               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 21513  003446  3780               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 21514                           
 21515                           ; BSR set to: 0
 21516  003448  5179               	movf	___lldiv@divisor& (0+255),w,b
 21517  00344A  5D75               	subwf	___lldiv@dividend& (0+255),w,b
 21518  00344C  517A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 21519  00344E  5976               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 21520  003450  517B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 21521  003452  5977               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 21522  003454  517C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 21523  003456  5978               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 21524  003458  A0D8               	btfss	status,0,c
 21525  00345A  D009               	goto	l2346
 21526                           
 21527                           ; BSR set to: 0
 21528  00345C  5179               	movf	___lldiv@divisor& (0+255),w,b
 21529  00345E  5F75               	subwf	___lldiv@dividend& (0+255),f,b
 21530  003460  517A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 21531  003462  5B76               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 21532  003464  517B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 21533  003466  5B77               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 21534  003468  517C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 21535  00346A  5B78               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 21536                           
 21537                           ; BSR set to: 0
 21538  00346C  817D               	bsf	___lldiv@quotient& (0+255),0,b
 21539  00346E                     l2346:
 21540                           
 21541                           ; BSR set to: 0
 21542                           
 21543                           ; BSR set to: 0
 21544  00346E  90D8               	bcf	status,0,c
 21545  003470  337C               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 21546  003472  337B               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 21547  003474  337A               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 21548  003476  3379               	rrcf	___lldiv@divisor& (0+255),f,b
 21549                           
 21550                           ; BSR set to: 0
 21551  003478  2F81               	decfsz	___lldiv@counter& (0+255),f,b
 21552  00347A  D7E1               	goto	u5630
 21553  00347C                     l2347:
 21554                           
 21555                           ; BSR set to: 0
 21556                           
 21557                           ; BSR set to: 0
 21558  00347C  C07D  F075         	movff	___lldiv@quotient,?___lldiv
 21559  003480  C07E  F076         	movff	___lldiv@quotient+1,?___lldiv+1
 21560  003484  C07F  F077         	movff	___lldiv@quotient+2,?___lldiv+2
 21561  003488  C080  F078         	movff	___lldiv@quotient+3,?___lldiv+3
 21562                           
 21563                           ; BSR set to: 0
 21564  00348C  0012               	return		;funcret
 21565  00348E                     __end_of___lldiv:
 21566                           	opt stack 0
 21567                           tosu	equ	0xFFF
 21568                           tosh	equ	0xFFE
 21569                           tosl	equ	0xFFD
 21570                           pclath	equ	0xFFA
 21571                           tblptru	equ	0xFF8
 21572                           tblptrh	equ	0xFF7
 21573                           tblptrl	equ	0xFF6
 21574                           tablat	equ	0xFF5
 21575                           prodh	equ	0xFF4
 21576                           prodl	equ	0xFF3
 21577                           intcon	equ	0xFF2
 21578                           intcon2	equ	0xFF1
 21579                           intcon3	equ	0xFF0
 21580                           indf0	equ	0xFEF
 21581                           postinc0	equ	0xFEE
 21582                           plusw0	equ	0xFEB
 21583                           fsr0h	equ	0xFEA
 21584                           fsr0l	equ	0xFE9
 21585                           wreg	equ	0xFE8
 21586                           indf1	equ	0xFE7
 21587                           postinc1	equ	0xFE6
 21588                           postdec1	equ	0xFE5
 21589                           fsr1h	equ	0xFE2
 21590                           fsr1l	equ	0xFE1
 21591                           indf2	equ	0xFDF
 21592                           postinc2	equ	0xFDE
 21593                           postdec2	equ	0xFDD
 21594                           plusw2	equ	0xFDB
 21595                           fsr2h	equ	0xFDA
 21596                           fsr2l	equ	0xFD9
 21597                           status	equ	0xFD8
 21598                           
 21599 ;; *************** function _I2cSetConfig *****************
 21600 ;; Defined at:
 21601 ;;		line 101 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 21602 ;; Parameters:    Size  Location     Type
 21603 ;;		None
 21604 ;; Auto vars:     Size  Location     Type
 21605 ;;		None
 21606 ;; Return value:  Size  Location     Type
 21607 ;;                  1    wreg      void 
 21608 ;; Registers used:
 21609 ;;		wreg, status,2
 21610 ;; Tracked objects:
 21611 ;;		On entry : 0/0
 21612 ;;		On exit  : 0/0
 21613 ;;		Unchanged: 0/0
 21614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21619 ;;Total ram usage:        0 bytes
 21620 ;; Hardware stack levels used:    1
 21621 ;; Hardware stack levels required when called:    9
 21622 ;; This function calls:
 21623 ;;		Nothing
 21624 ;; This function is called by:
 21625 ;;		_I2cSlv_MainTask
 21626 ;; This function uses a non-reentrant model
 21627 ;;
 21628                           
 21629                           	psect	text107
 21630  00406C                     __ptext107:
 21631                           	opt stack 0
 21632  00406C                     _I2cSetConfig:
 21633                           	opt stack 18
 21634                           
 21635                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 21636                           
 21637                           ; BSR set to: 0
 21638                           ;incstack = 0
 21639  00406C  0E80               	movlw	128
 21640  00406E  0101               	movlb	1	; () banked
 21641  004070  6F1A               	movwf	_I2cConfig& (0+255),b
 21642  004072  0E1A               	movlw	26
 21643  004074  6F1B               	movwf	(_I2cConfig+1)& (0+255),b
 21644  004076  0E06               	movlw	6
 21645  004078  6F1C               	movwf	(_I2cConfig+2)& (0+255),b
 21646  00407A  0E00               	movlw	0
 21647  00407C  6F1D               	movwf	(_I2cConfig+3)& (0+255),b
 21648                           
 21649                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 21650  00407E  0E00               	movlw	0
 21651  004080  6F1E               	movwf	(_I2cConfig+4)& (0+255),b
 21652  004082  0E6C               	movlw	108
 21653  004084  6F1F               	movwf	(_I2cConfig+5)& (0+255),b
 21654  004086  0EDC               	movlw	220
 21655  004088  6F20               	movwf	(_I2cConfig+6)& (0+255),b
 21656  00408A  0E02               	movlw	2
 21657  00408C  6F21               	movwf	(_I2cConfig+7)& (0+255),b
 21658                           
 21659                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 21660  00408E  0E08               	movlw	8
 21661  004090  6F22               	movwf	(_I2cConfig+8)& (0+255),b
 21662                           
 21663                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 21664  004092  0E01               	movlw	1
 21665  004094  6F23               	movwf	(_I2cConfig+9)& (0+255),b
 21666                           
 21667                           ; BSR set to: 1
 21668  004096  0012               	return		;funcret
 21669  004098                     __end_of_I2cSetConfig:
 21670                           	opt stack 0
 21671                           tosu	equ	0xFFF
 21672                           tosh	equ	0xFFE
 21673                           tosl	equ	0xFFD
 21674                           pclath	equ	0xFFA
 21675                           tblptru	equ	0xFF8
 21676                           tblptrh	equ	0xFF7
 21677                           tblptrl	equ	0xFF6
 21678                           tablat	equ	0xFF5
 21679                           prodh	equ	0xFF4
 21680                           prodl	equ	0xFF3
 21681                           intcon	equ	0xFF2
 21682                           intcon2	equ	0xFF1
 21683                           intcon3	equ	0xFF0
 21684                           indf0	equ	0xFEF
 21685                           postinc0	equ	0xFEE
 21686                           plusw0	equ	0xFEB
 21687                           fsr0h	equ	0xFEA
 21688                           fsr0l	equ	0xFE9
 21689                           wreg	equ	0xFE8
 21690                           indf1	equ	0xFE7
 21691                           postinc1	equ	0xFE6
 21692                           postdec1	equ	0xFE5
 21693                           fsr1h	equ	0xFE2
 21694                           fsr1l	equ	0xFE1
 21695                           indf2	equ	0xFDF
 21696                           postinc2	equ	0xFDE
 21697                           postdec2	equ	0xFDD
 21698                           plusw2	equ	0xFDB
 21699                           fsr2h	equ	0xFDA
 21700                           fsr2l	equ	0xFD9
 21701                           status	equ	0xFD8
 21702                           
 21703 ;; *************** function _I2cSendMsgSm *****************
 21704 ;; Defined at:
 21705 ;;		line 117 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 21706 ;; Parameters:    Size  Location     Type
 21707 ;;		None
 21708 ;; Auto vars:     Size  Location     Type
 21709 ;;		None
 21710 ;; Return value:  Size  Location     Type
 21711 ;;                  1    wreg      void 
 21712 ;; Registers used:
 21713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21714 ;; Tracked objects:
 21715 ;;		On entry : 0/0
 21716 ;;		On exit  : 0/0
 21717 ;;		Unchanged: 0/0
 21718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21723 ;;Total ram usage:        0 bytes
 21724 ;; Hardware stack levels used:    1
 21725 ;; Hardware stack levels required when called:   11
 21726 ;; This function calls:
 21727 ;;		_I2c_ReadData
 21728 ;;		_I2c_WriteData
 21729 ;;		_ReceiveEvt
 21730 ;; This function is called by:
 21731 ;;		_I2cSlv_MainTask
 21732 ;; This function uses a non-reentrant model
 21733 ;;
 21734                           
 21735                           	psect	text108
 21736  0029A2                     __ptext108:
 21737                           	opt stack 0
 21738  0029A2                     _I2cSendMsgSm:
 21739                           	opt stack 16
 21740                           
 21741                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 21742                           ;i2c_slv.c: 122: switch(I2cComState)
 21743                           
 21744                           ; BSR set to: 1
 21745                           ;incstack = 0
 21746  0029A2  D048               	goto	l861
 21747  0029A4                     
 21748                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 21749  0029A4  0EE1               	movlw	low _I2cWriteDataEvt
 21750  0029A6  0100               	movlb	0	; () banked
 21751  0029A8  6F75               	movwf	ReceiveEvt@Event& (0+255),b
 21752  0029AA  0E00               	movlw	high _I2cWriteDataEvt
 21753  0029AC  6F76               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21754  0029AE  EC1F  F020         	call	_ReceiveEvt	;wreg free
 21755  0029B2  0900               	iorlw	0
 21756  0029B4  B4D8               	btfsc	status,2,c
 21757  0029B6  D006               	goto	l863
 21758                           
 21759                           ;i2c_slv.c: 127: {
 21760                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 21761  0029B8  0E01               	movlw	1
 21762  0029BA  0100               	movlb	0	; () banked
 21763  0029BC  6FD3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 21764                           
 21765                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 21766  0029BE  0E01               	movlw	1
 21767  0029C0  6FD4               	movwf	_I2cComSts& (0+255),b
 21768                           
 21769                           ;i2c_slv.c: 132: }
 21770  0029C2  0012               	return	
 21771  0029C4                     l863:
 21772                           
 21773                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 21774                           
 21775                           ; BSR set to: 0
 21776  0029C4  0EE0               	movlw	low _I2cReadDataEvt
 21777  0029C6  0100               	movlb	0	; () banked
 21778  0029C8  6F75               	movwf	ReceiveEvt@Event& (0+255),b
 21779  0029CA  0E00               	movlw	high _I2cReadDataEvt
 21780  0029CC  6F76               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21781  0029CE  EC1F  F020         	call	_ReceiveEvt	;wreg free
 21782  0029D2  0900               	iorlw	0
 21783  0029D4  B4D8               	btfsc	status,2,c
 21784  0029D6  D006               	goto	l865
 21785                           
 21786                           ;i2c_slv.c: 134: {
 21787                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 21788  0029D8  0E02               	movlw	2
 21789  0029DA  0100               	movlb	0	; () banked
 21790  0029DC  6FD3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 21791                           
 21792                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 21793  0029DE  0E02               	movlw	2
 21794  0029E0  6FD4               	movwf	_I2cComSts& (0+255),b
 21795                           
 21796                           ;i2c_slv.c: 139: }
 21797  0029E2  0012               	return	
 21798  0029E4                     l865:
 21799                           
 21800                           ;i2c_slv.c: 140: else
 21801                           ;i2c_slv.c: 141: {
 21802                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 21803                           
 21804                           ; BSR set to: 0
 21805  0029E4  0E00               	movlw	0
 21806  0029E6  0100               	movlb	0	; () banked
 21807  0029E8  6FD4               	movwf	_I2cComSts& (0+255),b
 21808                           
 21809                           ; BSR set to: 0
 21810                           ;i2c_slv.c: 144: }
 21811                           ;i2c_slv.c: 145: break;
 21812                           
 21813                           ; BSR set to: 0
 21814  0029EA  0012               	return	
 21815  0029EC                     
 21816                           ; BSR set to: 0
 21817                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 21818                           
 21819                           ; BSR set to: 0
 21820  0029EC  0E2B               	movlw	low _I2cTxPacket
 21821  0029EE  6F76               	movwf	I2c_WriteData@WritePacket& (0+255),b
 21822  0029F0  0E01               	movlw	high _I2cTxPacket
 21823  0029F2  6F77               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 21824  0029F4  EC0C  F008         	call	_I2c_WriteData	;wreg free
 21825  0029F8  0900               	iorlw	0
 21826  0029FA  B4D8               	btfsc	status,2,c
 21827  0029FC  0012               	return	
 21828                           
 21829                           ;i2c_slv.c: 150: {
 21830                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 21831  0029FE  0E03               	movlw	3
 21832  002A00  0100               	movlb	0	; () banked
 21833  002A02  6FD3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 21834                           
 21835                           ; BSR set to: 0
 21836                           ;i2c_slv.c: 153: }
 21837                           ;i2c_slv.c: 154: break;
 21838  002A04  0012               	return	
 21839  002A06                     
 21840                           ; BSR set to: 0
 21841                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 21842                           
 21843                           ; BSR set to: 0
 21844  002A06  0EF0               	movlw	low _I2cRxPacket
 21845  002A08  6F78               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 21846  002A0A  0E02               	movlw	high _I2cRxPacket
 21847  002A0C  6F79               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 21848  002A0E  ECC8  F008         	call	_I2c_ReadData	;wreg free
 21849  002A12  0900               	iorlw	0
 21850  002A14  B4D8               	btfsc	status,2,c
 21851  002A16  0012               	return	
 21852                           
 21853                           ;i2c_slv.c: 159: {
 21854                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 21855  002A18  0E04               	movlw	4
 21856  002A1A  0100               	movlb	0	; () banked
 21857  002A1C  6FD3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 21858                           
 21859                           ; BSR set to: 0
 21860                           ;i2c_slv.c: 162: }
 21861                           ;i2c_slv.c: 164: break;
 21862  002A1E  0012               	return	
 21863  002A20                     
 21864                           ; BSR set to: 0
 21865                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 21866                           
 21867                           ; BSR set to: 0
 21868  002A20  0E00               	movlw	0
 21869  002A22  6FD3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 21870                           
 21871                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 21872  002A24  0E00               	movlw	0
 21873  002A26  6FD4               	movwf	_I2cComSts& (0+255),b
 21874                           
 21875                           ;i2c_slv.c: 171: break;
 21876  002A28  0012               	return	
 21877  002A2A                     
 21878                           ; BSR set to: 0
 21879                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 21880                           
 21881                           ; BSR set to: 0
 21882  002A2A  0E00               	movlw	0
 21883  002A2C  6FD3               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 21884                           
 21885                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 21886  002A2E  0E00               	movlw	0
 21887  002A30  6FD4               	movwf	_I2cComSts& (0+255),b
 21888                           
 21889                           ; BSR set to: 0
 21890                           ;i2c_slv.c: 182: }
 21891                           
 21892                           ; BSR set to: 0
 21893                           ;i2c_slv.c: 181: break;
 21894                           
 21895                           ;i2c_slv.c: 180: default:
 21896                           
 21897                           ;i2c_slv.c: 178: break;
 21898  002A32  0012               	return	
 21899  002A34                     l861:
 21900                           
 21901                           ; BSR set to: 0
 21902  002A34  0100               	movlb	0	; () banked
 21903  002A36  51D3               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 21904                           
 21905                           ; Switch size 1, requested type "space"
 21906                           ; Number of cases is 5, Range of values is 0 to 4
 21907                           ; switch strategies available:
 21908                           ; Name         Instructions Cycles
 21909                           ; simple_byte           16     9 (average)
 21910                           ;	Chosen strategy is simple_byte
 21911  002A38  0A00               	xorlw	0	; case 0
 21912  002A3A  B4D8               	btfsc	status,2,c
 21913  002A3C  D7B3               	goto	l862
 21914  002A3E  0A01               	xorlw	1	; case 1
 21915  002A40  B4D8               	btfsc	status,2,c
 21916  002A42  D7D4               	goto	l868
 21917  002A44  0A03               	xorlw	3	; case 2
 21918  002A46  B4D8               	btfsc	status,2,c
 21919  002A48  D7DE               	goto	l870
 21920  002A4A  0A01               	xorlw	1	; case 3
 21921  002A4C  B4D8               	btfsc	status,2,c
 21922  002A4E  D7E8               	goto	l872
 21923  002A50  0A07               	xorlw	7	; case 4
 21924  002A52  A4D8               	btfss	status,2,c
 21925  002A54  0012               	return	
 21926  002A56  D7E9               	goto	l873
 21927  002A58                     __end_of_I2cSendMsgSm:
 21928                           	opt stack 0
 21929                           tosu	equ	0xFFF
 21930                           tosh	equ	0xFFE
 21931                           tosl	equ	0xFFD
 21932                           pclath	equ	0xFFA
 21933                           tblptru	equ	0xFF8
 21934                           tblptrh	equ	0xFF7
 21935                           tblptrl	equ	0xFF6
 21936                           tablat	equ	0xFF5
 21937                           prodh	equ	0xFF4
 21938                           prodl	equ	0xFF3
 21939                           intcon	equ	0xFF2
 21940                           intcon2	equ	0xFF1
 21941                           intcon3	equ	0xFF0
 21942                           indf0	equ	0xFEF
 21943                           postinc0	equ	0xFEE
 21944                           plusw0	equ	0xFEB
 21945                           fsr0h	equ	0xFEA
 21946                           fsr0l	equ	0xFE9
 21947                           wreg	equ	0xFE8
 21948                           indf1	equ	0xFE7
 21949                           postinc1	equ	0xFE6
 21950                           postdec1	equ	0xFE5
 21951                           fsr1h	equ	0xFE2
 21952                           fsr1l	equ	0xFE1
 21953                           indf2	equ	0xFDF
 21954                           postinc2	equ	0xFDE
 21955                           postdec2	equ	0xFDD
 21956                           plusw2	equ	0xFDB
 21957                           fsr2h	equ	0xFDA
 21958                           fsr2l	equ	0xFD9
 21959                           status	equ	0xFD8
 21960                           
 21961 ;; *************** function _ReceiveEvt *****************
 21962 ;; Defined at:
 21963 ;;		line 99 in file "../../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 21964 ;; Parameters:    Size  Location     Type
 21965 ;;  Event           2   21[BANK0 ] PTR struct EventStructur
 21966 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 21967 ;; Auto vars:     Size  Location     Type
 21968 ;;  EventStatus     1   24[BANK0 ] enum E7727
 21969 ;; Return value:  Size  Location     Type
 21970 ;;                  1    wreg      enum E7727
 21971 ;; Registers used:
 21972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21973 ;; Tracked objects:
 21974 ;;		On entry : 0/0
 21975 ;;		On exit  : 0/0
 21976 ;;		Unchanged: 0/0
 21977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21978 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21979 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21980 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21981 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21982 ;;Total ram usage:        4 bytes
 21983 ;; Hardware stack levels used:    1
 21984 ;; Hardware stack levels required when called:    9
 21985 ;; This function calls:
 21986 ;;		Nothing
 21987 ;; This function is called by:
 21988 ;;		_I2cSendMsgSm
 21989 ;;		_I2cSlv_I2cReadMsgSts
 21990 ;; This function uses a non-reentrant model
 21991 ;;
 21992                           
 21993                           	psect	text109
 21994  00403E                     __ptext109:
 21995                           	opt stack 0
 21996  00403E                     _ReceiveEvt:
 21997                           	opt stack 15
 21998                           
 21999                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 22000                           
 22001                           ;incstack = 0
 22002  00403E  0E00               	movlw	0
 22003  004040  0100               	movlb	0	; () banked
 22004  004042  6F78               	movwf	ReceiveEvt@EventStatus& (0+255),b
 22005                           
 22006                           ; BSR set to: 0
 22007                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 22008  004044  C075  FFD9         	movff	ReceiveEvt@Event,fsr2l
 22009  004048  C076  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 22010  00404C  0E02               	movlw	2
 22011  00404E  18DE               	xorwf	postinc2,w,c
 22012  004050  A4D8               	btfss	status,2,c
 22013  004052  D008               	goto	l723
 22014                           
 22015                           ; BSR set to: 0
 22016                           ;os_ser.c: 106: {
 22017                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 22018  004054  C075  FFD9         	movff	ReceiveEvt@Event,fsr2l
 22019  004058  C076  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 22020  00405C  0E01               	movlw	1
 22021  00405E  6EDF               	movwf	indf2,c
 22022                           
 22023                           ; BSR set to: 0
 22024                           ;os_ser.c: 110: EventStatus = EventReceived;
 22025  004060  0E01               	movlw	1
 22026  004062  D001               	goto	L30
 22027  004064                     l723:
 22028                           
 22029                           ; BSR set to: 0
 22030                           ;os_ser.c: 112: else
 22031                           ;os_ser.c: 113: {
 22032                           ;os_ser.c: 115: EventStatus = EventIdle;
 22033                           
 22034                           ; BSR set to: 0
 22035  004064  0E00               	movlw	0
 22036  004066                     L30:
 22037  004066  6F78               	movwf	ReceiveEvt@EventStatus& (0+255),b
 22038                           
 22039                           ; BSR set to: 0
 22040                           ;os_ser.c: 116: }
 22041                           ;os_ser.c: 119: return(EventStatus);
 22042  004068  5178               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 22043  00406A  0012               	return	
 22044  00406C                     __end_of_ReceiveEvt:
 22045                           	opt stack 0
 22046                           tosu	equ	0xFFF
 22047                           tosh	equ	0xFFE
 22048                           tosl	equ	0xFFD
 22049                           pclath	equ	0xFFA
 22050                           tblptru	equ	0xFF8
 22051                           tblptrh	equ	0xFF7
 22052                           tblptrl	equ	0xFF6
 22053                           tablat	equ	0xFF5
 22054                           prodh	equ	0xFF4
 22055                           prodl	equ	0xFF3
 22056                           intcon	equ	0xFF2
 22057                           intcon2	equ	0xFF1
 22058                           intcon3	equ	0xFF0
 22059                           indf0	equ	0xFEF
 22060                           postinc0	equ	0xFEE
 22061                           plusw0	equ	0xFEB
 22062                           fsr0h	equ	0xFEA
 22063                           fsr0l	equ	0xFE9
 22064                           wreg	equ	0xFE8
 22065                           indf1	equ	0xFE7
 22066                           postinc1	equ	0xFE6
 22067                           postdec1	equ	0xFE5
 22068                           fsr1h	equ	0xFE2
 22069                           fsr1l	equ	0xFE1
 22070                           indf2	equ	0xFDF
 22071                           postinc2	equ	0xFDE
 22072                           postdec2	equ	0xFDD
 22073                           plusw2	equ	0xFDB
 22074                           fsr2h	equ	0xFDA
 22075                           fsr2l	equ	0xFD9
 22076                           status	equ	0xFD8
 22077                           
 22078 ;; *************** function _I2c_WriteData *****************
 22079 ;; Defined at:
 22080 ;;		line 252 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 22081 ;; Parameters:    Size  Location     Type
 22082 ;;  WritePacket     2   22[BANK0 ] PTR struct _I2cWritePack
 22083 ;;		 -> I2cTxPacket(5), 
 22084 ;; Auto vars:     Size  Location     Type
 22085 ;;		None
 22086 ;; Return value:  Size  Location     Type
 22087 ;;                  1    wreg      enum E7740
 22088 ;; Registers used:
 22089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22090 ;; Tracked objects:
 22091 ;;		On entry : 0/0
 22092 ;;		On exit  : 0/0
 22093 ;;		Unchanged: 0/0
 22094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22097 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22098 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22099 ;;Total ram usage:        4 bytes
 22100 ;; Hardware stack levels used:    1
 22101 ;; Hardware stack levels required when called:   10
 22102 ;; This function calls:
 22103 ;;		_CheckAckStatus
 22104 ;;		_CheckTxStatus
 22105 ;;		_StartCondition
 22106 ;;		_StopCondition
 22107 ;;		_WriteByte
 22108 ;; This function is called by:
 22109 ;;		_I2cSendMsgSm
 22110 ;; This function uses a non-reentrant model
 22111 ;;
 22112                           
 22113                           	psect	text110
 22114  001018                     __ptext110:
 22115                           	opt stack 0
 22116  001018                     _I2c_WriteData:
 22117                           	opt stack 16
 22118                           
 22119                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 22120                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 22121                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 22122                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 22123                           ;i2c_drv.c: 260: switch (I2cWriteState)
 22124                           
 22125                           ; BSR set to: 0
 22126                           ;incstack = 0
 22127  001018  D098               	goto	l160
 22128  00101A                     
 22129                           ;i2c_drv.c: 264: StartCondition();
 22130  00101A  EC30  F022         	call	_StartCondition	;wreg free
 22131                           
 22132                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 22133  00101E  0E00               	movlw	0
 22134  001020  0100               	movlb	0	; () banked
 22135  001022  6FDA               	movwf	I2c_WriteData@WriteStatus& (0+255),b
 22136                           
 22137                           ; BSR set to: 0
 22138                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 22139  001024  0E01               	movlw	1
 22140  001026  D086               	goto	L37
 22141  001028                     
 22142                           ; BSR set to: 0
 22143                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 22144                           
 22145                           ; BSR set to: 0
 22146  001028  EE20 F001          	lfsr	2,1
 22147  00102C  5176               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 22148  00102E  26D9               	addwf	fsr2l,f,c
 22149  001030  5177               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 22150  001032  22DA               	addwfc	fsr2h,f,c
 22151  001034  50DF               	movf	indf2,w,c
 22152  001036  6F78               	movwf	??_I2c_WriteData& (0+255),b
 22153  001038  C076  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 22154  00103C  C077  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 22155  001040  50DF               	movf	indf2,w,c
 22156  001042  6F79               	movwf	(??_I2c_WriteData+1)& (0+255),b
 22157  001044  90D8               	bcf	status,0,c
 22158  001046  3579               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 22159  001048  1178               	iorwf	??_I2c_WriteData& (0+255),w,b
 22160  00104A  C076  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 22161  00104E  C077  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 22162  001052  6EDF               	movwf	indf2,c
 22163                           
 22164                           ; BSR set to: 0
 22165                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 22166  001054  C076  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 22167  001058  C077  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 22168  00105C  50DF               	movf	indf2,w,c
 22169  00105E  EC12  F022         	call	_WriteByte
 22170                           
 22171                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 22172  001062  0E02               	movlw	2
 22173  001064  0100               	movlb	0	; () banked
 22174  001066  6FDD               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 22175  001068                     
 22176                           ; BSR set to: 0
 22177                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 22178                           
 22179                           ; BSR set to: 0
 22180  001068  EC1C  F022         	call	_CheckTxStatus	;wreg free
 22181  00106C  0900               	iorlw	0
 22182  00106E  A4D8               	btfss	status,2,c
 22183  001070  D08C               	goto	l162
 22184                           
 22185                           ;i2c_drv.c: 282: {
 22186                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 22187  001072  0E03               	movlw	3
 22188  001074  D01A               	goto	L39
 22189  001076                     
 22190                           ; BSR set to: 0
 22191                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 22192                           
 22193                           ; BSR set to: 0
 22194  001076  EE20 F002          	lfsr	2,2
 22195  00107A  5176               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 22196  00107C  26D9               	addwf	fsr2l,f,c
 22197  00107E  5177               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 22198  001080  22DA               	addwfc	fsr2h,f,c
 22199  001082  CFDE F078          	movff	postinc2,??_I2c_WriteData
 22200  001086  CFDD F079          	movff	postdec2,??_I2c_WriteData+1
 22201  00108A  C078  FFD9         	movff	??_I2c_WriteData,fsr2l
 22202  00108E  C079  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 22203  001092  50DF               	movf	indf2,w,c
 22204  001094  EC12  F022         	call	_WriteByte
 22205                           
 22206                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 22207  001098  0E04               	movlw	4
 22208  00109A  0100               	movlb	0	; () banked
 22209  00109C  D04B               	goto	L37
 22210  00109E                     
 22211                           ; BSR set to: 0
 22212                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 22213                           
 22214                           ; BSR set to: 0
 22215  00109E  EC1C  F022         	call	_CheckTxStatus	;wreg free
 22216  0010A2  0900               	iorlw	0
 22217  0010A4  A4D8               	btfss	status,2,c
 22218  0010A6  D071               	goto	l162
 22219                           
 22220                           ;i2c_drv.c: 300: {
 22221                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 22222  0010A8  0E05               	movlw	5
 22223  0010AA                     L39:
 22224  0010AA  0100               	movlb	0	; () banked
 22225  0010AC  6FDC               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 22226                           
 22227                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 22228  0010AE  0E08               	movlw	8
 22229  0010B0  D041               	goto	L37
 22230  0010B2                     
 22231                           ; BSR set to: 0
 22232                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 22233                           
 22234                           ; BSR set to: 0
 22235  0010B2  EE20 F004          	lfsr	2,4
 22236  0010B6  5176               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 22237  0010B8  26D9               	addwf	fsr2l,f,c
 22238  0010BA  5177               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 22239  0010BC  22DA               	addwfc	fsr2h,f,c
 22240  0010BE  50DF               	movf	indf2,w,c
 22241  0010C0  B4D8               	btfsc	status,2,c
 22242  0010C2  D010               	goto	l170
 22243                           
 22244                           ; BSR set to: 0
 22245                           ;i2c_drv.c: 310: {
 22246                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 22247  0010C4  EE20 F004          	lfsr	2,4
 22248  0010C8  5176               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 22249  0010CA  26D9               	addwf	fsr2l,f,c
 22250  0010CC  5177               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 22251  0010CE  22DA               	addwfc	fsr2h,f,c
 22252  0010D0  06DF               	decf	indf2,f,c
 22253                           
 22254                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 22255  0010D2  EE20 F002          	lfsr	2,2
 22256  0010D6  5176               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 22257  0010D8  26D9               	addwf	fsr2l,f,c
 22258  0010DA  5177               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 22259  0010DC  22DA               	addwfc	fsr2h,f,c
 22260  0010DE  2ADE               	incf	postinc2,f,c
 22261  0010E0  0E00               	movlw	0
 22262  0010E2  22DD               	addwfc	postdec2,f,c
 22263  0010E4                     l170:
 22264                           
 22265                           ; BSR set to: 0
 22266                           ;i2c_drv.c: 315: }
 22267                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 22268  0010E4  EE20 F004          	lfsr	2,4
 22269  0010E8  5176               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 22270  0010EA  26D9               	addwf	fsr2l,f,c
 22271  0010EC  5177               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 22272  0010EE  22DA               	addwfc	fsr2h,f,c
 22273  0010F0  50DF               	movf	indf2,w,c
 22274  0010F2  A4D8               	btfss	status,2,c
 22275  0010F4  D002               	goto	l171
 22276                           
 22277                           ; BSR set to: 0
 22278                           ;i2c_drv.c: 319: {
 22279                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 22280  0010F6  0E06               	movlw	6
 22281  0010F8  D01D               	goto	L37
 22282  0010FA                     l171:
 22283                           
 22284                           ; BSR set to: 0
 22285                           ;i2c_drv.c: 323: else
 22286                           ;i2c_drv.c: 324: {
 22287                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 22288                           
 22289                           ; BSR set to: 0
 22290  0010FA  0E03               	movlw	3
 22291  0010FC  D01B               	goto	L37
 22292  0010FE                     
 22293                           ; BSR set to: 0
 22294                           ;i2c_drv.c: 332: StopCondition();
 22295                           
 22296                           ; BSR set to: 0
 22297  0010FE  EC2E  F022         	call	_StopCondition	;wreg free
 22298                           
 22299                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 22300  001102  0E07               	movlw	7
 22301  001104  D7CA               	goto	L40
 22302  001106                     
 22303                           ; BSR set to: 0
 22304                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 22305                           
 22306                           ; BSR set to: 0
 22307  001106  0E00               	movlw	0
 22308  001108  6FDD               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 22309                           
 22310                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 22311  00110A  0E00               	movlw	0
 22312  00110C  6FDC               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 22313                           
 22314                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 22315  00110E  0E02               	movlw	2
 22316  001110  D01A               	goto	L38
 22317  001112                     
 22318                           ; BSR set to: 0
 22319                           ;i2c_drv.c: 347: TentativeCounter++;
 22320                           
 22321                           ; BSR set to: 0
 22322  001112  2BDB               	incf	I2c_WriteData@TentativeCounter& (0+255),f,b
 22323                           
 22324                           ; BSR set to: 0
 22325                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 22326  001114  EC21  F022         	call	_CheckAckStatus	;wreg free
 22327  001118  0900               	iorlw	0
 22328  00111A  A4D8               	btfss	status,2,c
 22329  00111C  D006               	goto	l176
 22330                           
 22331                           ;i2c_drv.c: 350: {
 22332                           ;i2c_drv.c: 352: TentativeCounter = 0;
 22333  00111E  0E00               	movlw	0
 22334  001120  0100               	movlb	0	; () banked
 22335  001122  6FDB               	movwf	I2c_WriteData@TentativeCounter& (0+255),b
 22336                           
 22337                           ; BSR set to: 0
 22338                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 22339  001124  C0DC  F0DD         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 22340                           
 22341                           ;i2c_drv.c: 355: }
 22342  001128  D030               	goto	l162
 22343  00112A                     l176:
 22344                           
 22345                           ;i2c_drv.c: 356: else
 22346                           ;i2c_drv.c: 357: {
 22347                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 22348                           
 22349                           ; BSR set to: 0
 22350  00112A  0E02               	movlw	2
 22351  00112C  0100               	movlb	0	; () banked
 22352  00112E  65DB               	cpfsgt	I2c_WriteData@TentativeCounter& (0+255),b
 22353  001130  D02C               	goto	l162
 22354                           
 22355                           ; BSR set to: 0
 22356                           ;i2c_drv.c: 360: {
 22357                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 22358  001132  0E09               	movlw	9
 22359  001134                     L37:
 22360  001134  6FDD               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 22361                           
 22362                           ; BSR set to: 0
 22363                           ;i2c_drv.c: 363: }
 22364                           ;i2c_drv.c: 364: }
 22365                           ;i2c_drv.c: 365: break;
 22366                           
 22367                           ; BSR set to: 0
 22368  001136  D029               	goto	l162
 22369  001138                     
 22370                           ; BSR set to: 0
 22371                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 22372                           
 22373                           ; BSR set to: 0
 22374  001138  0E00               	movlw	0
 22375  00113A  6FDD               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 22376                           
 22377                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 22378  00113C  0E00               	movlw	0
 22379  00113E  6FDC               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 22380                           
 22381                           ;i2c_drv.c: 372: TentativeCounter = 0;
 22382  001140  0E00               	movlw	0
 22383  001142  6FDB               	movwf	I2c_WriteData@TentativeCounter& (0+255),b
 22384                           
 22385                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 22386  001144  0E01               	movlw	1
 22387  001146                     L38:
 22388  001146  6FDA               	movwf	I2c_WriteData@WriteStatus& (0+255),b
 22389                           
 22390                           ; BSR set to: 0
 22391                           ;i2c_drv.c: 379: }
 22392                           
 22393                           ; BSR set to: 0
 22394                           ;i2c_drv.c: 378: break;
 22395                           
 22396                           ;i2c_drv.c: 377: default:
 22397                           
 22398                           ;i2c_drv.c: 375: break;
 22399  001148  D020               	goto	l162
 22400  00114A                     l160:
 22401                           
 22402                           ; BSR set to: 0
 22403  00114A  0100               	movlb	0	; () banked
 22404  00114C  51DD               	movf	I2c_WriteData@I2cWriteState& (0+255),w,b
 22405                           
 22406                           ; Switch size 1, requested type "space"
 22407                           ; Number of cases is 10, Range of values is 0 to 9
 22408                           ; switch strategies available:
 22409                           ; Name         Instructions Cycles
 22410                           ; simple_byte           31    16 (average)
 22411                           ;	Chosen strategy is simple_byte
 22412  00114E  0A00               	xorlw	0	; case 0
 22413  001150  B4D8               	btfsc	status,2,c
 22414  001152  D763               	goto	l161
 22415  001154  0A01               	xorlw	1	; case 1
 22416  001156  B4D8               	btfsc	status,2,c
 22417  001158  D767               	goto	l163
 22418  00115A  0A03               	xorlw	3	; case 2
 22419  00115C  B4D8               	btfsc	status,2,c
 22420  00115E  D784               	goto	l164
 22421  001160  0A01               	xorlw	1	; case 3
 22422  001162  B4D8               	btfsc	status,2,c
 22423  001164  D788               	goto	l166
 22424  001166  0A07               	xorlw	7	; case 4
 22425  001168  B4D8               	btfsc	status,2,c
 22426  00116A  D799               	goto	l167
 22427  00116C  0A01               	xorlw	1	; case 5
 22428  00116E  B4D8               	btfsc	status,2,c
 22429  001170  D7A0               	goto	l169
 22430  001172  0A03               	xorlw	3	; case 6
 22431  001174  B4D8               	btfsc	status,2,c
 22432  001176  D7C3               	goto	l173
 22433  001178  0A01               	xorlw	1	; case 7
 22434  00117A  B4D8               	btfsc	status,2,c
 22435  00117C  D7C4               	goto	l174
 22436  00117E  0A0F               	xorlw	15	; case 8
 22437  001180  B4D8               	btfsc	status,2,c
 22438  001182  D7C7               	goto	l175
 22439  001184  0A01               	xorlw	1	; case 9
 22440  001186  B4D8               	btfsc	status,2,c
 22441  001188  D7D7               	goto	l179
 22442  00118A                     l162:
 22443                           
 22444                           ;i2c_drv.c: 382: return WriteStatus;
 22445                           
 22446                           ; BSR set to: 0
 22447  00118A  0100               	movlb	0	; () banked
 22448  00118C  51DA               	movf	I2c_WriteData@WriteStatus& (0+255),w,b
 22449  00118E  0012               	return	
 22450  001190                     __end_of_I2c_WriteData:
 22451                           	opt stack 0
 22452                           tosu	equ	0xFFF
 22453                           tosh	equ	0xFFE
 22454                           tosl	equ	0xFFD
 22455                           pclath	equ	0xFFA
 22456                           tblptru	equ	0xFF8
 22457                           tblptrh	equ	0xFF7
 22458                           tblptrl	equ	0xFF6
 22459                           tablat	equ	0xFF5
 22460                           prodh	equ	0xFF4
 22461                           prodl	equ	0xFF3
 22462                           intcon	equ	0xFF2
 22463                           intcon2	equ	0xFF1
 22464                           intcon3	equ	0xFF0
 22465                           indf0	equ	0xFEF
 22466                           postinc0	equ	0xFEE
 22467                           plusw0	equ	0xFEB
 22468                           fsr0h	equ	0xFEA
 22469                           fsr0l	equ	0xFE9
 22470                           wreg	equ	0xFE8
 22471                           indf1	equ	0xFE7
 22472                           postinc1	equ	0xFE6
 22473                           postdec1	equ	0xFE5
 22474                           fsr1h	equ	0xFE2
 22475                           fsr1l	equ	0xFE1
 22476                           indf2	equ	0xFDF
 22477                           postinc2	equ	0xFDE
 22478                           postdec2	equ	0xFDD
 22479                           plusw2	equ	0xFDB
 22480                           fsr2h	equ	0xFDA
 22481                           fsr2l	equ	0xFD9
 22482                           status	equ	0xFD8
 22483                           
 22484 ;; *************** function _I2c_ReadData *****************
 22485 ;; Defined at:
 22486 ;;		line 393 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 22487 ;; Parameters:    Size  Location     Type
 22488 ;;  ReadPacket      2   24[BANK0 ] PTR struct _I2cReadPacke
 22489 ;;		 -> I2cRxPacket(6), 
 22490 ;; Auto vars:     Size  Location     Type
 22491 ;;		None
 22492 ;; Return value:  Size  Location     Type
 22493 ;;                  1    wreg      enum E7787
 22494 ;; Registers used:
 22495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22496 ;; Tracked objects:
 22497 ;;		On entry : 0/0
 22498 ;;		On exit  : 0/0
 22499 ;;		Unchanged: 0/0
 22500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22501 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22503 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22504 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22505 ;;Total ram usage:        4 bytes
 22506 ;; Hardware stack levels used:    1
 22507 ;; Hardware stack levels required when called:   10
 22508 ;; This function calls:
 22509 ;;		_CheckAckStatus
 22510 ;;		_CheckTxStatus
 22511 ;;		_EnableReceiver
 22512 ;;		_GenerateEvt
 22513 ;;		_ReadByte
 22514 ;;		_SetAckStatus
 22515 ;;		_StartCondition
 22516 ;;		_StopCondition
 22517 ;;		_WriteByte
 22518 ;; This function is called by:
 22519 ;;		_I2cSendMsgSm
 22520 ;; This function uses a non-reentrant model
 22521 ;;
 22522                           
 22523                           	psect	text111
 22524  001190                     __ptext111:
 22525                           	opt stack 0
 22526  001190                     _I2c_ReadData:
 22527                           	opt stack 16
 22528                           
 22529                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 22530                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 22531                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 22532                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 22533                           ;i2c_drv.c: 402: switch (I2cReadState)
 22534                           
 22535                           ; BSR set to: 0
 22536                           ;incstack = 0
 22537  001190  D095               	goto	l192
 22538  001192                     
 22539                           ;i2c_drv.c: 406: StartCondition();
 22540  001192  EC30  F022         	call	_StartCondition	;wreg free
 22541                           
 22542                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 22543  001196  0E00               	movlw	0
 22544  001198  0100               	movlb	0	; () banked
 22545  00119A  6FD6               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 22546                           
 22547                           ; BSR set to: 0
 22548                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 22549  00119C  0E01               	movlw	1
 22550  00119E  D01F               	goto	L41
 22551  0011A0                     
 22552                           ; BSR set to: 0
 22553                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 22554                           
 22555                           ; BSR set to: 0
 22556  0011A0  EE20 F001          	lfsr	2,1
 22557  0011A4  5178               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 22558  0011A6  26D9               	addwf	fsr2l,f,c
 22559  0011A8  5179               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 22560  0011AA  22DA               	addwfc	fsr2h,f,c
 22561  0011AC  50DF               	movf	indf2,w,c
 22562  0011AE  6F7A               	movwf	??_I2c_ReadData& (0+255),b
 22563  0011B0  C078  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 22564  0011B4  C079  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 22565  0011B8  50DF               	movf	indf2,w,c
 22566  0011BA  6F7B               	movwf	(??_I2c_ReadData+1)& (0+255),b
 22567  0011BC  90D8               	bcf	status,0,c
 22568  0011BE  357B               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 22569  0011C0  117A               	iorwf	??_I2c_ReadData& (0+255),w,b
 22570  0011C2  C078  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 22571  0011C6  C079  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 22572  0011CA  6EDF               	movwf	indf2,c
 22573                           
 22574                           ; BSR set to: 0
 22575                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 22576  0011CC  C078  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 22577  0011D0  C079  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 22578  0011D4  50DF               	movf	indf2,w,c
 22579  0011D6  EC12  F022         	call	_WriteByte
 22580                           
 22581                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 22582  0011DA  0E02               	movlw	2
 22583  0011DC  D068               	goto	L45
 22584  0011DE                     L41:
 22585  0011DE  6FD9               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 22586                           
 22587                           ;i2c_drv.c: 420: break;
 22588  0011E0  D08A               	goto	l194
 22589  0011E2                     
 22590                           ; BSR set to: 0
 22591                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 22592                           
 22593                           ; BSR set to: 0
 22594  0011E2  EC1C  F022         	call	_CheckTxStatus	;wreg free
 22595  0011E6  0900               	iorlw	0
 22596  0011E8  A4D8               	btfss	status,2,c
 22597  0011EA  D085               	goto	l194
 22598                           
 22599                           ;i2c_drv.c: 425: {
 22600                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 22601  0011EC  0E03               	movlw	3
 22602  0011EE  D05F               	goto	L45
 22603  0011F0                     
 22604                           ; BSR set to: 0
 22605                           ;i2c_drv.c: 433: TentativeCounter++;
 22606                           
 22607                           ; BSR set to: 0
 22608  0011F0  2BD7               	incf	I2c_ReadData@TentativeCounter& (0+255),f,b
 22609                           
 22610                           ; BSR set to: 0
 22611                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 22612  0011F2  EC21  F022         	call	_CheckAckStatus	;wreg free
 22613  0011F6  0900               	iorlw	0
 22614  0011F8  A4D8               	btfss	status,2,c
 22615  0011FA  D005               	goto	l199
 22616                           
 22617                           ;i2c_drv.c: 436: {
 22618                           ;i2c_drv.c: 438: TentativeCounter = 0;
 22619  0011FC  0E00               	movlw	0
 22620  0011FE  0100               	movlb	0	; () banked
 22621  001200  6FD7               	movwf	I2c_ReadData@TentativeCounter& (0+255),b
 22622                           
 22623                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 22624  001202  0E04               	movlw	4
 22625  001204  D7EC               	goto	L41
 22626  001206                     l199:
 22627                           
 22628                           ;i2c_drv.c: 442: else
 22629                           ;i2c_drv.c: 443: {
 22630                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 22631                           
 22632                           ; BSR set to: 0
 22633  001206  0E02               	movlw	2
 22634  001208  0100               	movlb	0	; () banked
 22635  00120A  65D7               	cpfsgt	I2c_ReadData@TentativeCounter& (0+255),b
 22636  00120C  D074               	goto	l194
 22637                           
 22638                           ; BSR set to: 0
 22639                           ;i2c_drv.c: 446: {
 22640                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 22641  00120E  0E08               	movlw	8
 22642  001210  D7E6               	goto	L41
 22643  001212                     
 22644                           ; BSR set to: 0
 22645                           ;i2c_drv.c: 455: EnableReceiver();
 22646                           
 22647                           ; BSR set to: 0
 22648  001212  EC32  F022         	call	_EnableReceiver	;wreg free
 22649                           
 22650                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 22651  001216  0E05               	movlw	5
 22652  001218  D04A               	goto	L45
 22653  00121A                     
 22654                           ; BSR set to: 0
 22655                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 22656                           
 22657                           ; BSR set to: 0
 22658  00121A  EC1C  F022         	call	_CheckTxStatus	;wreg free
 22659  00121E  0900               	iorlw	0
 22660  001220  A4D8               	btfss	status,2,c
 22661  001222  D069               	goto	l194
 22662                           
 22663                           ;i2c_drv.c: 463: {
 22664                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 22665  001224  0100               	movlb	0	; () banked
 22666  001226  EE20 F002          	lfsr	2,2
 22667  00122A  5178               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 22668  00122C  26D9               	addwf	fsr2l,f,c
 22669  00122E  5179               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 22670  001230  22DA               	addwfc	fsr2h,f,c
 22671  001232  CFDE F07A          	movff	postinc2,??_I2c_ReadData
 22672  001236  CFDD F07B          	movff	postdec2,??_I2c_ReadData+1
 22673  00123A  C07A  FFD9         	movff	??_I2c_ReadData,fsr2l
 22674  00123E  C07B  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 22675  001242  EC17  F022         	call	_ReadByte	;wreg free
 22676  001246  6EDF               	movwf	indf2,c
 22677                           
 22678                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 22679  001248  0100               	movlb	0	; () banked
 22680  00124A  EE20 F002          	lfsr	2,2
 22681  00124E  5178               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 22682  001250  26D9               	addwf	fsr2l,f,c
 22683  001252  5179               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 22684  001254  22DA               	addwfc	fsr2h,f,c
 22685  001256  2ADE               	incf	postinc2,f,c
 22686  001258  0E00               	movlw	0
 22687  00125A  22DD               	addwfc	postdec2,f,c
 22688                           
 22689                           ; BSR set to: 0
 22690                           ;i2c_drv.c: 469: DataCounter++;
 22691  00125C  2BD8               	incf	I2c_ReadData@DataCounter& (0+255),f,b
 22692                           
 22693                           ; BSR set to: 0
 22694                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 22695  00125E  0E06               	movlw	6
 22696  001260  D7BE               	goto	L41
 22697  001262                     
 22698                           ; BSR set to: 0
 22699                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 22700                           
 22701                           ; BSR set to: 0
 22702  001262  EE20 F004          	lfsr	2,4
 22703  001266  5178               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 22704  001268  26D9               	addwf	fsr2l,f,c
 22705  00126A  5179               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 22706  00126C  22DA               	addwfc	fsr2h,f,c
 22707  00126E  50DE               	movf	postinc2,w,c
 22708  001270  5DD8               	subwf	I2c_ReadData@DataCounter& (0+255),w,b
 22709  001272  A0D8               	btfss	status,0,c
 22710  001274  D009               	goto	l206
 22711                           
 22712                           ; BSR set to: 0
 22713                           ;i2c_drv.c: 478: {
 22714                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 22715  001276  0E01               	movlw	1
 22716  001278  ECCC  F021         	call	_SetAckStatus
 22717                           
 22718                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 22719  00127C  0E07               	movlw	7
 22720  00127E  0100               	movlb	0	; () banked
 22721  001280  6FD9               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 22722                           
 22723                           ; BSR set to: 0
 22724                           ;i2c_drv.c: 484: DataCounter = 0;
 22725  001282  0E00               	movlw	0
 22726  001284  6FD8               	movwf	I2c_ReadData@DataCounter& (0+255),b
 22727                           
 22728                           ;i2c_drv.c: 485: }
 22729  001286  D037               	goto	l194
 22730  001288                     l206:
 22731                           
 22732                           ; BSR set to: 0
 22733                           ;i2c_drv.c: 486: else
 22734                           ;i2c_drv.c: 487: {
 22735                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 22736                           
 22737                           ; BSR set to: 0
 22738  001288  0E00               	movlw	0
 22739  00128A  ECCC  F021         	call	_SetAckStatus
 22740                           
 22741                           ;i2c_drv.c: 491: I2cReadState = RxGetData;
 22742  00128E  0E04               	movlw	4
 22743  001290  D00E               	goto	L45
 22744  001292                     
 22745                           ; BSR set to: 0
 22746                           ;i2c_drv.c: 497: StopCondition();
 22747                           
 22748                           ; BSR set to: 0
 22749  001292  EC2E  F022         	call	_StopCondition	;wreg free
 22750                           
 22751                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 22752  001296  0E02               	movlw	2
 22753  001298  0100               	movlb	0	; () banked
 22754  00129A  6FD6               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 22755                           
 22756                           ; BSR set to: 0
 22757                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 22758  00129C  0E05               	movlw	5
 22759  00129E  2578               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 22760  0012A0  6F75               	movwf	GenerateEvt@Event& (0+255),b
 22761  0012A2  0E00               	movlw	0
 22762  0012A4  2179               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 22763  0012A6  6F76               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22764  0012A8  EC9F  F021         	call	_GenerateEvt	;wreg free
 22765                           
 22766                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 22767  0012AC  0E00               	movlw	0
 22768  0012AE                     L45:
 22769  0012AE  0100               	movlb	0	; () banked
 22770  0012B0  D796               	goto	L41
 22771  0012B2                     
 22772                           ; BSR set to: 0
 22773                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 22774                           
 22775                           ; BSR set to: 0
 22776  0012B2  0E00               	movlw	0
 22777  0012B4  6FD9               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 22778                           
 22779                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 22780  0012B6  0E01               	movlw	1
 22781  0012B8  6FD6               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 22782                           
 22783                           ; BSR set to: 0
 22784                           ;i2c_drv.c: 515: }
 22785                           
 22786                           ; BSR set to: 0
 22787                           ;i2c_drv.c: 514: break;
 22788                           
 22789                           ;i2c_drv.c: 513: default:
 22790                           
 22791                           ;i2c_drv.c: 511: break;
 22792  0012BA  D01D               	goto	l194
 22793  0012BC                     l192:
 22794                           
 22795                           ; BSR set to: 0
 22796  0012BC  0100               	movlb	0	; () banked
 22797  0012BE  51D9               	movf	I2c_ReadData@I2cReadState& (0+255),w,b
 22798                           
 22799                           ; Switch size 1, requested type "space"
 22800                           ; Number of cases is 9, Range of values is 0 to 8
 22801                           ; switch strategies available:
 22802                           ; Name         Instructions Cycles
 22803                           ; simple_byte           28    15 (average)
 22804                           ;	Chosen strategy is simple_byte
 22805  0012C0  0A00               	xorlw	0	; case 0
 22806  0012C2  B4D8               	btfsc	status,2,c
 22807  0012C4  D766               	goto	l193
 22808  0012C6  0A01               	xorlw	1	; case 1
 22809  0012C8  B4D8               	btfsc	status,2,c
 22810  0012CA  D76A               	goto	l195
 22811  0012CC  0A03               	xorlw	3	; case 2
 22812  0012CE  B4D8               	btfsc	status,2,c
 22813  0012D0  D788               	goto	l196
 22814  0012D2  0A01               	xorlw	1	; case 3
 22815  0012D4  B4D8               	btfsc	status,2,c
 22816  0012D6  D78C               	goto	l198
 22817  0012D8  0A07               	xorlw	7	; case 4
 22818  0012DA  B4D8               	btfsc	status,2,c
 22819  0012DC  D79A               	goto	l202
 22820  0012DE  0A01               	xorlw	1	; case 5
 22821  0012E0  B4D8               	btfsc	status,2,c
 22822  0012E2  D79B               	goto	l203
 22823  0012E4  0A03               	xorlw	3	; case 6
 22824  0012E6  B4D8               	btfsc	status,2,c
 22825  0012E8  D7BC               	goto	l205
 22826  0012EA  0A01               	xorlw	1	; case 7
 22827  0012EC  B4D8               	btfsc	status,2,c
 22828  0012EE  D7D1               	goto	l208
 22829  0012F0  0A0F               	xorlw	15	; case 8
 22830  0012F2  B4D8               	btfsc	status,2,c
 22831  0012F4  D7DE               	goto	l209
 22832  0012F6                     l194:
 22833                           
 22834                           ;i2c_drv.c: 518: return ReadStatus;
 22835                           
 22836                           ; BSR set to: 0
 22837  0012F6  0100               	movlb	0	; () banked
 22838  0012F8  51D6               	movf	I2c_ReadData@ReadStatus& (0+255),w,b
 22839  0012FA  0012               	return	
 22840  0012FC                     __end_of_I2c_ReadData:
 22841                           	opt stack 0
 22842                           tosu	equ	0xFFF
 22843                           tosh	equ	0xFFE
 22844                           tosl	equ	0xFFD
 22845                           pclath	equ	0xFFA
 22846                           tblptru	equ	0xFF8
 22847                           tblptrh	equ	0xFF7
 22848                           tblptrl	equ	0xFF6
 22849                           tablat	equ	0xFF5
 22850                           prodh	equ	0xFF4
 22851                           prodl	equ	0xFF3
 22852                           intcon	equ	0xFF2
 22853                           intcon2	equ	0xFF1
 22854                           intcon3	equ	0xFF0
 22855                           indf0	equ	0xFEF
 22856                           postinc0	equ	0xFEE
 22857                           plusw0	equ	0xFEB
 22858                           fsr0h	equ	0xFEA
 22859                           fsr0l	equ	0xFE9
 22860                           wreg	equ	0xFE8
 22861                           indf1	equ	0xFE7
 22862                           postinc1	equ	0xFE6
 22863                           postdec1	equ	0xFE5
 22864                           fsr1h	equ	0xFE2
 22865                           fsr1l	equ	0xFE1
 22866                           indf2	equ	0xFDF
 22867                           postinc2	equ	0xFDE
 22868                           postdec2	equ	0xFDD
 22869                           plusw2	equ	0xFDB
 22870                           fsr2h	equ	0xFDA
 22871                           fsr2l	equ	0xFD9
 22872                           status	equ	0xFD8
 22873                           
 22874 ;; *************** function _WriteByte *****************
 22875 ;; Defined at:
 22876 ;;		line 190 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 22877 ;; Parameters:    Size  Location     Type
 22878 ;;  Byte            1    wreg     unsigned char 
 22879 ;; Auto vars:     Size  Location     Type
 22880 ;;  Byte            1   21[BANK0 ] unsigned char 
 22881 ;; Return value:  Size  Location     Type
 22882 ;;                  1    wreg      void 
 22883 ;; Registers used:
 22884 ;;		wreg
 22885 ;; Tracked objects:
 22886 ;;		On entry : 0/0
 22887 ;;		On exit  : 0/0
 22888 ;;		Unchanged: 0/0
 22889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22891 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22893 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22894 ;;Total ram usage:        1 bytes
 22895 ;; Hardware stack levels used:    1
 22896 ;; Hardware stack levels required when called:    9
 22897 ;; This function calls:
 22898 ;;		Nothing
 22899 ;; This function is called by:
 22900 ;;		_I2c_WriteData
 22901 ;;		_I2c_ReadData
 22902 ;; This function uses a non-reentrant model
 22903 ;;
 22904                           
 22905                           	psect	text112
 22906  004424                     __ptext112:
 22907                           	opt stack 0
 22908  004424                     _WriteByte:
 22909                           	opt stack 16
 22910                           
 22911                           ; BSR set to: 0
 22912                           ;incstack = 0
 22913                           ;WriteByte@Byte stored from wreg
 22914  004424  0100               	movlb	0	; () banked
 22915  004426  6F75               	movwf	WriteByte@Byte& (0+255),b
 22916                           
 22917                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 22918  004428  C075  FF75         	movff	WriteByte@Byte,3957	;volatile
 22919  00442C  0012               	return		;funcret
 22920  00442E                     __end_of_WriteByte:
 22921                           	opt stack 0
 22922                           tosu	equ	0xFFF
 22923                           tosh	equ	0xFFE
 22924                           tosl	equ	0xFFD
 22925                           pclath	equ	0xFFA
 22926                           tblptru	equ	0xFF8
 22927                           tblptrh	equ	0xFF7
 22928                           tblptrl	equ	0xFF6
 22929                           tablat	equ	0xFF5
 22930                           prodh	equ	0xFF4
 22931                           prodl	equ	0xFF3
 22932                           intcon	equ	0xFF2
 22933                           intcon2	equ	0xFF1
 22934                           intcon3	equ	0xFF0
 22935                           indf0	equ	0xFEF
 22936                           postinc0	equ	0xFEE
 22937                           plusw0	equ	0xFEB
 22938                           fsr0h	equ	0xFEA
 22939                           fsr0l	equ	0xFE9
 22940                           wreg	equ	0xFE8
 22941                           indf1	equ	0xFE7
 22942                           postinc1	equ	0xFE6
 22943                           postdec1	equ	0xFE5
 22944                           fsr1h	equ	0xFE2
 22945                           fsr1l	equ	0xFE1
 22946                           indf2	equ	0xFDF
 22947                           postinc2	equ	0xFDE
 22948                           postdec2	equ	0xFDD
 22949                           plusw2	equ	0xFDB
 22950                           fsr2h	equ	0xFDA
 22951                           fsr2l	equ	0xFD9
 22952                           status	equ	0xFD8
 22953                           
 22954 ;; *************** function _StopCondition *****************
 22955 ;; Defined at:
 22956 ;;		line 120 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 22957 ;; Parameters:    Size  Location     Type
 22958 ;;		None
 22959 ;; Auto vars:     Size  Location     Type
 22960 ;;		None
 22961 ;; Return value:  Size  Location     Type
 22962 ;;                  1    wreg      void 
 22963 ;; Registers used:
 22964 ;;		status,2, status,0
 22965 ;; Tracked objects:
 22966 ;;		On entry : 0/0
 22967 ;;		On exit  : 0/0
 22968 ;;		Unchanged: 0/0
 22969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22974 ;;Total ram usage:        0 bytes
 22975 ;; Hardware stack levels used:    1
 22976 ;; Hardware stack levels required when called:    9
 22977 ;; This function calls:
 22978 ;;		Nothing
 22979 ;; This function is called by:
 22980 ;;		_I2c_WriteData
 22981 ;;		_I2c_ReadData
 22982 ;; This function uses a non-reentrant model
 22983 ;;
 22984                           
 22985                           	psect	text113
 22986  00445C                     __ptext113:
 22987                           	opt stack 0
 22988  00445C                     _StopCondition:
 22989                           	opt stack 16
 22990                           
 22991                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 22992                           
 22993                           ;incstack = 0
 22994  00445C  8471               	bsf	3953,2,c	;volatile
 22995  00445E  0012               	return		;funcret
 22996  004460                     __end_of_StopCondition:
 22997                           	opt stack 0
 22998                           tosu	equ	0xFFF
 22999                           tosh	equ	0xFFE
 23000                           tosl	equ	0xFFD
 23001                           pclath	equ	0xFFA
 23002                           tblptru	equ	0xFF8
 23003                           tblptrh	equ	0xFF7
 23004                           tblptrl	equ	0xFF6
 23005                           tablat	equ	0xFF5
 23006                           prodh	equ	0xFF4
 23007                           prodl	equ	0xFF3
 23008                           intcon	equ	0xFF2
 23009                           intcon2	equ	0xFF1
 23010                           intcon3	equ	0xFF0
 23011                           indf0	equ	0xFEF
 23012                           postinc0	equ	0xFEE
 23013                           plusw0	equ	0xFEB
 23014                           fsr0h	equ	0xFEA
 23015                           fsr0l	equ	0xFE9
 23016                           wreg	equ	0xFE8
 23017                           indf1	equ	0xFE7
 23018                           postinc1	equ	0xFE6
 23019                           postdec1	equ	0xFE5
 23020                           fsr1h	equ	0xFE2
 23021                           fsr1l	equ	0xFE1
 23022                           indf2	equ	0xFDF
 23023                           postinc2	equ	0xFDE
 23024                           postdec2	equ	0xFDD
 23025                           plusw2	equ	0xFDB
 23026                           fsr2h	equ	0xFDA
 23027                           fsr2l	equ	0xFD9
 23028                           status	equ	0xFD8
 23029                           
 23030 ;; *************** function _StartCondition *****************
 23031 ;; Defined at:
 23032 ;;		line 92 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 23033 ;; Parameters:    Size  Location     Type
 23034 ;;		None
 23035 ;; Auto vars:     Size  Location     Type
 23036 ;;		None
 23037 ;; Return value:  Size  Location     Type
 23038 ;;                  1    wreg      void 
 23039 ;; Registers used:
 23040 ;;		status,2, status,0
 23041 ;; Tracked objects:
 23042 ;;		On entry : 0/0
 23043 ;;		On exit  : 0/0
 23044 ;;		Unchanged: 0/0
 23045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23050 ;;Total ram usage:        0 bytes
 23051 ;; Hardware stack levels used:    1
 23052 ;; Hardware stack levels required when called:    9
 23053 ;; This function calls:
 23054 ;;		Nothing
 23055 ;; This function is called by:
 23056 ;;		_I2c_WriteData
 23057 ;;		_I2c_ReadData
 23058 ;; This function uses a non-reentrant model
 23059 ;;
 23060                           
 23061                           	psect	text114
 23062  004460                     __ptext114:
 23063                           	opt stack 0
 23064  004460                     _StartCondition:
 23065                           	opt stack 16
 23066                           
 23067                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 23068                           
 23069                           ;incstack = 0
 23070  004460  8071               	bsf	3953,0,c	;volatile
 23071  004462  0012               	return		;funcret
 23072  004464                     __end_of_StartCondition:
 23073                           	opt stack 0
 23074                           tosu	equ	0xFFF
 23075                           tosh	equ	0xFFE
 23076                           tosl	equ	0xFFD
 23077                           pclath	equ	0xFFA
 23078                           tblptru	equ	0xFF8
 23079                           tblptrh	equ	0xFF7
 23080                           tblptrl	equ	0xFF6
 23081                           tablat	equ	0xFF5
 23082                           prodh	equ	0xFF4
 23083                           prodl	equ	0xFF3
 23084                           intcon	equ	0xFF2
 23085                           intcon2	equ	0xFF1
 23086                           intcon3	equ	0xFF0
 23087                           indf0	equ	0xFEF
 23088                           postinc0	equ	0xFEE
 23089                           plusw0	equ	0xFEB
 23090                           fsr0h	equ	0xFEA
 23091                           fsr0l	equ	0xFE9
 23092                           wreg	equ	0xFE8
 23093                           indf1	equ	0xFE7
 23094                           postinc1	equ	0xFE6
 23095                           postdec1	equ	0xFE5
 23096                           fsr1h	equ	0xFE2
 23097                           fsr1l	equ	0xFE1
 23098                           indf2	equ	0xFDF
 23099                           postinc2	equ	0xFDE
 23100                           postdec2	equ	0xFDD
 23101                           plusw2	equ	0xFDB
 23102                           fsr2h	equ	0xFDA
 23103                           fsr2l	equ	0xFD9
 23104                           status	equ	0xFD8
 23105                           
 23106 ;; *************** function _SetAckStatus *****************
 23107 ;; Defined at:
 23108 ;;		line 162 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 23109 ;; Parameters:    Size  Location     Type
 23110 ;;  AckSts          1    wreg     unsigned char 
 23111 ;; Auto vars:     Size  Location     Type
 23112 ;;  AckSts          1   21[BANK0 ] unsigned char 
 23113 ;; Return value:  Size  Location     Type
 23114 ;;                  1    wreg      void 
 23115 ;; Registers used:
 23116 ;;		wreg
 23117 ;; Tracked objects:
 23118 ;;		On entry : 0/0
 23119 ;;		On exit  : 0/0
 23120 ;;		Unchanged: 0/0
 23121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23123 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23125 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23126 ;;Total ram usage:        1 bytes
 23127 ;; Hardware stack levels used:    1
 23128 ;; Hardware stack levels required when called:    9
 23129 ;; This function calls:
 23130 ;;		Nothing
 23131 ;; This function is called by:
 23132 ;;		_I2c_ReadData
 23133 ;; This function uses a non-reentrant model
 23134 ;;
 23135                           
 23136                           	psect	text115
 23137  004398                     __ptext115:
 23138                           	opt stack 0
 23139  004398                     _SetAckStatus:
 23140                           	opt stack 16
 23141                           
 23142                           ;incstack = 0
 23143                           ;SetAckStatus@AckSts stored from wreg
 23144  004398  0100               	movlb	0	; () banked
 23145  00439A  6F75               	movwf	SetAckStatus@AckSts& (0+255),b
 23146                           
 23147                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 23148  00439C  0100               	movlb	0	; () banked
 23149  00439E  B175               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 23150  0043A0  D002               	bra	u5015
 23151  0043A2  9A71               	bcf	3953,5,c	;volatile
 23152  0043A4  D001               	bra	u5016
 23153  0043A6                     u5015:
 23154  0043A6  8A71               	bsf	3953,5,c	;volatile
 23155  0043A8                     u5016:
 23156                           
 23157                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 23158  0043A8  8871               	bsf	3953,4,c	;volatile
 23159  0043AA  0012               	return		;funcret
 23160  0043AC                     __end_of_SetAckStatus:
 23161                           	opt stack 0
 23162                           tosu	equ	0xFFF
 23163                           tosh	equ	0xFFE
 23164                           tosl	equ	0xFFD
 23165                           pclath	equ	0xFFA
 23166                           tblptru	equ	0xFF8
 23167                           tblptrh	equ	0xFF7
 23168                           tblptrl	equ	0xFF6
 23169                           tablat	equ	0xFF5
 23170                           prodh	equ	0xFF4
 23171                           prodl	equ	0xFF3
 23172                           intcon	equ	0xFF2
 23173                           intcon2	equ	0xFF1
 23174                           intcon3	equ	0xFF0
 23175                           indf0	equ	0xFEF
 23176                           postinc0	equ	0xFEE
 23177                           plusw0	equ	0xFEB
 23178                           fsr0h	equ	0xFEA
 23179                           fsr0l	equ	0xFE9
 23180                           wreg	equ	0xFE8
 23181                           indf1	equ	0xFE7
 23182                           postinc1	equ	0xFE6
 23183                           postdec1	equ	0xFE5
 23184                           fsr1h	equ	0xFE2
 23185                           fsr1l	equ	0xFE1
 23186                           indf2	equ	0xFDF
 23187                           postinc2	equ	0xFDE
 23188                           postdec2	equ	0xFDD
 23189                           plusw2	equ	0xFDB
 23190                           fsr2h	equ	0xFDA
 23191                           fsr2l	equ	0xFD9
 23192                           status	equ	0xFD8
 23193                           
 23194 ;; *************** function _ReadByte *****************
 23195 ;; Defined at:
 23196 ;;		line 204 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 23197 ;; Parameters:    Size  Location     Type
 23198 ;;		None
 23199 ;; Auto vars:     Size  Location     Type
 23200 ;;  Byte            1   21[BANK0 ] unsigned char 
 23201 ;; Return value:  Size  Location     Type
 23202 ;;                  1    wreg      unsigned char 
 23203 ;; Registers used:
 23204 ;;		wreg, status,2
 23205 ;; Tracked objects:
 23206 ;;		On entry : 0/0
 23207 ;;		On exit  : 0/0
 23208 ;;		Unchanged: 0/0
 23209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23211 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23213 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23214 ;;Total ram usage:        1 bytes
 23215 ;; Hardware stack levels used:    1
 23216 ;; Hardware stack levels required when called:    9
 23217 ;; This function calls:
 23218 ;;		Nothing
 23219 ;; This function is called by:
 23220 ;;		_I2c_ReadData
 23221 ;; This function uses a non-reentrant model
 23222 ;;
 23223                           
 23224                           	psect	text116
 23225  00442E                     __ptext116:
 23226                           	opt stack 0
 23227  00442E                     _ReadByte:
 23228                           	opt stack 16
 23229                           
 23230                           ;i2c_drv.c: 207: UINT8 Byte;
 23231                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 23232                           
 23233                           ;incstack = 0
 23234  00442E  CF75 F075          	movff	3957,ReadByte@Byte	;volatile
 23235                           
 23236                           ;i2c_drv.c: 213: return Byte;
 23237  004432  0100               	movlb	0	; () banked
 23238  004434  5175               	movf	ReadByte@Byte& (0+255),w,b
 23239  004436  0012               	return	
 23240  004438                     __end_of_ReadByte:
 23241                           	opt stack 0
 23242                           tosu	equ	0xFFF
 23243                           tosh	equ	0xFFE
 23244                           tosl	equ	0xFFD
 23245                           pclath	equ	0xFFA
 23246                           tblptru	equ	0xFF8
 23247                           tblptrh	equ	0xFF7
 23248                           tblptrl	equ	0xFF6
 23249                           tablat	equ	0xFF5
 23250                           prodh	equ	0xFF4
 23251                           prodl	equ	0xFF3
 23252                           intcon	equ	0xFF2
 23253                           intcon2	equ	0xFF1
 23254                           intcon3	equ	0xFF0
 23255                           indf0	equ	0xFEF
 23256                           postinc0	equ	0xFEE
 23257                           plusw0	equ	0xFEB
 23258                           fsr0h	equ	0xFEA
 23259                           fsr0l	equ	0xFE9
 23260                           wreg	equ	0xFE8
 23261                           indf1	equ	0xFE7
 23262                           postinc1	equ	0xFE6
 23263                           postdec1	equ	0xFE5
 23264                           fsr1h	equ	0xFE2
 23265                           fsr1l	equ	0xFE1
 23266                           indf2	equ	0xFDF
 23267                           postinc2	equ	0xFDE
 23268                           postdec2	equ	0xFDD
 23269                           plusw2	equ	0xFDB
 23270                           fsr2h	equ	0xFDA
 23271                           fsr2l	equ	0xFD9
 23272                           status	equ	0xFD8
 23273                           
 23274 ;; *************** function _GenerateEvt *****************
 23275 ;; Defined at:
 23276 ;;		line 75 in file "../../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 23277 ;; Parameters:    Size  Location     Type
 23278 ;;  Event           2   21[BANK0 ] PTR struct EventStructur
 23279 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 23280 ;; Auto vars:     Size  Location     Type
 23281 ;;  EventStatus     1   23[BANK0 ] enum E7727
 23282 ;; Return value:  Size  Location     Type
 23283 ;;                  1    wreg      enum E7699
 23284 ;; Registers used:
 23285 ;;		wreg, fsr2l, fsr2h, status,2
 23286 ;; Tracked objects:
 23287 ;;		On entry : 0/0
 23288 ;;		On exit  : 0/0
 23289 ;;		Unchanged: 0/0
 23290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23291 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23292 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23294 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23295 ;;Total ram usage:        3 bytes
 23296 ;; Hardware stack levels used:    1
 23297 ;; Hardware stack levels required when called:    9
 23298 ;; This function calls:
 23299 ;;		Nothing
 23300 ;; This function is called by:
 23301 ;;		_I2c_ReadData
 23302 ;;		_I2cSlv_SendI2cMsg
 23303 ;;		_I2cSlv_ReceiveI2cMsg
 23304 ;;		_Alarm
 23305 ;; This function uses a non-reentrant model
 23306 ;;
 23307                           
 23308                           	psect	text117
 23309  00433E                     __ptext117:
 23310                           	opt stack 0
 23311  00433E                     _GenerateEvt:
 23312                           	opt stack 15
 23313                           
 23314                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 23315                           
 23316                           ; BSR set to: 0
 23317                           ;incstack = 0
 23318  00433E  0E00               	movlw	0
 23319  004340  0100               	movlb	0	; () banked
 23320  004342  6F77               	movwf	GenerateEvt@EventStatus& (0+255),b
 23321                           
 23322                           ; BSR set to: 0
 23323                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 23324  004344  C075  FFD9         	movff	GenerateEvt@Event,fsr2l
 23325  004348  C076  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 23326  00434C  0E02               	movlw	2
 23327  00434E  6EDF               	movwf	indf2,c
 23328                           
 23329                           ; BSR set to: 0
 23330                           ;os_ser.c: 83: EventStatus = EventSent;
 23331  004350  0E02               	movlw	2
 23332  004352  6F77               	movwf	GenerateEvt@EventStatus& (0+255),b
 23333  004354  0012               	return	
 23334  004356                     __end_of_GenerateEvt:
 23335                           	opt stack 0
 23336                           tosu	equ	0xFFF
 23337                           tosh	equ	0xFFE
 23338                           tosl	equ	0xFFD
 23339                           pclath	equ	0xFFA
 23340                           tblptru	equ	0xFF8
 23341                           tblptrh	equ	0xFF7
 23342                           tblptrl	equ	0xFF6
 23343                           tablat	equ	0xFF5
 23344                           prodh	equ	0xFF4
 23345                           prodl	equ	0xFF3
 23346                           intcon	equ	0xFF2
 23347                           intcon2	equ	0xFF1
 23348                           intcon3	equ	0xFF0
 23349                           indf0	equ	0xFEF
 23350                           postinc0	equ	0xFEE
 23351                           plusw0	equ	0xFEB
 23352                           fsr0h	equ	0xFEA
 23353                           fsr0l	equ	0xFE9
 23354                           wreg	equ	0xFE8
 23355                           indf1	equ	0xFE7
 23356                           postinc1	equ	0xFE6
 23357                           postdec1	equ	0xFE5
 23358                           fsr1h	equ	0xFE2
 23359                           fsr1l	equ	0xFE1
 23360                           indf2	equ	0xFDF
 23361                           postinc2	equ	0xFDE
 23362                           postdec2	equ	0xFDD
 23363                           plusw2	equ	0xFDB
 23364                           fsr2h	equ	0xFDA
 23365                           fsr2l	equ	0xFD9
 23366                           status	equ	0xFD8
 23367                           
 23368 ;; *************** function _EnableReceiver *****************
 23369 ;; Defined at:
 23370 ;;		line 177 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 23371 ;; Parameters:    Size  Location     Type
 23372 ;;		None
 23373 ;; Auto vars:     Size  Location     Type
 23374 ;;		None
 23375 ;; Return value:  Size  Location     Type
 23376 ;;                  1    wreg      void 
 23377 ;; Registers used:
 23378 ;;		status,2, status,0
 23379 ;; Tracked objects:
 23380 ;;		On entry : 0/0
 23381 ;;		On exit  : 0/0
 23382 ;;		Unchanged: 0/0
 23383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23388 ;;Total ram usage:        0 bytes
 23389 ;; Hardware stack levels used:    1
 23390 ;; Hardware stack levels required when called:    9
 23391 ;; This function calls:
 23392 ;;		Nothing
 23393 ;; This function is called by:
 23394 ;;		_I2c_ReadData
 23395 ;; This function uses a non-reentrant model
 23396 ;;
 23397                           
 23398                           	psect	text118
 23399  004464                     __ptext118:
 23400                           	opt stack 0
 23401  004464                     _EnableReceiver:
 23402                           	opt stack 16
 23403                           
 23404                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 23405                           
 23406                           ; BSR set to: 0
 23407                           ;incstack = 0
 23408  004464  8671               	bsf	3953,3,c	;volatile
 23409  004466  0012               	return		;funcret
 23410  004468                     __end_of_EnableReceiver:
 23411                           	opt stack 0
 23412                           tosu	equ	0xFFF
 23413                           tosh	equ	0xFFE
 23414                           tosl	equ	0xFFD
 23415                           pclath	equ	0xFFA
 23416                           tblptru	equ	0xFF8
 23417                           tblptrh	equ	0xFF7
 23418                           tblptrl	equ	0xFF6
 23419                           tablat	equ	0xFF5
 23420                           prodh	equ	0xFF4
 23421                           prodl	equ	0xFF3
 23422                           intcon	equ	0xFF2
 23423                           intcon2	equ	0xFF1
 23424                           intcon3	equ	0xFF0
 23425                           indf0	equ	0xFEF
 23426                           postinc0	equ	0xFEE
 23427                           plusw0	equ	0xFEB
 23428                           fsr0h	equ	0xFEA
 23429                           fsr0l	equ	0xFE9
 23430                           wreg	equ	0xFE8
 23431                           indf1	equ	0xFE7
 23432                           postinc1	equ	0xFE6
 23433                           postdec1	equ	0xFE5
 23434                           fsr1h	equ	0xFE2
 23435                           fsr1l	equ	0xFE1
 23436                           indf2	equ	0xFDF
 23437                           postinc2	equ	0xFDE
 23438                           postdec2	equ	0xFDD
 23439                           plusw2	equ	0xFDB
 23440                           fsr2h	equ	0xFDA
 23441                           fsr2l	equ	0xFD9
 23442                           status	equ	0xFD8
 23443                           
 23444 ;; *************** function _CheckTxStatus *****************
 23445 ;; Defined at:
 23446 ;;		line 148 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 23447 ;; Parameters:    Size  Location     Type
 23448 ;;		None
 23449 ;; Auto vars:     Size  Location     Type
 23450 ;;		None
 23451 ;; Return value:  Size  Location     Type
 23452 ;;                  1    wreg      unsigned char 
 23453 ;; Registers used:
 23454 ;;		wreg, status,2, status,0
 23455 ;; Tracked objects:
 23456 ;;		On entry : 0/0
 23457 ;;		On exit  : 0/0
 23458 ;;		Unchanged: 0/0
 23459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23464 ;;Total ram usage:        0 bytes
 23465 ;; Hardware stack levels used:    1
 23466 ;; Hardware stack levels required when called:    9
 23467 ;; This function calls:
 23468 ;;		Nothing
 23469 ;; This function is called by:
 23470 ;;		_I2c_WriteData
 23471 ;;		_I2c_ReadData
 23472 ;; This function uses a non-reentrant model
 23473 ;;
 23474                           
 23475                           	psect	text119
 23476  004438                     __ptext119:
 23477                           	opt stack 0
 23478  004438                     _CheckTxStatus:
 23479                           	opt stack 16
 23480                           
 23481                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 23482                           
 23483                           ;incstack = 0
 23484  004438  4073               	rrncf	3955,w,c	;volatile
 23485  00443A  42E8               	rrncf	wreg,f,c
 23486  00443C  0B3F               	andlw	63
 23487  00443E  0B01               	andlw	1
 23488  004440  0012               	return	
 23489  004442                     __end_of_CheckTxStatus:
 23490                           	opt stack 0
 23491                           tosu	equ	0xFFF
 23492                           tosh	equ	0xFFE
 23493                           tosl	equ	0xFFD
 23494                           pclath	equ	0xFFA
 23495                           tblptru	equ	0xFF8
 23496                           tblptrh	equ	0xFF7
 23497                           tblptrl	equ	0xFF6
 23498                           tablat	equ	0xFF5
 23499                           prodh	equ	0xFF4
 23500                           prodl	equ	0xFF3
 23501                           intcon	equ	0xFF2
 23502                           intcon2	equ	0xFF1
 23503                           intcon3	equ	0xFF0
 23504                           indf0	equ	0xFEF
 23505                           postinc0	equ	0xFEE
 23506                           plusw0	equ	0xFEB
 23507                           fsr0h	equ	0xFEA
 23508                           fsr0l	equ	0xFE9
 23509                           wreg	equ	0xFE8
 23510                           indf1	equ	0xFE7
 23511                           postinc1	equ	0xFE6
 23512                           postdec1	equ	0xFE5
 23513                           fsr1h	equ	0xFE2
 23514                           fsr1l	equ	0xFE1
 23515                           indf2	equ	0xFDF
 23516                           postinc2	equ	0xFDE
 23517                           postdec2	equ	0xFDD
 23518                           plusw2	equ	0xFDB
 23519                           fsr2h	equ	0xFDA
 23520                           fsr2l	equ	0xFD9
 23521                           status	equ	0xFD8
 23522                           
 23523 ;; *************** function _CheckAckStatus *****************
 23524 ;; Defined at:
 23525 ;;		line 134 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 23526 ;; Parameters:    Size  Location     Type
 23527 ;;		None
 23528 ;; Auto vars:     Size  Location     Type
 23529 ;;		None
 23530 ;; Return value:  Size  Location     Type
 23531 ;;                  1    wreg      unsigned char 
 23532 ;; Registers used:
 23533 ;;		wreg, status,2, status,0
 23534 ;; Tracked objects:
 23535 ;;		On entry : 0/0
 23536 ;;		On exit  : 0/0
 23537 ;;		Unchanged: 0/0
 23538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23543 ;;Total ram usage:        0 bytes
 23544 ;; Hardware stack levels used:    1
 23545 ;; Hardware stack levels required when called:    9
 23546 ;; This function calls:
 23547 ;;		Nothing
 23548 ;; This function is called by:
 23549 ;;		_I2c_WriteData
 23550 ;;		_I2c_ReadData
 23551 ;; This function uses a non-reentrant model
 23552 ;;
 23553                           
 23554                           	psect	text120
 23555  004442                     __ptext120:
 23556                           	opt stack 0
 23557  004442                     _CheckAckStatus:
 23558                           	opt stack 16
 23559                           
 23560                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 23561                           
 23562                           ;incstack = 0
 23563  004442  4471               	rlncf	3953,w,c	;volatile
 23564  004444  46E8               	rlncf	wreg,f,c
 23565  004446  0B03               	andlw	3
 23566  004448  0B01               	andlw	1
 23567  00444A  0012               	return	
 23568  00444C                     __end_of_CheckAckStatus:
 23569                           	opt stack 0
 23570                           tosu	equ	0xFFF
 23571                           tosh	equ	0xFFE
 23572                           tosl	equ	0xFFD
 23573                           pclath	equ	0xFFA
 23574                           tblptru	equ	0xFF8
 23575                           tblptrh	equ	0xFF7
 23576                           tblptrl	equ	0xFF6
 23577                           tablat	equ	0xFF5
 23578                           prodh	equ	0xFF4
 23579                           prodl	equ	0xFF3
 23580                           intcon	equ	0xFF2
 23581                           intcon2	equ	0xFF1
 23582                           intcon3	equ	0xFF0
 23583                           indf0	equ	0xFEF
 23584                           postinc0	equ	0xFEE
 23585                           plusw0	equ	0xFEB
 23586                           fsr0h	equ	0xFEA
 23587                           fsr0l	equ	0xFE9
 23588                           wreg	equ	0xFE8
 23589                           indf1	equ	0xFE7
 23590                           postinc1	equ	0xFE6
 23591                           postdec1	equ	0xFE5
 23592                           fsr1h	equ	0xFE2
 23593                           fsr1l	equ	0xFE1
 23594                           indf2	equ	0xFDF
 23595                           postinc2	equ	0xFDE
 23596                           postdec2	equ	0xFDD
 23597                           plusw2	equ	0xFDB
 23598                           fsr2h	equ	0xFDA
 23599                           fsr2l	equ	0xFD9
 23600                           status	equ	0xFD8
 23601                           
 23602 ;; *************** function _LowPriorityIsr *****************
 23603 ;; Defined at:
 23604 ;;		line 236 in file "../../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 23605 ;; Parameters:    Size  Location     Type
 23606 ;;		None
 23607 ;; Auto vars:     Size  Location     Type
 23608 ;;		None
 23609 ;; Return value:  Size  Location     Type
 23610 ;;                  1    wreg      void 
 23611 ;; Registers used:
 23612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 23613 ;; Tracked objects:
 23614 ;;		On entry : 0/0
 23615 ;;		On exit  : 0/0
 23616 ;;		Unchanged: 0/0
 23617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23620 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23621 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23622 ;;Total ram usage:       21 bytes
 23623 ;; Hardware stack levels used:    1
 23624 ;; Hardware stack levels required when called:    8
 23625 ;; This function calls:
 23626 ;;		_Tmr_Tmr2Isr
 23627 ;; This function is called by:
 23628 ;;		Interrupt level 1
 23629 ;; This function uses a non-reentrant model
 23630 ;;
 23631                           
 23632                           	psect	intcodelo
 23633  000018                     __pintcodelo:
 23634                           	opt stack 0
 23635  000018                     _LowPriorityIsr:
 23636                           	opt stack 10
 23637                           
 23638                           ;incstack = 0
 23639  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 23640  00001A  CFD8 F060          	movff	status,??_LowPriorityIsr
 23641  00001E  CFE8 F061          	movff	wreg,??_LowPriorityIsr+1
 23642  000022  CFE0 F062          	movff	bsr,??_LowPriorityIsr+2
 23643  000026  CFFA F063          	movff	pclath,??_LowPriorityIsr+3
 23644  00002A  CFFB F064          	movff	pclatu,??_LowPriorityIsr+4
 23645  00002E  CFE9 F065          	movff	fsr0l,??_LowPriorityIsr+5
 23646  000032  CFEA F066          	movff	fsr0h,??_LowPriorityIsr+6
 23647  000036  CFE1 F067          	movff	fsr1l,??_LowPriorityIsr+7
 23648  00003A  CFE2 F068          	movff	fsr1h,??_LowPriorityIsr+8
 23649  00003E  CFD9 F069          	movff	fsr2l,??_LowPriorityIsr+9
 23650  000042  CFDA F06A          	movff	fsr2h,??_LowPriorityIsr+10
 23651  000046  CFF3 F06B          	movff	prodl,??_LowPriorityIsr+11
 23652  00004A  CFF4 F06C          	movff	prodh,??_LowPriorityIsr+12
 23653  00004E  CFF6 F06D          	movff	tblptrl,??_LowPriorityIsr+13
 23654  000052  CFF7 F06E          	movff	tblptrh,??_LowPriorityIsr+14
 23655  000056  CFF8 F06F          	movff	tblptru,??_LowPriorityIsr+15
 23656  00005A  CFF5 F070          	movff	tablat,??_LowPriorityIsr+16
 23657  00005E  C04A  F071         	movff	btemp,??_LowPriorityIsr+17
 23658  000062  C04B  F072         	movff	btemp+1,??_LowPriorityIsr+18
 23659  000066  C04C  F073         	movff	btemp+2,??_LowPriorityIsr+19
 23660  00006A  C04D  F074         	movff	btemp+3,??_LowPriorityIsr+20
 23661                           
 23662                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 23663  00006E  B29E               	btfsc	3998,1,c	;volatile
 23664                           
 23665                           ;irq.c: 259: {
 23666                           ;irq.c: 261: Tmr_Tmr2Isr();
 23667  000070  EC04  F021         	call	_Tmr_Tmr2Isr	;wreg free
 23668  000074  C074  F04D         	movff	??_LowPriorityIsr+20,btemp+3
 23669  000078  C073  F04C         	movff	??_LowPriorityIsr+19,btemp+2
 23670  00007C  C072  F04B         	movff	??_LowPriorityIsr+18,btemp+1
 23671  000080  C071  F04A         	movff	??_LowPriorityIsr+17,btemp
 23672  000084  C070  FFF5         	movff	??_LowPriorityIsr+16,tablat
 23673  000088  C06F  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 23674  00008C  C06E  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 23675  000090  C06D  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 23676  000094  C06C  FFF4         	movff	??_LowPriorityIsr+12,prodh
 23677  000098  C06B  FFF3         	movff	??_LowPriorityIsr+11,prodl
 23678  00009C  C06A  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 23679  0000A0  C069  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 23680  0000A4  C068  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 23681  0000A8  C067  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 23682  0000AC  C066  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 23683  0000B0  C065  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 23684  0000B4  C064  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 23685  0000B8  C063  FFFA         	movff	??_LowPriorityIsr+3,pclath
 23686  0000BC  C062  FFE0         	movff	??_LowPriorityIsr+2,bsr
 23687  0000C0  C061  FFE8         	movff	??_LowPriorityIsr+1,wreg
 23688  0000C4  C060  FFD8         	movff	??_LowPriorityIsr,status
 23689  0000C8  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 23690  0000CA  0010               	retfie	
 23691  0000CC                     __end_of_LowPriorityIsr:
 23692                           	opt stack 0
 23693                           tosu	equ	0xFFF
 23694                           tosh	equ	0xFFE
 23695                           tosl	equ	0xFFD
 23696                           pclatu	equ	0xFFB
 23697                           pclath	equ	0xFFA
 23698                           tblptru	equ	0xFF8
 23699                           tblptrh	equ	0xFF7
 23700                           tblptrl	equ	0xFF6
 23701                           tablat	equ	0xFF5
 23702                           prodh	equ	0xFF4
 23703                           prodl	equ	0xFF3
 23704                           intcon	equ	0xFF2
 23705                           intcon2	equ	0xFF1
 23706                           intcon3	equ	0xFF0
 23707                           indf0	equ	0xFEF
 23708                           postinc0	equ	0xFEE
 23709                           plusw0	equ	0xFEB
 23710                           fsr0h	equ	0xFEA
 23711                           fsr0l	equ	0xFE9
 23712                           wreg	equ	0xFE8
 23713                           indf1	equ	0xFE7
 23714                           postinc1	equ	0xFE6
 23715                           postdec1	equ	0xFE5
 23716                           fsr1h	equ	0xFE2
 23717                           fsr1l	equ	0xFE1
 23718                           bsr	equ	0xFE0
 23719                           indf2	equ	0xFDF
 23720                           postinc2	equ	0xFDE
 23721                           postdec2	equ	0xFDD
 23722                           plusw2	equ	0xFDB
 23723                           fsr2h	equ	0xFDA
 23724                           fsr2l	equ	0xFD9
 23725                           status	equ	0xFD8
 23726                           
 23727 ;; *************** function _Tmr_Tmr2Isr *****************
 23728 ;; Defined at:
 23729 ;;		line 308 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 23730 ;; Parameters:    Size  Location     Type
 23731 ;;		None
 23732 ;; Auto vars:     Size  Location     Type
 23733 ;;		None
 23734 ;; Return value:  Size  Location     Type
 23735 ;;                  1    wreg      void 
 23736 ;; Registers used:
 23737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 23738 ;; Tracked objects:
 23739 ;;		On entry : 0/0
 23740 ;;		On exit  : 0/0
 23741 ;;		Unchanged: 0/0
 23742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23747 ;;Total ram usage:        0 bytes
 23748 ;; Hardware stack levels used:    1
 23749 ;; Hardware stack levels required when called:    7
 23750 ;; This function calls:
 23751 ;;		Absolute function
 23752 ;;		_Sch_SchmIntService
 23753 ;; This function is called by:
 23754 ;;		_LowPriorityIsr
 23755 ;; This function uses a non-reentrant model
 23756 ;;
 23757                           
 23758                           	psect	text122
 23759  004208                     __ptext122:
 23760                           	opt stack 0
 23761  004208                     _Tmr_Tmr2Isr:
 23762                           	opt stack 10
 23763                           
 23764                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 23765                           
 23766                           ;incstack = 0
 23767  004208  929E               	bcf	3998,1,c	;volatile
 23768                           
 23769                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 23770  00420A  5015               	movf	_Tmr2IsrCallback,w,c
 23771  00420C  1016               	iorwf	_Tmr2IsrCallback+1,w,c
 23772  00420E  B4D8               	btfsc	status,2,c
 23773  004210  0012               	return	
 23774                           
 23775                           ;tmr_drv.c: 315: {
 23776                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 23777  004212  D801               	call	i1u728_28
 23778  004214  0012               	return	
 23779  004216                     i1u728_28:
 23780  004216  0005               	push	
 23781  004218  6EFA               	movwf	pclath,c
 23782  00421A  5015               	movf	_Tmr2IsrCallback,w,c
 23783  00421C  6EFD               	movwf	tosl,c
 23784  00421E  5016               	movf	_Tmr2IsrCallback+1,w,c
 23785  004220  6EFE               	movwf	tosh,c
 23786  004222  50F8               	movf	tblptru,w,c
 23787  004224  6EFF               	movwf	tosu,c
 23788  004226  50FA               	movf	pclath,w,c
 23789  004228  0012               	return		;indir
 23790  00422A                     __end_of_Tmr_Tmr2Isr:
 23791                           	opt stack 0
 23792                           tosu	equ	0xFFF
 23793                           tosh	equ	0xFFE
 23794                           tosl	equ	0xFFD
 23795                           pclatu	equ	0xFFB
 23796                           pclath	equ	0xFFA
 23797                           tblptru	equ	0xFF8
 23798                           tblptrh	equ	0xFF7
 23799                           tblptrl	equ	0xFF6
 23800                           tablat	equ	0xFF5
 23801                           prodh	equ	0xFF4
 23802                           prodl	equ	0xFF3
 23803                           intcon	equ	0xFF2
 23804                           intcon2	equ	0xFF1
 23805                           intcon3	equ	0xFF0
 23806                           indf0	equ	0xFEF
 23807                           postinc0	equ	0xFEE
 23808                           plusw0	equ	0xFEB
 23809                           fsr0h	equ	0xFEA
 23810                           fsr0l	equ	0xFE9
 23811                           wreg	equ	0xFE8
 23812                           indf1	equ	0xFE7
 23813                           postinc1	equ	0xFE6
 23814                           postdec1	equ	0xFE5
 23815                           fsr1h	equ	0xFE2
 23816                           fsr1l	equ	0xFE1
 23817                           bsr	equ	0xFE0
 23818                           indf2	equ	0xFDF
 23819                           postinc2	equ	0xFDE
 23820                           postdec2	equ	0xFDD
 23821                           plusw2	equ	0xFDB
 23822                           fsr2h	equ	0xFDA
 23823                           fsr2l	equ	0xFD9
 23824                           status	equ	0xFD8
 23825                           
 23826 ;; *************** function _Sch_SchmIntService *****************
 23827 ;; Defined at:
 23828 ;;		line 214 in file "../../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 23829 ;; Parameters:    Size  Location     Type
 23830 ;;		None
 23831 ;; Auto vars:     Size  Location     Type
 23832 ;;		None
 23833 ;; Return value:  Size  Location     Type
 23834 ;;                  1    wreg      void 
 23835 ;; Registers used:
 23836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 23837 ;; Tracked objects:
 23838 ;;		On entry : 0/0
 23839 ;;		On exit  : 0/0
 23840 ;;		Unchanged: 0/0
 23841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23846 ;;Total ram usage:        0 bytes
 23847 ;; Hardware stack levels used:    1
 23848 ;; Hardware stack levels required when called:    6
 23849 ;; This function calls:
 23850 ;;		_OsAlrm_ProcessOsAlarms
 23851 ;;		_UpdateOsCounters
 23852 ;;		_UpdateSchFlag
 23853 ;; This function is called by:
 23854 ;;		_SystemInit
 23855 ;;		_Tmr_Tmr2Isr
 23856 ;; This function uses a non-reentrant model
 23857 ;;
 23858                           
 23859                           	psect	text123
 23860  004400                     __ptext123:
 23861                           	opt stack 0
 23862  004400                     _Sch_SchmIntService:
 23863                           	opt stack 10
 23864                           
 23865                           ;os_sched.c: 217: UpdateSchFlag();
 23866                           
 23867                           ;incstack = 0
 23868  004400  EC43  F021         	call	_UpdateSchFlag	;wreg free
 23869                           
 23870                           ;os_sched.c: 219: UpdateOsCounters();
 23871  004404  ECF8  F021         	call	_UpdateOsCounters	;wreg free
 23872                           
 23873                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 23874  004408  EC7E  F009         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 23875  00440C  0012               	return		;funcret
 23876  00440E                     __end_of_Sch_SchmIntService:
 23877                           	opt stack 0
 23878                           tosu	equ	0xFFF
 23879                           tosh	equ	0xFFE
 23880                           tosl	equ	0xFFD
 23881                           pclatu	equ	0xFFB
 23882                           pclath	equ	0xFFA
 23883                           tblptru	equ	0xFF8
 23884                           tblptrh	equ	0xFF7
 23885                           tblptrl	equ	0xFF6
 23886                           tablat	equ	0xFF5
 23887                           prodh	equ	0xFF4
 23888                           prodl	equ	0xFF3
 23889                           intcon	equ	0xFF2
 23890                           intcon2	equ	0xFF1
 23891                           intcon3	equ	0xFF0
 23892                           indf0	equ	0xFEF
 23893                           postinc0	equ	0xFEE
 23894                           plusw0	equ	0xFEB
 23895                           fsr0h	equ	0xFEA
 23896                           fsr0l	equ	0xFE9
 23897                           wreg	equ	0xFE8
 23898                           indf1	equ	0xFE7
 23899                           postinc1	equ	0xFE6
 23900                           postdec1	equ	0xFE5
 23901                           fsr1h	equ	0xFE2
 23902                           fsr1l	equ	0xFE1
 23903                           bsr	equ	0xFE0
 23904                           indf2	equ	0xFDF
 23905                           postinc2	equ	0xFDE
 23906                           postdec2	equ	0xFDD
 23907                           plusw2	equ	0xFDB
 23908                           fsr2h	equ	0xFDA
 23909                           fsr2l	equ	0xFD9
 23910                           status	equ	0xFD8
 23911                           
 23912 ;; *************** function _UpdateSchFlag *****************
 23913 ;; Defined at:
 23914 ;;		line 132 in file "../../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 23915 ;; Parameters:    Size  Location     Type
 23916 ;;		None
 23917 ;; Auto vars:     Size  Location     Type
 23918 ;;		None
 23919 ;; Return value:  Size  Location     Type
 23920 ;;                  1    wreg      void 
 23921 ;; Registers used:
 23922 ;;		wreg, status,2, status,0
 23923 ;; Tracked objects:
 23924 ;;		On entry : 0/0
 23925 ;;		On exit  : 0/0
 23926 ;;		Unchanged: 0/0
 23927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23932 ;;Total ram usage:        0 bytes
 23933 ;; Hardware stack levels used:    1
 23934 ;; Hardware stack levels required when called:    2
 23935 ;; This function calls:
 23936 ;;		Nothing
 23937 ;; This function is called by:
 23938 ;;		_Sch_SchmIntService
 23939 ;; This function uses a non-reentrant model
 23940 ;;
 23941                           
 23942                           	psect	text124
 23943  004286                     __ptext124:
 23944                           	opt stack 0
 23945  004286                     _UpdateSchFlag:
 23946                           	opt stack 13
 23947                           
 23948                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 23949                           ;os_sched.c: 138: InterruptCounter++;
 23950                           
 23951                           ;incstack = 0
 23952  004286  0101               	movlb	1	; () banked
 23953  004288  4B10               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 23954  00428A  2B11               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 23955                           
 23956                           ; BSR set to: 1
 23957                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 23958  00428C  5110               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 23959  00428E  1111               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 23960  004290  B4D8               	btfsc	status,2,c
 23961  004292  0012               	return	
 23962                           
 23963                           ; BSR set to: 1
 23964                           ;os_sched.c: 141: {
 23965                           ;os_sched.c: 143: InterruptCounter = 0;
 23966  004294  0E00               	movlw	0
 23967  004296  6F11               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 23968  004298  0E00               	movlw	0
 23969  00429A  6F10               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 23970                           
 23971                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 23972  00429C  0E00               	movlw	0
 23973  00429E  0100               	movlb	0	; () banked
 23974  0042A0  6FE2               	movwf	_MainSystemTimebaseFlag& (0+255),b
 23975  0042A2  0012               	return	
 23976  0042A4                     __end_of_UpdateSchFlag:
 23977                           	opt stack 0
 23978                           tosu	equ	0xFFF
 23979                           tosh	equ	0xFFE
 23980                           tosl	equ	0xFFD
 23981                           pclatu	equ	0xFFB
 23982                           pclath	equ	0xFFA
 23983                           tblptru	equ	0xFF8
 23984                           tblptrh	equ	0xFF7
 23985                           tblptrl	equ	0xFF6
 23986                           tablat	equ	0xFF5
 23987                           prodh	equ	0xFF4
 23988                           prodl	equ	0xFF3
 23989                           intcon	equ	0xFF2
 23990                           intcon2	equ	0xFF1
 23991                           intcon3	equ	0xFF0
 23992                           indf0	equ	0xFEF
 23993                           postinc0	equ	0xFEE
 23994                           plusw0	equ	0xFEB
 23995                           fsr0h	equ	0xFEA
 23996                           fsr0l	equ	0xFE9
 23997                           wreg	equ	0xFE8
 23998                           indf1	equ	0xFE7
 23999                           postinc1	equ	0xFE6
 24000                           postdec1	equ	0xFE5
 24001                           fsr1h	equ	0xFE2
 24002                           fsr1l	equ	0xFE1
 24003                           bsr	equ	0xFE0
 24004                           indf2	equ	0xFDF
 24005                           postinc2	equ	0xFDE
 24006                           postdec2	equ	0xFDD
 24007                           plusw2	equ	0xFDB
 24008                           fsr2h	equ	0xFDA
 24009                           fsr2l	equ	0xFD9
 24010                           status	equ	0xFD8
 24011                           
 24012 ;; *************** function _UpdateOsCounters *****************
 24013 ;; Defined at:
 24014 ;;		line 157 in file "../../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 24015 ;; Parameters:    Size  Location     Type
 24016 ;;		None
 24017 ;; Auto vars:     Size  Location     Type
 24018 ;;		None
 24019 ;; Return value:  Size  Location     Type
 24020 ;;                  1    wreg      void 
 24021 ;; Registers used:
 24022 ;;		wreg, status,2, status,0
 24023 ;; Tracked objects:
 24024 ;;		On entry : 0/0
 24025 ;;		On exit  : 0/0
 24026 ;;		Unchanged: 0/0
 24027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24032 ;;Total ram usage:        0 bytes
 24033 ;; Hardware stack levels used:    1
 24034 ;; Hardware stack levels required when called:    2
 24035 ;; This function calls:
 24036 ;;		Nothing
 24037 ;; This function is called by:
 24038 ;;		_Sch_SchmIntService
 24039 ;; This function uses a non-reentrant model
 24040 ;;
 24041                           
 24042                           	psect	text125
 24043  0043F0                     __ptext125:
 24044                           	opt stack 0
 24045  0043F0                     _UpdateOsCounters:
 24046                           	opt stack 13
 24047                           
 24048                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 24049                           
 24050                           ;incstack = 0
 24051  0043F0  0E01               	movlw	1
 24052  0043F2  0101               	movlb	1	; () banked
 24053  0043F4  2706               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 24054  0043F6  0E00               	movlw	0
 24055  0043F8  2307               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 24056  0043FA  2308               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 24057  0043FC  2309               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 24058                           
 24059                           ; BSR set to: 1
 24060  0043FE  0012               	return		;funcret
 24061  004400                     __end_of_UpdateOsCounters:
 24062                           	opt stack 0
 24063                           tosu	equ	0xFFF
 24064                           tosh	equ	0xFFE
 24065                           tosl	equ	0xFFD
 24066                           pclatu	equ	0xFFB
 24067                           pclath	equ	0xFFA
 24068                           tblptru	equ	0xFF8
 24069                           tblptrh	equ	0xFF7
 24070                           tblptrl	equ	0xFF6
 24071                           tablat	equ	0xFF5
 24072                           prodh	equ	0xFF4
 24073                           prodl	equ	0xFF3
 24074                           intcon	equ	0xFF2
 24075                           intcon2	equ	0xFF1
 24076                           intcon3	equ	0xFF0
 24077                           indf0	equ	0xFEF
 24078                           postinc0	equ	0xFEE
 24079                           plusw0	equ	0xFEB
 24080                           fsr0h	equ	0xFEA
 24081                           fsr0l	equ	0xFE9
 24082                           wreg	equ	0xFE8
 24083                           indf1	equ	0xFE7
 24084                           postinc1	equ	0xFE6
 24085                           postdec1	equ	0xFE5
 24086                           fsr1h	equ	0xFE2
 24087                           fsr1l	equ	0xFE1
 24088                           bsr	equ	0xFE0
 24089                           indf2	equ	0xFDF
 24090                           postinc2	equ	0xFDE
 24091                           postdec2	equ	0xFDD
 24092                           plusw2	equ	0xFDB
 24093                           fsr2h	equ	0xFDA
 24094                           fsr2l	equ	0xFD9
 24095                           status	equ	0xFD8
 24096                           
 24097 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 24098 ;; Defined at:
 24099 ;;		line 115 in file "../../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 24100 ;; Parameters:    Size  Location     Type
 24101 ;;		None
 24102 ;; Auto vars:     Size  Location     Type
 24103 ;;  AlarmIndex      2   34[COMRAM] unsigned short 
 24104 ;; Return value:  Size  Location     Type
 24105 ;;                  1    wreg      void 
 24106 ;; Registers used:
 24107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24108 ;; Tracked objects:
 24109 ;;		On entry : 0/0
 24110 ;;		On exit  : 0/0
 24111 ;;		Unchanged: 0/0
 24112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24115 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24116 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24117 ;;Total ram usage:       10 bytes
 24118 ;; Hardware stack levels used:    1
 24119 ;; Hardware stack levels required when called:    5
 24120 ;; This function calls:
 24121 ;;		_I2cDummyTx
 24122 ;;		_OsAlrm_ClearOsAlarm
 24123 ;;		i1___wmul
 24124 ;; This function is called by:
 24125 ;;		_Sch_SchmIntService
 24126 ;; This function uses a non-reentrant model
 24127 ;;
 24128                           
 24129                           	psect	text126
 24130  0012FC                     __ptext126:
 24131                           	opt stack 0
 24132  0012FC                     _OsAlrm_ProcessOsAlarms:
 24133                           	opt stack 10
 24134                           
 24135                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 24136                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 24137                           
 24138                           ; BSR set to: 1
 24139                           ;incstack = 0
 24140  0012FC  0E00               	movlw	0
 24141  0012FE  6E49               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 24142  001300  0E00               	movlw	0
 24143  001302  6E48               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 24144  001304  5049               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 24145  001306  E105               	bnz	i1u706_20
 24146  001308  0E14               	movlw	20
 24147  00130A  5C48               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 24148  00130C  B0D8               	btfsc	status,0,c
 24149  00130E  0012               	return	
 24150  001310  D001               	goto	i1l639
 24151  001312                     i1u706_20:
 24152  001312  0012               	return	
 24153  001314                     i1l639:
 24154                           
 24155                           ;os_alarms.c: 121: {
 24156                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 24157  001314  C048  F038         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 24158  001318  C049  F039         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 24159  00131C  0E00               	movlw	0
 24160  00131E  6E3B               	movwf	i1___wmul@multiplicand+1,c
 24161  001320  0E0B               	movlw	11
 24162  001322  6E3A               	movwf	i1___wmul@multiplicand,c
 24163  001324  EC8A  F020         	call	i1___wmul	;wreg free
 24164  001328  0E00               	movlw	low _OsAlarms
 24165  00132A  2438               	addwf	?i1___wmul,w,c
 24166  00132C  6ED9               	movwf	fsr2l,c
 24167  00132E  0E05               	movlw	high _OsAlarms
 24168  001330  2039               	addwfc	?i1___wmul+1,w,c
 24169  001332  6EDA               	movwf	fsr2h,c
 24170  001334  04DE               	decf	postinc2,w,c
 24171  001336  A4D8               	btfss	status,2,c
 24172  001338  D086               	goto	i1u710_29
 24173                           
 24174                           ;os_alarms.c: 124: {
 24175                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 24176  00133A  C048  F038         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 24177  00133E  C049  F039         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 24178  001342  0E00               	movlw	0
 24179  001344  6E3B               	movwf	i1___wmul@multiplicand+1,c
 24180  001346  0E0B               	movlw	11
 24181  001348  6E3A               	movwf	i1___wmul@multiplicand,c
 24182  00134A  EC8A  F020         	call	i1___wmul	;wreg free
 24183  00134E  0E01               	movlw	1
 24184  001350  2638               	addwf	?i1___wmul,f,c
 24185  001352  0E00               	movlw	0
 24186  001354  2239               	addwfc	?i1___wmul+1,f,c
 24187  001356  0E00               	movlw	low _OsAlarms
 24188  001358  2438               	addwf	?i1___wmul,w,c
 24189  00135A  6ED9               	movwf	fsr2l,c
 24190  00135C  0E05               	movlw	high _OsAlarms
 24191  00135E  2039               	addwfc	?i1___wmul+1,w,c
 24192  001360  6EDA               	movwf	fsr2h,c
 24193  001362  2ADE               	incf	postinc2,f,c
 24194  001364  0E00               	movlw	0
 24195  001366  22DE               	addwfc	postinc2,f,c
 24196  001368  22DE               	addwfc	postinc2,f,c
 24197  00136A  22DE               	addwfc	postinc2,f,c
 24198                           
 24199                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 24200  00136C  C048  F038         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 24201  001370  C049  F039         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 24202  001374  0E00               	movlw	0
 24203  001376  6E3B               	movwf	i1___wmul@multiplicand+1,c
 24204  001378  0E0B               	movlw	11
 24205  00137A  6E3A               	movwf	i1___wmul@multiplicand,c
 24206  00137C  EC8A  F020         	call	i1___wmul	;wreg free
 24207  001380  0E05               	movlw	5
 24208  001382  2638               	addwf	?i1___wmul,f,c
 24209  001384  0E00               	movlw	0
 24210  001386  2239               	addwfc	?i1___wmul+1,f,c
 24211  001388  0E00               	movlw	low _OsAlarms
 24212  00138A  2438               	addwf	?i1___wmul,w,c
 24213  00138C  6ED9               	movwf	fsr2l,c
 24214  00138E  0E05               	movlw	high _OsAlarms
 24215  001390  2039               	addwfc	?i1___wmul+1,w,c
 24216  001392  6EDA               	movwf	fsr2h,c
 24217  001394  C048  F038         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 24218  001398  C049  F039         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 24219  00139C  0E00               	movlw	0
 24220  00139E  6E3B               	movwf	i1___wmul@multiplicand+1,c
 24221  0013A0  0E0B               	movlw	11
 24222  0013A2  6E3A               	movwf	i1___wmul@multiplicand,c
 24223  0013A4  EC8A  F020         	call	i1___wmul	;wreg free
 24224  0013A8  0E01               	movlw	1
 24225  0013AA  2638               	addwf	?i1___wmul,f,c
 24226  0013AC  0E00               	movlw	0
 24227  0013AE  2239               	addwfc	?i1___wmul+1,f,c
 24228  0013B0  0E00               	movlw	low _OsAlarms
 24229  0013B2  2438               	addwf	?i1___wmul,w,c
 24230  0013B4  6EE1               	movwf	fsr1l,c
 24231  0013B6  0E05               	movlw	high _OsAlarms
 24232  0013B8  2039               	addwfc	?i1___wmul+1,w,c
 24233  0013BA  6EE2               	movwf	fsr1h,c
 24234  0013BC  50DE               	movf	postinc2,w,c
 24235  0013BE  5CE6               	subwf	postinc1,w,c
 24236  0013C0  50DE               	movf	postinc2,w,c
 24237  0013C2  58E6               	subwfb	postinc1,w,c
 24238  0013C4  50DE               	movf	postinc2,w,c
 24239  0013C6  58E6               	subwfb	postinc1,w,c
 24240  0013C8  50DE               	movf	postinc2,w,c
 24241  0013CA  58E6               	subwfb	postinc1,w,c
 24242  0013CC  A0D8               	btfss	status,0,c
 24243  0013CE  D03B               	goto	i1u710_29
 24244                           
 24245                           ;os_alarms.c: 129: {
 24246                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 24247  0013D0  5048               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 24248  0013D2  ECB8  F01C         	call	_OsAlrm_ClearOsAlarm
 24249                           
 24250                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 24251  0013D6  C048  F038         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 24252  0013DA  C049  F039         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 24253  0013DE  0E00               	movlw	0
 24254  0013E0  6E3B               	movwf	i1___wmul@multiplicand+1,c
 24255  0013E2  0E0B               	movlw	11
 24256  0013E4  6E3A               	movwf	i1___wmul@multiplicand,c
 24257  0013E6  EC8A  F020         	call	i1___wmul	;wreg free
 24258  0013EA  0E09               	movlw	9
 24259  0013EC  2638               	addwf	?i1___wmul,f,c
 24260  0013EE  0E00               	movlw	0
 24261  0013F0  2239               	addwfc	?i1___wmul+1,f,c
 24262  0013F2  0E00               	movlw	low _OsAlarms
 24263  0013F4  2438               	addwf	?i1___wmul,w,c
 24264  0013F6  6ED9               	movwf	fsr2l,c
 24265  0013F8  0E05               	movlw	high _OsAlarms
 24266  0013FA  2039               	addwfc	?i1___wmul+1,w,c
 24267  0013FC  6EDA               	movwf	fsr2h,c
 24268  0013FE  50DE               	movf	postinc2,w,c
 24269  001400  10DE               	iorwf	postinc2,w,c
 24270  001402  B4D8               	btfsc	status,2,c
 24271  001404  D020               	goto	i1u710_29
 24272                           
 24273                           ;os_alarms.c: 134: {
 24274                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 24275  001406  C048  F038         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 24276  00140A  C049  F039         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 24277  00140E  0E00               	movlw	0
 24278  001410  6E3B               	movwf	i1___wmul@multiplicand+1,c
 24279  001412  0E0B               	movlw	11
 24280  001414  6E3A               	movwf	i1___wmul@multiplicand,c
 24281  001416  EC8A  F020         	call	i1___wmul	;wreg free
 24282  00141A  0E09               	movlw	9
 24283  00141C  2638               	addwf	?i1___wmul,f,c
 24284  00141E  0E00               	movlw	0
 24285  001420  2239               	addwfc	?i1___wmul+1,f,c
 24286  001422  0E00               	movlw	low _OsAlarms
 24287  001424  2438               	addwf	?i1___wmul,w,c
 24288  001426  6ED9               	movwf	fsr2l,c
 24289  001428  0E05               	movlw	high _OsAlarms
 24290  00142A  2039               	addwfc	?i1___wmul+1,w,c
 24291  00142C  6EDA               	movwf	fsr2h,c
 24292  00142E  D801               	call	i1u710_28
 24293  001430  D00A               	goto	i1u710_29
 24294  001432                     i1u710_28:
 24295  001432  0005               	push	
 24296  001434  6EFA               	movwf	pclath,c
 24297  001436  50DE               	movf	postinc2,w,c
 24298  001438  6EFD               	movwf	tosl,c
 24299  00143A  50DE               	movf	postinc2,w,c
 24300  00143C  6EFE               	movwf	tosh,c
 24301  00143E  50F8               	movf	tblptru,w,c
 24302  001440  6EFF               	movwf	tosu,c
 24303  001442  50FA               	movf	pclath,w,c
 24304  001444  0012               	return		;indir
 24305  001446                     i1u710_29:
 24306  001446  4A48               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 24307  001448  2A49               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 24308  00144A  5049               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 24309  00144C  E101               	bnz	i1l644
 24310  00144E  D75C               	goto	L46
 24311  001450                     i1l644:
 24312  001450  0012               	return		;funcret
 24313  001452                     __end_of_OsAlrm_ProcessOsAlarms:
 24314                           	opt stack 0
 24315                           tosu	equ	0xFFF
 24316                           tosh	equ	0xFFE
 24317                           tosl	equ	0xFFD
 24318                           pclatu	equ	0xFFB
 24319                           pclath	equ	0xFFA
 24320                           tblptru	equ	0xFF8
 24321                           tblptrh	equ	0xFF7
 24322                           tblptrl	equ	0xFF6
 24323                           tablat	equ	0xFF5
 24324                           prodh	equ	0xFF4
 24325                           prodl	equ	0xFF3
 24326                           intcon	equ	0xFF2
 24327                           intcon2	equ	0xFF1
 24328                           intcon3	equ	0xFF0
 24329                           indf0	equ	0xFEF
 24330                           postinc0	equ	0xFEE
 24331                           plusw0	equ	0xFEB
 24332                           fsr0h	equ	0xFEA
 24333                           fsr0l	equ	0xFE9
 24334                           wreg	equ	0xFE8
 24335                           indf1	equ	0xFE7
 24336                           postinc1	equ	0xFE6
 24337                           postdec1	equ	0xFE5
 24338                           fsr1h	equ	0xFE2
 24339                           fsr1l	equ	0xFE1
 24340                           bsr	equ	0xFE0
 24341                           indf2	equ	0xFDF
 24342                           postinc2	equ	0xFDE
 24343                           postdec2	equ	0xFDD
 24344                           plusw2	equ	0xFDB
 24345                           fsr2h	equ	0xFDA
 24346                           fsr2l	equ	0xFD9
 24347                           status	equ	0xFD8
 24348                           
 24349 ;; *************** function i1___wmul *****************
 24350 ;; Defined at:
 24351 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 24352 ;; Parameters:    Size  Location     Type
 24353 ;;  multiplier      2   18[COMRAM] unsigned int 
 24354 ;;  multiplicand    2   20[COMRAM] unsigned int 
 24355 ;; Auto vars:     Size  Location     Type
 24356 ;;  __wmul          2   22[COMRAM] unsigned int 
 24357 ;; Return value:  Size  Location     Type
 24358 ;;                  2   18[COMRAM] unsigned int 
 24359 ;; Registers used:
 24360 ;;		wreg, status,2, status,0, prodl, prodh
 24361 ;; Tracked objects:
 24362 ;;		On entry : 0/0
 24363 ;;		On exit  : 0/0
 24364 ;;		Unchanged: 0/0
 24365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24370 ;;Total ram usage:        6 bytes
 24371 ;; Hardware stack levels used:    1
 24372 ;; Hardware stack levels required when called:    2
 24373 ;; This function calls:
 24374 ;;		Nothing
 24375 ;; This function is called by:
 24376 ;;		_OsAlrm_ProcessOsAlarms
 24377 ;; This function uses a non-reentrant model
 24378 ;;
 24379                           
 24380                           	psect	text127
 24381  004114                     __ptext127:
 24382                           	opt stack 0
 24383  004114                     i1___wmul:
 24384                           	opt stack 12
 24385                           
 24386                           ;incstack = 0
 24387  004114  5038               	movf	i1___wmul@multiplier,w,c
 24388  004116  023A               	mulwf	i1___wmul@multiplicand,c
 24389  004118  CFF3 F03C          	movff	prodl,i1___wmul@product
 24390  00411C  CFF4 F03D          	movff	prodh,i1___wmul@product+1
 24391  004120  5038               	movf	i1___wmul@multiplier,w,c
 24392  004122  023B               	mulwf	i1___wmul@multiplicand+1,c
 24393  004124  50F3               	movf	prodl,w,c
 24394  004126  263D               	addwf	i1___wmul@product+1,f,c
 24395  004128  5039               	movf	i1___wmul@multiplier+1,w,c
 24396  00412A  023A               	mulwf	i1___wmul@multiplicand,c
 24397  00412C  50F3               	movf	prodl,w,c
 24398  00412E  263D               	addwf	i1___wmul@product+1,f,c
 24399  004130  C03C  F038         	movff	i1___wmul@product,?i1___wmul
 24400  004134  C03D  F039         	movff	i1___wmul@product+1,?i1___wmul+1
 24401  004138  0012               	return	
 24402  00413A                     __end_ofi1___wmul:
 24403                           	opt stack 0
 24404                           tosu	equ	0xFFF
 24405                           tosh	equ	0xFFE
 24406                           tosl	equ	0xFFD
 24407                           pclatu	equ	0xFFB
 24408                           pclath	equ	0xFFA
 24409                           tblptru	equ	0xFF8
 24410                           tblptrh	equ	0xFF7
 24411                           tblptrl	equ	0xFF6
 24412                           tablat	equ	0xFF5
 24413                           prodh	equ	0xFF4
 24414                           prodl	equ	0xFF3
 24415                           intcon	equ	0xFF2
 24416                           intcon2	equ	0xFF1
 24417                           intcon3	equ	0xFF0
 24418                           indf0	equ	0xFEF
 24419                           postinc0	equ	0xFEE
 24420                           plusw0	equ	0xFEB
 24421                           fsr0h	equ	0xFEA
 24422                           fsr0l	equ	0xFE9
 24423                           wreg	equ	0xFE8
 24424                           indf1	equ	0xFE7
 24425                           postinc1	equ	0xFE6
 24426                           postdec1	equ	0xFE5
 24427                           fsr1h	equ	0xFE2
 24428                           fsr1l	equ	0xFE1
 24429                           bsr	equ	0xFE0
 24430                           indf2	equ	0xFDF
 24431                           postinc2	equ	0xFDE
 24432                           postdec2	equ	0xFDD
 24433                           plusw2	equ	0xFDB
 24434                           fsr2h	equ	0xFDA
 24435                           fsr2l	equ	0xFD9
 24436                           status	equ	0xFD8
 24437                           
 24438 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 24439 ;; Defined at:
 24440 ;;		line 97 in file "../../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 24441 ;; Parameters:    Size  Location     Type
 24442 ;;  OsAlarmId       1    wreg     unsigned char 
 24443 ;; Auto vars:     Size  Location     Type
 24444 ;;  OsAlarmId       1   18[COMRAM] unsigned char 
 24445 ;; Return value:  Size  Location     Type
 24446 ;;                  1    wreg      void 
 24447 ;; Registers used:
 24448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24449 ;; Tracked objects:
 24450 ;;		On entry : 0/0
 24451 ;;		On exit  : 0/0
 24452 ;;		Unchanged: 0/0
 24453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24458 ;;Total ram usage:        1 bytes
 24459 ;; Hardware stack levels used:    1
 24460 ;; Hardware stack levels required when called:    2
 24461 ;; This function calls:
 24462 ;;		Nothing
 24463 ;; This function is called by:
 24464 ;;		_OsAlrm_ProcessOsAlarms
 24465 ;; This function uses a non-reentrant model
 24466 ;;
 24467                           
 24468                           	psect	text128
 24469  003970                     __ptext128:
 24470                           	opt stack 0
 24471  003970                     _OsAlrm_ClearOsAlarm:
 24472                           	opt stack 12
 24473                           
 24474                           ;incstack = 0
 24475                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 24476  003970  6E38               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 24477                           
 24478                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 24479  003972  5038               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 24480  003974  0D0B               	mullw	11
 24481  003976  0E00               	movlw	low _OsAlarms
 24482  003978  24F3               	addwf	prodl,w,c
 24483  00397A  6ED9               	movwf	fsr2l,c
 24484  00397C  0E05               	movlw	high _OsAlarms
 24485  00397E  20F4               	addwfc	prodh,w,c
 24486  003980  6EDA               	movwf	fsr2h,c
 24487  003982  0E00               	movlw	0
 24488  003984  6EDF               	movwf	indf2,c
 24489                           
 24490                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 24491  003986  5038               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 24492  003988  0D0B               	mullw	11
 24493  00398A  0E01               	movlw	1
 24494  00398C  26F3               	addwf	prodl,f,c
 24495  00398E  0E00               	movlw	0
 24496  003990  22F4               	addwfc	prodh,f,c
 24497  003992  0E00               	movlw	low _OsAlarms
 24498  003994  24F3               	addwf	prodl,w,c
 24499  003996  6ED9               	movwf	fsr2l,c
 24500  003998  0E05               	movlw	high _OsAlarms
 24501  00399A  20F4               	addwfc	prodh,w,c
 24502  00399C  6EDA               	movwf	fsr2h,c
 24503  00399E  6ADE               	clrf	postinc2,c
 24504  0039A0  6ADE               	clrf	postinc2,c
 24505  0039A2  6ADE               	clrf	postinc2,c
 24506  0039A4  6ADD               	clrf	postdec2,c
 24507                           
 24508                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 24509  0039A6  5038               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 24510  0039A8  0D0B               	mullw	11
 24511  0039AA  0E05               	movlw	5
 24512  0039AC  26F3               	addwf	prodl,f,c
 24513  0039AE  0E00               	movlw	0
 24514  0039B0  22F4               	addwfc	prodh,f,c
 24515  0039B2  0E00               	movlw	low _OsAlarms
 24516  0039B4  24F3               	addwf	prodl,w,c
 24517  0039B6  6ED9               	movwf	fsr2l,c
 24518  0039B8  0E05               	movlw	high _OsAlarms
 24519  0039BA  20F4               	addwfc	prodh,w,c
 24520  0039BC  6EDA               	movwf	fsr2h,c
 24521  0039BE  6ADE               	clrf	postinc2,c
 24522  0039C0  6ADE               	clrf	postinc2,c
 24523  0039C2  6ADE               	clrf	postinc2,c
 24524  0039C4  6ADD               	clrf	postdec2,c
 24525  0039C6  0012               	return		;funcret
 24526  0039C8                     __end_of_OsAlrm_ClearOsAlarm:
 24527                           	opt stack 0
 24528                           tosu	equ	0xFFF
 24529                           tosh	equ	0xFFE
 24530                           tosl	equ	0xFFD
 24531                           pclatu	equ	0xFFB
 24532                           pclath	equ	0xFFA
 24533                           tblptru	equ	0xFF8
 24534                           tblptrh	equ	0xFF7
 24535                           tblptrl	equ	0xFF6
 24536                           tablat	equ	0xFF5
 24537                           prodh	equ	0xFF4
 24538                           prodl	equ	0xFF3
 24539                           intcon	equ	0xFF2
 24540                           intcon2	equ	0xFF1
 24541                           intcon3	equ	0xFF0
 24542                           indf0	equ	0xFEF
 24543                           postinc0	equ	0xFEE
 24544                           plusw0	equ	0xFEB
 24545                           fsr0h	equ	0xFEA
 24546                           fsr0l	equ	0xFE9
 24547                           wreg	equ	0xFE8
 24548                           indf1	equ	0xFE7
 24549                           postinc1	equ	0xFE6
 24550                           postdec1	equ	0xFE5
 24551                           fsr1h	equ	0xFE2
 24552                           fsr1l	equ	0xFE1
 24553                           bsr	equ	0xFE0
 24554                           indf2	equ	0xFDF
 24555                           postinc2	equ	0xFDE
 24556                           postdec2	equ	0xFDD
 24557                           plusw2	equ	0xFDB
 24558                           fsr2h	equ	0xFDA
 24559                           fsr2l	equ	0xFD9
 24560                           status	equ	0xFD8
 24561                           
 24562 ;; *************** function _I2cDummyTx *****************
 24563 ;; Defined at:
 24564 ;;		line 193 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24565 ;; Parameters:    Size  Location     Type
 24566 ;;		None
 24567 ;; Auto vars:     Size  Location     Type
 24568 ;;		None
 24569 ;; Return value:  Size  Location     Type
 24570 ;;                  1    wreg      void 
 24571 ;; Registers used:
 24572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24573 ;; Tracked objects:
 24574 ;;		On entry : 0/0
 24575 ;;		On exit  : 0/0
 24576 ;;		Unchanged: 0/0
 24577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24582 ;;Total ram usage:        0 bytes
 24583 ;; Hardware stack levels used:    1
 24584 ;; Hardware stack levels required when called:    4
 24585 ;; This function calls:
 24586 ;;		i1_I2cSlv_SendI2cMsg
 24587 ;; This function is called by:
 24588 ;;		_I2cSlv_MainTask
 24589 ;;		_OsAlrm_ProcessOsAlarms
 24590 ;; This function uses a non-reentrant model
 24591 ;;
 24592                           
 24593                           	psect	text129
 24594  0042F4                     __ptext129:
 24595                           	opt stack 0
 24596  0042F4                     _I2cDummyTx:
 24597                           	opt stack 10
 24598                           
 24599                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 24600                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 24601                           
 24602                           ;incstack = 0
 24603  0042F4  0E25               	movlw	low I2cDummyTx@DummyBuffer
 24604  0042F6  6E3B               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 24605  0042F8  0E00               	movlw	high I2cDummyTx@DummyBuffer
 24606  0042FA  6E3C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 24607  0042FC  0E00               	movlw	0
 24608  0042FE  6E3D               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 24609  004300  0E01               	movlw	1
 24610  004302  6E3E               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 24611  004304  EC23  F01F         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 24612                           
 24613                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 24614  004308  0E01               	movlw	1
 24615  00430A  6E1A               	movwf	_I2cBusStatus,c
 24616  00430C  0012               	return		;funcret
 24617  00430E                     __end_of_I2cDummyTx:
 24618                           	opt stack 0
 24619                           tosu	equ	0xFFF
 24620                           tosh	equ	0xFFE
 24621                           tosl	equ	0xFFD
 24622                           pclatu	equ	0xFFB
 24623                           pclath	equ	0xFFA
 24624                           tblptru	equ	0xFF8
 24625                           tblptrh	equ	0xFF7
 24626                           tblptrl	equ	0xFF6
 24627                           tablat	equ	0xFF5
 24628                           prodh	equ	0xFF4
 24629                           prodl	equ	0xFF3
 24630                           intcon	equ	0xFF2
 24631                           intcon2	equ	0xFF1
 24632                           intcon3	equ	0xFF0
 24633                           indf0	equ	0xFEF
 24634                           postinc0	equ	0xFEE
 24635                           plusw0	equ	0xFEB
 24636                           fsr0h	equ	0xFEA
 24637                           fsr0l	equ	0xFE9
 24638                           wreg	equ	0xFE8
 24639                           indf1	equ	0xFE7
 24640                           postinc1	equ	0xFE6
 24641                           postdec1	equ	0xFE5
 24642                           fsr1h	equ	0xFE2
 24643                           fsr1l	equ	0xFE1
 24644                           bsr	equ	0xFE0
 24645                           indf2	equ	0xFDF
 24646                           postinc2	equ	0xFDE
 24647                           postdec2	equ	0xFDD
 24648                           plusw2	equ	0xFDB
 24649                           fsr2h	equ	0xFDA
 24650                           fsr2l	equ	0xFD9
 24651                           status	equ	0xFD8
 24652                           
 24653 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 24654 ;; Defined at:
 24655 ;;		line 252 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24656 ;; Parameters:    Size  Location     Type
 24657 ;;  TxBuffer        2   21[COMRAM] PTR unsigned char 
 24658 ;;		 -> Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 24659 ;;  SlaveAddr       1   23[COMRAM] unsigned char 
 24660 ;;  DataLenght      1   24[COMRAM] unsigned char 
 24661 ;; Auto vars:     Size  Location     Type
 24662 ;;  I2cSlv_SendI    1   25[COMRAM] unsigned char 
 24663 ;; Return value:  Size  Location     Type
 24664 ;;                  1    wreg      unsigned char 
 24665 ;; Registers used:
 24666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24667 ;; Tracked objects:
 24668 ;;		On entry : 0/0
 24669 ;;		On exit  : 0/0
 24670 ;;		Unchanged: 0/0
 24671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24675 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24676 ;;Total ram usage:        5 bytes
 24677 ;; Hardware stack levels used:    1
 24678 ;; Hardware stack levels required when called:    3
 24679 ;; This function calls:
 24680 ;;		i1_GenerateEvt
 24681 ;; This function is called by:
 24682 ;;		_I2cDummyTx
 24683 ;; This function uses a non-reentrant model
 24684 ;;
 24685                           
 24686                           	psect	text130
 24687  003E46                     __ptext130:
 24688                           	opt stack 0
 24689  003E46                     i1_I2cSlv_SendI2cMsg:
 24690                           	opt stack 10
 24691                           
 24692                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 24693                           
 24694                           ;incstack = 0
 24695  003E46  0E00               	movlw	0
 24696  003E48  6E3F               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 24697                           
 24698                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 24699  003E4A  0100               	movlb	0	; () banked
 24700  003E4C  05D4               	decf	_I2cComSts& (0+255),w,b
 24701  003E4E  B4D8               	btfsc	status,2,c
 24702  003E50  D014               	goto	i1l891
 24703                           
 24704                           ; BSR set to: 0
 24705                           ;i2c_slv.c: 257: {
 24706                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 24707  003E52  C03D  F12B         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 24708                           
 24709                           ; BSR set to: 0
 24710                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 24711  003E56  0E00               	movlw	0
 24712  003E58  0101               	movlb	1	; () banked
 24713  003E5A  6F2C               	movwf	(_I2cTxPacket+1)& (0+255),b
 24714                           
 24715                           ; BSR set to: 1
 24716                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 24717  003E5C  C03E  F12F         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 24718                           
 24719                           ; BSR set to: 1
 24720                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 24721  003E60  C03B  F12D         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 24722  003E64  C03C  F12E         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 24723                           
 24724                           ; BSR set to: 1
 24725                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 24726  003E68  0EE1               	movlw	low _I2cWriteDataEvt
 24727  003E6A  6E38               	movwf	i1GenerateEvt@Event,c
 24728  003E6C  0E00               	movlw	high _I2cWriteDataEvt
 24729  003E6E  6E39               	movwf	i1GenerateEvt@Event+1,c
 24730  003E70  ECC1  F021         	call	i1_GenerateEvt	;wreg free
 24731                           
 24732                           ;i2c_slv.c: 267: TxSts = 1u;
 24733  003E74  0E01               	movlw	1
 24734  003E76  6E3F               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 24735                           
 24736                           ;i2c_slv.c: 268: }
 24737  003E78  0012               	return	
 24738  003E7A                     i1l891:
 24739                           
 24740                           ;i2c_slv.c: 269: else
 24741                           ;i2c_slv.c: 270: {
 24742                           ;i2c_slv.c: 272: TxSts = 0u;
 24743  003E7A  0E00               	movlw	0
 24744  003E7C  6E3F               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 24745  003E7E  0012               	return	
 24746  003E80                     __end_ofi1_I2cSlv_SendI2cMsg:
 24747                           	opt stack 0
 24748                           tosu	equ	0xFFF
 24749                           tosh	equ	0xFFE
 24750                           tosl	equ	0xFFD
 24751                           pclatu	equ	0xFFB
 24752                           pclath	equ	0xFFA
 24753                           tblptru	equ	0xFF8
 24754                           tblptrh	equ	0xFF7
 24755                           tblptrl	equ	0xFF6
 24756                           tablat	equ	0xFF5
 24757                           prodh	equ	0xFF4
 24758                           prodl	equ	0xFF3
 24759                           intcon	equ	0xFF2
 24760                           intcon2	equ	0xFF1
 24761                           intcon3	equ	0xFF0
 24762                           indf0	equ	0xFEF
 24763                           postinc0	equ	0xFEE
 24764                           plusw0	equ	0xFEB
 24765                           fsr0h	equ	0xFEA
 24766                           fsr0l	equ	0xFE9
 24767                           wreg	equ	0xFE8
 24768                           indf1	equ	0xFE7
 24769                           postinc1	equ	0xFE6
 24770                           postdec1	equ	0xFE5
 24771                           fsr1h	equ	0xFE2
 24772                           fsr1l	equ	0xFE1
 24773                           bsr	equ	0xFE0
 24774                           indf2	equ	0xFDF
 24775                           postinc2	equ	0xFDE
 24776                           postdec2	equ	0xFDD
 24777                           plusw2	equ	0xFDB
 24778                           fsr2h	equ	0xFDA
 24779                           fsr2l	equ	0xFD9
 24780                           status	equ	0xFD8
 24781                           
 24782 ;; *************** function i1_GenerateEvt *****************
 24783 ;; Defined at:
 24784 ;;		line 75 in file "../../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 24785 ;; Parameters:    Size  Location     Type
 24786 ;;  Event           2   18[COMRAM] PTR struct EventStructur
 24787 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 24788 ;; Auto vars:     Size  Location     Type
 24789 ;;  GenerateEvt     1   20[COMRAM] enum E7727
 24790 ;; Return value:  Size  Location     Type
 24791 ;;                  1    wreg      enum E7699
 24792 ;; Registers used:
 24793 ;;		wreg, fsr2l, fsr2h, status,2
 24794 ;; Tracked objects:
 24795 ;;		On entry : 0/0
 24796 ;;		On exit  : 0/0
 24797 ;;		Unchanged: 0/0
 24798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24802 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24803 ;;Total ram usage:        3 bytes
 24804 ;; Hardware stack levels used:    1
 24805 ;; Hardware stack levels required when called:    2
 24806 ;; This function calls:
 24807 ;;		Nothing
 24808 ;; This function is called by:
 24809 ;;		i1_I2cSlv_SendI2cMsg
 24810 ;; This function uses a non-reentrant model
 24811 ;;
 24812                           
 24813                           	psect	text131
 24814  004382                     __ptext131:
 24815                           	opt stack 0
 24816  004382                     i1_GenerateEvt:
 24817                           	opt stack 10
 24818                           
 24819                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 24820                           
 24821                           ;incstack = 0
 24822  004382  0E00               	movlw	0
 24823  004384  6E3A               	movwf	i1GenerateEvt@EventStatus,c
 24824                           
 24825                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 24826  004386  C038  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 24827  00438A  C039  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 24828  00438E  0E02               	movlw	2
 24829  004390  6EDF               	movwf	indf2,c
 24830                           
 24831                           ;os_ser.c: 83: EventStatus = EventSent;
 24832  004392  0E02               	movlw	2
 24833  004394  6E3A               	movwf	i1GenerateEvt@EventStatus,c
 24834  004396  0012               	return	
 24835  004398                     __end_ofi1_GenerateEvt:
 24836                           	opt stack 0
 24837                           tosu	equ	0xFFF
 24838                           tosh	equ	0xFFE
 24839                           tosl	equ	0xFFD
 24840                           pclatu	equ	0xFFB
 24841                           pclath	equ	0xFFA
 24842                           tblptru	equ	0xFF8
 24843                           tblptrh	equ	0xFF7
 24844                           tblptrl	equ	0xFF6
 24845                           tablat	equ	0xFF5
 24846                           prodh	equ	0xFF4
 24847                           prodl	equ	0xFF3
 24848                           intcon	equ	0xFF2
 24849                           intcon2	equ	0xFF1
 24850                           intcon3	equ	0xFF0
 24851                           indf0	equ	0xFEF
 24852                           postinc0	equ	0xFEE
 24853                           plusw0	equ	0xFEB
 24854                           fsr0h	equ	0xFEA
 24855                           fsr0l	equ	0xFE9
 24856                           wreg	equ	0xFE8
 24857                           indf1	equ	0xFE7
 24858                           postinc1	equ	0xFE6
 24859                           postdec1	equ	0xFE5
 24860                           fsr1h	equ	0xFE2
 24861                           fsr1l	equ	0xFE1
 24862                           bsr	equ	0xFE0
 24863                           indf2	equ	0xFDF
 24864                           postinc2	equ	0xFDE
 24865                           postdec2	equ	0xFDD
 24866                           plusw2	equ	0xFDB
 24867                           fsr2h	equ	0xFDA
 24868                           fsr2l	equ	0xFD9
 24869                           status	equ	0xFD8
 24870                           
 24871 ;; *************** function _HighPriorityIsr *****************
 24872 ;; Defined at:
 24873 ;;		line 153 in file "../../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 24874 ;; Parameters:    Size  Location     Type
 24875 ;;		None
 24876 ;; Auto vars:     Size  Location     Type
 24877 ;;		None
 24878 ;; Return value:  Size  Location     Type
 24879 ;;                  1    wreg      void 
 24880 ;; Registers used:
 24881 ;;		wreg, status,2, status,0, cstack
 24882 ;; Tracked objects:
 24883 ;;		On entry : 0/0
 24884 ;;		On exit  : 0/0
 24885 ;;		Unchanged: 0/0
 24886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24889 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24890 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24891 ;;Total ram usage:       18 bytes
 24892 ;; Hardware stack levels used:    1
 24893 ;; Hardware stack levels required when called:    1
 24894 ;; This function calls:
 24895 ;;		_Mcu_Int0Isr
 24896 ;;		_Mcu_Int1Isr
 24897 ;;		_Rtcc_RtcIsr
 24898 ;;		_Uart_Uart1RxIsr
 24899 ;; This function is called by:
 24900 ;;		Interrupt level 2
 24901 ;; This function uses a non-reentrant model
 24902 ;;
 24903                           
 24904                           	psect	intcode
 24905  000008                     __pintcode:
 24906                           	opt stack 0
 24907  000008                     _HighPriorityIsr:
 24908                           	opt stack 10
 24909                           
 24910                           ;incstack = 0
 24911  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24912  00000A  EFDC  F015         	goto	int_func
 24913                           tosu	equ	0xFFF
 24914                           tosh	equ	0xFFE
 24915                           tosl	equ	0xFFD
 24916                           pclatu	equ	0xFFB
 24917                           pclath	equ	0xFFA
 24918                           tblptru	equ	0xFF8
 24919                           tblptrh	equ	0xFF7
 24920                           tblptrl	equ	0xFF6
 24921                           tablat	equ	0xFF5
 24922                           prodh	equ	0xFF4
 24923                           prodl	equ	0xFF3
 24924                           intcon	equ	0xFF2
 24925                           intcon2	equ	0xFF1
 24926                           intcon3	equ	0xFF0
 24927                           indf0	equ	0xFEF
 24928                           postinc0	equ	0xFEE
 24929                           plusw0	equ	0xFEB
 24930                           fsr0h	equ	0xFEA
 24931                           fsr0l	equ	0xFE9
 24932                           wreg	equ	0xFE8
 24933                           indf1	equ	0xFE7
 24934                           postinc1	equ	0xFE6
 24935                           postdec1	equ	0xFE5
 24936                           fsr1h	equ	0xFE2
 24937                           fsr1l	equ	0xFE1
 24938                           bsr	equ	0xFE0
 24939                           indf2	equ	0xFDF
 24940                           postinc2	equ	0xFDE
 24941                           postdec2	equ	0xFDD
 24942                           plusw2	equ	0xFDB
 24943                           fsr2h	equ	0xFDA
 24944                           fsr2l	equ	0xFD9
 24945                           status	equ	0xFD8
 24946                           
 24947                           	psect	intcode_body
 24948  002BB8                     __pintcode_body:
 24949                           	opt stack 10
 24950  002BB8                     int_func:
 24951                           	opt stack 10
 24952  002BB8  CFFA F026          	movff	pclath,??_HighPriorityIsr
 24953  002BBC  CFFB F027          	movff	pclatu,??_HighPriorityIsr+1
 24954  002BC0  CFE9 F028          	movff	fsr0l,??_HighPriorityIsr+2
 24955  002BC4  CFEA F029          	movff	fsr0h,??_HighPriorityIsr+3
 24956  002BC8  CFE1 F02A          	movff	fsr1l,??_HighPriorityIsr+4
 24957  002BCC  CFE2 F02B          	movff	fsr1h,??_HighPriorityIsr+5
 24958  002BD0  CFD9 F02C          	movff	fsr2l,??_HighPriorityIsr+6
 24959  002BD4  CFDA F02D          	movff	fsr2h,??_HighPriorityIsr+7
 24960  002BD8  CFF3 F02E          	movff	prodl,??_HighPriorityIsr+8
 24961  002BDC  CFF4 F02F          	movff	prodh,??_HighPriorityIsr+9
 24962  002BE0  CFF6 F030          	movff	tblptrl,??_HighPriorityIsr+10
 24963  002BE4  CFF7 F031          	movff	tblptrh,??_HighPriorityIsr+11
 24964  002BE8  CFF8 F032          	movff	tblptru,??_HighPriorityIsr+12
 24965  002BEC  CFF5 F033          	movff	tablat,??_HighPriorityIsr+13
 24966  002BF0  C04A  F034         	movff	btemp,??_HighPriorityIsr+14
 24967  002BF4  C04B  F035         	movff	btemp+1,??_HighPriorityIsr+15
 24968  002BF8  C04C  F036         	movff	btemp+2,??_HighPriorityIsr+16
 24969  002BFC  C04D  F037         	movff	btemp+3,??_HighPriorityIsr+17
 24970                           
 24971                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 24972  002C00  B2F2               	btfsc	intcon,1,c	;volatile
 24973                           
 24974                           ;irq.c: 158: {
 24975                           ;irq.c: 160: Mcu_Int0Isr();
 24976  002C02  EC38  F022         	call	_Mcu_Int0Isr	;wreg free
 24977                           
 24978                           ;irq.c: 161: }
 24979                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 24980  002C06  B0F0               	btfsc	intcon3,0,c	;volatile
 24981                           
 24982                           ;irq.c: 167: {
 24983                           ;irq.c: 169: Mcu_Int1Isr();
 24984  002C08  EC36  F022         	call	_Mcu_Int1Isr	;wreg free
 24985                           
 24986                           ;irq.c: 170: }
 24987                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 24988  002C0C  B0A4               	btfsc	4004,0,c	;volatile
 24989                           
 24990                           ;irq.c: 203: {
 24991                           ;irq.c: 205: Rtcc_RtcIsr();
 24992  002C0E  EC34  F022         	call	_Rtcc_RtcIsr	;wreg free
 24993                           
 24994                           ;irq.c: 206: }
 24995                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 24996  002C12  BA9E               	btfsc	3998,5,c	;volatile
 24997                           
 24998                           ;irq.c: 212: {
 24999                           ;irq.c: 214: Uart_Uart1RxIsr();
 25000  002C14  EC29  F022         	call	_Uart_Uart1RxIsr	;wreg free
 25001  002C18  C037  F04D         	movff	??_HighPriorityIsr+17,btemp+3
 25002  002C1C  C036  F04C         	movff	??_HighPriorityIsr+16,btemp+2
 25003  002C20  C035  F04B         	movff	??_HighPriorityIsr+15,btemp+1
 25004  002C24  C034  F04A         	movff	??_HighPriorityIsr+14,btemp
 25005  002C28  C033  FFF5         	movff	??_HighPriorityIsr+13,tablat
 25006  002C2C  C032  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 25007  002C30  C031  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 25008  002C34  C030  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 25009  002C38  C02F  FFF4         	movff	??_HighPriorityIsr+9,prodh
 25010  002C3C  C02E  FFF3         	movff	??_HighPriorityIsr+8,prodl
 25011  002C40  C02D  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 25012  002C44  C02C  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 25013  002C48  C02B  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 25014  002C4C  C02A  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 25015  002C50  C029  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 25016  002C54  C028  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 25017  002C58  C027  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 25018  002C5C  C026  FFFA         	movff	??_HighPriorityIsr,pclath
 25019  002C60  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25020  002C62  0011               	retfie		f
 25021  002C64                     __end_of_HighPriorityIsr:
 25022                           	opt stack 0
 25023                           tosu	equ	0xFFF
 25024                           tosh	equ	0xFFE
 25025                           tosl	equ	0xFFD
 25026                           pclatu	equ	0xFFB
 25027                           pclath	equ	0xFFA
 25028                           tblptru	equ	0xFF8
 25029                           tblptrh	equ	0xFF7
 25030                           tblptrl	equ	0xFF6
 25031                           tablat	equ	0xFF5
 25032                           prodh	equ	0xFF4
 25033                           prodl	equ	0xFF3
 25034                           intcon	equ	0xFF2
 25035                           intcon2	equ	0xFF1
 25036                           intcon3	equ	0xFF0
 25037                           indf0	equ	0xFEF
 25038                           postinc0	equ	0xFEE
 25039                           plusw0	equ	0xFEB
 25040                           fsr0h	equ	0xFEA
 25041                           fsr0l	equ	0xFE9
 25042                           wreg	equ	0xFE8
 25043                           indf1	equ	0xFE7
 25044                           postinc1	equ	0xFE6
 25045                           postdec1	equ	0xFE5
 25046                           fsr1h	equ	0xFE2
 25047                           fsr1l	equ	0xFE1
 25048                           bsr	equ	0xFE0
 25049                           indf2	equ	0xFDF
 25050                           postinc2	equ	0xFDE
 25051                           postdec2	equ	0xFDD
 25052                           plusw2	equ	0xFDB
 25053                           fsr2h	equ	0xFDA
 25054                           fsr2l	equ	0xFD9
 25055                           status	equ	0xFD8
 25056                           
 25057 ;; *************** function _Uart_Uart1RxIsr *****************
 25058 ;; Defined at:
 25059 ;;		line 584 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25060 ;; Parameters:    Size  Location     Type
 25061 ;;		None
 25062 ;; Auto vars:     Size  Location     Type
 25063 ;;		None
 25064 ;; Return value:  Size  Location     Type
 25065 ;;                  1    wreg      void 
 25066 ;; Registers used:
 25067 ;;		None
 25068 ;; Tracked objects:
 25069 ;;		On entry : 0/0
 25070 ;;		On exit  : 0/0
 25071 ;;		Unchanged: 0/0
 25072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25077 ;;Total ram usage:        0 bytes
 25078 ;; Hardware stack levels used:    1
 25079 ;; This function calls:
 25080 ;;		Nothing
 25081 ;; This function is called by:
 25082 ;;		_HighPriorityIsr
 25083 ;; This function uses a non-reentrant model
 25084 ;;
 25085                           
 25086                           	psect	text133
 25087  004452                     __ptext133:
 25088                           	opt stack 0
 25089  004452                     _Uart_Uart1RxIsr:
 25090                           	opt stack 10
 25091                           
 25092                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 25093                           ;uart_drv.c: 590: UartRxData = RCREG1;
 25094                           
 25095                           ;incstack = 0
 25096  004452  CFAF F01B          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 25097  004456  0012               	return		;funcret
 25098  004458                     __end_of_Uart_Uart1RxIsr:
 25099                           	opt stack 0
 25100                           tosu	equ	0xFFF
 25101                           tosh	equ	0xFFE
 25102                           tosl	equ	0xFFD
 25103                           pclatu	equ	0xFFB
 25104                           pclath	equ	0xFFA
 25105                           tblptru	equ	0xFF8
 25106                           tblptrh	equ	0xFF7
 25107                           tblptrl	equ	0xFF6
 25108                           tablat	equ	0xFF5
 25109                           prodh	equ	0xFF4
 25110                           prodl	equ	0xFF3
 25111                           intcon	equ	0xFF2
 25112                           intcon2	equ	0xFF1
 25113                           intcon3	equ	0xFF0
 25114                           indf0	equ	0xFEF
 25115                           postinc0	equ	0xFEE
 25116                           plusw0	equ	0xFEB
 25117                           fsr0h	equ	0xFEA
 25118                           fsr0l	equ	0xFE9
 25119                           wreg	equ	0xFE8
 25120                           indf1	equ	0xFE7
 25121                           postinc1	equ	0xFE6
 25122                           postdec1	equ	0xFE5
 25123                           fsr1h	equ	0xFE2
 25124                           fsr1l	equ	0xFE1
 25125                           bsr	equ	0xFE0
 25126                           indf2	equ	0xFDF
 25127                           postinc2	equ	0xFDE
 25128                           postdec2	equ	0xFDD
 25129                           plusw2	equ	0xFDB
 25130                           fsr2h	equ	0xFDA
 25131                           fsr2l	equ	0xFD9
 25132                           status	equ	0xFD8
 25133                           
 25134 ;; *************** function _Rtcc_RtcIsr *****************
 25135 ;; Defined at:
 25136 ;;		line 537 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 25137 ;; Parameters:    Size  Location     Type
 25138 ;;		None
 25139 ;; Auto vars:     Size  Location     Type
 25140 ;;		None
 25141 ;; Return value:  Size  Location     Type
 25142 ;;                  1    wreg      void 
 25143 ;; Registers used:
 25144 ;;		wreg, status,2, status,0
 25145 ;; Tracked objects:
 25146 ;;		On entry : 0/0
 25147 ;;		On exit  : 0/0
 25148 ;;		Unchanged: 0/0
 25149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25154 ;;Total ram usage:        0 bytes
 25155 ;; Hardware stack levels used:    1
 25156 ;; This function calls:
 25157 ;;		Nothing
 25158 ;; This function is called by:
 25159 ;;		_HighPriorityIsr
 25160 ;; This function uses a non-reentrant model
 25161 ;;
 25162                           
 25163                           	psect	text134
 25164  004468                     __ptext134:
 25165                           	opt stack 0
 25166  004468                     _Rtcc_RtcIsr:
 25167                           	opt stack 10
 25168                           
 25169                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 25170                           
 25171                           ;incstack = 0
 25172  004468  90A4               	bcf	4004,0,c	;volatile
 25173  00446A  0012               	return	
 25174  00446C                     __end_of_Rtcc_RtcIsr:
 25175                           	opt stack 0
 25176                           tosu	equ	0xFFF
 25177                           tosh	equ	0xFFE
 25178                           tosl	equ	0xFFD
 25179                           pclatu	equ	0xFFB
 25180                           pclath	equ	0xFFA
 25181                           tblptru	equ	0xFF8
 25182                           tblptrh	equ	0xFF7
 25183                           tblptrl	equ	0xFF6
 25184                           tablat	equ	0xFF5
 25185                           prodh	equ	0xFF4
 25186                           prodl	equ	0xFF3
 25187                           intcon	equ	0xFF2
 25188                           intcon2	equ	0xFF1
 25189                           intcon3	equ	0xFF0
 25190                           indf0	equ	0xFEF
 25191                           postinc0	equ	0xFEE
 25192                           plusw0	equ	0xFEB
 25193                           fsr0h	equ	0xFEA
 25194                           fsr0l	equ	0xFE9
 25195                           wreg	equ	0xFE8
 25196                           indf1	equ	0xFE7
 25197                           postinc1	equ	0xFE6
 25198                           postdec1	equ	0xFE5
 25199                           fsr1h	equ	0xFE2
 25200                           fsr1l	equ	0xFE1
 25201                           bsr	equ	0xFE0
 25202                           indf2	equ	0xFDF
 25203                           postinc2	equ	0xFDE
 25204                           postdec2	equ	0xFDD
 25205                           plusw2	equ	0xFDB
 25206                           fsr2h	equ	0xFDA
 25207                           fsr2l	equ	0xFD9
 25208                           status	equ	0xFD8
 25209                           
 25210 ;; *************** function _Mcu_Int1Isr *****************
 25211 ;; Defined at:
 25212 ;;		line 161 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 25213 ;; Parameters:    Size  Location     Type
 25214 ;;		None
 25215 ;; Auto vars:     Size  Location     Type
 25216 ;;		None
 25217 ;; Return value:  Size  Location     Type
 25218 ;;                  1    wreg      void 
 25219 ;; Registers used:
 25220 ;;		wreg, status,2, status,0
 25221 ;; Tracked objects:
 25222 ;;		On entry : 0/0
 25223 ;;		On exit  : 0/0
 25224 ;;		Unchanged: 0/0
 25225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25230 ;;Total ram usage:        0 bytes
 25231 ;; Hardware stack levels used:    1
 25232 ;; This function calls:
 25233 ;;		Nothing
 25234 ;; This function is called by:
 25235 ;;		_HighPriorityIsr
 25236 ;; This function uses a non-reentrant model
 25237 ;;
 25238                           
 25239                           	psect	text135
 25240  00446C                     __ptext135:
 25241                           	opt stack 0
 25242  00446C                     _Mcu_Int1Isr:
 25243                           	opt stack 10
 25244                           
 25245                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 25246                           
 25247                           ;incstack = 0
 25248  00446C  90F0               	bcf	intcon3,0,c	;volatile
 25249  00446E  0012               	return	
 25250  004470                     __end_of_Mcu_Int1Isr:
 25251                           	opt stack 0
 25252                           tosu	equ	0xFFF
 25253                           tosh	equ	0xFFE
 25254                           tosl	equ	0xFFD
 25255                           pclatu	equ	0xFFB
 25256                           pclath	equ	0xFFA
 25257                           tblptru	equ	0xFF8
 25258                           tblptrh	equ	0xFF7
 25259                           tblptrl	equ	0xFF6
 25260                           tablat	equ	0xFF5
 25261                           prodh	equ	0xFF4
 25262                           prodl	equ	0xFF3
 25263                           intcon	equ	0xFF2
 25264                           intcon2	equ	0xFF1
 25265                           intcon3	equ	0xFF0
 25266                           indf0	equ	0xFEF
 25267                           postinc0	equ	0xFEE
 25268                           plusw0	equ	0xFEB
 25269                           fsr0h	equ	0xFEA
 25270                           fsr0l	equ	0xFE9
 25271                           wreg	equ	0xFE8
 25272                           indf1	equ	0xFE7
 25273                           postinc1	equ	0xFE6
 25274                           postdec1	equ	0xFE5
 25275                           fsr1h	equ	0xFE2
 25276                           fsr1l	equ	0xFE1
 25277                           bsr	equ	0xFE0
 25278                           indf2	equ	0xFDF
 25279                           postinc2	equ	0xFDE
 25280                           postdec2	equ	0xFDD
 25281                           plusw2	equ	0xFDB
 25282                           fsr2h	equ	0xFDA
 25283                           fsr2l	equ	0xFD9
 25284                           status	equ	0xFD8
 25285                           
 25286 ;; *************** function _Mcu_Int0Isr *****************
 25287 ;; Defined at:
 25288 ;;		line 126 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 25289 ;; Parameters:    Size  Location     Type
 25290 ;;		None
 25291 ;; Auto vars:     Size  Location     Type
 25292 ;;		None
 25293 ;; Return value:  Size  Location     Type
 25294 ;;                  1    wreg      void 
 25295 ;; Registers used:
 25296 ;;		wreg, status,2, status,0
 25297 ;; Tracked objects:
 25298 ;;		On entry : 0/0
 25299 ;;		On exit  : 0/0
 25300 ;;		Unchanged: 0/0
 25301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25306 ;;Total ram usage:        0 bytes
 25307 ;; Hardware stack levels used:    1
 25308 ;; This function calls:
 25309 ;;		Nothing
 25310 ;; This function is called by:
 25311 ;;		_HighPriorityIsr
 25312 ;; This function uses a non-reentrant model
 25313 ;;
 25314                           
 25315                           	psect	text136
 25316  004470                     __ptext136:
 25317                           	opt stack 0
 25318  004470                     _Mcu_Int0Isr:
 25319                           	opt stack 10
 25320                           
 25321                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 25322                           
 25323                           ;incstack = 0
 25324  004470  92F2               	bcf	intcon,1,c	;volatile
 25325  004472  0012               	return	
 25326  004474                     __end_of_Mcu_Int0Isr:
 25327                           	opt stack 0
 25328                           tosu	equ	0xFFF
 25329                           tosh	equ	0xFFE
 25330                           tosl	equ	0xFFD
 25331                           pclatu	equ	0xFFB
 25332                           pclath	equ	0xFFA
 25333                           tblptru	equ	0xFF8
 25334                           tblptrh	equ	0xFF7
 25335                           tblptrl	equ	0xFF6
 25336                           tablat	equ	0xFF5
 25337                           prodh	equ	0xFF4
 25338                           prodl	equ	0xFF3
 25339                           intcon	equ	0xFF2
 25340                           intcon2	equ	0xFF1
 25341                           intcon3	equ	0xFF0
 25342                           indf0	equ	0xFEF
 25343                           postinc0	equ	0xFEE
 25344                           plusw0	equ	0xFEB
 25345                           fsr0h	equ	0xFEA
 25346                           fsr0l	equ	0xFE9
 25347                           wreg	equ	0xFE8
 25348                           indf1	equ	0xFE7
 25349                           postinc1	equ	0xFE6
 25350                           postdec1	equ	0xFE5
 25351                           fsr1h	equ	0xFE2
 25352                           fsr1l	equ	0xFE1
 25353                           bsr	equ	0xFE0
 25354                           indf2	equ	0xFDF
 25355                           postinc2	equ	0xFDE
 25356                           postdec2	equ	0xFDD
 25357                           plusw2	equ	0xFDB
 25358                           fsr2h	equ	0xFDA
 25359                           fsr2l	equ	0xFD9
 25360                           status	equ	0xFD8
 25361                           tosu	equ	0xFFF
 25362                           tosh	equ	0xFFE
 25363                           tosl	equ	0xFFD
 25364                           pclatu	equ	0xFFB
 25365                           pclath	equ	0xFFA
 25366                           tblptru	equ	0xFF8
 25367                           tblptrh	equ	0xFF7
 25368                           tblptrl	equ	0xFF6
 25369                           tablat	equ	0xFF5
 25370                           prodh	equ	0xFF4
 25371                           prodl	equ	0xFF3
 25372                           intcon	equ	0xFF2
 25373                           intcon2	equ	0xFF1
 25374                           intcon3	equ	0xFF0
 25375                           indf0	equ	0xFEF
 25376                           postinc0	equ	0xFEE
 25377                           plusw0	equ	0xFEB
 25378                           fsr0h	equ	0xFEA
 25379                           fsr0l	equ	0xFE9
 25380                           wreg	equ	0xFE8
 25381                           indf1	equ	0xFE7
 25382                           postinc1	equ	0xFE6
 25383                           postdec1	equ	0xFE5
 25384                           fsr1h	equ	0xFE2
 25385                           fsr1l	equ	0xFE1
 25386                           bsr	equ	0xFE0
 25387                           indf2	equ	0xFDF
 25388                           postinc2	equ	0xFDE
 25389                           postdec2	equ	0xFDD
 25390                           plusw2	equ	0xFDB
 25391                           fsr2h	equ	0xFDA
 25392                           fsr2l	equ	0xFD9
 25393                           status	equ	0xFD8
 25394                           
 25395                           	psect	text137
 25396  000000                     __ptext137:
 25397                           	opt stack 0
 25398                           tosu	equ	0xFFF
 25399                           tosh	equ	0xFFE
 25400                           tosl	equ	0xFFD
 25401                           pclatu	equ	0xFFB
 25402                           pclath	equ	0xFFA
 25403                           tblptru	equ	0xFF8
 25404                           tblptrh	equ	0xFF7
 25405                           tblptrl	equ	0xFF6
 25406                           tablat	equ	0xFF5
 25407                           prodh	equ	0xFF4
 25408                           prodl	equ	0xFF3
 25409                           intcon	equ	0xFF2
 25410                           intcon2	equ	0xFF1
 25411                           intcon3	equ	0xFF0
 25412                           indf0	equ	0xFEF
 25413                           postinc0	equ	0xFEE
 25414                           plusw0	equ	0xFEB
 25415                           fsr0h	equ	0xFEA
 25416                           fsr0l	equ	0xFE9
 25417                           wreg	equ	0xFE8
 25418                           indf1	equ	0xFE7
 25419                           postinc1	equ	0xFE6
 25420                           postdec1	equ	0xFE5
 25421                           fsr1h	equ	0xFE2
 25422                           fsr1l	equ	0xFE1
 25423                           bsr	equ	0xFE0
 25424                           indf2	equ	0xFDF
 25425                           postinc2	equ	0xFDE
 25426                           postdec2	equ	0xFDD
 25427                           plusw2	equ	0xFDB
 25428                           fsr2h	equ	0xFDA
 25429                           fsr2l	equ	0xFD9
 25430                           status	equ	0xFD8
 25431                           
 25432                           	psect	rparam
 25433  0000                     tosu	equ	0xFFF
 25434                           tosh	equ	0xFFE
 25435                           tosl	equ	0xFFD
 25436                           pclatu	equ	0xFFB
 25437                           pclath	equ	0xFFA
 25438                           tblptru	equ	0xFF8
 25439                           tblptrh	equ	0xFF7
 25440                           tblptrl	equ	0xFF6
 25441                           tablat	equ	0xFF5
 25442                           prodh	equ	0xFF4
 25443                           prodl	equ	0xFF3
 25444                           intcon	equ	0xFF2
 25445                           intcon2	equ	0xFF1
 25446                           intcon3	equ	0xFF0
 25447                           indf0	equ	0xFEF
 25448                           postinc0	equ	0xFEE
 25449                           plusw0	equ	0xFEB
 25450                           fsr0h	equ	0xFEA
 25451                           fsr0l	equ	0xFE9
 25452                           wreg	equ	0xFE8
 25453                           indf1	equ	0xFE7
 25454                           postinc1	equ	0xFE6
 25455                           postdec1	equ	0xFE5
 25456                           fsr1h	equ	0xFE2
 25457                           fsr1l	equ	0xFE1
 25458                           bsr	equ	0xFE0
 25459                           indf2	equ	0xFDF
 25460                           postinc2	equ	0xFDE
 25461                           postdec2	equ	0xFDD
 25462                           plusw2	equ	0xFDB
 25463                           fsr2h	equ	0xFDA
 25464                           fsr2l	equ	0xFD9
 25465                           status	equ	0xFD8
 25466                           
 25467                           	psect	temp
 25468  00004A                     btemp:
 25469                           	opt stack 0
 25470  00004A                     	ds	1
 25471  0000                     int$flags	set	btemp
 25472  0000                     wtemp6	set	btemp+1
 25473                           tosu	equ	0xFFF
 25474                           tosh	equ	0xFFE
 25475                           tosl	equ	0xFFD
 25476                           pclatu	equ	0xFFB
 25477                           pclath	equ	0xFFA
 25478                           tblptru	equ	0xFF8
 25479                           tblptrh	equ	0xFF7
 25480                           tblptrl	equ	0xFF6
 25481                           tablat	equ	0xFF5
 25482                           prodh	equ	0xFF4
 25483                           prodl	equ	0xFF3
 25484                           intcon	equ	0xFF2
 25485                           intcon2	equ	0xFF1
 25486                           intcon3	equ	0xFF0
 25487                           indf0	equ	0xFEF
 25488                           postinc0	equ	0xFEE
 25489                           plusw0	equ	0xFEB
 25490                           fsr0h	equ	0xFEA
 25491                           fsr0l	equ	0xFE9
 25492                           wreg	equ	0xFE8
 25493                           indf1	equ	0xFE7
 25494                           postinc1	equ	0xFE6
 25495                           postdec1	equ	0xFE5
 25496                           fsr1h	equ	0xFE2
 25497                           fsr1l	equ	0xFE1
 25498                           bsr	equ	0xFE0
 25499                           indf2	equ	0xFDF
 25500                           postinc2	equ	0xFDE
 25501                           postdec2	equ	0xFDD
 25502                           plusw2	equ	0xFDB
 25503                           fsr2h	equ	0xFDA
 25504                           fsr2l	equ	0xFD9
 25505                           status	equ	0xFD8


Data Sizes:
    Strings     100
    Constant    563
    Data        69
    BSS         1219
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      73
    BANK0           160     79     131
    BANK1           256     50     106
    BANK2           256    200     255
    BANK3           256      0     210
    BANK4           192      0     178
    BANK5           256      0     220
    BANK6           256      0      80
    BANK7           256    200     200
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK2[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK6[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_3(CODE[20]), STR_1(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK3[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK3[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[3]), STR_5(CODE[2]), STR_4(CODE[2]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK6[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK6[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK6[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK2[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[7]), STR_8(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK6[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK3[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK6[80]), 

    LedStateMachine@LedSts	PTR enum E8811 size(2) Largest target is 1
		 -> Led3Sts(COMRAM[1]), Led2Sts(COMRAM[1]), Led1Sts(COMRAM[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK2[6]), Led2Pulse(BANK2[6]), Led1Pulse(BANK2[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK2[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(COMRAM[1]), Led2OutSts(COMRAM[1]), Led1OutSts(COMRAM[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK2[6]), Led2Pulse(BANK2[6]), Led1Pulse(BANK2[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK2[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 236
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK3[50]), MsgFormat(CODE[236]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK4[50]), Terminal@Payload(BANK6[80]), Terminal@UsbRxBuffer(BANK7[200]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK7[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3986$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3986$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3986$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3986$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK4[64]), cdc_data_rx(BANK4[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2439$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2429$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2429$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2405$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2405$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2405$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2405$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(COMRAM[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(COMRAM[1]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK3[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK3[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK2[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(COMRAM[1]), I2cRxPacket(BANK2[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 

    S1871_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), I2cSlv_MainTask(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), I2cSlv_MainTask(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S1836_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK1[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK1[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK2[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(COMRAM[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK1[50]), I2cDummyTx@DummyBuffer(COMRAM[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK1[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK1[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_ScheduleTasks
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MyApp_Task->_Led_SetLedBlinkTime
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    None.

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  241412
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4570
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             21 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             21 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             21 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4192
                                             48 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    3946
                                             44 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2528
                                             34 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             21 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             21 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  236842
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  118514
                                             74 BANK0      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  118328
                                             74 BANK0      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      22
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      22
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   50664
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   46532
                                             48 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    1900
                                             29 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   26819
                                             47 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     410
                                             21 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   26180
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   20173
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    7743
                                             41 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                             21 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             21 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6469
                                             41 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5915
                                             33 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2764
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     733
                                             29 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     400
                                             21 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     114
                                             21 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     115
                                             22 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0      92
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             28 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   41305
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   41305
                                             62 BANK0     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     268
                                             21 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1166
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     430
                                             21 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    1698
                                             21 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           454   454      0   29842
                                             58 BANK0      4     4      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK7    200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             27 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             24 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2787
                                             33 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             21 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             24 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             21 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     928
                                             21 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2142
                                             27 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3702
                                             37 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3157
                                             28 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             21 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2335
                                             28 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             21 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9371
                                             27 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             21 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    2485
                                             51 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6     779
                                             25 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    1067
                                             45 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             25 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             21 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    1400
                                             24 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    1193
                                             24 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0     451
                                             25 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    7334
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    6426
                                             33 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    6177
                                             29 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2610
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2614
                                             21 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     488
                                             25 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     321
                                             21 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      22
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     221
                                             22 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      22
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     177
                                             21 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                           1     1      0     776
                _Led_SetLedBlinkTime
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     332
                                             21 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    5699
                                             44 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    5699
                                             33 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2053
                                             28 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedStatus                                     2     1      1     444
                                             21 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1629
                                             28 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1029
                                             21 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   12395
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9228
                                             27 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8730
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1451
                                             46 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1274
                                             34 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1052
                                             21 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    1716
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2     414
                                             21 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             22 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2     888
                                             24 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      22
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      23
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2     460
                                             21 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0     944
                                              0 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0     944
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0     944
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0     944
                                             26 COMRAM    10    10      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             21 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0       0
                                              0 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
           _Led_SetLedStatus
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
           _Led_SetLedStatus
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     190      36       39.1%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100     C8      C8      20       78.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      50      18       31.3%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      DC      16       85.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      D2      12       82.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8      FF      10       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     32      6A       7       41.4%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      B2      14       92.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4F      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      49       1       77.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     5AD       8        0.0%
DATA                 0      0     73D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 27 16:44:08 2020

                              _USB_SD_Ptr FD5F                           ??_UpdateSchFlag 0038  
                      _Mcu_StartSystemPll 424A                     ?_LedPulseStateMachine 007C  
                            ___awdiv@sign 007A                    I2c_ReadData@ReadPacket 0078  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 007E  
                           _USBDeviceInit 1452                       ___wmul@multiplicand 0077  
                        i1___wmul@product 003C                        __size_of_CDCInitEP 006A  
                InitSchedTimer@TmrBConfig 0090                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 007B      USER_USB_CALLBACK_EVENT_HANDLER@event 0081  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0083                    I2c_ReadData@ReadStatus 00D6  
                                     l202 1212                                       l203 121A  
                                     l205 1262                                       l206 1288  
                                     l208 1292                                       l160 114A  
                                     l209 12B2                                       l161 101A  
                                     l162 118A                                       l170 10E4  
                                     l171 10FA                                       l163 1028  
                                     l164 1068                                       l173 10FE  
                                     l237 4256                                       l174 1106  
                                     l166 1076                                       l350 318C  
             __end_of_USBStdGetDscHandler 1956                                       l430 2FA2  
                                     l175 1112                                       l167 109E  
                                     l351 3198                                       l431 2F92  
                                     l192 12BC                                       l176 112A  
                                     l344 31AC                                       l352 31A4  
                                     l440 2FF6                                       l432 2FB8  
                                     l193 1192                                       l169 10B2  
                                     l345 3152                                       l441 2FD6  
                                     l433 2F96                                       l194 12F6  
                                     l346 31DA                                       l370 0A98  
                                     l442 2FDC                                       l434 2F9C  
                                     l195 11A0                                       l179 1138  
                                     l347 315A                                       l451 3B86  
                                     l196 11E2                                       l348 3160  
                                     l372 0AE0                                       l428 3010  
                                     l460 1D28                                       l349 3180  
                                     l373 0B28                                       l198 11F0  
                                     l374 0B70                                       l438 2FE2  
                                     l199 1206                                       l375 0BB8  
                                     l439 2FD2                                       l376 0C00  
                                     l448 3BA0                                       l456 1D68  
                                     l369 0C90                                       l377 0C48  
                                     l449 3B6C                                       l457 1D54  
                                     l466 4238                                       l458 1CFC  
                                     l474 249C                                       l723 4064  
                                     l467 4230                                       l459 1D62  
                                     l475 24B8                                       l901 41FE  
                                     l469 4234                                       l735 2570  
                                     l672 1A74                                       l746 34F0  
                                     l755 324E                                       l747 3496  
                                     l748 350A                                       _BDT 000400  
                                     l861 2A34                                       l749 34C6  
                                     l870 2A06                                       l862 29A4  
                                     l758 3260                                       l863 29C4  
                                     l687 42AE                                       l872 2A20  
                                     l873 2A2A                                       l865 29E4  
                                     l891 3E04                                       l883 3A0A  
                                     l868 29EC                                       l884 39CA  
                                     l886 3A04                                       l896 3D88  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                 __end_of_HighPriorityIsr 2C64                       ?_Mcu_StartSystemPll 0026  
                              _USBSuspend 3F50                              ___awmod@sign 007A  
                    USBStdSetCfgHandler@i 0089                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0078                            _USBDeviceTasks 0E96  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00D1  
             Rtcc_AlarmConfig@AlarmConfig 0075              __end_of_I2cSlv_ReceiveI2cMsg 3D8E  
                           ??_Mcu_Int0Isr 0026                             ??_Mcu_Int1Isr 0026  
                   ??_USBCtrlTrfRxService 0075                            ??_getsUSBUSART 007F  
                USBEnableEndpoint@options 007D             ??_Tmr_RegisterTmr2IsrCallback 0077  
                                    l1100 0EEE                                      l1101 0EF6  
                                    l1110 0F98                                      l1102 0F0C  
                                    l1103 0F18                                      l1112 0FAC  
                                    l1105 0F40                                      l1122 3C52  
                                    l1131 2984                                      l1123 3C62  
                                    l1115 0FD2                                      l1107 0F56  
                                    l1212 193E                                      l1204 1EA4  
                                    l1108 0F62                                      l1221 1936  
                                    l1213 183A                                      l1117 0FF0  
                                    l1109 0F8C                                      l1310 08EA  
                                    l1230 2A76                                      l1206 1F18  
                                    l1127 28FE                                      l1311 0906  
                                    l1215 184E                                      l1231 2A7C  
                                    l1119 100E                                      l1320 0A5E  
                                    l1304 0828                                      l1216 18D6  
                                    l1232 2A9C                                      l1152 2EA6  
                                    l1240 3C38                                      l2121 210E  
                                    l1129 2928                                      l1313 0992  
                                    l1305 082E                                      l1225 2ADE  
                                    l2130 21D4                                      l2122 2108  
                                    l1146 27AA                                      l1218 18DE  
                                    l1226 2A64                                      l1154 2EC0  
                                    l1403 30B2                                      l1323 0A18  
                                    l1315 095C                                      l1307 08A0  
                                    l1219 192E                                      l1163 1C00  
                                    l1083 149C                                      l2140 339A  
                                    l2124 2150                                      l1316 0978  
                                    l1164 1BAA                                      l2141 33AA  
                                    l1181 23FE                                      l1325 0A6A  
                                    l1309 08E8                                      l1229 2AF4  
                                    l1253 313A                                      l1085 14C4  
                                    l2302 41DE                                      l1406 3060  
                                    l1182 23C8                                      l1158 2F5A  
                                    l1318 09DA                                      l1254 3134  
                                    l1094 0EC2                                      l2143 33C8  
                                    l2127 21A0                                      l1407 308C  
                                    l1431 16FA                                      l1319 09E6  
                                    l1087 14FC                                      l1239 3C3A  
                                    l1247 3EAC                                      l1095 0EB8  
                                    l2400 3B0E                                      l2144 33C0  
                                    l2160 3560                                      l2128 2162  
                                    l1408 3066                                      l2312 2C6C  
                                    l1272 2858                                      l1192 1AC8  
                                    l1264 37B0                                      l1168 1C2A  
                                    l1248 3EAA                                      l1096 0EB6  
                                    l2161 356A                                      l2153 3526  
                                    l1441 17A8                                      l1433 1708  
                                    l1185 243C                                      l1177 2398  
                                    l1273 285E                                      l1193 1AA6  
                                    l2162 3578                                      l2154 3532  
                                    l2410 3D00                                      l2314 2CA8  
                                    l1450 1808                                      l1442 1770  
                                    l1186 2406                                      l1274 28DA  
                                    l1266 37FA                                      l1290 203C  
                                    l2147 33E8                                      l2315 2CEA  
                                    l1435 173C                                      l1179 23A2  
                                    l1275 28A0                                      l1195 1B3C  
                                    l1291 2042                                      l1099 0EDE  
                                    l1532 16BE                                      l2148 33F2  
                                    l2156 3548                                      l2308 3CA8  
                                    l1196 1B22                                      l1292 2048  
                                    l2420 3BC4                                      l1533 15A0  
                                    l2149 3400                                      l2157 3540  
                                    l2405 3CDE                                      l1445 17EA  
                                    l1277 28C0                                      l1381 2B94  
                                    l1293 205C                                      l2342 343A  
                                    l1534 16D4                                      l1550 1DFE  
                                    l2406 3CD6                                      l1446 17B2  
                                    l1438 174E                                      l1382 2B30  
                                    l1294 2062                                      l2343 342E  
                                    l1535 15C8                                      l1439 1752  
                                    l1287 20C2                                      l1471 414C  
                                    l1536 164C                                      l1560 2D56  
                                    l1800 00E2                                      l1384 2B48  
                                    l1296 2068                                      l1288 2032  
                                    l1472 413C                                      l1545 1E28  
                                    l2409 3CF6                                      l2601 0E4A  
                                    l2425 3F9C                                      l1449 1804  
                                    l1385 2B56                                      l1297 2086  
                                    l2346 346E                                      l1546 1D70  
                                    l1562 2D64                                      l2602 0E84  
                                    l2426 3F8A                                      l1386 2B72  
                                    l1298 20A2                                      l1474 4142  
                                    l2347 347C                                      l1547 1E44  
                                    l1555 2D88                                      l1563 2D72  
                                    l1803 0152                                      l1387 2B8A  
                                    l2419 3BE6                                      l1571 22BC  
                                    l1580 3FF2                                      l1548 1D8E  
                                    l1556 2D1A                                      l2620 1F52  
                                    l1820 0250                                      l1804 01E2  
                                    l1812 01D0                USBConfigureEndpoint@handle 007B  
                                    l1557 2DB0                                      l2621 1F4C  
                                    l1485 3802                                      l1558 2D2A  
                                    l2606 433A                                      l1830 0392  
                                    l1822 0304                                      l1806 01AE  
                                    l1910 4160                                      l1654 32EC  
                                    l1559 2D3C                                      l2623 1F7A  
                                    l1823 02C6                                      l1807 019C  
                                    l2551 38CC                                      l1479 380E  
                                    l1487 3808                                      l1655 3272  
                                    l1576 3FF8                                      l2560 3F02  
                                    l2632 2018                                      l1840 04E4  
                                    l1832 03D2                                      l2552 38C6  
                                    l1912 4168                                      l1568 2366  
                                    l1577 3FE6                                      l1585 3AAC  
                                    l2561 3EF8                                      l1833 04EC  
                                    l1569 22AE                                      l1657 32D8  
                                    l1586 3A76                                      l2626 1FDA  
                                    l1818 0326                                      l2554 38E6  
                                    l2395 3AE4                                      l1579 3FEC  
                                    l2627 1F92                                      l1835 0428  
                                    l1819 02B4                                      l2555 38DC  
                                    l1931 3EE0                                      l2396 3ADC  
                                    l1588 3A88                                      l2628 1FAA  
                                    l1836 03EC                                      l1932 3EBA  
                                    l1589 3A9A                                      l2629 1FBA  
                                    l1909 416E                                      l2582 0D00  
                                    l2566 3D9E                                      l1854 07C8  
                                    l1870 0738                                      l2399 3B04  
                                    l2663 40E4                                      l1839 0498  
                                    l1951 2252                                      l2567 3D98  
                                    l1855 0562                                      l2592 0D7C  
                                    l2584 0D18                                      l1952 2234  
                                    l1944 21EA                                      l1872 07A2  
                                    l1864 05B8                                      l6112 23A2  
                                    l2593 0D8C                                      l1945 2204  
                                    l1857 0588                                      l1970 393E  
                                    l2658 3FD6                                      l2586 0D6C  
                                    l1946 2266                                      l1874 07C2  
                                    l1866 05D8                                      l1882 42DC  
                                    l2595 0DA6                                      l2675 3E3C  
                                    l1955 2286                                      l1859 05A4  
                                    l2668 41BC                                      l1868 05F8  
                                    l1949 220A                                      l2598 0DB8  
                                    l2599 0E24                                      l2679 4322  
                                    l1799 0546                                      l1879 42E2  
                              _Led1OutSts 0023                                      l1969 392A  
                                    l6074 3F8A                                      l8410 4256  
                                    l7428 1494                                      l7456 14F4  
                                    l7378 3166                                      l6834 3BC4  
                                    l9510 219C                                      l8982 1E9C  
                                    STR_1 FF92                                      STR_3 FFBC  
                                    STR_4 FFF4                                      STR_5 FFF4  
                                    STR_6 FFB9                                      STR_7 FFD0  
                                    STR_8 FFE1                                      STR_9 FFED  
                              _Led2OutSts 0021                                      u4120 23F0  
                                    u4140 242E                                      u4310 1922  
                                    u5015 43A6                                      u4127 23E6  
                                    u5016 43A8                                _Led3OutSts 001F  
                                    u4147 2424                                      u4317 1918  
                                    u4280 18A0                                      u4290 18D0  
                                    u4287 1896                                      u4297 18C6  
                                    u5530 33CC                                      u8010 3CE2  
                                    u6330 390E                                      u7131 32CA  
                                    u7141 32E2                                      u5630 343E  
                                    u6415 35E6                                      u6337 3904  
                                    u6425 43BA                                      u6426 43BC  
                                    u7155 40A6                                      u5820 1558  
                                    u7156 40A8                                      u6445 4366  
                                    u7165 40B2                                      u6446 436A  
                                    u5590 354C                                      u6390 229E  
                                    u7166 40B4                                      u5655 3B3A  
                                    u6455 3B76                                      u7175 40BE  
                   ??_USBCtrlTrfTxService 0075                                      u8160 40E0  
                                    u6456 3B78                                      u7176 40C0  
                                    u6465 3B82                                      u8250 3E20  
                                    u6466 3B84                                      u6475 3B90  
                                    u8340 303C                                      u8180 3FC6  
                                    u6476 3B92                                      u6485 3B9C  
                                    u8270 3E2C                                      u5790 14B8  
                                    u6486 3B9E                                      u5775 437C  
                                    _UCFG 000F39                                      u5776 437E  
                                    u8530 0D08                                      u9180 0432  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    u7750 1ED0                                      u6951 3796  
                                    u8560 0D42                                      u7930 09FC  
                                    u9530 1014                                      _UEIE 000F37  
                                    u8580 0D52                                      u9620 1798  
                __size_of_Uart_Uart1RxIsr 0006                                      u9640 17DA  
                                    u9650 17F2                                      u9627 178E  
                                    u7980 3AE8                                      u9647 17D0  
                                    u9808 3630                                      _UEIR 000F63  
                                    _UCON 000F65                                      u9809 365E  
                                    u9848 1A28                                      u9849 1A56  
                              _AlarmEvent 001E                            ?_StopCondition 0026  
                     _OsTmr_OsTickCounter 0106                             __CFG_FCMEN$ON 000000  
                         _CDCDataInHandle 000F              I2c_ReadData@TentativeCounter 00D7  
             Led_SetLedBlinkTime@OnTimeMs 0075    USBStdFeatureReqHandler@current_ep_data 008C  
                                    _pDst 0011                                      _atoi 2106  
                                    _main 440E                                      _itoa 3C82  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 02C8                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 004A                                      _utoa 2C64  
                                    _xtoi 1F3C                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 444C               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 314C               I2cSlv_SendI2cMsg@DataLenght 007B  
                    ??_Mcu_StartSystemPll 0075                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                     __end_of_GenerateEvt 4356                            ?_Mcu_SetWdgSts 0026  
                          ??_Mcu_ClearWdg 0075                __end_of_USBCheckStdRequest 2106  
                         _Rtcm_SystemDate 0314                    ??_USBCtrlTrfOutHandler 0077  
                __end_of_GetOsTickCounter 43D0                        ?_Rtcc_GetRtccValue 0026  
                          _GetElapsedTime 250C             I2cSlv_ReceiveI2cMsg@SlaveAddr 007A  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0089  
             __end_of_OsAlrm_ClearOsAlarm 39C8                                     EECON2 000FA7  
                ??_USBStdGetStatusHandler 0075                       __size_of_I2cDummyTx 001A  
                          ?_USBDeviceInit 0026                             __CFG_PLLDIV$2 000000  
                     ??_Rtcc_GetRtccValue 0075                           __end_of_Welcome FEDE  
                       ?_UpdateOsCounters 0026                                     l10058 1D68  
                                   l10180 0FA4                                     l10430 35FE  
                                   l10442 1960                                     l10722 3828  
                                   l10724 3858                                     ?_atoi 007B  
                                   ?_main 0026                                     ?_itoa 0085  
                         __end_of___awdiv 340A                           __end_of___awmod 3582  
       __size_of_USBCtrlEPServiceComplete 00FA                           __end_of___lldiv 348E  
                                   ?_utoa 007C                           ___awdiv@divisor 0077  
                  __end_of_USBDeviceTasks 1018                                     ?_xtoi 007B  
               ?_USBCtrlEPServiceComplete 0026                           __end_of___lwdiv 3B18  
                         __end_of___lwmod 3D0A                        ??_UpdateOsCounters 0038  
                                   i1l644 1450                                     i1l639 1314  
                                   i1l891 3E7A                                     _UADDR 000F38  
                         ___awdiv@counter 0079                                     _AlCfg 0130  
            Led_SetLedBlinkTime@OffTimeMs 0077                   I2cSendMsgSm@I2cComState 00D3  
                                   _USTAT 000F64                   __end_of_LedStateMachine 2DB6  
      __size_of_USBCtrlEPAllowStatusStage 00C4                       ___lmul@multiplicand 0079  
                                   _RxLen 0112           __end_of_USBCtrlEPAllowDataStage 2EF4  
                                   _sd000 FF8E                                     _sd001 FF47  
                                   _sd002 FF21            ?_USBIncrement1msInternalTimers 0026  
             Rtcc_GetRtccValue@RtccPtrVal 0076                      __end_of_Led_MainTask 2378  
                  ??_OsTmr_GetTimerStatus 008F              LedPulseStateMachine@LedPulse 007C  
                         __end_of_isalpha 3FE0                           __end_of_isdigit 41E6  
                                   atoi@a 0080                                     atoi@s 007B  
                         __end_of_isspace 40EC                I2c_WriteData@I2cWriteState 00DD  
               Rtcc_GetRtccValue@RegValue 0078                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 41C4                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 413A  
               __end_of_Rtcc_GetRtccValue 31E0                                     plusw0 000FEB  
                                   plusw2 000FDB                         __end_of_CDCInitEP 373A  
                                   utoa@c 0084                             ??_SetBaudRate 008A  
                                   utoa@v 0082                                     status 000FD8  
                         _I2cSlv_MainTask 39C8                 Rtcc_GetRtccValue@RetValue 0077  
                     i1___wmul@multiplier 0038                                     wtemp6 004B  
                         __end_of_sprintf 22AC                           __end_of_tolower 4326  
                     __end_of_Mcu_Int0Isr 4474                       __end_of_Mcu_Int1Isr 4470  
                                   xtoi@c 0082                                     xtoi@s 007B  
                         __end_of_toupper 433E                    __end_of_GetElapsedTime 25D4  
             Rtcc_SetRtccValue@RtccPtrVal 0080                     __end_of_Term_MainTask 42F4  
                 LedStateMachine@LedBlink 0085                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 007B              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 007B                      __end_of_I2cSetConfig 4098  
                          _InitSchedTimer 4010                           __initialization 269C  
                    __end_of_I2c_ReadData 12FC                   Rtcc_RtcConfig@RtcConfig 0076  
                    __end_of_I2cSendMsgSm 2A58                   LedStateMachine@LedPulse 0087  
                              _MyApp_Task 3EB8                              __end_of_atoi 21DE  
                            __end_of_main 441A                              __end_of_itoa 3CC6  
                  ??_LedPulseStateMachine 007F                     _control_signal_bitmap 0017  
                            __end_of_utoa 2D0E                              __end_of_xtoi 2022  
                __end_of_Rtcm_SetRtccDate 3A70                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 0075                          __end_of_ReadByte 4438  
                    Term_MainSm@TermDelay 03C7                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FF7C                 __size_of_USBCtrlEPService 0094  
                                  ??_atoi 007D                                    ??_main 00AF  
                                  ??_itoa 008B                                    ??_utoa 0082  
                                  ??_xtoi 007D                             __activetblptr 000002  
                         ?_USBDeviceTasks 0026                          __end_of_TmrBInit 3022  
                              _ReceiveEvt 403E                               ?_USBSuspend 0026  
                       ?_Mcu_ConfigExtInt 0026                          ?_HighPriorityIsr 0026  
                        __end_of_Terminal 0560                             ?_SetAckStatus 0026  
                       ?_Led_SetLedStatus 0075                                _OsTmr_Wait 348E  
                            _cdc_mem_type 0018                        ??_Mcu_ConfigExtInt 0075  
                         ReceiveEvt@Event 0075                          _CDCDataOutHandle 00BB  
                         ??_StopCondition 0075                        ??_Led_SetLedStatus 0076  
                        ___awdiv@dividend 0075                __end_of_UsbDevice_MainTask 415E  
                         getsUSBUSART@len 007E                          ??_LowPriorityIsr 0060  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
      Irq_InitIntController@IntPriorityEn 0077                     __size_of_CDCTxService 0142  
                             _GenerateEvt 433E                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
               Uart_Uart1RxIsr@UartRxData 001B                             CDCTxService@i 007C  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                    _RPINR1 000EE7  
                              _TaskNumber FD67                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                __end_of_Rtcc_AlarmConfig 36D0                           ??_Mcu_SetWdgSts 0075  
                  __end_of_InitSchedTimer 403E                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0079                            _EnableReceiver 4464  
                       ??_Uart_Uart1RxIsr 0026                         _shortPacketStatus 00D0  
                           ??_Term_MainSm 009E                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                           USBDeviceTasks@i 0090  
             USBStdFeatureReqHandler@pUEP 008A                  USBTransferOnePacket@data 0076  
              USBCtrlTrfInHandler@lastDTS 0076                             ??_RtccIrqInit 0075  
                ??_OsAlrm_ProcessOsAlarms 0040                           ??_USBDeviceInit 007D  
                     __end_of_SetBaudRate 3B66                                    ___lmul 3918  
                    _I2cSlv_ReceiveI2cMsg 3D4E                              ?_putUSBUSART 007B  
                                  ___wmul 40EC                                 ??___awdiv 0079  
          GetElapsedTime@CurrentTimestamp 0089                            __CFG_STVREN$ON 000000  
                               ??___awmod 0079                         ?_Rtcm_GetRtccDate 0079  
                     _Led_SetLedBlinkTime 3A70                                 ??___lldiv 007D  
                    __end_of_getsUSBUSART 30B8                                 ??___lwdiv 0079  
                  Tmr_TmrBPrSet@IntFreqHz 0082                                 ??___lwmod 0079  
                       _USBEnableEndpoint 3C3E           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0026                              ReadByte@Byte 0075  
                                  _memcpy 3BB2                                    _memset 3F80  
                                  clear_0 26E8                                    clear_1 26FA  
                                  clear_2 2706                                    clear_3 2712  
                                  clear_4 271E                                    clear_5 272A  
                                  clear_6 2736                                    clear_7 2742  
                                  clear_8 274E                          ___awdiv@quotient 007B  
                      ??_Rtcm_GetRtccDate 0081                           ___awmod@divisor 0077  
                      _ExtInt0IsrCallback 0116                         ?_OsTmr_StartTimer 0079  
                         ___awmod@counter 0079                        ?_USBEnableEndpoint 007D  
                                  _strcat 38BC                                    _strcpy 3EEE  
                                  _strlen 3D8E                                    _strtol 0CC0  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 3E46  
                      ??_OsTmr_StartTimer 007F                                    itoa@cp 008B  
                               ??_isalpha 0078                                 ??_isdigit 0075  
                          ??_SetAckStatus 0075                              _CDCTxService 16E6  
                        ?_LedStateMachine 0081                              __mediumconst FD5E  
                               ??_isspace 0075                    __size_of_CheckTxStatus 000A  
                                  tblptrh 000FF7                                 ??_isupper 0075  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                    __end_of_Mcu_ClearWdg 445C                       ??_USBEnableEndpoint 007E  
                 __end_of_I2cSlv_MainTask 3A1C                             ??_Tmr_Tmr2Isr 004A  
                            ??_I2cDummyTx 0040                 OsTmr_GetTimerStatus@Timer 008D  
                             _Mcu_Int0Isr 4470                               _Mcu_Int1Isr 446C  
                    ?_Led_SetLedBlinkTime 0075                                 ??_sprintf 007B  
                               ??_tolower 0075                    __size_of_ScheduleTasks 0122  
                             _CtrlTrfData 000438                                 ??_toupper 0075  
                    _controlTransferState 00CF                     __end_ofi1_GenerateEvt 4398  
                   __end_of_Rtcm_MainTask 32FE                __size_of_Rtcc_GetRtccValue 0094  
                      _ExtInt1IsrCallback 0114                                __accesstop 0060  
                           ?_Wdg_MainTask 0026                   __end_of__initialization 2754  
                  Tmr_TmrBPrSet@Prescaler 0084                              __pbssBIGRAMl 07C8  
                  __end_of_EnableReceiver 4468                        __size_of_WriteByte 000A  
                           ___rparam_used 000001                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0026           I2cSlv_QueryI2cData@TimeoutTimer 035F  
                    Terminal@FormatOption 02D1                           __CFG_IOL1WAY$ON 000000  
                   I2cDummyTx@DummyBuffer 0025                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0030                     ?_I2cSlv_ReceiveI2cMsg 0078  
                          __pcstackCOMRAM 0026                 __end_of_USBEnableEndpoint 3C82  
                             ?_MyApp_Task 0026                  LedStateMachine@LedOutSts 008A  
                           __end_of_sd000 FF92                             __end_of_sd001 FF65  
                           __end_of_sd002 FF47                              __pidataBANK0 4474  
                            __pidataBANK2 4475                              __pidataBANK3 3D0A  
        __size_of_USBCtrlEPAllowDataStage 009E             __size_of_USBConfigureEndpoint 0098  
                __size_of_InitializeTasks 0070                        __end_of_I2cDummyTx 430E  
             __end_of_USBCtrlTrfInHandler 28E4                           __CFG_DSWDTPS$G2 000000  
                     __end_of_Term_MainSm 0804                     LedStateMachine@LedOut 0083  
                   LedStateMachine@LedSts 0081                        LedStateMachine@Led 008B  
                               ?i1___wmul 0038                       __end_of_RtccIrqInit 4382  
                   __size_of_Led_MainTask 00CC             I2cSlv_QueryI2cData@I2cOpState 00D2  
                             ?_ReceiveEvt 0075                                _SystemInit 3F20  
                              _cdc_notice 030A                     __end_of_Tmr_TmrBPrSet 1D6E  
                     __end_of_Rtcc_RtcIsr 446C                                _cdc_rx_len 00C3  
                       __end_of_MsgFormat FE55                                _cdc_tx_len 00C1  
                     Terminal@UsbRxBuffer 0700                               ?_OsTmr_Wait 0093  
                   ??_Led_SetLedBlinkTime 0079                       Terminal@UsbTxBuffer 0200  
             __end_ofi1_I2cSlv_SendI2cMsg 3E80                  ??_USBCtrlTrfSetupHandler 008F  
                 _USBTicksSinceSuspendEnd 00C4                     _Irq_InitIntController 4098  
                  _USBStdGetStatusHandler 2A58       Mcu_StartSystemPll@PllStartupCounter 0075  
                          _Rtcc_RtcConfig 2DB6                                __pbssBANK0 00AF  
                              __pbssBANK1 0100                                __pbssBANK2 02C8  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                 ?_Pm_DsReleasePinControl 0026                            ??_Wdg_MainTask 0076  
                               ?_ReadByte 0026                         MyApp_Task@Options 0026  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0026  
                   __size_of_I2c_ReadData 016C                     __size_of_I2cSendMsgSm 00B6  
                     __end_of_Tmr_Tmr2Isr 422A                               _SetBaudRate 3B18  
             __size_of_USBWakeFromSuspend 0038                               _pBDTEntryIn 00B5  
        __end_of_USBCtrlEPServiceComplete 1C80                                 ?_TmrBInit 0075  
                           _CheckTxStatus 4438                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00AE                         ?_GetOsTickCounter 0075  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 0075  
                               ?_Terminal 0026                                   ?___lmul 0075  
                            _Led_MainTask 22AC                            _Rtcc_UnlockRtc 43D0  
                            _I2cBusStatus 001A                                   ?___wmul 0075  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 1956  
                   __end_of_I2c_WriteData 1190                        ??_GetOsTickCounter 0079  
                                 ?_memcpy 0075                                   ?_memset 0075  
                          ___lmul@product 007D                                _device_dsc FF7C  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 30B8  
                   __end_of_UpdateSchFlag 42A4                                _ep_data_in 000C  
                         _I2cWriteDataEvt 00E1                  i1GenerateEvt@EventStatus 003A  
                           ?_Rtcc_LockRtc 0026                                   ?_strcat 0075  
                              ??i1___wmul 003C                                   ?_strcpy 0075  
                                 ?_strlen 0075                                   ?_strtol 0081  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 1B86  
                       __end_of_WriteByte 442E                        _USBCheckStdRequest 2022  
                       _configDescriptor1 FEDE                       Wdg_MainTask@Options 0026  
             __end_of_USBCtrlTrfTxService 2444                       _USBStdSetCfgHandler 1E56  
                  I2cSlv_QueryI2cData@Ret 0019                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 406C                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 2E56  
                                 _SSP2ADD 000F74                                   _SSP2BUF 000F75  
                            _I2c_ReadData 1190                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 29A2  
                        ?_I2cSlv_MainTask 0026            __end_of_Pm_DsReleasePinControl 4452  
                     ?_USBCheckStdRequest 0026              __size_of_USBStdGetDscHandler 012E  
                     __size_of_MyApp_Task 0036                                   _UIEbits 000F36  
                                 _UIRbits 000F62                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 0024                                   _Led2Sts 0022  
                                 _Led3Sts 0020                __end_of_Sch_SchmIntService 440E  
                           _cdc_trf_state 00C2                                ??_ReadByte 0075  
                          ?_CheckTxStatus 0026               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 010A                                   _pCDCSrc 010D  
                   __size_of_getsUSBUSART 0096                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 0077  
                  ??_I2cSlv_ReceiveI2cMsg 007C           ??_USBIncrement1msInternalTimers 0075  
                          _I2cReadDataEvt 00E0                                 ?_isxdigit 0026  
                    ?_USBStdSetCfgHandler 0026                                 _CDCInitEP 36D0  
                  __end_of_Rtcc_UnlockRtc 43E0                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 007D                      __end_of_SetAckStatus 43AC  
                             _Term_MainSm 0560                                   _Welcome FE55  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0026  
                              ??_Terminal 009A                         _Sch_MainScheduler 42A4  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 008F  
                             _RtccIrqInit 436C             __size_of_USBCtrlTrfOutHandler 0060  
                                 ___awdiv 3384                      Term_MainTask@Options 0026  
                         __size_of___lmul 0058                                   ___awmod 3510  
                                 ___lldiv 340A                          ??_USBDeviceTasks 0090  
                         __size_of___wmul 0028                                   ___lwdiv 3AC4  
                       ??_USBStallHandler 0075                                   ___lwmod 3CC6  
                       ?_Rtcm_SetRtccDate 0081                        ?_Sch_MainScheduler 0026  
                             _Rtcc_RtcIsr 4468                      __size_of_putUSBUSART 001E  
                                 __pcinit 269C                        getsUSBUSART@buffer 007C  
                         __size_of_memcpy 0048                                 _I2cComSts 00D4  
                         __size_of_memset 0030                                 _I2cConfig 011A  
                          ??_Rtcc_LockRtc 0075                 __end_of_configDescriptor1 FF21  
                                 __ramtop 0F00                               Terminal@Len 02FA  
                      ??_Rtcm_SetRtccDate 0089                     Tmr_TmrBIrqSet@TmrNumb 0077  
                                 __ptext0 440E                                   __ptext1 3F20  
                                 __ptext2 441A                                   __ptext3 444C  
                                 __ptext4 424A                                   __ptext5 42C0  
                                 __ptext6 4098                                   __ptext7 4010  
                                 __ptext8 2444                                   __ptext9 1C80  
                                 _inPipes 00AF                     __size_of_Mcu_ClearWdg 0004  
             _USBDeferOUTDataStagePackets 00C5                           __size_of_strcat 005C  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                              ??_USBSuspend 0089  
                               _T2CONbits 000FCA                                   _isalpha 3FB0  
                                 _isdigit 41C4                             ?_Tmr_StartTmr 0026  
                     ??_Sch_MainScheduler 00AF                               ?_SystemInit 0026  
                        ___awmod@dividend 0075                         ??_InitializeTasks 00AA  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 0015  
     __end_of_Tmr_RegisterTmr2IsrCallback 4424               _Tmr_RegisterTmr2IsrCallback 441A  
                                 _isspace 40C2                                   _isupper 41A2  
                  ?_Irq_InitIntController 0075                    Term_MainSm@FwkBuildStr 00A6  
                         ?_Rtcc_RtcConfig 0076                    _OsAlrm_ProcessOsAlarms 12FC  
                      __end_of_USB_CD_Ptr FD67                       Mcu_SetWdgSts@WdgSts 0075  
                             _Tmr_Tmr2Isr 4208                                   _sprintf 21DE  
                                 _tolower 430E           __size_of_USBCtrlTrfSetupHandler 0086  
                         _Uart_Uart1RxIsr 4452                    Term_MainSm@FwkMajorStr 009E  
                          __pintcode_body 2BB8                                   _toupper 4326  
                    end_of_initialization 2754                              _getsUSBUSART 3022  
                        ??_GetElapsedTime 007D             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 0075                    _MainSystemTimebaseFlag 00E2  
           i1I2cSlv_SendI2cMsg@DataLenght 003E                        __end_of_USB_SD_Ptr FD65  
     Irq_InitIntController@PerInt_LowPInt 0076                                   memcpy@d 007B  
                                 memcpy@n 0079                                   memcpy@s 007D  
                     _pBDTEntryEP0OutNext 00BD                                   itoa@buf 0085  
                                 memset@c 0077                    Term_MainSm@FwkMinorStr 00A2  
                                 itoa@val 0087                                   memset@n 0079  
                                 memset@p 007B                             __Lmediumconst FD5E  
                                 int_func 2BB8                           _USB1msTickCount 02CC  
         _dummy_encapsulated_cmd_response 0387                  ?_USBStdFeatureReqHandler 0026  
               __size_of_Mcu_ConfigExtInt 001A                         ?_Rtcc_AlarmConfig 0075  
                   ??_USBStdSetCfgHandler 0089                           ___lldiv@divisor 0079  
               __end_of_Sch_MainScheduler 42C0                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0078                                ?_CDCInitEP 0026  
                         ___lldiv@counter 0081                         _Rtcc_SetRtccValue 0A92  
                       _Rtcc_SetRtcStatus 4356                           ?_Rtcc_UnlockRtc 0026  
                      ??_Rtcc_AlarmConfig 0077                        __end_of_USBSuspend 3F80  
                 _USBCtrlEPAllowDataStage 2E56                        _UsbDevice_MainTask 413A  
                            _Mcu_ClearWdg 4458                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 007D  
                      ?_Rtcc_SetRtcStatus 0026                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                                 utoa@buf 007C                  _USBCtrlEPServiceComplete 1B86  
                                 utoa@val 007E                     i1___wmul@multiplicand 003A  
                         _RtccIsrCallback 0118          OsAlrm_ProcessOsAlarms@AlarmIndex 0048  
                      Terminal@EchoOption 02FE             __size_of_LedPulseStateMachine 00E8  
                                 strlen@s 0075                _USBStatusStageEnabledFlag1 00C8  
              _USBStatusStageEnabledFlag2 00C7                      __end_of_Wdg_MainTask 4180  
                                 strtol@a 008C                                   strtol@c 0090  
                          _Rtcm_RtccAlarm 031C                                   strtol@s 0081  
                      USBEnableEndpoint@p 007E                       ?_UsbDevice_MainTask 0026  
                                 xtoi@val 0080                                 _PORTDbits 000F83  
                     ??_Rtcc_SetRtccValue 007E                       ??_Rtcc_SetRtcStatus 0075  
                        __CFG_DSBOREN$OFF 000000                            ??_Tmr_StartTmr 0075  
            __end_of_I2cSlv_I2cReadMsgSts 4208                  i1I2cSlv_SendI2cMsg@TxSts 003F  
                        __CFG_CPUDIV$OSC1 000000                           _Tmr4IsrCallback 0013  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                        _BothEP0OutUOWNsSet 00CB  
                            strtol@endptr 0083                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0026                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0026                 I2c_WriteData@I2cNextState 00DC  
               USBConfigureEndpoint@EPNum 007A                ?_USBCtrlEPAllowStatusStage 0026  
                        ??_InitSchedTimer 0090       USER_USB_CALLBACK_EVENT_HANDLER@size 0085  
                               _USTATcopy 00DE                     __end_of_StopCondition 4460  
                __size_of_HighPriorityIsr 2C5C                 Tmr_TmrBPrSet@TmrBPrCfgSts 0086  
               __size_of_OsTmr_StartTimer 005E                                 _Led1Blink 037E  
                               _Led2Blink 02D5                      ??_UsbDevice_MainTask 0091  
                               _Led3Blink 0375              __end_of_USBTransferOnePacket 29A2  
                         ??_CheckTxStatus 0075                                 _Led1Pulse 02EA  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 0CC0  
               __end_of_Rtcc_SetRtcStatus 436C                                 _Led2Pulse 02E4  
                               _Led3Pulse 02DE                         _I2cSlv_SendI2cMsg 3DCC  
         SetBaudRate@DesiredI2cBusClockHz 0082                           ??_ScheduleTasks 00AA  
                          _Tmr_TmrBConfig 2444                   Tmr_TmrBPrSet@Postscaler 0085  
                       putUSBUSART@length 007D                     __end_of_Mcu_SetWdgSts 43BE  
                       _OsAlrm_SetOsAlarm 25D4                      Terminal@TermRxBuffer 04C0  
                      ?_I2cSlv_SendI2cMsg 0078                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 3B66                       __CFG_MSSP7B_EN$MSK7 000000  
                            ??_MyApp_Task 007A                      Terminal@TermTxBuffer 0138  
                  _USBCtrlTrfSetupHandler 32FE                        ?_OsAlrm_SetOsAlarm 007B  
                   __end_of_USBDeviceInit 159E     __end_of_USBIncrement1msInternalTimers 41A2  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 4180  
                          __end_of___lmul 3970                            _CheckAckStatus 4442  
                          __end_of___wmul 4114                       ??_I2cSlv_SendI2cMsg 007C  
                          __end_of_memcpy 3BFA                        Terminal@PackageLen 02D3  
                          __end_of_memset 3FB0                       ??_OsAlrm_SetOsAlarm 0083  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 0077  
                       _USBBusIsSuspended 00CD                   __end_of_Uart_Uart1RxIsr 4458  
                          __end_of_strcat 3918                            __end_of_strcpy 3F20  
                          __end_of_strlen 3DCC                            __end_of_strtol 0E96  
                     start_initialization 269C                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0026                              ??_OsTmr_Wait 0099  
           USBCtrlTrfRxService@byteToRead 0076                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0081                          ??_EnableReceiver 0075  
                             _cdc_data_rx 0440                               _cdc_data_tx 0480  
            __end_of_USBConfigureEndpoint 2F8C           __end_of_USBStdFeatureReqHandler 0A92  
                               _MsgFormat FD69                        __end_of_MyApp_Task 3EEE  
                        _UpdateOsCounters 43F0                I2c_InitI2cModule@I2cConfig 008E  
       __end_of_USBCtrlEPAllowStatusStage 2826                 __end_of_I2cSlv_SendI2cMsg 3E0A  
                __size_of_LedStateMachine 00A8                  __end_of_USBCtrlEPService 314C  
                   __size_of_SetAckStatus 0014                      __end_of_Rtcc_LockRtc 43F0  
                            ?_SetBaudRate 0082                    __end_of_Tmr_TmrBConfig 250C  
               __end_of_OsAlrm_SetOsAlarm 269C                    __end_of_Tmr_TmrBIrqSet 3BB2  
                               _TaskTable 038F                 ??_USBCtrlEPAllowDataStage 0076  
                             _SystemState 00D5                         __size_of_ReadByte 000A  
                               _RtcConfig 0134                __size_of_Sch_MainScheduler 001C  
                             ??_CDCInitEP 0081                            USBDeviceInit@i 007D  
                  Led_SetLedBlinkTime@Led 0079                        __end_of_ReceiveEvt 406C  
                  _pBDTEntryEP0OutCurrent 00BF                             _Term_MainTask 42DA  
                 USBTransferOnePacket@dir 0075                   USBTransferOnePacket@len 0078  
                   Tmr_TmrBConfig@TmrNumb 008F                   __size_of_LowPriorityIsr 00B4  
                           _isxdigit$5702 0079                    __end_of_CheckAckStatus 444C  
                                ??___lmul 007D                                  ??___wmul 0079  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 0075  
                     _USBStdGetDscHandler 1828                I2cSlv_SendI2cMsg@SlaveAddr 007A  
                      __end_of_OsTmr_Wait 3510                               __pdataBANK0 00E2  
                             __pdataBANK2 02FE                               __pdataBANK3 038F  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 0490  
                                ??_memcpy 007B                                  ??_memset 007B  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 0075  
                                ??_strcat 0079                                  ??_strcpy 0079  
                                ??_strlen 0077                    __size_of_Rtcm_MainTask 008E  
                                ??_strtol 0087               __end_of_Led_SetLedBlinkTime 3AC4  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00DF  
          __end_of_USBStdGetStatusHandler 2B0A                             WriteByte@Byte 0075  
                      __end_of_TaskNumber FD69                               __pbssCOMRAM 0001  
                 GetElapsedTime@TimeValue 0085                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0138  
                           __pcstackBANK2 0200              __size_of_USBCtrlTrfInHandler 00BE  
                           __pcstackBANK7 0700                              _SetAckStatus 4398  
                            _isalpha$5692 0079                    GenerateEvt@EventStatus 0077  
                               _WriteByte 4424                              _isdigit$5426 0076  
                    ?_USBStdGetDscHandler 0026             UpdateSchFlag@InterruptCounter 0110  
                 GetElapsedTime@StartTime 0079                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 3EB8              __end_of_LedBlinkStateMachine 16E6  
                             sprintf@flag 007B                           _USBStallHandler 3BFA  
                            _pBDTEntryOut 0100                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 008C  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 42C0  
              __end_of_USBCheckCDCRequest 2BB8              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 3970                           ?_Tmr_TmrBIrqSet 0075  
                    __end_of_Tmr_StartTmr 424A                          _Led_SetLedStatus 3FE0  
                       ??_HighPriorityIsr 0026                            ?_Term_MainTask 0026  
                        ___lwdiv@dividend 0075                              ?_Term_MainSm 0026  
                    _I2cSlv_I2cReadMsgSts 41E6                          GenerateEvt@Event 0075  
                  __size_of_Tmr_TmrBPrSet 00EE                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008                             __pmediumconst FD5E  
                            ?_RtccIrqInit 0026                           ?_CheckAckStatus 0026  
                 Tmr_TmrBIrqSet@TmrIrqSts 0076                         __size_of_isxdigit 003C  
                                ?___awdiv 0075                                 __ptext100 159E  
                               __ptext101 3AC4                                 __ptext110 1018  
                               __ptext102 25D4                                 __ptext111 1190  
                               __ptext103 40EC                                 __ptext120 4442  
                               __ptext112 4424                                 __ptext104 3582  
                               __ptext113 445C                                 __ptext105 3B18  
                               __ptext130 3E46                                 __ptext122 4208  
                               __ptext114 4460                                 __ptext106 340A  
                           Terminal@Index 009D                                 __ptext131 4382  
                               __ptext123 4400                                 __ptext115 4398  
                               __ptext107 406C                                 __ptext124 4286  
                               __ptext116 442E                                 __ptext108 29A2  
                               __ptext133 4452                                 __ptext125 43F0  
                               __ptext117 433E                                 __ptext109 403E  
                               __ptext134 4468                                 __ptext126 12FC  
                               __ptext118 4464                                 __ptext135 446C  
                               __ptext127 4114                                 __ptext119 4438  
                               __ptext136 4470                                 __ptext128 3970  
                               __ptext137 0000                                 __ptext129 42F4  
                                ?___awmod 0075                        _Sch_SchmIntService 4400  
                         _InitializeTasks 35F4                                  ?___lldiv 0075  
                                ?___lwdiv 0075                                  ?___lwmod 0075  
                            ?_Rtcc_RtcIsr 0026                               __pintcodelo 0018  
           I2cSlv_QueryI2cData@QueryTimer 036A                          ??_Rtcc_RtcConfig 0078  
                    ?_OsAlrm_ClearOsAlarm 0026                               _I2cRxPacket 02F0  
                     ?_Sch_SchmIntService 0026                      _USBTransferOnePacket 28E4  
                 ??_Irq_InitIntController 0077                               _I2cTxBuffer 0300  
                 ?_OsAlrm_ProcessOsAlarms 0026                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0026  
                                ?_isalpha 0026                              ??_SystemInit 0097  
                                ?_isdigit 0026                               _I2cTxPacket 012B  
          InitializeTasks@ActiveTaskIndex 00AC                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0026                                  ?_isupper 0026  
              Term_MainSm@TermMainSmState 02D0                           Terminal@Payload 0600  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 3800  
                              ?_WriteByte 0026                     ??_USBStdGetDscHandler 0075  
                        _Rtcm_GetRtccDate 373A                               _ep_data_out 0009  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 007A                              ?_Tmr_Tmr2Isr 0026  
                         Terminal@SwTimer 0354                                  ?_sprintf 0075  
                                ?_tolower 0026                 __size_of_Rtcm_SetRtccDate 0054  
            __size_of_USBCtrlTrfRxService 010E             USBConfigureEndpoint@direction 0075  
                                ?_toupper 0026                    __size_of_I2c_WriteData 0178  
                        _OsTmr_StartTimer 385E                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 0075  
              __size_of_I2cSlv_SendI2cMsg 003E              __size_of_USBCtrlTrfTxService 00CC  
                        ??_Rtcc_UnlockRtc 0075                             i1_GenerateEvt 4382  
              __end_of_Mcu_StartSystemPll 4268                              _Wdg_MainTask 415E  
                           _Rtcm_MainTask 3270                            ___wmul@product 0079  
                   Terminal@ReceivedBytes 009C                      ??_Sch_SchmIntService 004A  
                  __size_of_UpdateSchFlag 001E                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 0076                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 007E  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A                     ?_I2cSlv_I2cReadMsgSts 0026  
                                i1u710_28 1432                                  i1u710_29 1446  
                       _I2c_InitI2cModule 3582                                  i1u706_20 1312  
                                i1u728_28 4216                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0089                        __end_of_SystemInit 3F50  
                                _RCONbits 000FD0                             ??_putUSBUSART 007E  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 00C6                        ?_I2c_InitI2cModule 008E  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      Rtcm_MainTask@Options 0026  
            __end_of_OsTmr_GetTimerStatus 3270                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                      _USBConfigureEndpoint 2EF4  
        __size_of_USBStdFeatureReqHandler 028E            __end_of_OsAlrm_ProcessOsAlarms 1452  
                   ??_OsAlrm_ClearOsAlarm 0038                         ___wmul@multiplier 0075  
                   ?_USBTransferOnePacket 0075                                  i1___wmul 4114  
                     ??_I2c_InitI2cModule 0090                 __size_of_Rtcc_AlarmConfig 006C  
                           ?_CDCTxService 0026            OsAlrm_SetOsAlarm@AlarmCallback 0081  
                            _RemoteWakeup 00CE                            _StartCondition 4460  
                      SetAckStatus@AckSts 0075                             _Tmr_TmrBPrSet 1C80  
                            _isspace$5695 0076                   __end_of_USBStallHandler 3C3E  
                   __size_of_Rtcc_LockRtc 0010                         ___lmul@multiplier 0075  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0026                                 copy_data0 26B0  
            __end_of_LedPulseStateMachine 1E56                    I2cSlv_SendI2cMsg@TxSts 007C  
             ??_USBCtrlEPAllowStatusStage 0075               __end_of_USBStdSetCfgHandler 1F3C  
                          ?i1_GenerateEvt 0038                  Tmr_TmrBConfig@TmrBConfig 008C  
                                _OsAlarms 0500                            ?_Rtcm_MainTask 0026  
                   OsTmr_StartTimer@Timer 0079              LedBlinkStateMachine@LedBlink 007C  
                                _ReadByte 442E                        __end_of_device_dsc FF8E  
               __end_of_I2c_InitI2cModule 35F4                                  _MsgReady FF65  
                         ??_Term_MainTask 00AA                   __end_of_InitializeTasks 3664  
                 ?_USBCtrlTrfSetupHandler 0026                                _ANCON1bits 000F49  
                                _RxBuffer 07C8                   USBStdGetStatusHandler@p 0076  
                                __Hrparam 0000                                  _TmrBInit 2F8C  
                    __size_of_SetBaudRate 004E                            _LowPriorityIsr 0018  
                               memcpy@tmp 007F                      Tmr_TmrBPrSet@Divisor 0088  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0079  
            i1I2cSlv_SendI2cMsg@SlaveAddr 003D                                  _Terminal 00D0  
                                _SetupPkt 000430                 I2cSlv_SendI2cMsg@TxBuffer 0078  
                   SetBaudRate@McuClockHz 0086                     ?_USBConfigureEndpoint 0075  
            OsAlrm_ClearOsAlarm@OsAlarmId 0038                             _I2c_WriteData 1018  
                        __size_of___awdiv 0086                          __size_of___awmod 0072  
                __end_of_UpdateOsCounters 4400                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02D2                       OsTmr_Wait@WaitTimer 0093  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 0087  
                        __size_of___lwmod 0044                  I2c_WriteData@WritePacket 0076  
                       Terminal@TermState 02D4                             _UpdateSchFlag 4286  
                     __end_of_putUSBUSART 4286                               _line_coding 0124  
                            _Rtcc_LockRtc 43E0                      _LedBlinkStateMachine 159E  
                  __end_of_StartCondition 4464                            ??_CDCTxService 007C  
                ??_Pm_DsReleasePinControl 0075                 Rtcm_GetRtccDate@LocalDate 0082  
                I2c_WriteData@WriteStatus 00DA                              _isupper$5698 0076  
                              strcat@from 0077                   I2c_ReadData@DataCounter 00D8  
                          ?_Tmr_TmrBPrSet 0082                          _GetOsTickCounter 43BE  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0182                           ___lwdiv@divisor 0077  
                            Terminal@Addr 02F6                               ??_WriteByte 0075  
                        __size_of_isspace 002A                           ___lwdiv@counter 0079  
                                __ptext10 3B66                                  __ptext11 422A  
                                __ptext20 413A                                  __ptext12 2F8C  
                                __ptext21 39C8                                  __ptext13 42A4  
                                __ptext30 1452                                  __ptext22 415E  
                                __ptext14 1956                                  __ptext31 30B8  
                                __ptext23 43AC                                  __ptext15 35F4  
                                __ptext40 0804                                  __ptext32 3BB2  
                                __ptext24 4458                                  __ptext16 3EB8  
                                __ptext41 3800                                  __ptext33 32FE  
                                __ptext25 0E96                                  __ptext17 42DA  
                                __ptext50 2378                                  __ptext42 2B0A  
                                __ptext34 1B86                                  __ptext26 3E80  
                                __ptext18 3270                                  __ptext51 16E6  
                                __ptext43 36D0                                  __ptext35 2E56  
                                __ptext27 3F50                                  __ptext19 22AC  
                                __ptext60 3E0A                                  __ptext52 0560  
                                __ptext44 3C3E                                  __ptext36 2022  
                                __ptext28 3BFA                                  __ptext61 0CC0  
                                __ptext53 3D8E                                  __ptext45 2EF4  
                                __ptext37 1E56                                  __ptext29 4180  
                                __ptext70 2C64                                  __ptext62 4326  
                                __ptext54 38BC                                  __ptext46 37A0  
                                __ptext38 2A58                                  __ptext71 3CC6  
                                __ptext63 40C2                                  __ptext55 21DE  
                                __ptext47 1A78                                  __ptext39 1828  
                                __ptext80 43BE                                  __ptext72 3022  
                                __ptext64 3FB0                                  __ptext56 3F80  
                                __ptext48 2762                                  __ptext81 3DCC  
                                __ptext73 28E4                                  __ptext65 41A2  
                                __ptext57 00D0                                  __ptext49 2826  
                                __ptext90 373A                                  __ptext82 3D4E  
                                __ptext74 2106                                  __ptext66 3918  
                                __ptext58 1F3C                                  __ptext91 314C  
                                __ptext83 41E6                                  __ptext75 41C4  
                                __ptext67 3EEE                                  __ptext59 430E  
                                __ptext92 4356                                  __ptext84 3A1C  
                                __ptext76 348E                                  __ptext68 4268  
                                __ptext93 2DB6                                  __ptext85 43D0  
                                __ptext77 385E                                  __ptext69 3C82  
                                __ptext94 436C                                  __ptext86 0A92  
                                __ptext78 31E0                                  __ptext95 3664  
                                __ptext87 3510                                  __ptext79 250C  
                                __ptext96 3A70                                  __ptext88 3384  
                                __ptext97 2D0E                                  __ptext89 43E0  
                                __ptext98 1D6E                                  __ptext99 3FE0  
                        __size_of_isupper 0022                                _I2cDummyTx 42F4  
                  Tmr_TmrBIrqSet@Priority 0075                              _SSP2CON2bits 000F71  
                               isxdigit@c 007A                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                                _DSCONHbits 000F4D  
                              strcpy@from 0077                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0038               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 0076  
          __end_of_USBCtrlTrfSetupHandler 3384                             __size_of_main 000C  
                       ?_USBCtrlEPService 0026                             __size_of_itoa 0044  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0026  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0079  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 4442  
                      ??_USBCtrlEPService 008F                                  _isxdigit 3E0A  
                     _USBCtrlTrfInHandler 2826                  I2c_ReadData@I2cReadState 00D9  
                   __end_of_ScheduleTasks 1A78                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0026                                  _outPipes 0001  
                    _USBCtrlTrfOutHandler 37A0                       Led_SetLedStatus@Led 0076  
                                int$flags 004A                                strtol@base 0085  
                          ?_I2c_WriteData 0076                                  atoi@sign 007F  
                       ??_I2cSlv_MainTask 0092                 _USBCtrlEPAllowStatusStage 2762  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 00AE  
                              strtol@sign 008B                           Term_MainSm@Data 0322  
                    __size_of_RtccIrqInit 0016                    ??_USBTransferOnePacket 0079  
                          ?_UpdateSchFlag 0026                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 007C                      __size_of_Rtcc_RtcIsr 0004  
                     i1_I2cSlv_SendI2cMsg 3E46                  __end_of_Mcu_ConfigExtInt 42DA  
                         ?_StartCondition 0026                 _USBDeferStatusStagePacket 00C9  
                CDCTxService@byte_to_send 007D             I2c_WriteData@TentativeCounter 00DB  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                            _Tmr_StartTmr 422A                  __end_of_Led_SetLedStatus 4010  
                    ?_USBCtrlTrfInHandler 0026                                  memcpy@d1 0075  
                                memcpy@s1 0077                I2cSlv_I2cReadMsgSts@Result 0079  
           USBCtrlTrfTxService@byteToSend 0075                             ?_I2cSetConfig 0026  
                                itoa@base 0089               i1I2cSlv_SendI2cMsg@TxBuffer 003B  
                           ?_I2c_ReadData 0078                             ?_I2cSendMsgSm 0026  
                                isalpha@c 007A                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 0077                                  memset@p1 0075  
                        ?_USBStallHandler 0026                           ??i1_GenerateEvt 003A  
                        _Rtcm_SetRtccDate 3A1C                  USBStdFeatureReqHandler@p 008D  
                        ??_Tmr_TmrBConfig 008E                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 008A                          ??_Tmr_TmrBIrqSet 0077  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus 31E0                                 sprintf@ap 007C  
                               sprintf@cp 007F                                 sprintf@sp 0075  
                       TmrBInit@Prescaler 0075                      __size_of_Tmr_Tmr2Isr 0022  
                  __size_of_USBDeviceInit 014C   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 385E  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 0087  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0081           _USER_USB_CALLBACK_EVENT_HANDLER 3800  
                 Rtcc_SetRtcStatus@Status 0075                          ___lwmod@dividend 0075  
                                isspace@c 0077                          ___lldiv@dividend 0075  
                    ?i1_I2cSlv_SendI2cMsg 003B                __size_of_I2c_InitI2cModule 0072  
                        ??_CheckAckStatus 0075                           ?_LowPriorityIsr 0026  
                        ?_InitializeTasks 0026                                  isupper@c 0077  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 007C  
                          ??_Led_MainTask 008C                             OsTmr_Wait@Ret 0099  
                       OsTmr_Wait@DelayMs 0095                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 0076                     ?_USBCtrlTrfOutHandler 0026  
                __end_of_Rtcm_GetRtccDate 37A0                               _putUSBUSART 4268  
                     _USBCtrlTrfRxService 1A78                    Rtcc_SetRtccValue@Value 007D  
                      _USBWakeFromSuspend 3E80                   _USBStdFeatureReqHandler 0804  
                __end_of_OsTmr_StartTimer 38BC                      _LedPulseStateMachine 1D6E  
                      _USBCheckCDCRequest 2B0A                       _USBCtrlTrfTxService 2378  
                     RtccIrqInit@Priority 0075                                  utoa@base 0080  
                              _RTCCFGbits 000F3F                          _Rtcc_AlarmConfig 3664  
                         ??_Tmr_TmrBPrSet 0086                                  sprintf@c 007E  
                                sprintf@f 0077                                  tolower@c 0075  
                                strcat@cp 0079                                  strcat@to 0075  
                     ?_USBWakeFromSuspend 0026           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 007D                           ___lwmod@divisor 0077  
                   ??_USBCtrlTrfInHandler 0076                                  strcpy@cp 0079  
                                strlen@cp 0079                                  strcpy@to 0075  
               UsbDevice_MainTask@Options 0026                     _USBAlternateInterface 001C  
                         ___lwmod@counter 0079                            ??_I2cSetConfig 0075  
          __size_of_Irq_InitIntController 002A                                  toupper@c 0075  
                     ?_USBCheckCDCRequest 0026                            ??_I2c_ReadData 007A  
                          ??_I2cSendMsgSm 007C             __end_of_Irq_InitIntController 40C2  
                   ReceiveEvt@EventStatus 0078              ?_Tmr_RegisterTmr2IsrCallback 0075  
                     USBEnableEndpoint@ep 0080                           _endpoint_number 00CC  
                              _WDTCONbits 000FC0                               ?_I2cDummyTx 0026  
                                xtoi@sign 007F                      ?_USBCtrlTrfRxService 0026  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 007C  
                   ?_OsTmr_GetTimerStatus 008D            I2cSlv_ReceiveI2cMsg@DataLenght 007B  
                           ??_GenerateEvt 0077                           _LedStateMachine 2D0E  
                         TmrBInit@TmrNumb 0078                  ?_USBCtrlEPAllowDataStage 0026  
                    ?_USBCtrlTrfTxService 0026                             _StopCondition 445C  
                   ??i1_I2cSlv_SendI2cMsg 003F                    Led_SetLedStatus@LedSts 0075  
            _USBStatusStageTimeoutCounter 00CA                      ??_USBWakeFromSuspend 0089  
              USBTransferOnePacket@handle 007A                      __end_of_CDCTxService 1828  
                    ??_USBCheckCDCRequest 0075                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FD65                           ??_I2c_WriteData 0078  
                           ?_Mcu_ClearWdg 0026                             _Mcu_SetWdgSts 43AC  
