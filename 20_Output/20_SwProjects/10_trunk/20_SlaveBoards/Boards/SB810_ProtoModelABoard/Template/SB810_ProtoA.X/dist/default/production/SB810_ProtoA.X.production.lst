

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue May 01 20:01:13 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	swtext1,local,class=CONST,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	dabs	1,0x620,48
    81                           	dabs	1,0x5CD,35
    82                           	dabs	1,0x239D,0,_I2cPacket
    83                           	dabs	1,0x7E,2
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011D                     	;# 
   147  011E                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018E                     	;# 
   151  0191                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  019D                     	;# 
   166  019E                     	;# 
   167  019F                     	;# 
   168  020C                     	;# 
   169  020D                     	;# 
   170  020E                     	;# 
   171  0211                     	;# 
   172  0211                     	;# 
   173  0212                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0213                     	;# 
   177  0214                     	;# 
   178  0214                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  0219                     	;# 
   187  021A                     	;# 
   188  021B                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021E                     	;# 
   192  021F                     	;# 
   193  0291                     	;# 
   194  0291                     	;# 
   195  0292                     	;# 
   196  0293                     	;# 
   197  0294                     	;# 
   198  0295                     	;# 
   199  0295                     	;# 
   200  0296                     	;# 
   201  0298                     	;# 
   202  0298                     	;# 
   203  0299                     	;# 
   204  029A                     	;# 
   205  029B                     	;# 
   206  029C                     	;# 
   207  029D                     	;# 
   208  029E                     	;# 
   209  0311                     	;# 
   210  0311                     	;# 
   211  0312                     	;# 
   212  0313                     	;# 
   213  0318                     	;# 
   214  0318                     	;# 
   215  0319                     	;# 
   216  031A                     	;# 
   217  038C                     	;# 
   218  038D                     	;# 
   219  038E                     	;# 
   220  0391                     	;# 
   221  0392                     	;# 
   222  0393                     	;# 
   223  0394                     	;# 
   224  0395                     	;# 
   225  0396                     	;# 
   226  039A                     	;# 
   227  039C                     	;# 
   228  039D                     	;# 
   229  039E                     	;# 
   230  039F                     	;# 
   231  0415                     	;# 
   232  0416                     	;# 
   233  0417                     	;# 
   234  041C                     	;# 
   235  041D                     	;# 
   236  041E                     	;# 
   237  0FE4                     	;# 
   238  0FE5                     	;# 
   239  0FE6                     	;# 
   240  0FE7                     	;# 
   241  0FE8                     	;# 
   242  0FE9                     	;# 
   243  0FEA                     	;# 
   244  0FEB                     	;# 
   245  0FED                     	;# 
   246  0FEE                     	;# 
   247  0FEF                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  0111                     	;# 
   300  0112                     	;# 
   301  0113                     	;# 
   302  0114                     	;# 
   303  0115                     	;# 
   304  0116                     	;# 
   305  0117                     	;# 
   306  0118                     	;# 
   307  0119                     	;# 
   308  011A                     	;# 
   309  011B                     	;# 
   310  011D                     	;# 
   311  011E                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  018E                     	;# 
   315  0191                     	;# 
   316  0191                     	;# 
   317  0192                     	;# 
   318  0193                     	;# 
   319  0193                     	;# 
   320  0193                     	;# 
   321  0194                     	;# 
   322  0195                     	;# 
   323  0196                     	;# 
   324  0199                     	;# 
   325  019A                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019C                     	;# 
   329  019D                     	;# 
   330  019E                     	;# 
   331  019F                     	;# 
   332  020C                     	;# 
   333  020D                     	;# 
   334  020E                     	;# 
   335  0211                     	;# 
   336  0211                     	;# 
   337  0212                     	;# 
   338  0212                     	;# 
   339  0213                     	;# 
   340  0213                     	;# 
   341  0214                     	;# 
   342  0214                     	;# 
   343  0215                     	;# 
   344  0215                     	;# 
   345  0215                     	;# 
   346  0216                     	;# 
   347  0216                     	;# 
   348  0217                     	;# 
   349  0217                     	;# 
   350  0219                     	;# 
   351  021A                     	;# 
   352  021B                     	;# 
   353  021C                     	;# 
   354  021D                     	;# 
   355  021E                     	;# 
   356  021F                     	;# 
   357  0291                     	;# 
   358  0291                     	;# 
   359  0292                     	;# 
   360  0293                     	;# 
   361  0294                     	;# 
   362  0295                     	;# 
   363  0295                     	;# 
   364  0296                     	;# 
   365  0298                     	;# 
   366  0298                     	;# 
   367  0299                     	;# 
   368  029A                     	;# 
   369  029B                     	;# 
   370  029C                     	;# 
   371  029D                     	;# 
   372  029E                     	;# 
   373  0311                     	;# 
   374  0311                     	;# 
   375  0312                     	;# 
   376  0313                     	;# 
   377  0318                     	;# 
   378  0318                     	;# 
   379  0319                     	;# 
   380  031A                     	;# 
   381  038C                     	;# 
   382  038D                     	;# 
   383  038E                     	;# 
   384  0391                     	;# 
   385  0392                     	;# 
   386  0393                     	;# 
   387  0394                     	;# 
   388  0395                     	;# 
   389  0396                     	;# 
   390  039A                     	;# 
   391  039C                     	;# 
   392  039D                     	;# 
   393  039E                     	;# 
   394  039F                     	;# 
   395  0415                     	;# 
   396  0416                     	;# 
   397  0417                     	;# 
   398  041C                     	;# 
   399  041D                     	;# 
   400  041E                     	;# 
   401  0FE4                     	;# 
   402  0FE5                     	;# 
   403  0FE6                     	;# 
   404  0FE7                     	;# 
   405  0FE8                     	;# 
   406  0FE9                     	;# 
   407  0FEA                     	;# 
   408  0FEB                     	;# 
   409  0FED                     	;# 
   410  0FEE                     	;# 
   411  0FEF                     	;# 
   412  0000                     	;# 
   413  0001                     	;# 
   414  0002                     	;# 
   415  0003                     	;# 
   416  0004                     	;# 
   417  0005                     	;# 
   418  0006                     	;# 
   419  0007                     	;# 
   420  0008                     	;# 
   421  0009                     	;# 
   422  000A                     	;# 
   423  000B                     	;# 
   424  000C                     	;# 
   425  000D                     	;# 
   426  000E                     	;# 
   427  0011                     	;# 
   428  0012                     	;# 
   429  0013                     	;# 
   430  0014                     	;# 
   431  0015                     	;# 
   432  0016                     	;# 
   433  0016                     	;# 
   434  0017                     	;# 
   435  0018                     	;# 
   436  0019                     	;# 
   437  001A                     	;# 
   438  001B                     	;# 
   439  001C                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  0111                     	;# 
   464  0112                     	;# 
   465  0113                     	;# 
   466  0114                     	;# 
   467  0115                     	;# 
   468  0116                     	;# 
   469  0117                     	;# 
   470  0118                     	;# 
   471  0119                     	;# 
   472  011A                     	;# 
   473  011B                     	;# 
   474  011D                     	;# 
   475  011E                     	;# 
   476  018C                     	;# 
   477  018D                     	;# 
   478  018E                     	;# 
   479  0191                     	;# 
   480  0191                     	;# 
   481  0192                     	;# 
   482  0193                     	;# 
   483  0193                     	;# 
   484  0193                     	;# 
   485  0194                     	;# 
   486  0195                     	;# 
   487  0196                     	;# 
   488  0199                     	;# 
   489  019A                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019C                     	;# 
   493  019D                     	;# 
   494  019E                     	;# 
   495  019F                     	;# 
   496  020C                     	;# 
   497  020D                     	;# 
   498  020E                     	;# 
   499  0211                     	;# 
   500  0211                     	;# 
   501  0212                     	;# 
   502  0212                     	;# 
   503  0213                     	;# 
   504  0213                     	;# 
   505  0214                     	;# 
   506  0214                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0216                     	;# 
   511  0216                     	;# 
   512  0217                     	;# 
   513  0217                     	;# 
   514  0219                     	;# 
   515  021A                     	;# 
   516  021B                     	;# 
   517  021C                     	;# 
   518  021D                     	;# 
   519  021E                     	;# 
   520  021F                     	;# 
   521  0291                     	;# 
   522  0291                     	;# 
   523  0292                     	;# 
   524  0293                     	;# 
   525  0294                     	;# 
   526  0295                     	;# 
   527  0295                     	;# 
   528  0296                     	;# 
   529  0298                     	;# 
   530  0298                     	;# 
   531  0299                     	;# 
   532  029A                     	;# 
   533  029B                     	;# 
   534  029C                     	;# 
   535  029D                     	;# 
   536  029E                     	;# 
   537  0311                     	;# 
   538  0311                     	;# 
   539  0312                     	;# 
   540  0313                     	;# 
   541  0318                     	;# 
   542  0318                     	;# 
   543  0319                     	;# 
   544  031A                     	;# 
   545  038C                     	;# 
   546  038D                     	;# 
   547  038E                     	;# 
   548  0391                     	;# 
   549  0392                     	;# 
   550  0393                     	;# 
   551  0394                     	;# 
   552  0395                     	;# 
   553  0396                     	;# 
   554  039A                     	;# 
   555  039C                     	;# 
   556  039D                     	;# 
   557  039E                     	;# 
   558  039F                     	;# 
   559  0415                     	;# 
   560  0416                     	;# 
   561  0417                     	;# 
   562  041C                     	;# 
   563  041D                     	;# 
   564  041E                     	;# 
   565  0FE4                     	;# 
   566  0FE5                     	;# 
   567  0FE6                     	;# 
   568  0FE7                     	;# 
   569  0FE8                     	;# 
   570  0FE9                     	;# 
   571  0FEA                     	;# 
   572  0FEB                     	;# 
   573  0FED                     	;# 
   574  0FEE                     	;# 
   575  0FEF                     	;# 
   576  0000                     	;# 
   577  0001                     	;# 
   578  0002                     	;# 
   579  0003                     	;# 
   580  0004                     	;# 
   581  0005                     	;# 
   582  0006                     	;# 
   583  0007                     	;# 
   584  0008                     	;# 
   585  0009                     	;# 
   586  000A                     	;# 
   587  000B                     	;# 
   588  000C                     	;# 
   589  000D                     	;# 
   590  000E                     	;# 
   591  0011                     	;# 
   592  0012                     	;# 
   593  0013                     	;# 
   594  0014                     	;# 
   595  0015                     	;# 
   596  0016                     	;# 
   597  0016                     	;# 
   598  0017                     	;# 
   599  0018                     	;# 
   600  0019                     	;# 
   601  001A                     	;# 
   602  001B                     	;# 
   603  001C                     	;# 
   604  001E                     	;# 
   605  001F                     	;# 
   606  008C                     	;# 
   607  008D                     	;# 
   608  008E                     	;# 
   609  0091                     	;# 
   610  0092                     	;# 
   611  0093                     	;# 
   612  0094                     	;# 
   613  0095                     	;# 
   614  0096                     	;# 
   615  0097                     	;# 
   616  0098                     	;# 
   617  0099                     	;# 
   618  009A                     	;# 
   619  009B                     	;# 
   620  009B                     	;# 
   621  009C                     	;# 
   622  009D                     	;# 
   623  009E                     	;# 
   624  010C                     	;# 
   625  010D                     	;# 
   626  010E                     	;# 
   627  0111                     	;# 
   628  0112                     	;# 
   629  0113                     	;# 
   630  0114                     	;# 
   631  0115                     	;# 
   632  0116                     	;# 
   633  0117                     	;# 
   634  0118                     	;# 
   635  0119                     	;# 
   636  011A                     	;# 
   637  011B                     	;# 
   638  011D                     	;# 
   639  011E                     	;# 
   640  018C                     	;# 
   641  018D                     	;# 
   642  018E                     	;# 
   643  0191                     	;# 
   644  0191                     	;# 
   645  0192                     	;# 
   646  0193                     	;# 
   647  0193                     	;# 
   648  0193                     	;# 
   649  0194                     	;# 
   650  0195                     	;# 
   651  0196                     	;# 
   652  0199                     	;# 
   653  019A                     	;# 
   654  019B                     	;# 
   655  019B                     	;# 
   656  019C                     	;# 
   657  019D                     	;# 
   658  019E                     	;# 
   659  019F                     	;# 
   660  020C                     	;# 
   661  020D                     	;# 
   662  020E                     	;# 
   663  0211                     	;# 
   664  0211                     	;# 
   665  0212                     	;# 
   666  0212                     	;# 
   667  0213                     	;# 
   668  0213                     	;# 
   669  0214                     	;# 
   670  0214                     	;# 
   671  0215                     	;# 
   672  0215                     	;# 
   673  0215                     	;# 
   674  0216                     	;# 
   675  0216                     	;# 
   676  0217                     	;# 
   677  0217                     	;# 
   678  0219                     	;# 
   679  021A                     	;# 
   680  021B                     	;# 
   681  021C                     	;# 
   682  021D                     	;# 
   683  021E                     	;# 
   684  021F                     	;# 
   685  0291                     	;# 
   686  0291                     	;# 
   687  0292                     	;# 
   688  0293                     	;# 
   689  0294                     	;# 
   690  0295                     	;# 
   691  0295                     	;# 
   692  0296                     	;# 
   693  0298                     	;# 
   694  0298                     	;# 
   695  0299                     	;# 
   696  029A                     	;# 
   697  029B                     	;# 
   698  029C                     	;# 
   699  029D                     	;# 
   700  029E                     	;# 
   701  0311                     	;# 
   702  0311                     	;# 
   703  0312                     	;# 
   704  0313                     	;# 
   705  0318                     	;# 
   706  0318                     	;# 
   707  0319                     	;# 
   708  031A                     	;# 
   709  038C                     	;# 
   710  038D                     	;# 
   711  038E                     	;# 
   712  0391                     	;# 
   713  0392                     	;# 
   714  0393                     	;# 
   715  0394                     	;# 
   716  0395                     	;# 
   717  0396                     	;# 
   718  039A                     	;# 
   719  039C                     	;# 
   720  039D                     	;# 
   721  039E                     	;# 
   722  039F                     	;# 
   723  0415                     	;# 
   724  0416                     	;# 
   725  0417                     	;# 
   726  041C                     	;# 
   727  041D                     	;# 
   728  041E                     	;# 
   729  0FE4                     	;# 
   730  0FE5                     	;# 
   731  0FE6                     	;# 
   732  0FE7                     	;# 
   733  0FE8                     	;# 
   734  0FE9                     	;# 
   735  0FEA                     	;# 
   736  0FEB                     	;# 
   737  0FED                     	;# 
   738  0FEE                     	;# 
   739  0FEF                     	;# 
   740  0000                     	;# 
   741  0001                     	;# 
   742  0002                     	;# 
   743  0003                     	;# 
   744  0004                     	;# 
   745  0005                     	;# 
   746  0006                     	;# 
   747  0007                     	;# 
   748  0008                     	;# 
   749  0009                     	;# 
   750  000A                     	;# 
   751  000B                     	;# 
   752  000C                     	;# 
   753  000D                     	;# 
   754  000E                     	;# 
   755  0011                     	;# 
   756  0012                     	;# 
   757  0013                     	;# 
   758  0014                     	;# 
   759  0015                     	;# 
   760  0016                     	;# 
   761  0016                     	;# 
   762  0017                     	;# 
   763  0018                     	;# 
   764  0019                     	;# 
   765  001A                     	;# 
   766  001B                     	;# 
   767  001C                     	;# 
   768  001E                     	;# 
   769  001F                     	;# 
   770  008C                     	;# 
   771  008D                     	;# 
   772  008E                     	;# 
   773  0091                     	;# 
   774  0092                     	;# 
   775  0093                     	;# 
   776  0094                     	;# 
   777  0095                     	;# 
   778  0096                     	;# 
   779  0097                     	;# 
   780  0098                     	;# 
   781  0099                     	;# 
   782  009A                     	;# 
   783  009B                     	;# 
   784  009B                     	;# 
   785  009C                     	;# 
   786  009D                     	;# 
   787  009E                     	;# 
   788  010C                     	;# 
   789  010D                     	;# 
   790  010E                     	;# 
   791  0111                     	;# 
   792  0112                     	;# 
   793  0113                     	;# 
   794  0114                     	;# 
   795  0115                     	;# 
   796  0116                     	;# 
   797  0117                     	;# 
   798  0118                     	;# 
   799  0119                     	;# 
   800  011A                     	;# 
   801  011B                     	;# 
   802  011D                     	;# 
   803  011E                     	;# 
   804  018C                     	;# 
   805  018D                     	;# 
   806  018E                     	;# 
   807  0191                     	;# 
   808  0191                     	;# 
   809  0192                     	;# 
   810  0193                     	;# 
   811  0193                     	;# 
   812  0193                     	;# 
   813  0194                     	;# 
   814  0195                     	;# 
   815  0196                     	;# 
   816  0199                     	;# 
   817  019A                     	;# 
   818  019B                     	;# 
   819  019B                     	;# 
   820  019C                     	;# 
   821  019D                     	;# 
   822  019E                     	;# 
   823  019F                     	;# 
   824  020C                     	;# 
   825  020D                     	;# 
   826  020E                     	;# 
   827  0211                     	;# 
   828  0211                     	;# 
   829  0212                     	;# 
   830  0212                     	;# 
   831  0213                     	;# 
   832  0213                     	;# 
   833  0214                     	;# 
   834  0214                     	;# 
   835  0215                     	;# 
   836  0215                     	;# 
   837  0215                     	;# 
   838  0216                     	;# 
   839  0216                     	;# 
   840  0217                     	;# 
   841  0217                     	;# 
   842  0219                     	;# 
   843  021A                     	;# 
   844  021B                     	;# 
   845  021C                     	;# 
   846  021D                     	;# 
   847  021E                     	;# 
   848  021F                     	;# 
   849  0291                     	;# 
   850  0291                     	;# 
   851  0292                     	;# 
   852  0293                     	;# 
   853  0294                     	;# 
   854  0295                     	;# 
   855  0295                     	;# 
   856  0296                     	;# 
   857  0298                     	;# 
   858  0298                     	;# 
   859  0299                     	;# 
   860  029A                     	;# 
   861  029B                     	;# 
   862  029C                     	;# 
   863  029D                     	;# 
   864  029E                     	;# 
   865  0311                     	;# 
   866  0311                     	;# 
   867  0312                     	;# 
   868  0313                     	;# 
   869  0318                     	;# 
   870  0318                     	;# 
   871  0319                     	;# 
   872  031A                     	;# 
   873  038C                     	;# 
   874  038D                     	;# 
   875  038E                     	;# 
   876  0391                     	;# 
   877  0392                     	;# 
   878  0393                     	;# 
   879  0394                     	;# 
   880  0395                     	;# 
   881  0396                     	;# 
   882  039A                     	;# 
   883  039C                     	;# 
   884  039D                     	;# 
   885  039E                     	;# 
   886  039F                     	;# 
   887  0415                     	;# 
   888  0416                     	;# 
   889  0417                     	;# 
   890  041C                     	;# 
   891  041D                     	;# 
   892  041E                     	;# 
   893  0FE4                     	;# 
   894  0FE5                     	;# 
   895  0FE6                     	;# 
   896  0FE7                     	;# 
   897  0FE8                     	;# 
   898  0FE9                     	;# 
   899  0FEA                     	;# 
   900  0FEB                     	;# 
   901  0FED                     	;# 
   902  0FEE                     	;# 
   903  0FEF                     	;# 
   904  0000                     	;# 
   905  0001                     	;# 
   906  0002                     	;# 
   907  0003                     	;# 
   908  0004                     	;# 
   909  0005                     	;# 
   910  0006                     	;# 
   911  0007                     	;# 
   912  0008                     	;# 
   913  0009                     	;# 
   914  000A                     	;# 
   915  000B                     	;# 
   916  000C                     	;# 
   917  000D                     	;# 
   918  000E                     	;# 
   919  0011                     	;# 
   920  0012                     	;# 
   921  0013                     	;# 
   922  0014                     	;# 
   923  0015                     	;# 
   924  0016                     	;# 
   925  0016                     	;# 
   926  0017                     	;# 
   927  0018                     	;# 
   928  0019                     	;# 
   929  001A                     	;# 
   930  001B                     	;# 
   931  001C                     	;# 
   932  001E                     	;# 
   933  001F                     	;# 
   934  008C                     	;# 
   935  008D                     	;# 
   936  008E                     	;# 
   937  0091                     	;# 
   938  0092                     	;# 
   939  0093                     	;# 
   940  0094                     	;# 
   941  0095                     	;# 
   942  0096                     	;# 
   943  0097                     	;# 
   944  0098                     	;# 
   945  0099                     	;# 
   946  009A                     	;# 
   947  009B                     	;# 
   948  009B                     	;# 
   949  009C                     	;# 
   950  009D                     	;# 
   951  009E                     	;# 
   952  010C                     	;# 
   953  010D                     	;# 
   954  010E                     	;# 
   955  0111                     	;# 
   956  0112                     	;# 
   957  0113                     	;# 
   958  0114                     	;# 
   959  0115                     	;# 
   960  0116                     	;# 
   961  0117                     	;# 
   962  0118                     	;# 
   963  0119                     	;# 
   964  011A                     	;# 
   965  011B                     	;# 
   966  011D                     	;# 
   967  011E                     	;# 
   968  018C                     	;# 
   969  018D                     	;# 
   970  018E                     	;# 
   971  0191                     	;# 
   972  0191                     	;# 
   973  0192                     	;# 
   974  0193                     	;# 
   975  0193                     	;# 
   976  0193                     	;# 
   977  0194                     	;# 
   978  0195                     	;# 
   979  0196                     	;# 
   980  0199                     	;# 
   981  019A                     	;# 
   982  019B                     	;# 
   983  019B                     	;# 
   984  019C                     	;# 
   985  019D                     	;# 
   986  019E                     	;# 
   987  019F                     	;# 
   988  020C                     	;# 
   989  020D                     	;# 
   990  020E                     	;# 
   991  0211                     	;# 
   992  0211                     	;# 
   993  0212                     	;# 
   994  0212                     	;# 
   995  0213                     	;# 
   996  0213                     	;# 
   997  0214                     	;# 
   998  0214                     	;# 
   999  0215                     	;# 
  1000  0215                     	;# 
  1001  0215                     	;# 
  1002  0216                     	;# 
  1003  0216                     	;# 
  1004  0217                     	;# 
  1005  0217                     	;# 
  1006  0219                     	;# 
  1007  021A                     	;# 
  1008  021B                     	;# 
  1009  021C                     	;# 
  1010  021D                     	;# 
  1011  021E                     	;# 
  1012  021F                     	;# 
  1013  0291                     	;# 
  1014  0291                     	;# 
  1015  0292                     	;# 
  1016  0293                     	;# 
  1017  0294                     	;# 
  1018  0295                     	;# 
  1019  0295                     	;# 
  1020  0296                     	;# 
  1021  0298                     	;# 
  1022  0298                     	;# 
  1023  0299                     	;# 
  1024  029A                     	;# 
  1025  029B                     	;# 
  1026  029C                     	;# 
  1027  029D                     	;# 
  1028  029E                     	;# 
  1029  0311                     	;# 
  1030  0311                     	;# 
  1031  0312                     	;# 
  1032  0313                     	;# 
  1033  0318                     	;# 
  1034  0318                     	;# 
  1035  0319                     	;# 
  1036  031A                     	;# 
  1037  038C                     	;# 
  1038  038D                     	;# 
  1039  038E                     	;# 
  1040  0391                     	;# 
  1041  0392                     	;# 
  1042  0393                     	;# 
  1043  0394                     	;# 
  1044  0395                     	;# 
  1045  0396                     	;# 
  1046  039A                     	;# 
  1047  039C                     	;# 
  1048  039D                     	;# 
  1049  039E                     	;# 
  1050  039F                     	;# 
  1051  0415                     	;# 
  1052  0416                     	;# 
  1053  0417                     	;# 
  1054  041C                     	;# 
  1055  041D                     	;# 
  1056  041E                     	;# 
  1057  0FE4                     	;# 
  1058  0FE5                     	;# 
  1059  0FE6                     	;# 
  1060  0FE7                     	;# 
  1061  0FE8                     	;# 
  1062  0FE9                     	;# 
  1063  0FEA                     	;# 
  1064  0FEB                     	;# 
  1065  0FED                     	;# 
  1066  0FEE                     	;# 
  1067  0FEF                     	;# 
  1068  0000                     	;# 
  1069  0001                     	;# 
  1070  0002                     	;# 
  1071  0003                     	;# 
  1072  0004                     	;# 
  1073  0005                     	;# 
  1074  0006                     	;# 
  1075  0007                     	;# 
  1076  0008                     	;# 
  1077  0009                     	;# 
  1078  000A                     	;# 
  1079  000B                     	;# 
  1080  000C                     	;# 
  1081  000D                     	;# 
  1082  000E                     	;# 
  1083  0011                     	;# 
  1084  0012                     	;# 
  1085  0013                     	;# 
  1086  0014                     	;# 
  1087  0015                     	;# 
  1088  0016                     	;# 
  1089  0016                     	;# 
  1090  0017                     	;# 
  1091  0018                     	;# 
  1092  0019                     	;# 
  1093  001A                     	;# 
  1094  001B                     	;# 
  1095  001C                     	;# 
  1096  001E                     	;# 
  1097  001F                     	;# 
  1098  008C                     	;# 
  1099  008D                     	;# 
  1100  008E                     	;# 
  1101  0091                     	;# 
  1102  0092                     	;# 
  1103  0093                     	;# 
  1104  0094                     	;# 
  1105  0095                     	;# 
  1106  0096                     	;# 
  1107  0097                     	;# 
  1108  0098                     	;# 
  1109  0099                     	;# 
  1110  009A                     	;# 
  1111  009B                     	;# 
  1112  009B                     	;# 
  1113  009C                     	;# 
  1114  009D                     	;# 
  1115  009E                     	;# 
  1116  010C                     	;# 
  1117  010D                     	;# 
  1118  010E                     	;# 
  1119  0111                     	;# 
  1120  0112                     	;# 
  1121  0113                     	;# 
  1122  0114                     	;# 
  1123  0115                     	;# 
  1124  0116                     	;# 
  1125  0117                     	;# 
  1126  0118                     	;# 
  1127  0119                     	;# 
  1128  011A                     	;# 
  1129  011B                     	;# 
  1130  011D                     	;# 
  1131  011E                     	;# 
  1132  018C                     	;# 
  1133  018D                     	;# 
  1134  018E                     	;# 
  1135  0191                     	;# 
  1136  0191                     	;# 
  1137  0192                     	;# 
  1138  0193                     	;# 
  1139  0193                     	;# 
  1140  0193                     	;# 
  1141  0194                     	;# 
  1142  0195                     	;# 
  1143  0196                     	;# 
  1144  0199                     	;# 
  1145  019A                     	;# 
  1146  019B                     	;# 
  1147  019B                     	;# 
  1148  019C                     	;# 
  1149  019D                     	;# 
  1150  019E                     	;# 
  1151  019F                     	;# 
  1152  020C                     	;# 
  1153  020D                     	;# 
  1154  020E                     	;# 
  1155  0211                     	;# 
  1156  0211                     	;# 
  1157  0212                     	;# 
  1158  0212                     	;# 
  1159  0213                     	;# 
  1160  0213                     	;# 
  1161  0214                     	;# 
  1162  0214                     	;# 
  1163  0215                     	;# 
  1164  0215                     	;# 
  1165  0215                     	;# 
  1166  0216                     	;# 
  1167  0216                     	;# 
  1168  0217                     	;# 
  1169  0217                     	;# 
  1170  0219                     	;# 
  1171  021A                     	;# 
  1172  021B                     	;# 
  1173  021C                     	;# 
  1174  021D                     	;# 
  1175  021E                     	;# 
  1176  021F                     	;# 
  1177  0291                     	;# 
  1178  0291                     	;# 
  1179  0292                     	;# 
  1180  0293                     	;# 
  1181  0294                     	;# 
  1182  0295                     	;# 
  1183  0295                     	;# 
  1184  0296                     	;# 
  1185  0298                     	;# 
  1186  0298                     	;# 
  1187  0299                     	;# 
  1188  029A                     	;# 
  1189  029B                     	;# 
  1190  029C                     	;# 
  1191  029D                     	;# 
  1192  029E                     	;# 
  1193  0311                     	;# 
  1194  0311                     	;# 
  1195  0312                     	;# 
  1196  0313                     	;# 
  1197  0318                     	;# 
  1198  0318                     	;# 
  1199  0319                     	;# 
  1200  031A                     	;# 
  1201  038C                     	;# 
  1202  038D                     	;# 
  1203  038E                     	;# 
  1204  0391                     	;# 
  1205  0392                     	;# 
  1206  0393                     	;# 
  1207  0394                     	;# 
  1208  0395                     	;# 
  1209  0396                     	;# 
  1210  039A                     	;# 
  1211  039C                     	;# 
  1212  039D                     	;# 
  1213  039E                     	;# 
  1214  039F                     	;# 
  1215  0415                     	;# 
  1216  0416                     	;# 
  1217  0417                     	;# 
  1218  041C                     	;# 
  1219  041D                     	;# 
  1220  041E                     	;# 
  1221  0FE4                     	;# 
  1222  0FE5                     	;# 
  1223  0FE6                     	;# 
  1224  0FE7                     	;# 
  1225  0FE8                     	;# 
  1226  0FE9                     	;# 
  1227  0FEA                     	;# 
  1228  0FEB                     	;# 
  1229  0FED                     	;# 
  1230  0FEE                     	;# 
  1231  0FEF                     	;# 
  1232  0000                     	;# 
  1233  0001                     	;# 
  1234  0002                     	;# 
  1235  0003                     	;# 
  1236  0004                     	;# 
  1237  0005                     	;# 
  1238  0006                     	;# 
  1239  0007                     	;# 
  1240  0008                     	;# 
  1241  0009                     	;# 
  1242  000A                     	;# 
  1243  000B                     	;# 
  1244  000C                     	;# 
  1245  000D                     	;# 
  1246  000E                     	;# 
  1247  0011                     	;# 
  1248  0012                     	;# 
  1249  0013                     	;# 
  1250  0014                     	;# 
  1251  0015                     	;# 
  1252  0016                     	;# 
  1253  0016                     	;# 
  1254  0017                     	;# 
  1255  0018                     	;# 
  1256  0019                     	;# 
  1257  001A                     	;# 
  1258  001B                     	;# 
  1259  001C                     	;# 
  1260  001E                     	;# 
  1261  001F                     	;# 
  1262  008C                     	;# 
  1263  008D                     	;# 
  1264  008E                     	;# 
  1265  0091                     	;# 
  1266  0092                     	;# 
  1267  0093                     	;# 
  1268  0094                     	;# 
  1269  0095                     	;# 
  1270  0096                     	;# 
  1271  0097                     	;# 
  1272  0098                     	;# 
  1273  0099                     	;# 
  1274  009A                     	;# 
  1275  009B                     	;# 
  1276  009B                     	;# 
  1277  009C                     	;# 
  1278  009D                     	;# 
  1279  009E                     	;# 
  1280  010C                     	;# 
  1281  010D                     	;# 
  1282  010E                     	;# 
  1283  0111                     	;# 
  1284  0112                     	;# 
  1285  0113                     	;# 
  1286  0114                     	;# 
  1287  0115                     	;# 
  1288  0116                     	;# 
  1289  0117                     	;# 
  1290  0118                     	;# 
  1291  0119                     	;# 
  1292  011A                     	;# 
  1293  011B                     	;# 
  1294  011D                     	;# 
  1295  011E                     	;# 
  1296  018C                     	;# 
  1297  018D                     	;# 
  1298  018E                     	;# 
  1299  0191                     	;# 
  1300  0191                     	;# 
  1301  0192                     	;# 
  1302  0193                     	;# 
  1303  0193                     	;# 
  1304  0193                     	;# 
  1305  0194                     	;# 
  1306  0195                     	;# 
  1307  0196                     	;# 
  1308  0199                     	;# 
  1309  019A                     	;# 
  1310  019B                     	;# 
  1311  019B                     	;# 
  1312  019C                     	;# 
  1313  019D                     	;# 
  1314  019E                     	;# 
  1315  019F                     	;# 
  1316  020C                     	;# 
  1317  020D                     	;# 
  1318  020E                     	;# 
  1319  0211                     	;# 
  1320  0211                     	;# 
  1321  0212                     	;# 
  1322  0212                     	;# 
  1323  0213                     	;# 
  1324  0213                     	;# 
  1325  0214                     	;# 
  1326  0214                     	;# 
  1327  0215                     	;# 
  1328  0215                     	;# 
  1329  0215                     	;# 
  1330  0216                     	;# 
  1331  0216                     	;# 
  1332  0217                     	;# 
  1333  0217                     	;# 
  1334  0219                     	;# 
  1335  021A                     	;# 
  1336  021B                     	;# 
  1337  021C                     	;# 
  1338  021D                     	;# 
  1339  021E                     	;# 
  1340  021F                     	;# 
  1341  0291                     	;# 
  1342  0291                     	;# 
  1343  0292                     	;# 
  1344  0293                     	;# 
  1345  0294                     	;# 
  1346  0295                     	;# 
  1347  0295                     	;# 
  1348  0296                     	;# 
  1349  0298                     	;# 
  1350  0298                     	;# 
  1351  0299                     	;# 
  1352  029A                     	;# 
  1353  029B                     	;# 
  1354  029C                     	;# 
  1355  029D                     	;# 
  1356  029E                     	;# 
  1357  0311                     	;# 
  1358  0311                     	;# 
  1359  0312                     	;# 
  1360  0313                     	;# 
  1361  0318                     	;# 
  1362  0318                     	;# 
  1363  0319                     	;# 
  1364  031A                     	;# 
  1365  038C                     	;# 
  1366  038D                     	;# 
  1367  038E                     	;# 
  1368  0391                     	;# 
  1369  0392                     	;# 
  1370  0393                     	;# 
  1371  0394                     	;# 
  1372  0395                     	;# 
  1373  0396                     	;# 
  1374  039A                     	;# 
  1375  039C                     	;# 
  1376  039D                     	;# 
  1377  039E                     	;# 
  1378  039F                     	;# 
  1379  0415                     	;# 
  1380  0416                     	;# 
  1381  0417                     	;# 
  1382  041C                     	;# 
  1383  041D                     	;# 
  1384  041E                     	;# 
  1385  0FE4                     	;# 
  1386  0FE5                     	;# 
  1387  0FE6                     	;# 
  1388  0FE7                     	;# 
  1389  0FE8                     	;# 
  1390  0FE9                     	;# 
  1391  0FEA                     	;# 
  1392  0FEB                     	;# 
  1393  0FED                     	;# 
  1394  0FEE                     	;# 
  1395  0FEF                     	;# 
  1396  0000                     	;# 
  1397  0001                     	;# 
  1398  0002                     	;# 
  1399  0003                     	;# 
  1400  0004                     	;# 
  1401  0005                     	;# 
  1402  0006                     	;# 
  1403  0007                     	;# 
  1404  0008                     	;# 
  1405  0009                     	;# 
  1406  000A                     	;# 
  1407  000B                     	;# 
  1408  000C                     	;# 
  1409  000D                     	;# 
  1410  000E                     	;# 
  1411  0011                     	;# 
  1412  0012                     	;# 
  1413  0013                     	;# 
  1414  0014                     	;# 
  1415  0015                     	;# 
  1416  0016                     	;# 
  1417  0016                     	;# 
  1418  0017                     	;# 
  1419  0018                     	;# 
  1420  0019                     	;# 
  1421  001A                     	;# 
  1422  001B                     	;# 
  1423  001C                     	;# 
  1424  001E                     	;# 
  1425  001F                     	;# 
  1426  008C                     	;# 
  1427  008D                     	;# 
  1428  008E                     	;# 
  1429  0091                     	;# 
  1430  0092                     	;# 
  1431  0093                     	;# 
  1432  0094                     	;# 
  1433  0095                     	;# 
  1434  0096                     	;# 
  1435  0097                     	;# 
  1436  0098                     	;# 
  1437  0099                     	;# 
  1438  009A                     	;# 
  1439  009B                     	;# 
  1440  009B                     	;# 
  1441  009C                     	;# 
  1442  009D                     	;# 
  1443  009E                     	;# 
  1444  010C                     	;# 
  1445  010D                     	;# 
  1446  010E                     	;# 
  1447  0111                     	;# 
  1448  0112                     	;# 
  1449  0113                     	;# 
  1450  0114                     	;# 
  1451  0115                     	;# 
  1452  0116                     	;# 
  1453  0117                     	;# 
  1454  0118                     	;# 
  1455  0119                     	;# 
  1456  011A                     	;# 
  1457  011B                     	;# 
  1458  011D                     	;# 
  1459  011E                     	;# 
  1460  018C                     	;# 
  1461  018D                     	;# 
  1462  018E                     	;# 
  1463  0191                     	;# 
  1464  0191                     	;# 
  1465  0192                     	;# 
  1466  0193                     	;# 
  1467  0193                     	;# 
  1468  0193                     	;# 
  1469  0194                     	;# 
  1470  0195                     	;# 
  1471  0196                     	;# 
  1472  0199                     	;# 
  1473  019A                     	;# 
  1474  019B                     	;# 
  1475  019B                     	;# 
  1476  019C                     	;# 
  1477  019D                     	;# 
  1478  019E                     	;# 
  1479  019F                     	;# 
  1480  020C                     	;# 
  1481  020D                     	;# 
  1482  020E                     	;# 
  1483  0211                     	;# 
  1484  0211                     	;# 
  1485  0212                     	;# 
  1486  0212                     	;# 
  1487  0213                     	;# 
  1488  0213                     	;# 
  1489  0214                     	;# 
  1490  0214                     	;# 
  1491  0215                     	;# 
  1492  0215                     	;# 
  1493  0215                     	;# 
  1494  0216                     	;# 
  1495  0216                     	;# 
  1496  0217                     	;# 
  1497  0217                     	;# 
  1498  0219                     	;# 
  1499  021A                     	;# 
  1500  021B                     	;# 
  1501  021C                     	;# 
  1502  021D                     	;# 
  1503  021E                     	;# 
  1504  021F                     	;# 
  1505  0291                     	;# 
  1506  0291                     	;# 
  1507  0292                     	;# 
  1508  0293                     	;# 
  1509  0294                     	;# 
  1510  0295                     	;# 
  1511  0295                     	;# 
  1512  0296                     	;# 
  1513  0298                     	;# 
  1514  0298                     	;# 
  1515  0299                     	;# 
  1516  029A                     	;# 
  1517  029B                     	;# 
  1518  029C                     	;# 
  1519  029D                     	;# 
  1520  029E                     	;# 
  1521  0311                     	;# 
  1522  0311                     	;# 
  1523  0312                     	;# 
  1524  0313                     	;# 
  1525  0318                     	;# 
  1526  0318                     	;# 
  1527  0319                     	;# 
  1528  031A                     	;# 
  1529  038C                     	;# 
  1530  038D                     	;# 
  1531  038E                     	;# 
  1532  0391                     	;# 
  1533  0392                     	;# 
  1534  0393                     	;# 
  1535  0394                     	;# 
  1536  0395                     	;# 
  1537  0396                     	;# 
  1538  039A                     	;# 
  1539  039C                     	;# 
  1540  039D                     	;# 
  1541  039E                     	;# 
  1542  039F                     	;# 
  1543  0415                     	;# 
  1544  0416                     	;# 
  1545  0417                     	;# 
  1546  041C                     	;# 
  1547  041D                     	;# 
  1548  041E                     	;# 
  1549  0FE4                     	;# 
  1550  0FE5                     	;# 
  1551  0FE6                     	;# 
  1552  0FE7                     	;# 
  1553  0FE8                     	;# 
  1554  0FE9                     	;# 
  1555  0FEA                     	;# 
  1556  0FEB                     	;# 
  1557  0FED                     	;# 
  1558  0FEE                     	;# 
  1559  0FEF                     	;# 
  1560  0000                     	;# 
  1561  0001                     	;# 
  1562  0002                     	;# 
  1563  0003                     	;# 
  1564  0004                     	;# 
  1565  0005                     	;# 
  1566  0006                     	;# 
  1567  0007                     	;# 
  1568  0008                     	;# 
  1569  0009                     	;# 
  1570  000A                     	;# 
  1571  000B                     	;# 
  1572  000C                     	;# 
  1573  000D                     	;# 
  1574  000E                     	;# 
  1575  0011                     	;# 
  1576  0012                     	;# 
  1577  0013                     	;# 
  1578  0014                     	;# 
  1579  0015                     	;# 
  1580  0016                     	;# 
  1581  0016                     	;# 
  1582  0017                     	;# 
  1583  0018                     	;# 
  1584  0019                     	;# 
  1585  001A                     	;# 
  1586  001B                     	;# 
  1587  001C                     	;# 
  1588  001E                     	;# 
  1589  001F                     	;# 
  1590  008C                     	;# 
  1591  008D                     	;# 
  1592  008E                     	;# 
  1593  0091                     	;# 
  1594  0092                     	;# 
  1595  0093                     	;# 
  1596  0094                     	;# 
  1597  0095                     	;# 
  1598  0096                     	;# 
  1599  0097                     	;# 
  1600  0098                     	;# 
  1601  0099                     	;# 
  1602  009A                     	;# 
  1603  009B                     	;# 
  1604  009B                     	;# 
  1605  009C                     	;# 
  1606  009D                     	;# 
  1607  009E                     	;# 
  1608  010C                     	;# 
  1609  010D                     	;# 
  1610  010E                     	;# 
  1611  0111                     	;# 
  1612  0112                     	;# 
  1613  0113                     	;# 
  1614  0114                     	;# 
  1615  0115                     	;# 
  1616  0116                     	;# 
  1617  0117                     	;# 
  1618  0118                     	;# 
  1619  0119                     	;# 
  1620  011A                     	;# 
  1621  011B                     	;# 
  1622  011D                     	;# 
  1623  011E                     	;# 
  1624  018C                     	;# 
  1625  018D                     	;# 
  1626  018E                     	;# 
  1627  0191                     	;# 
  1628  0191                     	;# 
  1629  0192                     	;# 
  1630  0193                     	;# 
  1631  0193                     	;# 
  1632  0193                     	;# 
  1633  0194                     	;# 
  1634  0195                     	;# 
  1635  0196                     	;# 
  1636  0199                     	;# 
  1637  019A                     	;# 
  1638  019B                     	;# 
  1639  019B                     	;# 
  1640  019C                     	;# 
  1641  019D                     	;# 
  1642  019E                     	;# 
  1643  019F                     	;# 
  1644  020C                     	;# 
  1645  020D                     	;# 
  1646  020E                     	;# 
  1647  0211                     	;# 
  1648  0211                     	;# 
  1649  0212                     	;# 
  1650  0212                     	;# 
  1651  0213                     	;# 
  1652  0213                     	;# 
  1653  0214                     	;# 
  1654  0214                     	;# 
  1655  0215                     	;# 
  1656  0215                     	;# 
  1657  0215                     	;# 
  1658  0216                     	;# 
  1659  0216                     	;# 
  1660  0217                     	;# 
  1661  0217                     	;# 
  1662  0219                     	;# 
  1663  021A                     	;# 
  1664  021B                     	;# 
  1665  021C                     	;# 
  1666  021D                     	;# 
  1667  021E                     	;# 
  1668  021F                     	;# 
  1669  0291                     	;# 
  1670  0291                     	;# 
  1671  0292                     	;# 
  1672  0293                     	;# 
  1673  0294                     	;# 
  1674  0295                     	;# 
  1675  0295                     	;# 
  1676  0296                     	;# 
  1677  0298                     	;# 
  1678  0298                     	;# 
  1679  0299                     	;# 
  1680  029A                     	;# 
  1681  029B                     	;# 
  1682  029C                     	;# 
  1683  029D                     	;# 
  1684  029E                     	;# 
  1685  0311                     	;# 
  1686  0311                     	;# 
  1687  0312                     	;# 
  1688  0313                     	;# 
  1689  0318                     	;# 
  1690  0318                     	;# 
  1691  0319                     	;# 
  1692  031A                     	;# 
  1693  038C                     	;# 
  1694  038D                     	;# 
  1695  038E                     	;# 
  1696  0391                     	;# 
  1697  0392                     	;# 
  1698  0393                     	;# 
  1699  0394                     	;# 
  1700  0395                     	;# 
  1701  0396                     	;# 
  1702  039A                     	;# 
  1703  039C                     	;# 
  1704  039D                     	;# 
  1705  039E                     	;# 
  1706  039F                     	;# 
  1707  0415                     	;# 
  1708  0416                     	;# 
  1709  0417                     	;# 
  1710  041C                     	;# 
  1711  041D                     	;# 
  1712  041E                     	;# 
  1713  0FE4                     	;# 
  1714  0FE5                     	;# 
  1715  0FE6                     	;# 
  1716  0FE7                     	;# 
  1717  0FE8                     	;# 
  1718  0FE9                     	;# 
  1719  0FEA                     	;# 
  1720  0FEB                     	;# 
  1721  0FED                     	;# 
  1722  0FEE                     	;# 
  1723  0FEF                     	;# 
  1724  0000                     	;# 
  1725  0001                     	;# 
  1726  0002                     	;# 
  1727  0003                     	;# 
  1728  0004                     	;# 
  1729  0005                     	;# 
  1730  0006                     	;# 
  1731  0007                     	;# 
  1732  0008                     	;# 
  1733  0009                     	;# 
  1734  000A                     	;# 
  1735  000B                     	;# 
  1736  000C                     	;# 
  1737  000D                     	;# 
  1738  000E                     	;# 
  1739  0011                     	;# 
  1740  0012                     	;# 
  1741  0013                     	;# 
  1742  0014                     	;# 
  1743  0015                     	;# 
  1744  0016                     	;# 
  1745  0016                     	;# 
  1746  0017                     	;# 
  1747  0018                     	;# 
  1748  0019                     	;# 
  1749  001A                     	;# 
  1750  001B                     	;# 
  1751  001C                     	;# 
  1752  001E                     	;# 
  1753  001F                     	;# 
  1754  008C                     	;# 
  1755  008D                     	;# 
  1756  008E                     	;# 
  1757  0091                     	;# 
  1758  0092                     	;# 
  1759  0093                     	;# 
  1760  0094                     	;# 
  1761  0095                     	;# 
  1762  0096                     	;# 
  1763  0097                     	;# 
  1764  0098                     	;# 
  1765  0099                     	;# 
  1766  009A                     	;# 
  1767  009B                     	;# 
  1768  009B                     	;# 
  1769  009C                     	;# 
  1770  009D                     	;# 
  1771  009E                     	;# 
  1772  010C                     	;# 
  1773  010D                     	;# 
  1774  010E                     	;# 
  1775  0111                     	;# 
  1776  0112                     	;# 
  1777  0113                     	;# 
  1778  0114                     	;# 
  1779  0115                     	;# 
  1780  0116                     	;# 
  1781  0117                     	;# 
  1782  0118                     	;# 
  1783  0119                     	;# 
  1784  011A                     	;# 
  1785  011B                     	;# 
  1786  011D                     	;# 
  1787  011E                     	;# 
  1788  018C                     	;# 
  1789  018D                     	;# 
  1790  018E                     	;# 
  1791  0191                     	;# 
  1792  0191                     	;# 
  1793  0192                     	;# 
  1794  0193                     	;# 
  1795  0193                     	;# 
  1796  0193                     	;# 
  1797  0194                     	;# 
  1798  0195                     	;# 
  1799  0196                     	;# 
  1800  0199                     	;# 
  1801  019A                     	;# 
  1802  019B                     	;# 
  1803  019B                     	;# 
  1804  019C                     	;# 
  1805  019D                     	;# 
  1806  019E                     	;# 
  1807  019F                     	;# 
  1808  020C                     	;# 
  1809  020D                     	;# 
  1810  020E                     	;# 
  1811  0211                     	;# 
  1812  0211                     	;# 
  1813  0212                     	;# 
  1814  0212                     	;# 
  1815  0213                     	;# 
  1816  0213                     	;# 
  1817  0214                     	;# 
  1818  0214                     	;# 
  1819  0215                     	;# 
  1820  0215                     	;# 
  1821  0215                     	;# 
  1822  0216                     	;# 
  1823  0216                     	;# 
  1824  0217                     	;# 
  1825  0217                     	;# 
  1826  0219                     	;# 
  1827  021A                     	;# 
  1828  021B                     	;# 
  1829  021C                     	;# 
  1830  021D                     	;# 
  1831  021E                     	;# 
  1832  021F                     	;# 
  1833  0291                     	;# 
  1834  0291                     	;# 
  1835  0292                     	;# 
  1836  0293                     	;# 
  1837  0294                     	;# 
  1838  0295                     	;# 
  1839  0295                     	;# 
  1840  0296                     	;# 
  1841  0298                     	;# 
  1842  0298                     	;# 
  1843  0299                     	;# 
  1844  029A                     	;# 
  1845  029B                     	;# 
  1846  029C                     	;# 
  1847  029D                     	;# 
  1848  029E                     	;# 
  1849  0311                     	;# 
  1850  0311                     	;# 
  1851  0312                     	;# 
  1852  0313                     	;# 
  1853  0318                     	;# 
  1854  0318                     	;# 
  1855  0319                     	;# 
  1856  031A                     	;# 
  1857  038C                     	;# 
  1858  038D                     	;# 
  1859  038E                     	;# 
  1860  0391                     	;# 
  1861  0392                     	;# 
  1862  0393                     	;# 
  1863  0394                     	;# 
  1864  0395                     	;# 
  1865  0396                     	;# 
  1866  039A                     	;# 
  1867  039C                     	;# 
  1868  039D                     	;# 
  1869  039E                     	;# 
  1870  039F                     	;# 
  1871  0415                     	;# 
  1872  0416                     	;# 
  1873  0417                     	;# 
  1874  041C                     	;# 
  1875  041D                     	;# 
  1876  041E                     	;# 
  1877  0FE4                     	;# 
  1878  0FE5                     	;# 
  1879  0FE6                     	;# 
  1880  0FE7                     	;# 
  1881  0FE8                     	;# 
  1882  0FE9                     	;# 
  1883  0FEA                     	;# 
  1884  0FEB                     	;# 
  1885  0FED                     	;# 
  1886  0FEE                     	;# 
  1887  0FEF                     	;# 
  1888  0000                     	;# 
  1889  0001                     	;# 
  1890  0002                     	;# 
  1891  0003                     	;# 
  1892  0004                     	;# 
  1893  0005                     	;# 
  1894  0006                     	;# 
  1895  0007                     	;# 
  1896  0008                     	;# 
  1897  0009                     	;# 
  1898  000A                     	;# 
  1899  000B                     	;# 
  1900  000C                     	;# 
  1901  000D                     	;# 
  1902  000E                     	;# 
  1903  0011                     	;# 
  1904  0012                     	;# 
  1905  0013                     	;# 
  1906  0014                     	;# 
  1907  0015                     	;# 
  1908  0016                     	;# 
  1909  0016                     	;# 
  1910  0017                     	;# 
  1911  0018                     	;# 
  1912  0019                     	;# 
  1913  001A                     	;# 
  1914  001B                     	;# 
  1915  001C                     	;# 
  1916  001E                     	;# 
  1917  001F                     	;# 
  1918  008C                     	;# 
  1919  008D                     	;# 
  1920  008E                     	;# 
  1921  0091                     	;# 
  1922  0092                     	;# 
  1923  0093                     	;# 
  1924  0094                     	;# 
  1925  0095                     	;# 
  1926  0096                     	;# 
  1927  0097                     	;# 
  1928  0098                     	;# 
  1929  0099                     	;# 
  1930  009A                     	;# 
  1931  009B                     	;# 
  1932  009B                     	;# 
  1933  009C                     	;# 
  1934  009D                     	;# 
  1935  009E                     	;# 
  1936  010C                     	;# 
  1937  010D                     	;# 
  1938  010E                     	;# 
  1939  0111                     	;# 
  1940  0112                     	;# 
  1941  0113                     	;# 
  1942  0114                     	;# 
  1943  0115                     	;# 
  1944  0116                     	;# 
  1945  0117                     	;# 
  1946  0118                     	;# 
  1947  0119                     	;# 
  1948  011A                     	;# 
  1949  011B                     	;# 
  1950  011D                     	;# 
  1951  011E                     	;# 
  1952  018C                     	;# 
  1953  018D                     	;# 
  1954  018E                     	;# 
  1955  0191                     	;# 
  1956  0191                     	;# 
  1957  0192                     	;# 
  1958  0193                     	;# 
  1959  0193                     	;# 
  1960  0193                     	;# 
  1961  0194                     	;# 
  1962  0195                     	;# 
  1963  0196                     	;# 
  1964  0199                     	;# 
  1965  019A                     	;# 
  1966  019B                     	;# 
  1967  019B                     	;# 
  1968  019C                     	;# 
  1969  019D                     	;# 
  1970  019E                     	;# 
  1971  019F                     	;# 
  1972  020C                     	;# 
  1973  020D                     	;# 
  1974  020E                     	;# 
  1975  0211                     	;# 
  1976  0211                     	;# 
  1977  0212                     	;# 
  1978  0212                     	;# 
  1979  0213                     	;# 
  1980  0213                     	;# 
  1981  0214                     	;# 
  1982  0214                     	;# 
  1983  0215                     	;# 
  1984  0215                     	;# 
  1985  0215                     	;# 
  1986  0216                     	;# 
  1987  0216                     	;# 
  1988  0217                     	;# 
  1989  0217                     	;# 
  1990  0219                     	;# 
  1991  021A                     	;# 
  1992  021B                     	;# 
  1993  021C                     	;# 
  1994  021D                     	;# 
  1995  021E                     	;# 
  1996  021F                     	;# 
  1997  0291                     	;# 
  1998  0291                     	;# 
  1999  0292                     	;# 
  2000  0293                     	;# 
  2001  0294                     	;# 
  2002  0295                     	;# 
  2003  0295                     	;# 
  2004  0296                     	;# 
  2005  0298                     	;# 
  2006  0298                     	;# 
  2007  0299                     	;# 
  2008  029A                     	;# 
  2009  029B                     	;# 
  2010  029C                     	;# 
  2011  029D                     	;# 
  2012  029E                     	;# 
  2013  0311                     	;# 
  2014  0311                     	;# 
  2015  0312                     	;# 
  2016  0313                     	;# 
  2017  0318                     	;# 
  2018  0318                     	;# 
  2019  0319                     	;# 
  2020  031A                     	;# 
  2021  038C                     	;# 
  2022  038D                     	;# 
  2023  038E                     	;# 
  2024  0391                     	;# 
  2025  0392                     	;# 
  2026  0393                     	;# 
  2027  0394                     	;# 
  2028  0395                     	;# 
  2029  0396                     	;# 
  2030  039A                     	;# 
  2031  039C                     	;# 
  2032  039D                     	;# 
  2033  039E                     	;# 
  2034  039F                     	;# 
  2035  0415                     	;# 
  2036  0416                     	;# 
  2037  0417                     	;# 
  2038  041C                     	;# 
  2039  041D                     	;# 
  2040  041E                     	;# 
  2041  0FE4                     	;# 
  2042  0FE5                     	;# 
  2043  0FE6                     	;# 
  2044  0FE7                     	;# 
  2045  0FE8                     	;# 
  2046  0FE9                     	;# 
  2047  0FEA                     	;# 
  2048  0FEB                     	;# 
  2049  0FED                     	;# 
  2050  0FEE                     	;# 
  2051  0FEF                     	;# 
  2052  0000                     	;# 
  2053  0001                     	;# 
  2054  0002                     	;# 
  2055  0003                     	;# 
  2056  0004                     	;# 
  2057  0005                     	;# 
  2058  0006                     	;# 
  2059  0007                     	;# 
  2060  0008                     	;# 
  2061  0009                     	;# 
  2062  000A                     	;# 
  2063  000B                     	;# 
  2064  000C                     	;# 
  2065  000D                     	;# 
  2066  000E                     	;# 
  2067  0011                     	;# 
  2068  0012                     	;# 
  2069  0013                     	;# 
  2070  0014                     	;# 
  2071  0015                     	;# 
  2072  0016                     	;# 
  2073  0016                     	;# 
  2074  0017                     	;# 
  2075  0018                     	;# 
  2076  0019                     	;# 
  2077  001A                     	;# 
  2078  001B                     	;# 
  2079  001C                     	;# 
  2080  001E                     	;# 
  2081  001F                     	;# 
  2082  008C                     	;# 
  2083  008D                     	;# 
  2084  008E                     	;# 
  2085  0091                     	;# 
  2086  0092                     	;# 
  2087  0093                     	;# 
  2088  0094                     	;# 
  2089  0095                     	;# 
  2090  0096                     	;# 
  2091  0097                     	;# 
  2092  0098                     	;# 
  2093  0099                     	;# 
  2094  009A                     	;# 
  2095  009B                     	;# 
  2096  009B                     	;# 
  2097  009C                     	;# 
  2098  009D                     	;# 
  2099  009E                     	;# 
  2100  010C                     	;# 
  2101  010D                     	;# 
  2102  010E                     	;# 
  2103  0111                     	;# 
  2104  0112                     	;# 
  2105  0113                     	;# 
  2106  0114                     	;# 
  2107  0115                     	;# 
  2108  0116                     	;# 
  2109  0117                     	;# 
  2110  0118                     	;# 
  2111  0119                     	;# 
  2112  011A                     	;# 
  2113  011B                     	;# 
  2114  011D                     	;# 
  2115  011E                     	;# 
  2116  018C                     	;# 
  2117  018D                     	;# 
  2118  018E                     	;# 
  2119  0191                     	;# 
  2120  0191                     	;# 
  2121  0192                     	;# 
  2122  0193                     	;# 
  2123  0193                     	;# 
  2124  0193                     	;# 
  2125  0194                     	;# 
  2126  0195                     	;# 
  2127  0196                     	;# 
  2128  0199                     	;# 
  2129  019A                     	;# 
  2130  019B                     	;# 
  2131  019B                     	;# 
  2132  019C                     	;# 
  2133  019D                     	;# 
  2134  019E                     	;# 
  2135  019F                     	;# 
  2136  020C                     	;# 
  2137  020D                     	;# 
  2138  020E                     	;# 
  2139  0211                     	;# 
  2140  0211                     	;# 
  2141  0212                     	;# 
  2142  0212                     	;# 
  2143  0213                     	;# 
  2144  0213                     	;# 
  2145  0214                     	;# 
  2146  0214                     	;# 
  2147  0215                     	;# 
  2148  0215                     	;# 
  2149  0215                     	;# 
  2150  0216                     	;# 
  2151  0216                     	;# 
  2152  0217                     	;# 
  2153  0217                     	;# 
  2154  0219                     	;# 
  2155  021A                     	;# 
  2156  021B                     	;# 
  2157  021C                     	;# 
  2158  021D                     	;# 
  2159  021E                     	;# 
  2160  021F                     	;# 
  2161  0291                     	;# 
  2162  0291                     	;# 
  2163  0292                     	;# 
  2164  0293                     	;# 
  2165  0294                     	;# 
  2166  0295                     	;# 
  2167  0295                     	;# 
  2168  0296                     	;# 
  2169  0298                     	;# 
  2170  0298                     	;# 
  2171  0299                     	;# 
  2172  029A                     	;# 
  2173  029B                     	;# 
  2174  029C                     	;# 
  2175  029D                     	;# 
  2176  029E                     	;# 
  2177  0311                     	;# 
  2178  0311                     	;# 
  2179  0312                     	;# 
  2180  0313                     	;# 
  2181  0318                     	;# 
  2182  0318                     	;# 
  2183  0319                     	;# 
  2184  031A                     	;# 
  2185  038C                     	;# 
  2186  038D                     	;# 
  2187  038E                     	;# 
  2188  0391                     	;# 
  2189  0392                     	;# 
  2190  0393                     	;# 
  2191  0394                     	;# 
  2192  0395                     	;# 
  2193  0396                     	;# 
  2194  039A                     	;# 
  2195  039C                     	;# 
  2196  039D                     	;# 
  2197  039E                     	;# 
  2198  039F                     	;# 
  2199  0415                     	;# 
  2200  0416                     	;# 
  2201  0417                     	;# 
  2202  041C                     	;# 
  2203  041D                     	;# 
  2204  041E                     	;# 
  2205  0FE4                     	;# 
  2206  0FE5                     	;# 
  2207  0FE6                     	;# 
  2208  0FE7                     	;# 
  2209  0FE8                     	;# 
  2210  0FE9                     	;# 
  2211  0FEA                     	;# 
  2212  0FEB                     	;# 
  2213  0FED                     	;# 
  2214  0FEE                     	;# 
  2215  0FEF                     	;# 
  2216  0000                     	;# 
  2217  0001                     	;# 
  2218  0002                     	;# 
  2219  0003                     	;# 
  2220  0004                     	;# 
  2221  0005                     	;# 
  2222  0006                     	;# 
  2223  0007                     	;# 
  2224  0008                     	;# 
  2225  0009                     	;# 
  2226  000A                     	;# 
  2227  000B                     	;# 
  2228  000C                     	;# 
  2229  000D                     	;# 
  2230  000E                     	;# 
  2231  0011                     	;# 
  2232  0012                     	;# 
  2233  0013                     	;# 
  2234  0014                     	;# 
  2235  0015                     	;# 
  2236  0016                     	;# 
  2237  0016                     	;# 
  2238  0017                     	;# 
  2239  0018                     	;# 
  2240  0019                     	;# 
  2241  001A                     	;# 
  2242  001B                     	;# 
  2243  001C                     	;# 
  2244  001E                     	;# 
  2245  001F                     	;# 
  2246  008C                     	;# 
  2247  008D                     	;# 
  2248  008E                     	;# 
  2249  0091                     	;# 
  2250  0092                     	;# 
  2251  0093                     	;# 
  2252  0094                     	;# 
  2253  0095                     	;# 
  2254  0096                     	;# 
  2255  0097                     	;# 
  2256  0098                     	;# 
  2257  0099                     	;# 
  2258  009A                     	;# 
  2259  009B                     	;# 
  2260  009B                     	;# 
  2261  009C                     	;# 
  2262  009D                     	;# 
  2263  009E                     	;# 
  2264  010C                     	;# 
  2265  010D                     	;# 
  2266  010E                     	;# 
  2267  0111                     	;# 
  2268  0112                     	;# 
  2269  0113                     	;# 
  2270  0114                     	;# 
  2271  0115                     	;# 
  2272  0116                     	;# 
  2273  0117                     	;# 
  2274  0118                     	;# 
  2275  0119                     	;# 
  2276  011A                     	;# 
  2277  011B                     	;# 
  2278  011D                     	;# 
  2279  011E                     	;# 
  2280  018C                     	;# 
  2281  018D                     	;# 
  2282  018E                     	;# 
  2283  0191                     	;# 
  2284  0191                     	;# 
  2285  0192                     	;# 
  2286  0193                     	;# 
  2287  0193                     	;# 
  2288  0193                     	;# 
  2289  0194                     	;# 
  2290  0195                     	;# 
  2291  0196                     	;# 
  2292  0199                     	;# 
  2293  019A                     	;# 
  2294  019B                     	;# 
  2295  019B                     	;# 
  2296  019C                     	;# 
  2297  019D                     	;# 
  2298  019E                     	;# 
  2299  019F                     	;# 
  2300  020C                     	;# 
  2301  020D                     	;# 
  2302  020E                     	;# 
  2303  0211                     	;# 
  2304  0211                     	;# 
  2305  0212                     	;# 
  2306  0212                     	;# 
  2307  0213                     	;# 
  2308  0213                     	;# 
  2309  0214                     	;# 
  2310  0214                     	;# 
  2311  0215                     	;# 
  2312  0215                     	;# 
  2313  0215                     	;# 
  2314  0216                     	;# 
  2315  0216                     	;# 
  2316  0217                     	;# 
  2317  0217                     	;# 
  2318  0219                     	;# 
  2319  021A                     	;# 
  2320  021B                     	;# 
  2321  021C                     	;# 
  2322  021D                     	;# 
  2323  021E                     	;# 
  2324  021F                     	;# 
  2325  0291                     	;# 
  2326  0291                     	;# 
  2327  0292                     	;# 
  2328  0293                     	;# 
  2329  0294                     	;# 
  2330  0295                     	;# 
  2331  0295                     	;# 
  2332  0296                     	;# 
  2333  0298                     	;# 
  2334  0298                     	;# 
  2335  0299                     	;# 
  2336  029A                     	;# 
  2337  029B                     	;# 
  2338  029C                     	;# 
  2339  029D                     	;# 
  2340  029E                     	;# 
  2341  0311                     	;# 
  2342  0311                     	;# 
  2343  0312                     	;# 
  2344  0313                     	;# 
  2345  0318                     	;# 
  2346  0318                     	;# 
  2347  0319                     	;# 
  2348  031A                     	;# 
  2349  038C                     	;# 
  2350  038D                     	;# 
  2351  038E                     	;# 
  2352  0391                     	;# 
  2353  0392                     	;# 
  2354  0393                     	;# 
  2355  0394                     	;# 
  2356  0395                     	;# 
  2357  0396                     	;# 
  2358  039A                     	;# 
  2359  039C                     	;# 
  2360  039D                     	;# 
  2361  039E                     	;# 
  2362  039F                     	;# 
  2363  0415                     	;# 
  2364  0416                     	;# 
  2365  0417                     	;# 
  2366  041C                     	;# 
  2367  041D                     	;# 
  2368  041E                     	;# 
  2369  0FE4                     	;# 
  2370  0FE5                     	;# 
  2371  0FE6                     	;# 
  2372  0FE7                     	;# 
  2373  0FE8                     	;# 
  2374  0FE9                     	;# 
  2375  0FEA                     	;# 
  2376  0FEB                     	;# 
  2377  0FED                     	;# 
  2378  0FEE                     	;# 
  2379  0FEF                     	;# 
  2380  0000                     	;# 
  2381  0001                     	;# 
  2382  0002                     	;# 
  2383  0003                     	;# 
  2384  0004                     	;# 
  2385  0005                     	;# 
  2386  0006                     	;# 
  2387  0007                     	;# 
  2388  0008                     	;# 
  2389  0009                     	;# 
  2390  000A                     	;# 
  2391  000B                     	;# 
  2392  000C                     	;# 
  2393  000D                     	;# 
  2394  000E                     	;# 
  2395  0011                     	;# 
  2396  0012                     	;# 
  2397  0013                     	;# 
  2398  0014                     	;# 
  2399  0015                     	;# 
  2400  0016                     	;# 
  2401  0016                     	;# 
  2402  0017                     	;# 
  2403  0018                     	;# 
  2404  0019                     	;# 
  2405  001A                     	;# 
  2406  001B                     	;# 
  2407  001C                     	;# 
  2408  001E                     	;# 
  2409  001F                     	;# 
  2410  008C                     	;# 
  2411  008D                     	;# 
  2412  008E                     	;# 
  2413  0091                     	;# 
  2414  0092                     	;# 
  2415  0093                     	;# 
  2416  0094                     	;# 
  2417  0095                     	;# 
  2418  0096                     	;# 
  2419  0097                     	;# 
  2420  0098                     	;# 
  2421  0099                     	;# 
  2422  009A                     	;# 
  2423  009B                     	;# 
  2424  009B                     	;# 
  2425  009C                     	;# 
  2426  009D                     	;# 
  2427  009E                     	;# 
  2428  010C                     	;# 
  2429  010D                     	;# 
  2430  010E                     	;# 
  2431  0111                     	;# 
  2432  0112                     	;# 
  2433  0113                     	;# 
  2434  0114                     	;# 
  2435  0115                     	;# 
  2436  0116                     	;# 
  2437  0117                     	;# 
  2438  0118                     	;# 
  2439  0119                     	;# 
  2440  011A                     	;# 
  2441  011B                     	;# 
  2442  011D                     	;# 
  2443  011E                     	;# 
  2444  018C                     	;# 
  2445  018D                     	;# 
  2446  018E                     	;# 
  2447  0191                     	;# 
  2448  0191                     	;# 
  2449  0192                     	;# 
  2450  0193                     	;# 
  2451  0193                     	;# 
  2452  0193                     	;# 
  2453  0194                     	;# 
  2454  0195                     	;# 
  2455  0196                     	;# 
  2456  0199                     	;# 
  2457  019A                     	;# 
  2458  019B                     	;# 
  2459  019B                     	;# 
  2460  019C                     	;# 
  2461  019D                     	;# 
  2462  019E                     	;# 
  2463  019F                     	;# 
  2464  020C                     	;# 
  2465  020D                     	;# 
  2466  020E                     	;# 
  2467  0211                     	;# 
  2468  0211                     	;# 
  2469  0212                     	;# 
  2470  0212                     	;# 
  2471  0213                     	;# 
  2472  0213                     	;# 
  2473  0214                     	;# 
  2474  0214                     	;# 
  2475  0215                     	;# 
  2476  0215                     	;# 
  2477  0215                     	;# 
  2478  0216                     	;# 
  2479  0216                     	;# 
  2480  0217                     	;# 
  2481  0217                     	;# 
  2482  0219                     	;# 
  2483  021A                     	;# 
  2484  021B                     	;# 
  2485  021C                     	;# 
  2486  021D                     	;# 
  2487  021E                     	;# 
  2488  021F                     	;# 
  2489  0291                     	;# 
  2490  0291                     	;# 
  2491  0292                     	;# 
  2492  0293                     	;# 
  2493  0294                     	;# 
  2494  0295                     	;# 
  2495  0295                     	;# 
  2496  0296                     	;# 
  2497  0298                     	;# 
  2498  0298                     	;# 
  2499  0299                     	;# 
  2500  029A                     	;# 
  2501  029B                     	;# 
  2502  029C                     	;# 
  2503  029D                     	;# 
  2504  029E                     	;# 
  2505  0311                     	;# 
  2506  0311                     	;# 
  2507  0312                     	;# 
  2508  0313                     	;# 
  2509  0318                     	;# 
  2510  0318                     	;# 
  2511  0319                     	;# 
  2512  031A                     	;# 
  2513  038C                     	;# 
  2514  038D                     	;# 
  2515  038E                     	;# 
  2516  0391                     	;# 
  2517  0392                     	;# 
  2518  0393                     	;# 
  2519  0394                     	;# 
  2520  0395                     	;# 
  2521  0396                     	;# 
  2522  039A                     	;# 
  2523  039C                     	;# 
  2524  039D                     	;# 
  2525  039E                     	;# 
  2526  039F                     	;# 
  2527  0415                     	;# 
  2528  0416                     	;# 
  2529  0417                     	;# 
  2530  041C                     	;# 
  2531  041D                     	;# 
  2532  041E                     	;# 
  2533  0FE4                     	;# 
  2534  0FE5                     	;# 
  2535  0FE6                     	;# 
  2536  0FE7                     	;# 
  2537  0FE8                     	;# 
  2538  0FE9                     	;# 
  2539  0FEA                     	;# 
  2540  0FEB                     	;# 
  2541  0FED                     	;# 
  2542  0FEE                     	;# 
  2543  0FEF                     	;# 
  2544  0000                     	;# 
  2545  0001                     	;# 
  2546  0002                     	;# 
  2547  0003                     	;# 
  2548  0004                     	;# 
  2549  0005                     	;# 
  2550  0006                     	;# 
  2551  0007                     	;# 
  2552  0008                     	;# 
  2553  0009                     	;# 
  2554  000A                     	;# 
  2555  000B                     	;# 
  2556  000C                     	;# 
  2557  000D                     	;# 
  2558  000E                     	;# 
  2559  0011                     	;# 
  2560  0012                     	;# 
  2561  0013                     	;# 
  2562  0014                     	;# 
  2563  0015                     	;# 
  2564  0016                     	;# 
  2565  0016                     	;# 
  2566  0017                     	;# 
  2567  0018                     	;# 
  2568  0019                     	;# 
  2569  001A                     	;# 
  2570  001B                     	;# 
  2571  001C                     	;# 
  2572  001E                     	;# 
  2573  001F                     	;# 
  2574  008C                     	;# 
  2575  008D                     	;# 
  2576  008E                     	;# 
  2577  0091                     	;# 
  2578  0092                     	;# 
  2579  0093                     	;# 
  2580  0094                     	;# 
  2581  0095                     	;# 
  2582  0096                     	;# 
  2583  0097                     	;# 
  2584  0098                     	;# 
  2585  0099                     	;# 
  2586  009A                     	;# 
  2587  009B                     	;# 
  2588  009B                     	;# 
  2589  009C                     	;# 
  2590  009D                     	;# 
  2591  009E                     	;# 
  2592  010C                     	;# 
  2593  010D                     	;# 
  2594  010E                     	;# 
  2595  0111                     	;# 
  2596  0112                     	;# 
  2597  0113                     	;# 
  2598  0114                     	;# 
  2599  0115                     	;# 
  2600  0116                     	;# 
  2601  0117                     	;# 
  2602  0118                     	;# 
  2603  0119                     	;# 
  2604  011A                     	;# 
  2605  011B                     	;# 
  2606  011D                     	;# 
  2607  011E                     	;# 
  2608  018C                     	;# 
  2609  018D                     	;# 
  2610  018E                     	;# 
  2611  0191                     	;# 
  2612  0191                     	;# 
  2613  0192                     	;# 
  2614  0193                     	;# 
  2615  0193                     	;# 
  2616  0193                     	;# 
  2617  0194                     	;# 
  2618  0195                     	;# 
  2619  0196                     	;# 
  2620  0199                     	;# 
  2621  019A                     	;# 
  2622  019B                     	;# 
  2623  019B                     	;# 
  2624  019C                     	;# 
  2625  019D                     	;# 
  2626  019E                     	;# 
  2627  019F                     	;# 
  2628  020C                     	;# 
  2629  020D                     	;# 
  2630  020E                     	;# 
  2631  0211                     	;# 
  2632  0211                     	;# 
  2633  0212                     	;# 
  2634  0212                     	;# 
  2635  0213                     	;# 
  2636  0213                     	;# 
  2637  0214                     	;# 
  2638  0214                     	;# 
  2639  0215                     	;# 
  2640  0215                     	;# 
  2641  0215                     	;# 
  2642  0216                     	;# 
  2643  0216                     	;# 
  2644  0217                     	;# 
  2645  0217                     	;# 
  2646  0219                     	;# 
  2647  021A                     	;# 
  2648  021B                     	;# 
  2649  021C                     	;# 
  2650  021D                     	;# 
  2651  021E                     	;# 
  2652  021F                     	;# 
  2653  0291                     	;# 
  2654  0291                     	;# 
  2655  0292                     	;# 
  2656  0293                     	;# 
  2657  0294                     	;# 
  2658  0295                     	;# 
  2659  0295                     	;# 
  2660  0296                     	;# 
  2661  0298                     	;# 
  2662  0298                     	;# 
  2663  0299                     	;# 
  2664  029A                     	;# 
  2665  029B                     	;# 
  2666  029C                     	;# 
  2667  029D                     	;# 
  2668  029E                     	;# 
  2669  0311                     	;# 
  2670  0311                     	;# 
  2671  0312                     	;# 
  2672  0313                     	;# 
  2673  0318                     	;# 
  2674  0318                     	;# 
  2675  0319                     	;# 
  2676  031A                     	;# 
  2677  038C                     	;# 
  2678  038D                     	;# 
  2679  038E                     	;# 
  2680  0391                     	;# 
  2681  0392                     	;# 
  2682  0393                     	;# 
  2683  0394                     	;# 
  2684  0395                     	;# 
  2685  0396                     	;# 
  2686  039A                     	;# 
  2687  039C                     	;# 
  2688  039D                     	;# 
  2689  039E                     	;# 
  2690  039F                     	;# 
  2691  0415                     	;# 
  2692  0416                     	;# 
  2693  0417                     	;# 
  2694  041C                     	;# 
  2695  041D                     	;# 
  2696  041E                     	;# 
  2697  0FE4                     	;# 
  2698  0FE5                     	;# 
  2699  0FE6                     	;# 
  2700  0FE7                     	;# 
  2701  0FE8                     	;# 
  2702  0FE9                     	;# 
  2703  0FEA                     	;# 
  2704  0FEB                     	;# 
  2705  0FED                     	;# 
  2706  0FEE                     	;# 
  2707  0FEF                     	;# 
  2708  0000                     	;# 
  2709  0001                     	;# 
  2710  0002                     	;# 
  2711  0003                     	;# 
  2712  0004                     	;# 
  2713  0005                     	;# 
  2714  0006                     	;# 
  2715  0007                     	;# 
  2716  0008                     	;# 
  2717  0009                     	;# 
  2718  000A                     	;# 
  2719  000B                     	;# 
  2720  000C                     	;# 
  2721  000D                     	;# 
  2722  000E                     	;# 
  2723  0011                     	;# 
  2724  0012                     	;# 
  2725  0013                     	;# 
  2726  0014                     	;# 
  2727  0015                     	;# 
  2728  0016                     	;# 
  2729  0016                     	;# 
  2730  0017                     	;# 
  2731  0018                     	;# 
  2732  0019                     	;# 
  2733  001A                     	;# 
  2734  001B                     	;# 
  2735  001C                     	;# 
  2736  001E                     	;# 
  2737  001F                     	;# 
  2738  008C                     	;# 
  2739  008D                     	;# 
  2740  008E                     	;# 
  2741  0091                     	;# 
  2742  0092                     	;# 
  2743  0093                     	;# 
  2744  0094                     	;# 
  2745  0095                     	;# 
  2746  0096                     	;# 
  2747  0097                     	;# 
  2748  0098                     	;# 
  2749  0099                     	;# 
  2750  009A                     	;# 
  2751  009B                     	;# 
  2752  009B                     	;# 
  2753  009C                     	;# 
  2754  009D                     	;# 
  2755  009E                     	;# 
  2756  010C                     	;# 
  2757  010D                     	;# 
  2758  010E                     	;# 
  2759  0111                     	;# 
  2760  0112                     	;# 
  2761  0113                     	;# 
  2762  0114                     	;# 
  2763  0115                     	;# 
  2764  0116                     	;# 
  2765  0117                     	;# 
  2766  0118                     	;# 
  2767  0119                     	;# 
  2768  011A                     	;# 
  2769  011B                     	;# 
  2770  011D                     	;# 
  2771  011E                     	;# 
  2772  018C                     	;# 
  2773  018D                     	;# 
  2774  018E                     	;# 
  2775  0191                     	;# 
  2776  0191                     	;# 
  2777  0192                     	;# 
  2778  0193                     	;# 
  2779  0193                     	;# 
  2780  0193                     	;# 
  2781  0194                     	;# 
  2782  0195                     	;# 
  2783  0196                     	;# 
  2784  0199                     	;# 
  2785  019A                     	;# 
  2786  019B                     	;# 
  2787  019B                     	;# 
  2788  019C                     	;# 
  2789  019D                     	;# 
  2790  019E                     	;# 
  2791  019F                     	;# 
  2792  020C                     	;# 
  2793  020D                     	;# 
  2794  020E                     	;# 
  2795  0211                     	;# 
  2796  0211                     	;# 
  2797  0212                     	;# 
  2798  0212                     	;# 
  2799  0213                     	;# 
  2800  0213                     	;# 
  2801  0214                     	;# 
  2802  0214                     	;# 
  2803  0215                     	;# 
  2804  0215                     	;# 
  2805  0215                     	;# 
  2806  0216                     	;# 
  2807  0216                     	;# 
  2808  0217                     	;# 
  2809  0217                     	;# 
  2810  0219                     	;# 
  2811  021A                     	;# 
  2812  021B                     	;# 
  2813  021C                     	;# 
  2814  021D                     	;# 
  2815  021E                     	;# 
  2816  021F                     	;# 
  2817  0291                     	;# 
  2818  0291                     	;# 
  2819  0292                     	;# 
  2820  0293                     	;# 
  2821  0294                     	;# 
  2822  0295                     	;# 
  2823  0295                     	;# 
  2824  0296                     	;# 
  2825  0298                     	;# 
  2826  0298                     	;# 
  2827  0299                     	;# 
  2828  029A                     	;# 
  2829  029B                     	;# 
  2830  029C                     	;# 
  2831  029D                     	;# 
  2832  029E                     	;# 
  2833  0311                     	;# 
  2834  0311                     	;# 
  2835  0312                     	;# 
  2836  0313                     	;# 
  2837  0318                     	;# 
  2838  0318                     	;# 
  2839  0319                     	;# 
  2840  031A                     	;# 
  2841  038C                     	;# 
  2842  038D                     	;# 
  2843  038E                     	;# 
  2844  0391                     	;# 
  2845  0392                     	;# 
  2846  0393                     	;# 
  2847  0394                     	;# 
  2848  0395                     	;# 
  2849  0396                     	;# 
  2850  039A                     	;# 
  2851  039C                     	;# 
  2852  039D                     	;# 
  2853  039E                     	;# 
  2854  039F                     	;# 
  2855  0415                     	;# 
  2856  0416                     	;# 
  2857  0417                     	;# 
  2858  041C                     	;# 
  2859  041D                     	;# 
  2860  041E                     	;# 
  2861  0FE4                     	;# 
  2862  0FE5                     	;# 
  2863  0FE6                     	;# 
  2864  0FE7                     	;# 
  2865  0FE8                     	;# 
  2866  0FE9                     	;# 
  2867  0FEA                     	;# 
  2868  0FEB                     	;# 
  2869  0FED                     	;# 
  2870  0FEE                     	;# 
  2871  0FEF                     	;# 
  2872  0000                     	;# 
  2873  0001                     	;# 
  2874  0002                     	;# 
  2875  0003                     	;# 
  2876  0004                     	;# 
  2877  0005                     	;# 
  2878  0006                     	;# 
  2879  0007                     	;# 
  2880  0008                     	;# 
  2881  0009                     	;# 
  2882  000A                     	;# 
  2883  000B                     	;# 
  2884  000C                     	;# 
  2885  000D                     	;# 
  2886  000E                     	;# 
  2887  0011                     	;# 
  2888  0012                     	;# 
  2889  0013                     	;# 
  2890  0014                     	;# 
  2891  0015                     	;# 
  2892  0016                     	;# 
  2893  0016                     	;# 
  2894  0017                     	;# 
  2895  0018                     	;# 
  2896  0019                     	;# 
  2897  001A                     	;# 
  2898  001B                     	;# 
  2899  001C                     	;# 
  2900  001E                     	;# 
  2901  001F                     	;# 
  2902  008C                     	;# 
  2903  008D                     	;# 
  2904  008E                     	;# 
  2905  0091                     	;# 
  2906  0092                     	;# 
  2907  0093                     	;# 
  2908  0094                     	;# 
  2909  0095                     	;# 
  2910  0096                     	;# 
  2911  0097                     	;# 
  2912  0098                     	;# 
  2913  0099                     	;# 
  2914  009A                     	;# 
  2915  009B                     	;# 
  2916  009B                     	;# 
  2917  009C                     	;# 
  2918  009D                     	;# 
  2919  009E                     	;# 
  2920  010C                     	;# 
  2921  010D                     	;# 
  2922  010E                     	;# 
  2923  0111                     	;# 
  2924  0112                     	;# 
  2925  0113                     	;# 
  2926  0114                     	;# 
  2927  0115                     	;# 
  2928  0116                     	;# 
  2929  0117                     	;# 
  2930  0118                     	;# 
  2931  0119                     	;# 
  2932  011A                     	;# 
  2933  011B                     	;# 
  2934  011D                     	;# 
  2935  011E                     	;# 
  2936  018C                     	;# 
  2937  018D                     	;# 
  2938  018E                     	;# 
  2939  0191                     	;# 
  2940  0191                     	;# 
  2941  0192                     	;# 
  2942  0193                     	;# 
  2943  0193                     	;# 
  2944  0193                     	;# 
  2945  0194                     	;# 
  2946  0195                     	;# 
  2947  0196                     	;# 
  2948  0199                     	;# 
  2949  019A                     	;# 
  2950  019B                     	;# 
  2951  019B                     	;# 
  2952  019C                     	;# 
  2953  019D                     	;# 
  2954  019E                     	;# 
  2955  019F                     	;# 
  2956  020C                     	;# 
  2957  020D                     	;# 
  2958  020E                     	;# 
  2959  0211                     	;# 
  2960  0211                     	;# 
  2961  0212                     	;# 
  2962  0212                     	;# 
  2963  0213                     	;# 
  2964  0213                     	;# 
  2965  0214                     	;# 
  2966  0214                     	;# 
  2967  0215                     	;# 
  2968  0215                     	;# 
  2969  0215                     	;# 
  2970  0216                     	;# 
  2971  0216                     	;# 
  2972  0217                     	;# 
  2973  0217                     	;# 
  2974  0219                     	;# 
  2975  021A                     	;# 
  2976  021B                     	;# 
  2977  021C                     	;# 
  2978  021D                     	;# 
  2979  021E                     	;# 
  2980  021F                     	;# 
  2981  0291                     	;# 
  2982  0291                     	;# 
  2983  0292                     	;# 
  2984  0293                     	;# 
  2985  0294                     	;# 
  2986  0295                     	;# 
  2987  0295                     	;# 
  2988  0296                     	;# 
  2989  0298                     	;# 
  2990  0298                     	;# 
  2991  0299                     	;# 
  2992  029A                     	;# 
  2993  029B                     	;# 
  2994  029C                     	;# 
  2995  029D                     	;# 
  2996  029E                     	;# 
  2997  0311                     	;# 
  2998  0311                     	;# 
  2999  0312                     	;# 
  3000  0313                     	;# 
  3001  0318                     	;# 
  3002  0318                     	;# 
  3003  0319                     	;# 
  3004  031A                     	;# 
  3005  038C                     	;# 
  3006  038D                     	;# 
  3007  038E                     	;# 
  3008  0391                     	;# 
  3009  0392                     	;# 
  3010  0393                     	;# 
  3011  0394                     	;# 
  3012  0395                     	;# 
  3013  0396                     	;# 
  3014  039A                     	;# 
  3015  039C                     	;# 
  3016  039D                     	;# 
  3017  039E                     	;# 
  3018  039F                     	;# 
  3019  0415                     	;# 
  3020  0416                     	;# 
  3021  0417                     	;# 
  3022  041C                     	;# 
  3023  041D                     	;# 
  3024  041E                     	;# 
  3025  0FE4                     	;# 
  3026  0FE5                     	;# 
  3027  0FE6                     	;# 
  3028  0FE7                     	;# 
  3029  0FE8                     	;# 
  3030  0FE9                     	;# 
  3031  0FEA                     	;# 
  3032  0FEB                     	;# 
  3033  0FED                     	;# 
  3034  0FEE                     	;# 
  3035  0FEF                     	;# 
  3036  0000                     	;# 
  3037  0001                     	;# 
  3038  0002                     	;# 
  3039  0003                     	;# 
  3040  0004                     	;# 
  3041  0005                     	;# 
  3042  0006                     	;# 
  3043  0007                     	;# 
  3044  0008                     	;# 
  3045  0009                     	;# 
  3046  000A                     	;# 
  3047  000B                     	;# 
  3048  000C                     	;# 
  3049  000D                     	;# 
  3050  000E                     	;# 
  3051  0011                     	;# 
  3052  0012                     	;# 
  3053  0013                     	;# 
  3054  0014                     	;# 
  3055  0015                     	;# 
  3056  0016                     	;# 
  3057  0016                     	;# 
  3058  0017                     	;# 
  3059  0018                     	;# 
  3060  0019                     	;# 
  3061  001A                     	;# 
  3062  001B                     	;# 
  3063  001C                     	;# 
  3064  001E                     	;# 
  3065  001F                     	;# 
  3066  008C                     	;# 
  3067  008D                     	;# 
  3068  008E                     	;# 
  3069  0091                     	;# 
  3070  0092                     	;# 
  3071  0093                     	;# 
  3072  0094                     	;# 
  3073  0095                     	;# 
  3074  0096                     	;# 
  3075  0097                     	;# 
  3076  0098                     	;# 
  3077  0099                     	;# 
  3078  009A                     	;# 
  3079  009B                     	;# 
  3080  009B                     	;# 
  3081  009C                     	;# 
  3082  009D                     	;# 
  3083  009E                     	;# 
  3084  010C                     	;# 
  3085  010D                     	;# 
  3086  010E                     	;# 
  3087  0111                     	;# 
  3088  0112                     	;# 
  3089  0113                     	;# 
  3090  0114                     	;# 
  3091  0115                     	;# 
  3092  0116                     	;# 
  3093  0117                     	;# 
  3094  0118                     	;# 
  3095  0119                     	;# 
  3096  011A                     	;# 
  3097  011B                     	;# 
  3098  011D                     	;# 
  3099  011E                     	;# 
  3100  018C                     	;# 
  3101  018D                     	;# 
  3102  018E                     	;# 
  3103  0191                     	;# 
  3104  0191                     	;# 
  3105  0192                     	;# 
  3106  0193                     	;# 
  3107  0193                     	;# 
  3108  0193                     	;# 
  3109  0194                     	;# 
  3110  0195                     	;# 
  3111  0196                     	;# 
  3112  0199                     	;# 
  3113  019A                     	;# 
  3114  019B                     	;# 
  3115  019B                     	;# 
  3116  019C                     	;# 
  3117  019D                     	;# 
  3118  019E                     	;# 
  3119  019F                     	;# 
  3120  020C                     	;# 
  3121  020D                     	;# 
  3122  020E                     	;# 
  3123  0211                     	;# 
  3124  0211                     	;# 
  3125  0212                     	;# 
  3126  0212                     	;# 
  3127  0213                     	;# 
  3128  0213                     	;# 
  3129  0214                     	;# 
  3130  0214                     	;# 
  3131  0215                     	;# 
  3132  0215                     	;# 
  3133  0215                     	;# 
  3134  0216                     	;# 
  3135  0216                     	;# 
  3136  0217                     	;# 
  3137  0217                     	;# 
  3138  0219                     	;# 
  3139  021A                     	;# 
  3140  021B                     	;# 
  3141  021C                     	;# 
  3142  021D                     	;# 
  3143  021E                     	;# 
  3144  021F                     	;# 
  3145  0291                     	;# 
  3146  0291                     	;# 
  3147  0292                     	;# 
  3148  0293                     	;# 
  3149  0294                     	;# 
  3150  0295                     	;# 
  3151  0295                     	;# 
  3152  0296                     	;# 
  3153  0298                     	;# 
  3154  0298                     	;# 
  3155  0299                     	;# 
  3156  029A                     	;# 
  3157  029B                     	;# 
  3158  029C                     	;# 
  3159  029D                     	;# 
  3160  029E                     	;# 
  3161  0311                     	;# 
  3162  0311                     	;# 
  3163  0312                     	;# 
  3164  0313                     	;# 
  3165  0318                     	;# 
  3166  0318                     	;# 
  3167  0319                     	;# 
  3168  031A                     	;# 
  3169  038C                     	;# 
  3170  038D                     	;# 
  3171  038E                     	;# 
  3172  0391                     	;# 
  3173  0392                     	;# 
  3174  0393                     	;# 
  3175  0394                     	;# 
  3176  0395                     	;# 
  3177  0396                     	;# 
  3178  039A                     	;# 
  3179  039C                     	;# 
  3180  039D                     	;# 
  3181  039E                     	;# 
  3182  039F                     	;# 
  3183  0415                     	;# 
  3184  0416                     	;# 
  3185  0417                     	;# 
  3186  041C                     	;# 
  3187  041D                     	;# 
  3188  041E                     	;# 
  3189  0FE4                     	;# 
  3190  0FE5                     	;# 
  3191  0FE6                     	;# 
  3192  0FE7                     	;# 
  3193  0FE8                     	;# 
  3194  0FE9                     	;# 
  3195  0FEA                     	;# 
  3196  0FEB                     	;# 
  3197  0FED                     	;# 
  3198  0FEE                     	;# 
  3199  0FEF                     	;# 
  3200  0000                     	;# 
  3201  0001                     	;# 
  3202  0002                     	;# 
  3203  0003                     	;# 
  3204  0004                     	;# 
  3205  0005                     	;# 
  3206  0006                     	;# 
  3207  0007                     	;# 
  3208  0008                     	;# 
  3209  0009                     	;# 
  3210  000A                     	;# 
  3211  000B                     	;# 
  3212  000C                     	;# 
  3213  000D                     	;# 
  3214  000E                     	;# 
  3215  0011                     	;# 
  3216  0012                     	;# 
  3217  0013                     	;# 
  3218  0014                     	;# 
  3219  0015                     	;# 
  3220  0016                     	;# 
  3221  0016                     	;# 
  3222  0017                     	;# 
  3223  0018                     	;# 
  3224  0019                     	;# 
  3225  001A                     	;# 
  3226  001B                     	;# 
  3227  001C                     	;# 
  3228  001E                     	;# 
  3229  001F                     	;# 
  3230  008C                     	;# 
  3231  008D                     	;# 
  3232  008E                     	;# 
  3233  0091                     	;# 
  3234  0092                     	;# 
  3235  0093                     	;# 
  3236  0094                     	;# 
  3237  0095                     	;# 
  3238  0096                     	;# 
  3239  0097                     	;# 
  3240  0098                     	;# 
  3241  0099                     	;# 
  3242  009A                     	;# 
  3243  009B                     	;# 
  3244  009B                     	;# 
  3245  009C                     	;# 
  3246  009D                     	;# 
  3247  009E                     	;# 
  3248  010C                     	;# 
  3249  010D                     	;# 
  3250  010E                     	;# 
  3251  0111                     	;# 
  3252  0112                     	;# 
  3253  0113                     	;# 
  3254  0114                     	;# 
  3255  0115                     	;# 
  3256  0116                     	;# 
  3257  0117                     	;# 
  3258  0118                     	;# 
  3259  0119                     	;# 
  3260  011A                     	;# 
  3261  011B                     	;# 
  3262  011D                     	;# 
  3263  011E                     	;# 
  3264  018C                     	;# 
  3265  018D                     	;# 
  3266  018E                     	;# 
  3267  0191                     	;# 
  3268  0191                     	;# 
  3269  0192                     	;# 
  3270  0193                     	;# 
  3271  0193                     	;# 
  3272  0193                     	;# 
  3273  0194                     	;# 
  3274  0195                     	;# 
  3275  0196                     	;# 
  3276  0199                     	;# 
  3277  019A                     	;# 
  3278  019B                     	;# 
  3279  019B                     	;# 
  3280  019C                     	;# 
  3281  019D                     	;# 
  3282  019E                     	;# 
  3283  019F                     	;# 
  3284  020C                     	;# 
  3285  020D                     	;# 
  3286  020E                     	;# 
  3287  0211                     	;# 
  3288  0211                     	;# 
  3289  0212                     	;# 
  3290  0212                     	;# 
  3291  0213                     	;# 
  3292  0213                     	;# 
  3293  0214                     	;# 
  3294  0214                     	;# 
  3295  0215                     	;# 
  3296  0215                     	;# 
  3297  0215                     	;# 
  3298  0216                     	;# 
  3299  0216                     	;# 
  3300  0217                     	;# 
  3301  0217                     	;# 
  3302  0219                     	;# 
  3303  021A                     	;# 
  3304  021B                     	;# 
  3305  021C                     	;# 
  3306  021D                     	;# 
  3307  021E                     	;# 
  3308  021F                     	;# 
  3309  0291                     	;# 
  3310  0291                     	;# 
  3311  0292                     	;# 
  3312  0293                     	;# 
  3313  0294                     	;# 
  3314  0295                     	;# 
  3315  0295                     	;# 
  3316  0296                     	;# 
  3317  0298                     	;# 
  3318  0298                     	;# 
  3319  0299                     	;# 
  3320  029A                     	;# 
  3321  029B                     	;# 
  3322  029C                     	;# 
  3323  029D                     	;# 
  3324  029E                     	;# 
  3325  0311                     	;# 
  3326  0311                     	;# 
  3327  0312                     	;# 
  3328  0313                     	;# 
  3329  0318                     	;# 
  3330  0318                     	;# 
  3331  0319                     	;# 
  3332  031A                     	;# 
  3333  038C                     	;# 
  3334  038D                     	;# 
  3335  038E                     	;# 
  3336  0391                     	;# 
  3337  0392                     	;# 
  3338  0393                     	;# 
  3339  0394                     	;# 
  3340  0395                     	;# 
  3341  0396                     	;# 
  3342  039A                     	;# 
  3343  039C                     	;# 
  3344  039D                     	;# 
  3345  039E                     	;# 
  3346  039F                     	;# 
  3347  0415                     	;# 
  3348  0416                     	;# 
  3349  0417                     	;# 
  3350  041C                     	;# 
  3351  041D                     	;# 
  3352  041E                     	;# 
  3353  0FE4                     	;# 
  3354  0FE5                     	;# 
  3355  0FE6                     	;# 
  3356  0FE7                     	;# 
  3357  0FE8                     	;# 
  3358  0FE9                     	;# 
  3359  0FEA                     	;# 
  3360  0FEB                     	;# 
  3361  0FED                     	;# 
  3362  0FEE                     	;# 
  3363  0FEF                     	;# 
  3364  0000                     	;# 
  3365  0001                     	;# 
  3366  0002                     	;# 
  3367  0003                     	;# 
  3368  0004                     	;# 
  3369  0005                     	;# 
  3370  0006                     	;# 
  3371  0007                     	;# 
  3372  0008                     	;# 
  3373  0009                     	;# 
  3374  000A                     	;# 
  3375  000B                     	;# 
  3376  000C                     	;# 
  3377  000D                     	;# 
  3378  000E                     	;# 
  3379  0011                     	;# 
  3380  0012                     	;# 
  3381  0013                     	;# 
  3382  0014                     	;# 
  3383  0015                     	;# 
  3384  0016                     	;# 
  3385  0016                     	;# 
  3386  0017                     	;# 
  3387  0018                     	;# 
  3388  0019                     	;# 
  3389  001A                     	;# 
  3390  001B                     	;# 
  3391  001C                     	;# 
  3392  001E                     	;# 
  3393  001F                     	;# 
  3394  008C                     	;# 
  3395  008D                     	;# 
  3396  008E                     	;# 
  3397  0091                     	;# 
  3398  0092                     	;# 
  3399  0093                     	;# 
  3400  0094                     	;# 
  3401  0095                     	;# 
  3402  0096                     	;# 
  3403  0097                     	;# 
  3404  0098                     	;# 
  3405  0099                     	;# 
  3406  009A                     	;# 
  3407  009B                     	;# 
  3408  009B                     	;# 
  3409  009C                     	;# 
  3410  009D                     	;# 
  3411  009E                     	;# 
  3412  010C                     	;# 
  3413  010D                     	;# 
  3414  010E                     	;# 
  3415  0111                     	;# 
  3416  0112                     	;# 
  3417  0113                     	;# 
  3418  0114                     	;# 
  3419  0115                     	;# 
  3420  0116                     	;# 
  3421  0117                     	;# 
  3422  0118                     	;# 
  3423  0119                     	;# 
  3424  011A                     	;# 
  3425  011B                     	;# 
  3426  011D                     	;# 
  3427  011E                     	;# 
  3428  018C                     	;# 
  3429  018D                     	;# 
  3430  018E                     	;# 
  3431  0191                     	;# 
  3432  0191                     	;# 
  3433  0192                     	;# 
  3434  0193                     	;# 
  3435  0193                     	;# 
  3436  0193                     	;# 
  3437  0194                     	;# 
  3438  0195                     	;# 
  3439  0196                     	;# 
  3440  0199                     	;# 
  3441  019A                     	;# 
  3442  019B                     	;# 
  3443  019B                     	;# 
  3444  019C                     	;# 
  3445  019D                     	;# 
  3446  019E                     	;# 
  3447  019F                     	;# 
  3448  020C                     	;# 
  3449  020D                     	;# 
  3450  020E                     	;# 
  3451  0211                     	;# 
  3452  0211                     	;# 
  3453  0212                     	;# 
  3454  0212                     	;# 
  3455  0213                     	;# 
  3456  0213                     	;# 
  3457  0214                     	;# 
  3458  0214                     	;# 
  3459  0215                     	;# 
  3460  0215                     	;# 
  3461  0215                     	;# 
  3462  0216                     	;# 
  3463  0216                     	;# 
  3464  0217                     	;# 
  3465  0217                     	;# 
  3466  0219                     	;# 
  3467  021A                     	;# 
  3468  021B                     	;# 
  3469  021C                     	;# 
  3470  021D                     	;# 
  3471  021E                     	;# 
  3472  021F                     	;# 
  3473  0291                     	;# 
  3474  0291                     	;# 
  3475  0292                     	;# 
  3476  0293                     	;# 
  3477  0294                     	;# 
  3478  0295                     	;# 
  3479  0295                     	;# 
  3480  0296                     	;# 
  3481  0298                     	;# 
  3482  0298                     	;# 
  3483  0299                     	;# 
  3484  029A                     	;# 
  3485  029B                     	;# 
  3486  029C                     	;# 
  3487  029D                     	;# 
  3488  029E                     	;# 
  3489  0311                     	;# 
  3490  0311                     	;# 
  3491  0312                     	;# 
  3492  0313                     	;# 
  3493  0318                     	;# 
  3494  0318                     	;# 
  3495  0319                     	;# 
  3496  031A                     	;# 
  3497  038C                     	;# 
  3498  038D                     	;# 
  3499  038E                     	;# 
  3500  0391                     	;# 
  3501  0392                     	;# 
  3502  0393                     	;# 
  3503  0394                     	;# 
  3504  0395                     	;# 
  3505  0396                     	;# 
  3506  039A                     	;# 
  3507  039C                     	;# 
  3508  039D                     	;# 
  3509  039E                     	;# 
  3510  039F                     	;# 
  3511  0415                     	;# 
  3512  0416                     	;# 
  3513  0417                     	;# 
  3514  041C                     	;# 
  3515  041D                     	;# 
  3516  041E                     	;# 
  3517  0FE4                     	;# 
  3518  0FE5                     	;# 
  3519  0FE6                     	;# 
  3520  0FE7                     	;# 
  3521  0FE8                     	;# 
  3522  0FE9                     	;# 
  3523  0FEA                     	;# 
  3524  0FEB                     	;# 
  3525  0FED                     	;# 
  3526  0FEE                     	;# 
  3527  0FEF                     	;_I2cPacket
  3528                           
  3529                           	psect	idataBANK0
  3530  0CEF                     __pidataBANK0:	
  3531                           
  3532                           ;initializer for _LedBlinkSts
  3533  0CEF  3401               	retlw	1
  3534                           
  3535                           ;initializer for _MainSystemTimebaseFlag
  3536  0CF0  3401               	retlw	1
  3537                           
  3538                           ;initializer for _Led1
  3539  0CF1  3400               	retlw	0
  3540  0CF2  3400               	retlw	0
  3541  0CF3  3400               	retlw	0
  3542  0CF4  3400               	retlw	0
  3543  0CF5  3401               	retlw	1
  3544  0CF6  3400               	retlw	0
  3545  0CF7  3409               	retlw	9
  3546  0CF8  3400               	retlw	0
  3547                           
  3548                           	psect	idataBANK1
  3549  0EF3                     __pidataBANK1:	
  3550                           
  3551                           ;initializer for _TaskTable
  3552  0EF3  3488               	retlw	low _I2c_DataReceiveSm
  3553  0EF4  3401               	retlw	high _I2c_DataReceiveSm
  3554  0EF5  3400               	retlw	0
  3555  0EF6  3400               	retlw	0
  3556  0EF7  3400               	retlw	0
  3557  0EF8  3401               	retlw	1
  3558  0EF9  3400               	retlw	0
  3559  0EFA  3400               	retlw	0
  3560  0EFB  3493               	retlw	low _I2cSlv_MainTask
  3561  0EFC  340D               	retlw	high _I2cSlv_MainTask
  3562  0EFD  3400               	retlw	0
  3563  0EFE  3400               	retlw	0
  3564  0EFF  3400               	retlw	0
  3565  0F00  3401               	retlw	1
  3566  0F01  3400               	retlw	0
  3567  0F02  3400               	retlw	0
  3568  0F03  34A8               	retlw	low _Wdg_MainTask
  3569  0F04  340D               	retlw	high _Wdg_MainTask
  3570  0F05  3400               	retlw	0
  3571  0F06  3400               	retlw	0
  3572  0F07  3400               	retlw	0
  3573  0F08  3464               	retlw	100
  3574  0F09  3400               	retlw	0
  3575  0F0A  3400               	retlw	0
  3576  0F0B  34CB               	retlw	low _Led_MainTask
  3577  0F0C  340E               	retlw	high _Led_MainTask
  3578  0F0D  3400               	retlw	0
  3579  0F0E  3400               	retlw	0
  3580  0F0F  3400               	retlw	0
  3581  0F10  3432               	retlw	50
  3582  0F11  3400               	retlw	0
  3583  0F12  3400               	retlw	0
  3584  0F13  3444               	retlw	low _App_MainTask
  3585  0F14  340F               	retlw	high _App_MainTask
  3586  0F15  3400               	retlw	0
  3587  0F16  3400               	retlw	0
  3588  0F17  3400               	retlw	0
  3589  0F18  3414               	retlw	20
  3590  0F19  3400               	retlw	0
  3591  0F1A  3400               	retlw	0
  3592                           
  3593                           	psect	stringtext
  3594  1000                     __pstringtext:	
  3595  1000                     _dpowers:	
  3596  1000  3401               	retlw	1
  3597  1001  3400               	retlw	0
  3598  1002  340A               	retlw	10
  3599  1003  3400               	retlw	0
  3600  1004  3464               	retlw	100
  3601  1005  3400               	retlw	0
  3602  1006  34E8               	retlw	232
  3603  1007  3403               	retlw	3
  3604  1008  3410               	retlw	16
  3605  1009  3427               	retlw	39
  3606  100A                     __end_of_dpowers:	
  3607  100A                     _TaskNumber:	
  3608  100A  3405               	retlw	5
  3609  100B  3400               	retlw	0
  3610  100C                     __end_of_TaskNumber:	
  3611  000B                     _INTCONbits	set	11
  3612  0011                     _PIR1bits	set	17
  3613  0013                     _PIR3bits	set	19
  3614  000E                     _PORTCbits	set	14
  3615  001B                     _PR2	set	27
  3616  001C                     _T2CONbits	set	28
  3617  009D                     _ADCON0bits	set	157
  3618  009E                     _ADCON1bits	set	158
  3619  009C                     _ADRESH	set	156
  3620  009B                     _ADRESL	set	155
  3621  0095                     _OPTION_REGbits	set	149
  3622  0099                     _OSCCONbits	set	153
  3623  009A                     _OSCSTATbits	set	154
  3624  0091                     _PIE1bits	set	145
  3625  0093                     _PIE3bits	set	147
  3626  008D                     _TRISBbits	set	141
  3627  008E                     _TRISCbits	set	142
  3628  0097                     _WDTCONbits	set	151
  3629  0117                     _FVRCONbits	set	279
  3630  010C                     _LATA	set	268
  3631  010D                     _LATB	set	269
  3632  010E                     _LATC	set	270
  3633  010E                     _LATCbits	set	270
  3634  018C                     _ANSELA	set	396
  3635  018C                     _ANSELAbits	set	396
  3636  018D                     _ANSELB	set	397
  3637  018D                     _ANSELBbits	set	397
  3638  018E                     _ANSELC	set	398
  3639  018E                     _ANSELCbits	set	398
  3640  0212                     _SSP1ADD	set	530
  3641  0211                     _SSP1BUF	set	529
  3642  0215                     _SSP1CON1	set	533
  3643  0215                     _SSP1CON1bits	set	533
  3644  0216                     _SSP1CON2	set	534
  3645  0217                     _SSP1CON3	set	535
  3646  0213                     _SSP1MSK	set	531
  3647  0214                     _SSP1STAT	set	532
  3648  020C                     _WPUA	set	524
  3649  020C                     _WPUAbits	set	524
  3650  020D                     _WPUB	set	525
  3651  020D                     _WPUBbits	set	525
  3652  020E                     _WPUC	set	526
  3653  020E                     _WPUCbits	set	526
  3654  0416                     _PR4	set	1046
  3655  041D                     _PR6	set	1053
  3656  0417                     _T4CONbits	set	1047
  3657  041E                     _T6CONbits	set	1054
  3658  100C                     STR_4:	
  3659  100C  3430               	retlw	48	;'0'
  3660  100D  3431               	retlw	49	;'1'
  3661  100E  342E               	retlw	46	;'.'
  3662  100F  3430               	retlw	48	;'0'
  3663  1010  3430               	retlw	48	;'0'
  3664  1011  342E               	retlw	46	;'.'
  3665  1012  3430               	retlw	48	;'0'
  3666  1013  3430               	retlw	48	;'0'
  3667  1014  3400               	retlw	0
  3668  1015                     STR_1:	
  3669  1015  3425               	retlw	37	;'%'
  3670  1016  3464               	retlw	100	;'d'
  3671  1017  342E               	retlw	46	;'.'
  3672  1018  3425               	retlw	37	;'%'
  3673  1019  3430               	retlw	48	;'0'
  3674  101A  3431               	retlw	49	;'1'
  3675  101B  3475               	retlw	117	;'u'
  3676  101C  3400               	retlw	0
  3677  101D                     STR_3:	
  3678  101D  3453               	retlw	83	;'S'
  3679  101E  3442               	retlw	66	;'B'
  3680  101F  3438               	retlw	56	;'8'
  3681  1020  3431               	retlw	49	;'1'
  3682  1021  3430               	retlw	48	;'0'
  3683  1022  3400               	retlw	0
  3684  1023                     STR_2:	
  3685  1023  3445               	retlw	69	;'E'
  3686  1024  3443               	retlw	67	;'C'
  3687  1025  3448               	retlw	72	;'H'
  3688  1026  344F               	retlw	79	;'O'
  3689  1027  3400               	retlw	0
  3690  100C                     
  3691                           ; #config settings
  3692  0000                     
  3693                           	psect	cinit
  3694  002C                     start_initialization:	
  3695  002C                     __initialization:		;BIGRAM
  3696                           
  3697                           ; Initialize objects allocated to BANK0
  3698  002C  30EF               	movlw	low __pidataBANK0
  3699  002D  0084               	movwf	4
  3700  002E  308C               	movlw	(high __pidataBANK0)| (0+128)
  3701  002F  0085               	movwf	5
  3702  0030  3066               	movlw	low __pdataBANK0
  3703  0031  0086               	movwf	6
  3704  0032  3000               	movlw	high __pdataBANK0
  3705  0033  0087               	movwf	7
  3706  0034  3000               	movlw	0
  3707  0035  00FF               	movwf	btemp+1
  3708  0036  300A               	movlw	10
  3709  0037  318D  2527  3180   	fcall	init_ram
  3710                           
  3711                           ; Initialize objects allocated to BANK1
  3712  003A  30F3               	movlw	low __pidataBANK1
  3713  003B  0084               	movwf	4
  3714  003C  308E               	movlw	(high __pidataBANK1)| (0+128)
  3715  003D  0085               	movwf	5
  3716  003E  30A0               	movlw	low __pdataBANK1
  3717  003F  0086               	movwf	6
  3718  0040  3000               	movlw	high __pdataBANK1
  3719  0041  0087               	movwf	7
  3720  0042  3000               	movlw	0
  3721  0043  00FF               	movwf	btemp+1
  3722  0044  3028               	movlw	40
  3723  0045  318D  2527  3180   	fcall	init_ram
  3724                           
  3725                           ; Clear objects allocated to BIGRAM
  3726  0048  309D               	movlw	low (0+9117)
  3727  0049  0084               	movwf	4
  3728  004A  3023               	movlw	high (0+9117)
  3729  004B  0085               	movwf	5
  3730  004C  3053               	movlw	83
  3731  004D  00FE               	movwf	btemp
  3732  004E  3000               	movlw	0
  3733  004F  00FF               	movwf	btemp+1
  3734  0050  318D  251B  3180   	fcall	clear_ram0
  3735                           
  3736                           ; Clear objects allocated to COMMON
  3737  0053  01F6               	clrf	__pbssCOMMON& (0+127)
  3738  0054  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  3739  0055  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  3740  0056  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  3741                           
  3742                           ; Clear objects allocated to BANK0
  3743  0057  304A               	movlw	low __pbssBANK0
  3744  0058  0084               	movwf	4
  3745  0059  3000               	movlw	high __pbssBANK0
  3746  005A  0085               	movwf	5
  3747  005B  301C               	movlw	28
  3748  005C  00FE               	movwf	btemp
  3749  005D  3000               	movlw	0
  3750  005E  00FF               	movwf	btemp+1
  3751  005F  318D  251B  3180   	fcall	clear_ram0
  3752                           
  3753                           ; Clear objects allocated to BANK1
  3754  0062  30C8               	movlw	low __pbssBANK1
  3755  0063  0084               	movwf	4
  3756  0064  3000               	movlw	high __pbssBANK1
  3757  0065  0085               	movwf	5
  3758  0066  3017               	movlw	23
  3759  0067  00FE               	movwf	btemp
  3760  0068  3000               	movlw	0
  3761  0069  00FF               	movwf	btemp+1
  3762  006A  318D  251B  3180   	fcall	clear_ram0
  3763                           
  3764                           ; Clear objects allocated to BANK2
  3765  006D  3020               	movlw	low __pbssBANK2
  3766  006E  0084               	movwf	4
  3767  006F  3001               	movlw	high __pbssBANK2
  3768  0070  0085               	movwf	5
  3769  0071  3050               	movlw	80
  3770  0072  00FE               	movwf	btemp
  3771  0073  3000               	movlw	0
  3772  0074  00FF               	movwf	btemp+1
  3773  0075  318D  251B  3180   	fcall	clear_ram0
  3774                           
  3775                           ; Clear objects allocated to BANK3
  3776  0078  30A0               	movlw	low __pbssBANK3
  3777  0079  0084               	movwf	4
  3778  007A  3001               	movlw	high __pbssBANK3
  3779  007B  0085               	movwf	5
  3780  007C  3050               	movlw	80
  3781  007D  00FE               	movwf	btemp
  3782  007E  3000               	movlw	0
  3783  007F  00FF               	movwf	btemp+1
  3784  0080  318D  251B  3180   	fcall	clear_ram0
  3785                           
  3786                           ; Clear objects allocated to BANK4
  3787  0083  3020               	movlw	low __pbssBANK4
  3788  0084  0084               	movwf	4
  3789  0085  3002               	movlw	high __pbssBANK4
  3790  0086  0085               	movwf	5
  3791  0087  3050               	movlw	80
  3792  0088  00FE               	movwf	btemp
  3793  0089  3000               	movlw	0
  3794  008A  00FF               	movwf	btemp+1
  3795  008B  318D  251B  3180   	fcall	clear_ram0
  3796                           
  3797                           ; Clear objects allocated to BANK5
  3798  008E  30A0               	movlw	low __pbssBANK5
  3799  008F  0084               	movwf	4
  3800  0090  3002               	movlw	high __pbssBANK5
  3801  0091  0085               	movwf	5
  3802  0092  3050               	movlw	80
  3803  0093  00FE               	movwf	btemp
  3804  0094  3000               	movlw	0
  3805  0095  00FF               	movwf	btemp+1
  3806  0096  318D  251B         	fcall	clear_ram0
  3807  0098                     end_of_initialization:	
  3808                           ;End of C runtime variable initialization code
  3809                           
  3810  0098                     __end_of__initialization:	
  3811  0098  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3812  0099  0020               	movlb	0
  3813  009A  318C  2CA5         	ljmp	_main	;jump to C main() function
  3814                           
  3815                           	psect	bssCOMMON
  3816  0076                     __pbssCOMMON:	
  3817  0076                     _I2cSlaveAddress:	
  3818  0076                     	ds	1
  3819  0077                     _RepBufferLen:	
  3820  0077                     	ds	1
  3821  0078                     _I2cReplyPacketReady:	
  3822  0078                     	ds	2
  3823                           
  3824                           	psect	bssBANK0
  3825  004A                     __pbssBANK0:	
  3826  004A                     _InitCounter:	
  3827  004A                     	ds	2
  3828  004C                     _InterruptCounter:	
  3829  004C                     	ds	2
  3830  004E                     _Tmr2IsrCallback:	
  3831  004E                     	ds	2
  3832  0050                     _Tmr4IsrCallback:	
  3833  0050                     	ds	2
  3834  0052                     _Tmr6IsrCallback:	
  3835  0052                     	ds	2
  3836  0054                     AppSm@AppState:	
  3837  0054                     	ds	1
  3838  0055                     AppSm@WpuSetCounter:	
  3839  0055                     	ds	1
  3840  0056                     I2cSlv_I2cDrvHandle@I2cReceiveMsgState:	
  3841  0056                     	ds	1
  3842  0057                     I2c_DataReceiveSm@I2cRxAddress:	
  3843  0057                     	ds	1
  3844  0058                     I2c_DataReceiveSm@I2cRxFlag:	
  3845  0058                     	ds	1
  3846  0059                     I2c_DataReceiveSm@I2cRxState:	
  3847  0059                     	ds	1
  3848  005A                     I2c_DataReceiveSm@OpType:	
  3849  005A                     	ds	1
  3850  005B                     I2c_DataReceiveSm@RxCounter:	
  3851  005B                     	ds	1
  3852  005C                     I2c_DataReceiveSm@TxCounter:	
  3853  005C                     	ds	1
  3854  005D                     _SystemState:	
  3855  005D                     	ds	1
  3856  005E                     _I2cNewPacketNotification:	
  3857  005E                     	ds	2
  3858  0060                     _I2cNewTxNotification:	
  3859  0060                     	ds	2
  3860  0062                     _I2cSetAddress:	
  3861  0062                     	ds	2
  3862  0064                     _I2cWriteRequest:	
  3863  0064                     	ds	2
  3864                           
  3865                           	psect	dataBANK0
  3866  0066                     __pdataBANK0:	
  3867  0066                     _LedBlinkSts:	
  3868  0066                     	ds	1
  3869  0067                     _MainSystemTimebaseFlag:	
  3870  0067                     	ds	1
  3871  0068                     _Led1:	
  3872  0068                     	ds	8
  3873                           
  3874                           	psect	bssBANK1
  3875  00C8                     __pbssBANK1:	
  3876  00C8                     App_MainTask@AnalogChSel:	
  3877  00C8                     	ds	12
  3878  00D4                     _I2cConfig:	
  3879  00D4                     	ds	11
  3880                           
  3881                           	psect	dataBANK1
  3882  00A0                     __pdataBANK1:	
  3883  00A0                     _TaskTable:	
  3884  00A0                     	ds	40
  3885                           
  3886                           	psect	bssBANK2
  3887  0120                     __pbssBANK2:	
  3888  0120                     _RepBuffer:	
  3889  0120                     	ds	80
  3890                           
  3891                           	psect	bssBANK3
  3892  01A0                     __pbssBANK3:	
  3893  01A0                     _CmdBuffer:	
  3894  01A0                     	ds	80
  3895                           
  3896                           	psect	bssBANK4
  3897  0220                     __pbssBANK4:	
  3898  0220                     _I2cTxBuffer:	
  3899  0220                     	ds	80
  3900                           
  3901                           	psect	bssBANK5
  3902  02A0                     __pbssBANK5:	
  3903  02A0                     _I2cRxBuffer:	
  3904  02A0                     	ds	80
  3905                           
  3906                           	psect	inittext
  3907  0D27                     init_ram:	
  3908  0D27  00FE               	movwf	126
  3909  0D28                     initloop:	
  3910  0D28  0012               	moviw fsr0++
  3911  0D29  001E               	movwi fsr1++
  3912  0D2A  3001               	movlw	1
  3913  0D2B  02FE               	subwf	126,f
  3914  0D2C  3000               	movlw	0
  3915  0D2D  3BFF               	subwfb	127,f
  3916  0D2E  087F               	movf	127,w
  3917  0D2F  047E               	iorwf	126,w
  3918  0D30  1903               	btfsc	3,2
  3919  0D31  3400               	retlw	0
  3920  0D32  2D28               	goto	initloop
  3921                           
  3922                           	psect	clrtext
  3923  0D1B                     clear_ram0:	
  3924                           ;	Called with FSR0 containing the base address, and
  3925                           ;	btemp/btemp+1 has the size to clear
  3926                           
  3927  0D1B  0064               	clrwdt	;clear the watchdog before getting into this loop
  3928  0D1C                     clrloop0:	
  3929  0D1C  0180               	clrf	0	;clear RAM location pointed to by FSR
  3930  0D1D  3101               	addfsr 0,1
  3931  0D1E  3001               	movlw	1
  3932  0D1F  02FE               	subwf	126,f
  3933  0D20  3000               	movlw	0
  3934  0D21  3BFF               	subwfb	127,f
  3935  0D22  087F               	movf	127,w
  3936  0D23  047E               	iorwf	126,w
  3937  0D24  1903               	btfsc	3,2
  3938  0D25  3400               	retlw	0	;all done for this memory range, return
  3939  0D26  2D1C               	goto	clrloop0	;have we reached the end yet?
  3940                           
  3941                           	psect	cstackBANK1
  3942  00DF                     __pcstackBANK1:	
  3943  00DF                     ScheduleTasks@ActiveTaskIndex:	
  3944  00DF                     InitSchTimer@TmrBConfig:	
  3945                           ; 1 bytes @ 0x0
  3946                           
  3947                           
  3948                           ; 6 bytes @ 0x0
  3949  00DF                     	ds	6
  3950                           
  3951                           	psect	cstackCOMMON
  3952  0070                     __pcstackCOMMON:	
  3953  0070                     ?_ReceiveEvt:	
  3954  0070                     ?_StdS_ManageStdServices:	
  3955                           ; 1 bytes @ 0x0
  3956                           
  3957  0070                     ?_GenerateEvt:	
  3958                           ; 1 bytes @ 0x0
  3959                           
  3960  0070                     ?_Adc_ConfigAnCh:	
  3961                           ; 1 bytes @ 0x0
  3962                           
  3963  0070                     ?_Mcu_InitIntOsc:	
  3964                           ; 1 bytes @ 0x0
  3965                           
  3966  0070                     ?_Mcu_EnableInterrupts:	
  3967                           ; 1 bytes @ 0x0
  3968                           
  3969  0070                     ?_MainScheduler:	
  3970                           ; 1 bytes @ 0x0
  3971                           
  3972  0070                     ?_InitializeTasks:	
  3973                           ; 1 bytes @ 0x0
  3974                           
  3975  0070                     ?_ScheduleTasks:	
  3976                           ; 1 bytes @ 0x0
  3977                           
  3978  0070                     ?_I2cSlv_I2cDrvHandle:	
  3979                           ; 1 bytes @ 0x0
  3980                           
  3981  0070                     ?_ManageProtocol:	
  3982                           ; 1 bytes @ 0x0
  3983                           
  3984  0070                     ?_AppSm:	
  3985                           ; 1 bytes @ 0x0
  3986                           
  3987  0070                     ?_InitSchTimer:	
  3988                           ; 1 bytes @ 0x0
  3989                           
  3990  0070                     ?_SystemInit:	
  3991                           ; 1 bytes @ 0x0
  3992                           
  3993  0070                     ?_Adc_SelectChannel:	
  3994                           ; 1 bytes @ 0x0
  3995                           
  3996  0070                     ?_Adc_StartConversion:	
  3997                           ; 1 bytes @ 0x0
  3998                           
  3999  0070                     ?_Adc_GetConvSts:	
  4000                           ; 1 bytes @ 0x0
  4001                           
  4002  0070                     ?_CheckAckStatus:	
  4003                           ; 1 bytes @ 0x0
  4004                           
  4005  0070                     ?_CheckByteStatus:	
  4006                           ; 1 bytes @ 0x0
  4007                           
  4008  0070                     ?_CheckStopBitStatus:	
  4009                           ; 1 bytes @ 0x0
  4010                           
  4011  0070                     ?_ClearRxBuffer:	
  4012                           ; 1 bytes @ 0x0
  4013                           
  4014  0070                     ?_ClearTxBuffer:	
  4015                           ; 1 bytes @ 0x0
  4016                           
  4017  0070                     ?_I2c_InitI2cModule:	
  4018                           ; 1 bytes @ 0x0
  4019                           
  4020  0070                     ?_I2c_SetI2cAddress:	
  4021                           ; 1 bytes @ 0x0
  4022                           
  4023  0070                     ?_I2c_SetI2cAddressMask:	
  4024                           ; 1 bytes @ 0x0
  4025                           
  4026  0070                     ?_Mcu_SetWdgPeriod:	
  4027                           ; 1 bytes @ 0x0
  4028                           
  4029  0070                     ?_Mcu_SetWdgSts:	
  4030                           ; 1 bytes @ 0x0
  4031                           
  4032  0070                     ?_Mcu_ClearWdg:	
  4033                           ; 1 bytes @ 0x0
  4034                           
  4035  0070                     ?_Tmr_StartTmr:	
  4036                           ; 1 bytes @ 0x0
  4037                           
  4038  0070                     ?_MainInterrupt:	
  4039                           ; 1 bytes @ 0x0
  4040                           
  4041  0070                     ?_I2c_SetConfig:	
  4042                           ; 1 bytes @ 0x0
  4043                           
  4044  0070                     ?_UpdateLebBlinkSts:	
  4045                           ; 1 bytes @ 0x0
  4046                           
  4047  0070                     ?_ControlLedDirect:	
  4048                           ; 1 bytes @ 0x0
  4049                           
  4050  0070                     ?_BoardReset:	
  4051                           ; 1 bytes @ 0x0
  4052                           
  4053  0070                     ?_LowPowerMode:	
  4054                           ; 1 bytes @ 0x0
  4055                           
  4056  0070                     ?i1_GenerateEvt:	
  4057                           ; 1 bytes @ 0x0
  4058                           
  4059  0070                     ??i1_GenerateEvt:	
  4060                           ; 1 bytes @ 0x0
  4061                           
  4062  0070                     ?_main:	
  4063                           ; 1 bytes @ 0x0
  4064                           
  4065                           
  4066                           ; 2 bytes @ 0x0
  4067  0070                     	ds	1
  4068  0071                     i1GenerateEvt@Event:	
  4069                           
  4070                           ; 1 bytes @ 0x1
  4071  0071                     	ds	1
  4072  0072                     i1GenerateEvt@EventStatus:	
  4073                           
  4074                           ; 1 bytes @ 0x2
  4075  0072                     	ds	1
  4076  0073                     ??_MainInterrupt:	
  4077                           
  4078                           ; 1 bytes @ 0x3
  4079  0073                     	ds	1
  4080  0074                     ??_ReceiveEvt:	
  4081  0074                     ??_GenerateEvt:	
  4082                           ; 1 bytes @ 0x4
  4083                           
  4084  0074                     ??_Adc_ConfigAnCh:	
  4085                           ; 1 bytes @ 0x4
  4086                           
  4087  0074                     ??_Mcu_InitIntOsc:	
  4088                           ; 1 bytes @ 0x4
  4089                           
  4090  0074                     ??_Mcu_EnableInterrupts:	
  4091                           ; 1 bytes @ 0x4
  4092                           
  4093  0074                     ??_Adc_SelectChannel:	
  4094                           ; 1 bytes @ 0x4
  4095                           
  4096  0074                     ??_Adc_StartConversion:	
  4097                           ; 1 bytes @ 0x4
  4098                           
  4099  0074                     ??_Adc_GetConvSts:	
  4100                           ; 1 bytes @ 0x4
  4101                           
  4102  0074                     ??_CheckAckStatus:	
  4103                           ; 1 bytes @ 0x4
  4104                           
  4105  0074                     ??_CheckByteStatus:	
  4106                           ; 1 bytes @ 0x4
  4107                           
  4108  0074                     ??_CheckStopBitStatus:	
  4109                           ; 1 bytes @ 0x4
  4110                           
  4111  0074                     ??_ClearRxBuffer:	
  4112                           ; 1 bytes @ 0x4
  4113                           
  4114  0074                     ??_ClearTxBuffer:	
  4115                           ; 1 bytes @ 0x4
  4116                           
  4117  0074                     ??_I2c_SetI2cAddress:	
  4118                           ; 1 bytes @ 0x4
  4119                           
  4120  0074                     ??_I2c_SetI2cAddressMask:	
  4121                           ; 1 bytes @ 0x4
  4122                           
  4123  0074                     ?_I2c_UpdateTxBuffer:	
  4124                           ; 1 bytes @ 0x4
  4125                           
  4126  0074                     ?_LedBlinkStateMachine:	
  4127                           ; 1 bytes @ 0x4
  4128                           
  4129  0074                     ??_Mcu_SetWdgPeriod:	
  4130                           ; 1 bytes @ 0x4
  4131                           
  4132  0074                     ??_Mcu_SetWdgSts:	
  4133                           ; 1 bytes @ 0x4
  4134                           
  4135  0074                     ??_Mcu_ClearWdg:	
  4136                           ; 1 bytes @ 0x4
  4137                           
  4138  0074                     ?_TmrBInit:	
  4139                           ; 1 bytes @ 0x4
  4140                           
  4141  0074                     ?_Tmr_TmrBIrqSet:	
  4142                           ; 1 bytes @ 0x4
  4143                           
  4144  0074                     ??_Tmr_StartTmr:	
  4145                           ; 1 bytes @ 0x4
  4146                           
  4147  0074                     ??_I2c_SetConfig:	
  4148                           ; 1 bytes @ 0x4
  4149                           
  4150  0074                     ??_UpdateLebBlinkSts:	
  4151                           ; 1 bytes @ 0x4
  4152                           
  4153  0074                     ??_ControlLedDirect:	
  4154                           ; 1 bytes @ 0x4
  4155                           
  4156  0074                     ??_BoardReset:	
  4157                           ; 1 bytes @ 0x4
  4158                           
  4159  0074                     ??___wmul:	
  4160                           ; 1 bytes @ 0x4
  4161                           
  4162  0074                     ??___lldiv:	
  4163                           ; 1 bytes @ 0x4
  4164                           
  4165  0074                     ??___lwdiv:	
  4166                           ; 1 bytes @ 0x4
  4167                           
  4168  0074                     ??___lwmod:	
  4169                           ; 1 bytes @ 0x4
  4170                           
  4171  0074                     ?_Adc_GetConvResult:	
  4172                           ; 1 bytes @ 0x4
  4173                           
  4174  0074                     Adc_ConfigAnCh@AnChSel:	
  4175                           ; 2 bytes @ 0x4
  4176                           
  4177  0074                     I2c_SetI2cAddress@SlaveAddress:	
  4178                           ; 1 bytes @ 0x4
  4179                           
  4180  0074                     I2c_SetI2cAddressMask@SlaveAddressMask:	
  4181                           ; 1 bytes @ 0x4
  4182                           
  4183  0074                     I2c_UpdateTxBuffer@Length:	
  4184                           ; 1 bytes @ 0x4
  4185                           
  4186  0074                     LedBlinkStateMachine@LedInitStatus:	
  4187                           ; 1 bytes @ 0x4
  4188                           
  4189  0074                     Mcu_SetWdgSts@WdgSts:	
  4190                           ; 1 bytes @ 0x4
  4191                           
  4192  0074                     TmrBInit@Prescaler:	
  4193                           ; 1 bytes @ 0x4
  4194                           
  4195  0074                     Tmr_TmrBIrqSet@TmrIrqSts:	
  4196                           ; 1 bytes @ 0x4
  4197                           
  4198  0074                     Tmr_StartTmr@TmrNumb:	
  4199                           ; 1 bytes @ 0x4
  4200                           
  4201  0074                     ReceiveEvt@EventStatus:	
  4202                           ; 1 bytes @ 0x4
  4203                           
  4204  0074                     StringCopy@Index:	
  4205                           ; 1 bytes @ 0x4
  4206                           
  4207  0074                     ___wmul@product:	
  4208                           ; 1 bytes @ 0x4
  4209                           
  4210                           
  4211                           ; 2 bytes @ 0x4
  4212  0074                     	ds	1
  4213  0075                     ??_Tmr_TmrBIrqSet:	
  4214  0075                     ??_LowPowerMode:	
  4215                           ; 1 bytes @ 0x5
  4216                           
  4217  0075                     Adc_SelectChannel@SelCh:	
  4218                           ; 1 bytes @ 0x5
  4219                           
  4220  0075                     ClearRxBuffer@Index:	
  4221                           ; 1 bytes @ 0x5
  4222                           
  4223  0075                     ClearTxBuffer@Index:	
  4224                           ; 1 bytes @ 0x5
  4225                           
  4226  0075                     LedBlinkStateMachine@LedBlink:	
  4227                           ; 1 bytes @ 0x5
  4228                           
  4229  0075                     Mcu_SetWdgPeriod@WdgPeriod:	
  4230                           ; 1 bytes @ 0x5
  4231                           
  4232  0075                     TmrBInit@Postscaler:	
  4233                           ; 1 bytes @ 0x5
  4234                           
  4235  0075                     Tmr_TmrBIrqSet@TmrNumb:	
  4236                           ; 1 bytes @ 0x5
  4237                           
  4238  0075                     ReceiveEvt@Event:	
  4239                           ; 1 bytes @ 0x5
  4240                           
  4241  0075                     ___lwmod@counter:	
  4242                           ; 1 bytes @ 0x5
  4243                           
  4244                           
  4245                           ; 1 bytes @ 0x5
  4246  0075                     	ds	1
  4247  0076                     ??_MainScheduler:	
  4248  0076                     ??_I2cSlv_MainTask:	
  4249                           ; 1 bytes @ 0x6
  4250                           
  4251  0076                     ??_Wdg_MainTask:	
  4252                           ; 1 bytes @ 0x6
  4253                           
  4254  0076                     ??_ManageProtocol:	
  4255                           ; 1 bytes @ 0x6
  4256                           
  4257  0076                     ??_App_MainTask:	
  4258                           ; 1 bytes @ 0x6
  4259                           
  4260  0076                     ??_SystemInit:	
  4261                           ; 1 bytes @ 0x6
  4262                           
  4263  0076                     ??_main:	
  4264                           ; 1 bytes @ 0x6
  4265                           
  4266  0076                     ??_GetDieTemperature:	
  4267                           ; 1 bytes @ 0x6
  4268                           
  4269  0076                     ??___lmul:	
  4270                           ; 1 bytes @ 0x6
  4271                           
  4272                           
  4273                           	psect	cstackBANK0
  4274  0020                     __pcstackBANK0:	
  4275                           ; 1 bytes @ 0x6
  4276                           
  4277  0020                     ??_Adc_GetConvResult:	
  4278  0020                     ??_I2c_InitI2cModule:	
  4279                           ; 1 bytes @ 0x0
  4280                           
  4281  0020                     ??_I2c_UpdateTxBuffer:	
  4282                           ; 1 bytes @ 0x0
  4283                           
  4284  0020                     ??_LedBlinkStateMachine:	
  4285                           ; 1 bytes @ 0x0
  4286                           
  4287  0020                     ??_TmrBInit:	
  4288                           ; 1 bytes @ 0x0
  4289                           
  4290  0020                     ?_StringCopy:	
  4291                           ; 1 bytes @ 0x0
  4292                           
  4293  0020                     ?___wmul:	
  4294                           ; 1 bytes @ 0x0
  4295                           
  4296  0020                     ?___lwdiv:	
  4297                           ; 2 bytes @ 0x0
  4298                           
  4299  0020                     ?___lwmod:	
  4300                           ; 2 bytes @ 0x0
  4301                           
  4302  0020                     ?___lldiv:	
  4303                           ; 2 bytes @ 0x0
  4304                           
  4305  0020                     GenerateEvt@EventStatus:	
  4306                           ; 4 bytes @ 0x0
  4307                           
  4308  0020                     StringCopy@SourceStr:	
  4309                           ; 1 bytes @ 0x0
  4310                           
  4311  0020                     ___wmul@multiplier:	
  4312                           ; 2 bytes @ 0x0
  4313                           
  4314  0020                     ___lwdiv@divisor:	
  4315                           ; 2 bytes @ 0x0
  4316                           
  4317  0020                     ___lwmod@divisor:	
  4318                           ; 2 bytes @ 0x0
  4319                           
  4320  0020                     ___lldiv@divisor:	
  4321                           ; 2 bytes @ 0x0
  4322                           
  4323                           
  4324                           ; 4 bytes @ 0x0
  4325  0020                     	ds	1
  4326  0021                     TmrBInit@TmrNumb:	
  4327  0021                     GenerateEvt@Event:	
  4328                           ; 1 bytes @ 0x1
  4329                           
  4330  0021                     Adc_GetConvResult@AdcResult:	
  4331                           ; 1 bytes @ 0x1
  4332                           
  4333                           
  4334                           ; 2 bytes @ 0x1
  4335  0021                     	ds	1
  4336  0022                     I2c_InitI2cModule@I2cConfig:	
  4337  0022                     I2c_UpdateTxBuffer@DataBuffer:	
  4338                           ; 1 bytes @ 0x2
  4339                           
  4340  0022                     StringCopy@DestStr:	
  4341                           ; 1 bytes @ 0x2
  4342                           
  4343  0022                     ___wmul@multiplicand:	
  4344                           ; 1 bytes @ 0x2
  4345                           
  4346  0022                     ___lwdiv@dividend:	
  4347                           ; 2 bytes @ 0x2
  4348                           
  4349  0022                     ___lwmod@dividend:	
  4350                           ; 2 bytes @ 0x2
  4351                           
  4352                           
  4353                           ; 2 bytes @ 0x2
  4354  0022                     	ds	1
  4355  0023                     ?_GetDieTemperature:	
  4356  0023                     I2c_UpdateTxBuffer@Index:	
  4357                           ; 2 bytes @ 0x3
  4358                           
  4359  0023                     StringCopy@Len:	
  4360                           ; 1 bytes @ 0x3
  4361                           
  4362                           
  4363                           ; 1 bytes @ 0x3
  4364  0023                     	ds	1
  4365  0024                     ??_I2cSlv_I2cDrvHandle:	
  4366  0024                     ??_StringCopy:	
  4367                           ; 1 bytes @ 0x4
  4368                           
  4369  0024                     ?___lmul:	
  4370                           ; 1 bytes @ 0x4
  4371                           
  4372  0024                     ___lwdiv@counter:	
  4373                           ; 4 bytes @ 0x4
  4374                           
  4375  0024                     ___lmul@multiplier:	
  4376                           ; 1 bytes @ 0x4
  4377                           
  4378  0024                     ___lldiv@dividend:	
  4379                           ; 4 bytes @ 0x4
  4380                           
  4381                           
  4382                           ; 4 bytes @ 0x4
  4383  0024                     	ds	1
  4384  0025                     GetDieTemperature@DieTempRes:	
  4385  0025                     ___lwdiv@quotient:	
  4386                           ; 2 bytes @ 0x5
  4387                           
  4388                           
  4389                           ; 2 bytes @ 0x5
  4390  0025                     	ds	2
  4391  0027                     ?_utoa:	
  4392  0027                     utoa@val:	
  4393                           ; 1 bytes @ 0x7
  4394                           
  4395                           
  4396                           ; 2 bytes @ 0x7
  4397  0027                     	ds	1
  4398  0028                     ___lmul@multiplicand:	
  4399  0028                     ___lldiv@quotient:	
  4400                           ; 4 bytes @ 0x8
  4401                           
  4402                           
  4403                           ; 4 bytes @ 0x8
  4404  0028                     	ds	1
  4405  0029                     I2cSlv_I2cDrvHandle@Index:	
  4406  0029                     utoa@base:	
  4407                           ; 1 bytes @ 0x9
  4408                           
  4409                           
  4410                           ; 2 bytes @ 0x9
  4411  0029                     	ds	2
  4412  002B                     ??_utoa:	
  4413                           
  4414                           ; 1 bytes @ 0xB
  4415  002B                     	ds	1
  4416  002C                     ___lldiv@counter:	
  4417  002C                     utoa@v:	
  4418                           ; 1 bytes @ 0xC
  4419                           
  4420  002C                     ___lmul@product:	
  4421                           ; 2 bytes @ 0xC
  4422                           
  4423                           
  4424                           ; 4 bytes @ 0xC
  4425  002C                     	ds	2
  4426  002E                     utoa@c:	
  4427                           
  4428                           ; 1 bytes @ 0xE
  4429  002E                     	ds	1
  4430  002F                     utoa@buf:	
  4431                           
  4432                           ; 1 bytes @ 0xF
  4433  002F                     	ds	1
  4434  0030                     ??_StdS_ManageStdServices:	
  4435  0030                     ?_Tmr_TmrBPrSet:	
  4436                           ; 1 bytes @ 0x10
  4437                           
  4438  0030                     Tmr_TmrBPrSet@IntFreqHz:	
  4439                           ; 1 bytes @ 0x10
  4440                           
  4441                           
  4442                           ; 2 bytes @ 0x10
  4443  0030                     	ds	2
  4444  0032                     Tmr_TmrBPrSet@Prescaler:	
  4445  0032                     StdS_ManageStdServices@DieTempStr:	
  4446                           ; 1 bytes @ 0x12
  4447                           
  4448                           
  4449                           ; 4 bytes @ 0x12
  4450  0032                     	ds	1
  4451  0033                     Tmr_TmrBPrSet@Postscaler:	
  4452                           
  4453                           ; 1 bytes @ 0x13
  4454  0033                     	ds	1
  4455  0034                     ??_Tmr_TmrBPrSet:	
  4456                           
  4457                           ; 1 bytes @ 0x14
  4458  0034                     	ds	2
  4459  0036                     StdS_ManageStdServices@DieTemp:	
  4460                           
  4461                           ; 2 bytes @ 0x16
  4462  0036                     	ds	2
  4463  0038                     ??_AppSm:	
  4464                           
  4465                           ; 1 bytes @ 0x18
  4466  0038                     	ds	3
  4467  003B                     ?_I2cSlv_MainTask:	
  4468  003B                     ?_Wdg_MainTask:	
  4469                           ; 1 bytes @ 0x1B
  4470                           
  4471  003B                     ?_Led_MainTask:	
  4472                           ; 1 bytes @ 0x1B
  4473                           
  4474  003B                     ?_App_MainTask:	
  4475                           ; 1 bytes @ 0x1B
  4476                           
  4477  003B                     ?_I2c_DataReceiveSm:	
  4478                           ; 1 bytes @ 0x1B
  4479                           
  4480  003B                     App_MainTask@Options:	
  4481                           ; 1 bytes @ 0x1B
  4482                           
  4483  003B                     I2c_DataReceiveSm@Options:	
  4484                           ; 1 bytes @ 0x1B
  4485                           
  4486  003B                     I2cSlv_MainTask@Options:	
  4487                           ; 1 bytes @ 0x1B
  4488                           
  4489  003B                     Led_MainTask@Options:	
  4490                           ; 1 bytes @ 0x1B
  4491                           
  4492  003B                     Wdg_MainTask@Options:	
  4493                           ; 1 bytes @ 0x1B
  4494                           
  4495                           
  4496                           ; 1 bytes @ 0x1B
  4497  003B                     	ds	1
  4498  003C                     ??_Led_MainTask:	
  4499  003C                     ??_I2c_DataReceiveSm:	
  4500                           ; 1 bytes @ 0x1C
  4501                           
  4502  003C                     Tmr_TmrBPrSet@TmrNumb:	
  4503                           ; 1 bytes @ 0x1C
  4504                           
  4505                           
  4506                           ; 1 bytes @ 0x1C
  4507  003C                     	ds	1
  4508  003D                     Tmr_TmrBPrSet@TmrBPrCfgSts:	
  4509                           
  4510                           ; 1 bytes @ 0x1D
  4511  003D                     	ds	1
  4512  003E                     Tmr_TmrBPrSet@Divisor:	
  4513                           
  4514                           ; 4 bytes @ 0x1E
  4515  003E                     	ds	4
  4516  0042                     ?_Tmr_TmrBConfig:	
  4517  0042                     Tmr_TmrBConfig@TmrBConfig:	
  4518                           ; 1 bytes @ 0x22
  4519                           
  4520                           
  4521                           ; 1 bytes @ 0x22
  4522  0042                     	ds	1
  4523  0043                     ??_Tmr_TmrBConfig:	
  4524  0043                     I2c_DataReceiveSm@Index:	
  4525                           ; 1 bytes @ 0x23
  4526                           
  4527                           
  4528                           ; 1 bytes @ 0x23
  4529  0043                     	ds	1
  4530  0044                     ??_InitializeTasks:	
  4531  0044                     ??_ScheduleTasks:	
  4532                           ; 1 bytes @ 0x24
  4533                           
  4534  0044                     Tmr_TmrBConfig@TmrNumb:	
  4535                           ; 1 bytes @ 0x24
  4536                           
  4537                           
  4538                           ; 1 bytes @ 0x24
  4539  0044                     	ds	1
  4540  0045                     ??_InitSchTimer:	
  4541                           
  4542                           ; 1 bytes @ 0x25
  4543  0045                     	ds	3
  4544  0048                     InitializeTasks@ActiveTaskIndex:	
  4545                           
  4546                           ; 1 bytes @ 0x28
  4547  0048                     	ds	2
  4548                           
  4549                           	psect	maintext
  4550  0CA5                     __pmaintext:	
  4551 ;;
  4552 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4553 ;;
  4554 ;; *************** function _main *****************
  4555 ;; Defined at:
  4556 ;;		line 57 in file "../../../../Framework/MercuryFwk/Source/c/00_Main/main.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  2  100[None  ] short 
  4563 ;; Registers used:
  4564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : B1F/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;Total ram usage:        0 bytes
  4575 ;; Hardware stack levels required when called:   10
  4576 ;; This function calls:
  4577 ;;		_MainScheduler
  4578 ;;		_SystemInit
  4579 ;; This function is called by:
  4580 ;;		Startup code after reset
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           
  4585                           ;psect for function _main
  4586  0CA5                     _main:	
  4587                           
  4588                           ;main.c: 60: SystemInit();
  4589                           
  4590                           ;incstack = 0
  4591                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4592  0CA5  318C  24B4  318C   	fcall	_SystemInit
  4593                           
  4594                           ;main.c: 63: MainScheduler();
  4595  0CA8  318D  2570         	fcall	_MainScheduler
  4596                           
  4597                           ;main.c: 66: return 0;
  4598                           ;	Return value of _main is never used
  4599  0CAA  3180  282A         	ljmp	start
  4600  0CAC                     __end_of_main:	
  4601                           
  4602                           	psect	text1
  4603  0CB4                     __ptext1:	
  4604 ;; *************** function _SystemInit *****************
  4605 ;; Defined at:
  4606 ;;		line 97 in file "../Source/c/04_App/sys_init.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;		None
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;		None
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;Total ram usage:        0 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:    6
  4627 ;; This function calls:
  4628 ;;		_InitSchTimer
  4629 ;;		_Mcu_EnableInterrupts
  4630 ;;		_Mcu_InitIntOsc
  4631 ;; This function is called by:
  4632 ;;		_main
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           
  4637                           ;psect for function _SystemInit
  4638  0CB4                     _SystemInit:	
  4639                           
  4640                           ;sys_init.c: 100: Mcu_InitIntOsc();
  4641                           
  4642                           ;incstack = 0
  4643                           ; Regs used in _SystemInit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4644  0CB4  318C  249E  318C   	fcall	_Mcu_InitIntOsc
  4645                           
  4646                           ;sys_init.c: 102: InitSchTimer();
  4647  0CB7  318E  2627  318C   	fcall	_InitSchTimer
  4648                           
  4649                           ;sys_init.c: 104: Mcu_EnableInterrupts();
  4650  0CBA  318C  248D         	fcall	_Mcu_EnableInterrupts
  4651  0CBC  0008               	return
  4652  0CBD                     __end_of_SystemInit:	
  4653                           
  4654                           	psect	text2
  4655  0C9E                     __ptext2:	
  4656 ;; *************** function _Mcu_InitIntOsc *****************
  4657 ;; Defined at:
  4658 ;;		line 79 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;Total ram usage:        0 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    2
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_SystemInit
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           
  4687                           ;psect for function _Mcu_InitIntOsc
  4688  0C9E                     _Mcu_InitIntOsc:	
  4689                           
  4690                           ;mcu_drv.c: 82: OSCCONbits.SCS1 = ((UINT8)(1));
  4691                           
  4692                           ;incstack = 0
  4693                           ; Regs used in _Mcu_InitIntOsc: [wreg+status,2+status,0]
  4694  0C9E  0021               	movlb	1	; select bank1
  4695  0C9F  1499               	bsf	25,1	;volatile
  4696                           
  4697                           ;mcu_drv.c: 84: OSCCONbits.IRCF = 0b1111;
  4698  0CA0  3078               	movlw	120
  4699  0CA1  0499               	iorwf	25,f	;volatile
  4700  0CA2                     l301:	
  4701                           ;mcu_drv.c: 86: while (OSCSTATbits.HFIOFS == 0);
  4702                           
  4703  0CA2  181A               	btfsc	26,0	;volatile
  4704  0CA3  0008               	return
  4705  0CA4  2CA2               	goto	l301
  4706  0CA5                     __end_of_Mcu_InitIntOsc:	
  4707                           
  4708                           	psect	text3
  4709  0C8D                     __ptext3:	
  4710 ;; *************** function _Mcu_EnableInterrupts *****************
  4711 ;; Defined at:
  4712 ;;		line 97 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;		None
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;		None
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      void 
  4719 ;; Registers used:
  4720 ;;		None
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;Total ram usage:        0 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    2
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_SystemInit
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           
  4741                           ;psect for function _Mcu_EnableInterrupts
  4742  0C8D                     _Mcu_EnableInterrupts:	
  4743                           
  4744                           ;mcu_drv.c: 100: INTCONbits.GIE = ((UINT8)(1));
  4745                           
  4746                           ;incstack = 0
  4747                           ; Regs used in _Mcu_EnableInterrupts: []
  4748  0C8D  178B               	bsf	11,7	;volatile
  4749                           
  4750                           ;mcu_drv.c: 101: INTCONbits.PEIE = ((UINT8)(1));
  4751  0C8E  170B               	bsf	11,6	;volatile
  4752  0C8F  0008               	return
  4753  0C90                     __end_of_Mcu_EnableInterrupts:	
  4754                           
  4755                           	psect	text4
  4756  0E27                     __ptext4:	
  4757 ;; *************** function _InitSchTimer *****************
  4758 ;; Defined at:
  4759 ;;		line 70 in file "../Source/c/04_App/sys_init.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;		None
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  TmrBConfig      6    0[BANK1 ] struct _TmrBConfigType
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      void 
  4766 ;; Registers used:
  4767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4774 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4775 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4776 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4777 ;;Total ram usage:        7 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    5
  4780 ;; This function calls:
  4781 ;;		_Tmr_TmrBConfig
  4782 ;; This function is called by:
  4783 ;;		_SystemInit
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           
  4788                           ;psect for function _InitSchTimer
  4789  0E27                     _InitSchTimer:	
  4790                           
  4791                           ;sys_init.c: 72: TmrBConfigType TmrBConfig;
  4792                           ;sys_init.c: 75: TmrBConfig.PreScaler = 16;
  4793                           
  4794                           ;incstack = 0
  4795                           ; Regs used in _InitSchTimer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4796  0E27  3010               	movlw	16
  4797  0E28  0020               	movlb	0	; select bank0
  4798  0E29  00C5               	movwf	??_InitSchTimer
  4799  0E2A  0845               	movf	??_InitSchTimer,w
  4800  0E2B  0021               	movlb	1	; select bank1
  4801  0E2C  00DF               	movwf	InitSchTimer@TmrBConfig^(0+128)
  4802                           
  4803                           ;sys_init.c: 76: TmrBConfig.PostScaler = 4;
  4804  0E2D  3004               	movlw	4
  4805  0E2E  0020               	movlb	0	; select bank0
  4806  0E2F  00C5               	movwf	??_InitSchTimer
  4807  0E30  0845               	movf	??_InitSchTimer,w
  4808  0E31  0021               	movlb	1	; select bank1
  4809  0E32  00E0               	movwf	(InitSchTimer@TmrBConfig^(0+128)+1)
  4810                           
  4811                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4812  0E33  01E1               	clrf	(InitSchTimer@TmrBConfig^(0+128)+2)
  4813  0E34  0AE1               	incf	(InitSchTimer@TmrBConfig^(0+128)+2),f
  4814                           
  4815                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = 1000;
  4816  0E35  30E8               	movlw	232
  4817  0E36  00E2               	movwf	(InitSchTimer@TmrBConfig^(0+128)+3)
  4818  0E37  3003               	movlw	3
  4819  0E38  00E3               	movwf	(InitSchTimer@TmrBConfig^(0+128)+4)
  4820                           
  4821                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4822  0E39  01E4               	clrf	(InitSchTimer@TmrBConfig^(0+128)+5)
  4823  0E3A  0AE4               	incf	(InitSchTimer@TmrBConfig^(0+128)+5),f
  4824                           
  4825                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4826  0E3B  30DF               	movlw	(low (InitSchTimer@TmrBConfig| 0))& (0+255)
  4827  0E3C  0020               	movlb	0	; select bank0
  4828  0E3D  00C5               	movwf	??_InitSchTimer
  4829  0E3E  0845               	movf	??_InitSchTimer,w
  4830  0E3F  00C2               	movwf	Tmr_TmrBConfig@TmrBConfig
  4831  0E40  3002               	movlw	2
  4832  0E41  3187  2770         	fcall	_Tmr_TmrBConfig
  4833  0E43  0008               	return
  4834  0E44                     __end_of_InitSchTimer:	
  4835                           
  4836                           	psect	text5
  4837  0770                     __ptext5:	
  4838 ;; *************** function _Tmr_TmrBConfig *****************
  4839 ;; Defined at:
  4840 ;;		line 313 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  TmrNumb         1    wreg     unsigned char 
  4843 ;;  TmrBConfig      1   34[BANK0 ] PTR struct _TmrBConfigTy
  4844 ;;		 -> InitSchTimer@TmrBConfig(6), 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;  TmrNumb         1   36[BANK0 ] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      void 
  4849 ;; Registers used:
  4850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4856 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4858 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;Total ram usage:        3 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    4
  4863 ;; This function calls:
  4864 ;;		_TmrBInit
  4865 ;;		_Tmr_StartTmr
  4866 ;;		_Tmr_TmrBIrqSet
  4867 ;;		_Tmr_TmrBPrSet
  4868 ;; This function is called by:
  4869 ;;		_InitSchTimer
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           
  4874                           ;psect for function _Tmr_TmrBConfig
  4875  0770                     _Tmr_TmrBConfig:	
  4876                           
  4877                           ;incstack = 0
  4878                           ; Regs used in _Tmr_TmrBConfig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4879                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4880  0770  0020               	movlb	0	; select bank0
  4881  0771  00C4               	movwf	Tmr_TmrBConfig@TmrNumb
  4882                           
  4883                           ;tmr_drv.c: 316: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4884  0772  0842               	movf	Tmr_TmrBConfig@TmrBConfig,w
  4885  0773  0086               	movwf	6
  4886  0774  0187               	clrf	7
  4887  0775  0801               	movf	1,w
  4888  0776  00C3               	movwf	??_Tmr_TmrBConfig
  4889  0777  0843               	movf	??_Tmr_TmrBConfig,w
  4890  0778  00F4               	movwf	TmrBInit@Prescaler
  4891  0779  0842               	movf	Tmr_TmrBConfig@TmrBConfig,w
  4892  077A  0086               	movwf	6
  4893  077B  0187               	clrf	7
  4894  077C  3F41               	moviw [1]fsr1
  4895  077D  00F5               	movwf	TmrBInit@Postscaler
  4896  077E  0844               	movf	Tmr_TmrBConfig@TmrNumb,w
  4897  077F  3185  2504  3187   	fcall	_TmrBInit
  4898                           
  4899                           ;tmr_drv.c: 318: if (TmrBConfig->IntEnable == EnableInt)
  4900  0782  0020               	movlb	0	; select bank0
  4901  0783  0842               	movf	Tmr_TmrBConfig@TmrBConfig,w
  4902  0784  3E02               	addlw	2
  4903  0785  0086               	movwf	6
  4904  0786  0187               	clrf	7
  4905  0787  0301               	decf	1,w
  4906  0788  1D03               	btfss	3,2
  4907  0789  2F8D               	goto	l3663
  4908                           
  4909                           ;tmr_drv.c: 319: {
  4910                           ;tmr_drv.c: 321: Tmr_TmrBIrqSet(TmrNumb,((UINT8)(1)));
  4911  078A  01F4               	clrf	Tmr_TmrBIrqSet@TmrIrqSts
  4912  078B  0AF4               	incf	Tmr_TmrBIrqSet@TmrIrqSts,f
  4913  078C  2F8F               	goto	L1
  4914  078D                     l3663:	
  4915                           ;tmr_drv.c: 322: }
  4916                           
  4917                           
  4918                           ;tmr_drv.c: 323: else
  4919                           ;tmr_drv.c: 324: {
  4920                           ;tmr_drv.c: 326: Tmr_TmrBIrqSet(TmrNumb,((UINT8)(0)));
  4921  078D  01F4               	clrf	Tmr_TmrBIrqSet@TmrIrqSts
  4922  078E  0020               	movlb	0	; select bank0
  4923  078F                     L1:	
  4924  078F  0844               	movf	Tmr_TmrBConfig@TmrNumb,w
  4925  0790  318F  271B  3187   	fcall	_Tmr_TmrBIrqSet
  4926                           
  4927                           ;tmr_drv.c: 327: }
  4928                           ;tmr_drv.c: 329: if (Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,T
      +                          mrBConfig->PostScaler) == CfgError)
  4929  0793  0020               	movlb	0	; select bank0
  4930  0794  0842               	movf	Tmr_TmrBConfig@TmrBConfig,w
  4931  0795  3E03               	addlw	3
  4932  0796  0086               	movwf	6
  4933  0797  0187               	clrf	7
  4934  0798  3F40               	moviw [0]fsr1
  4935  0799  00B0               	movwf	Tmr_TmrBPrSet@IntFreqHz
  4936  079A  3F41               	moviw [1]fsr1
  4937  079B  00B1               	movwf	Tmr_TmrBPrSet@IntFreqHz+1
  4938  079C  0842               	movf	Tmr_TmrBConfig@TmrBConfig,w
  4939  079D  0086               	movwf	6
  4940  079E  0187               	clrf	7
  4941  079F  0801               	movf	1,w
  4942  07A0  00C3               	movwf	??_Tmr_TmrBConfig
  4943  07A1  0843               	movf	??_Tmr_TmrBConfig,w
  4944  07A2  00B2               	movwf	Tmr_TmrBPrSet@Prescaler
  4945  07A3  0842               	movf	Tmr_TmrBConfig@TmrBConfig,w
  4946  07A4  0086               	movwf	6
  4947  07A5  0187               	clrf	7
  4948  07A6  3F41               	moviw [1]fsr1
  4949  07A7  00B3               	movwf	Tmr_TmrBPrSet@Postscaler
  4950  07A8  0844               	movf	Tmr_TmrBConfig@TmrNumb,w
  4951  07A9  3183  2326  3187   	fcall	_Tmr_TmrBPrSet
  4952  07AC  3A01               	xorlw	1
  4953  07AD  1903               	btfsc	3,2
  4954  07AE                     l423:	
  4955                           ;tmr_drv.c: 330: {
  4956                           ;tmr_drv.c: 332: while(1);
  4957                           
  4958  07AE  2FAE               	goto	l423
  4959                           
  4960                           ;tmr_drv.c: 333: }
  4961                           ;tmr_drv.c: 335: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4962  07AF  0020               	movlb	0	; select bank0
  4963  07B0  0842               	movf	Tmr_TmrBConfig@TmrBConfig,w
  4964  07B1  3E05               	addlw	5
  4965  07B2  0086               	movwf	6
  4966  07B3  0187               	clrf	7
  4967  07B4  0301               	decf	1,w
  4968  07B5  1D03               	btfss	3,2
  4969  07B6  0008               	return
  4970                           
  4971                           ;tmr_drv.c: 336: {
  4972                           ;tmr_drv.c: 338: Tmr_StartTmr(TmrNumb);
  4973  07B7  0844               	movf	Tmr_TmrBConfig@TmrNumb,w
  4974  07B8  318D  25BE         	fcall	_Tmr_StartTmr
  4975                           
  4976                           ;tmr_drv.c: 339: }
  4977  07BA  0008               	return
  4978  07BB                     __end_of_Tmr_TmrBConfig:	
  4979                           ;tmr_drv.c: 340: else
  4980                           ;tmr_drv.c: 341: {
  4981                           
  4982                           
  4983                           	psect	text6
  4984  0326                     __ptext6:	
  4985 ;; *************** function _Tmr_TmrBPrSet *****************
  4986 ;; Defined at:
  4987 ;;		line 225 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  TmrNumb         1    wreg     unsigned char 
  4990 ;;  IntFreqHz       2   16[BANK0 ] unsigned short 
  4991 ;;  Prescaler       1   18[BANK0 ] unsigned char 
  4992 ;;  Postscaler      1   19[BANK0 ] unsigned char 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  TmrNumb         1   28[BANK0 ] unsigned char 
  4995 ;;  Divisor         4   30[BANK0 ] unsigned long 
  4996 ;;  TmrBPrCfgSts    1   29[BANK0 ] enum E3647
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      enum E3647
  4999 ;; Registers used:
  5000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5006 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5007 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5008 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5009 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5010 ;;Total ram usage:       18 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:    3
  5013 ;; This function calls:
  5014 ;;		___lldiv
  5015 ;;		___lmul
  5016 ;;		___wmul
  5017 ;; This function is called by:
  5018 ;;		_Tmr_TmrBConfig
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           
  5023                           ;psect for function _Tmr_TmrBPrSet
  5024  0326                     _Tmr_TmrBPrSet:	
  5025                           
  5026                           ;incstack = 0
  5027                           ; Regs used in _Tmr_TmrBPrSet: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5028                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  5029  0326  0020               	movlb	0	; select bank0
  5030  0327  00BC               	movwf	Tmr_TmrBPrSet@TmrNumb
  5031                           
  5032                           ;tmr_drv.c: 227: CfgStsType TmrBPrCfgSts;
  5033                           ;tmr_drv.c: 228: UINT32 Divisor = 0;
  5034  0328  3000               	movlw	0
  5035  0329  00C1               	movwf	Tmr_TmrBPrSet@Divisor+3
  5036  032A  3000               	movlw	0
  5037  032B  00C0               	movwf	Tmr_TmrBPrSet@Divisor+2
  5038  032C  3000               	movlw	0
  5039  032D  00BF               	movwf	Tmr_TmrBPrSet@Divisor+1
  5040  032E  3000               	movlw	0
  5041  032F  00BE               	movwf	Tmr_TmrBPrSet@Divisor
  5042                           
  5043                           ;tmr_drv.c: 231: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  5044  0330  0833               	movf	Tmr_TmrBPrSet@Postscaler,w
  5045  0331  00B4               	movwf	??_Tmr_TmrBPrSet
  5046  0332  01B5               	clrf	??_Tmr_TmrBPrSet+1
  5047  0333  0834               	movf	??_Tmr_TmrBPrSet,w
  5048  0334  00A2               	movwf	___wmul@multiplicand
  5049  0335  0835               	movf	??_Tmr_TmrBPrSet+1,w
  5050  0336  00A3               	movwf	___wmul@multiplicand+1
  5051  0337  0832               	movf	Tmr_TmrBPrSet@Prescaler,w
  5052  0338  00B6               	movwf	??_Tmr_TmrBPrSet+2
  5053  0339  01B7               	clrf	??_Tmr_TmrBPrSet+3
  5054  033A  0836               	movf	??_Tmr_TmrBPrSet+2,w
  5055  033B  00A0               	movwf	___wmul@multiplier
  5056  033C  0837               	movf	??_Tmr_TmrBPrSet+3,w
  5057  033D  00A1               	movwf	___wmul@multiplier+1
  5058  033E  318D  25EE  3183   	fcall	___wmul
  5059  0341  0020               	movlb	0	; select bank0
  5060  0342  0820               	movf	?___wmul,w
  5061  0343  00B8               	movwf	??_Tmr_TmrBPrSet+4
  5062  0344  0821               	movf	?___wmul+1,w
  5063  0345  00B9               	movwf	??_Tmr_TmrBPrSet+5
  5064  0346  01BA               	clrf	??_Tmr_TmrBPrSet+6
  5065  0347  01BB               	clrf	??_Tmr_TmrBPrSet+7
  5066  0348  083B               	movf	??_Tmr_TmrBPrSet+7,w
  5067  0349  00A7               	movwf	___lmul@multiplier+3
  5068  034A  083A               	movf	??_Tmr_TmrBPrSet+6,w
  5069  034B  00A6               	movwf	___lmul@multiplier+2
  5070  034C  0839               	movf	??_Tmr_TmrBPrSet+5,w
  5071  034D  00A5               	movwf	___lmul@multiplier+1
  5072  034E  0838               	movf	??_Tmr_TmrBPrSet+4,w
  5073  034F  00A4               	movwf	___lmul@multiplier
  5074  0350  0830               	movf	Tmr_TmrBPrSet@IntFreqHz,w
  5075  0351  00A8               	movwf	___lmul@multiplicand
  5076  0352  0831               	movf	Tmr_TmrBPrSet@IntFreqHz+1,w
  5077  0353  00A9               	movwf	___lmul@multiplicand+1
  5078  0354  01AA               	clrf	___lmul@multiplicand+2
  5079  0355  01AB               	clrf	___lmul@multiplicand+3
  5080  0356  318F  279B  3183   	fcall	___lmul
  5081  0359  0020               	movlb	0	; select bank0
  5082  035A  0827               	movf	?___lmul+3,w
  5083  035B  00C1               	movwf	Tmr_TmrBPrSet@Divisor+3
  5084  035C  0826               	movf	?___lmul+2,w
  5085  035D  00C0               	movwf	Tmr_TmrBPrSet@Divisor+2
  5086  035E  0825               	movf	?___lmul+1,w
  5087  035F  00BF               	movwf	Tmr_TmrBPrSet@Divisor+1
  5088  0360  0824               	movf	?___lmul,w
  5089  0361  00BE               	movwf	Tmr_TmrBPrSet@Divisor
  5090                           
  5091                           ;tmr_drv.c: 234: if (((((UINT32)(16000000))/4)/Divisor) <= 255)
  5092  0362  0841               	movf	Tmr_TmrBPrSet@Divisor+3,w
  5093  0363  00A3               	movwf	___lldiv@divisor+3
  5094  0364  0840               	movf	Tmr_TmrBPrSet@Divisor+2,w
  5095  0365  00A2               	movwf	___lldiv@divisor+2
  5096  0366  083F               	movf	Tmr_TmrBPrSet@Divisor+1,w
  5097  0367  00A1               	movwf	___lldiv@divisor+1
  5098  0368  083E               	movf	Tmr_TmrBPrSet@Divisor,w
  5099  0369  00A0               	movwf	___lldiv@divisor
  5100  036A  3000               	movlw	0
  5101  036B  00A7               	movwf	___lldiv@dividend+3
  5102  036C  303D               	movlw	61
  5103  036D  00A6               	movwf	___lldiv@dividend+2
  5104  036E  3009               	movlw	9
  5105  036F  00A5               	movwf	___lldiv@dividend+1
  5106  0370  3000               	movlw	0
  5107  0371  00A4               	movwf	___lldiv@dividend
  5108  0372  3187  271D  3183   	fcall	___lldiv
  5109  0375  0020               	movlb	0	; select bank0
  5110  0376  0823               	movf	?___lldiv+3,w
  5111  0377  1D03               	btfss	3,2
  5112  0378  2BD8               	goto	l399
  5113  0379  0822               	movf	?___lldiv+2,w
  5114  037A  1D03               	btfss	3,2
  5115  037B  2BD8               	goto	l399
  5116  037C  3001               	movlw	1
  5117  037D  0221               	subwf	?___lldiv+1,w
  5118  037E  1C03               	btfss	3,0
  5119  037F  2BC9               	goto	l3547
  5120  0380  2BD8               	goto	l399
  5121  0381                     l3539:	
  5122                           ;tmr_drv.c: 238: {
  5123                           ;tmr_drv.c: 239: case ((UINT8)(2)):
  5124                           
  5125                           ;tmr_drv.c: 235: {
  5126                           ;tmr_drv.c: 237: switch (TmrNumb)
  5127                           
  5128                           
  5129                           ;tmr_drv.c: 241: PR2 = (((UINT32)(16000000))/4)/Divisor;
  5130  0381  0841               	movf	Tmr_TmrBPrSet@Divisor+3,w
  5131  0382  00A3               	movwf	___lldiv@divisor+3
  5132  0383  0840               	movf	Tmr_TmrBPrSet@Divisor+2,w
  5133  0384  00A2               	movwf	___lldiv@divisor+2
  5134  0385  083F               	movf	Tmr_TmrBPrSet@Divisor+1,w
  5135  0386  00A1               	movwf	___lldiv@divisor+1
  5136  0387  083E               	movf	Tmr_TmrBPrSet@Divisor,w
  5137  0388  00A0               	movwf	___lldiv@divisor
  5138  0389  3000               	movlw	0
  5139  038A  00A7               	movwf	___lldiv@dividend+3
  5140  038B  303D               	movlw	61
  5141  038C  00A6               	movwf	___lldiv@dividend+2
  5142  038D  3009               	movlw	9
  5143  038E  00A5               	movwf	___lldiv@dividend+1
  5144  038F  3000               	movlw	0
  5145  0390  00A4               	movwf	___lldiv@dividend
  5146  0391  3187  271D  3183   	fcall	___lldiv
  5147  0394  0020               	movlb	0	; select bank0
  5148  0395  0820               	movf	?___lldiv,w
  5149  0396  009B               	movwf	27	;volatile
  5150                           
  5151                           ;tmr_drv.c: 242: break;
  5152  0397  2BD5               	goto	l3549
  5153  0398                     l3541:	
  5154                           ;tmr_drv.c: 244: case ((UINT8)(4)):
  5155                           
  5156                           
  5157                           ;tmr_drv.c: 246: PR4 = (((UINT32)(16000000))/4)/Divisor;
  5158  0398  0841               	movf	Tmr_TmrBPrSet@Divisor+3,w
  5159  0399  00A3               	movwf	___lldiv@divisor+3
  5160  039A  0840               	movf	Tmr_TmrBPrSet@Divisor+2,w
  5161  039B  00A2               	movwf	___lldiv@divisor+2
  5162  039C  083F               	movf	Tmr_TmrBPrSet@Divisor+1,w
  5163  039D  00A1               	movwf	___lldiv@divisor+1
  5164  039E  083E               	movf	Tmr_TmrBPrSet@Divisor,w
  5165  039F  00A0               	movwf	___lldiv@divisor
  5166  03A0  3000               	movlw	0
  5167  03A1  00A7               	movwf	___lldiv@dividend+3
  5168  03A2  303D               	movlw	61
  5169  03A3  00A6               	movwf	___lldiv@dividend+2
  5170  03A4  3009               	movlw	9
  5171  03A5  00A5               	movwf	___lldiv@dividend+1
  5172  03A6  3000               	movlw	0
  5173  03A7  00A4               	movwf	___lldiv@dividend
  5174  03A8  3187  271D  3183   	fcall	___lldiv
  5175  03AB  0020               	movlb	0	; select bank0
  5176  03AC  0820               	movf	?___lldiv,w
  5177  03AD  0028               	movlb	8	; select bank8
  5178  03AE  0096               	movwf	22	;volatile
  5179                           
  5180                           ;tmr_drv.c: 247: break;
  5181  03AF  2BD5               	goto	l3549
  5182  03B0                     l3543:	
  5183                           ;tmr_drv.c: 249: case ((UINT8)(6)):
  5184                           
  5185                           
  5186                           ;tmr_drv.c: 251: PR6 = (((UINT32)(16000000))/4)/Divisor;
  5187  03B0  0020               	movlb	0	; select bank0
  5188  03B1  0841               	movf	Tmr_TmrBPrSet@Divisor+3,w
  5189  03B2  00A3               	movwf	___lldiv@divisor+3
  5190  03B3  0840               	movf	Tmr_TmrBPrSet@Divisor+2,w
  5191  03B4  00A2               	movwf	___lldiv@divisor+2
  5192  03B5  083F               	movf	Tmr_TmrBPrSet@Divisor+1,w
  5193  03B6  00A1               	movwf	___lldiv@divisor+1
  5194  03B7  083E               	movf	Tmr_TmrBPrSet@Divisor,w
  5195  03B8  00A0               	movwf	___lldiv@divisor
  5196  03B9  3000               	movlw	0
  5197  03BA  00A7               	movwf	___lldiv@dividend+3
  5198  03BB  303D               	movlw	61
  5199  03BC  00A6               	movwf	___lldiv@dividend+2
  5200  03BD  3009               	movlw	9
  5201  03BE  00A5               	movwf	___lldiv@dividend+1
  5202  03BF  3000               	movlw	0
  5203  03C0  00A4               	movwf	___lldiv@dividend
  5204  03C1  3187  271D  3183   	fcall	___lldiv
  5205  03C4  0020               	movlb	0	; select bank0
  5206  03C5  0820               	movf	?___lldiv,w
  5207  03C6  0028               	movlb	8	; select bank8
  5208  03C7  009D               	movwf	29	;volatile
  5209                           
  5210                           ;tmr_drv.c: 256: }
  5211                           
  5212                           ;tmr_drv.c: 255: break;
  5213                           
  5214                           ;tmr_drv.c: 254: default:
  5215                           
  5216                           ;tmr_drv.c: 252: break;
  5217  03C8  2BD5               	goto	l3549
  5218  03C9                     l3547:	
  5219  03C9  0020               	movlb	0	; select bank0
  5220  03CA  083C               	movf	Tmr_TmrBPrSet@TmrNumb,w
  5221                           
  5222                           ; Switch size 1, requested type "space"
  5223                           ; Number of cases is 3, Range of values is 2 to 6
  5224                           ; switch strategies available:
  5225                           ; Name         Instructions Cycles
  5226                           ; simple_byte           10     6 (average)
  5227                           ; direct_byte           19     9 (fixed)
  5228                           ; jumptable            263     9 (fixed)
  5229                           ;	Chosen strategy is simple_byte
  5230  03CB  3A02               	xorlw	2	; case 2
  5231  03CC  1903               	skipnz
  5232  03CD  2B81               	goto	l3539
  5233  03CE  3A06               	xorlw	6	; case 4
  5234  03CF  1903               	skipnz
  5235  03D0  2B98               	goto	l3541
  5236  03D1  3A02               	xorlw	2	; case 6
  5237  03D2  1903               	skipnz
  5238  03D3  2BB0               	goto	l3543
  5239  03D4  2BD5               	goto	l3549
  5240  03D5                     l3549:	
  5241                           
  5242                           ;tmr_drv.c: 259: TmrBPrCfgSts = CfgOk;
  5243  03D5  0020               	movlb	0	; select bank0
  5244  03D6  01BD               	clrf	Tmr_TmrBPrSet@TmrBPrCfgSts
  5245                           
  5246                           ;tmr_drv.c: 260: }
  5247  03D7  2BDA               	goto	l3551
  5248  03D8                     l399:	
  5249                           
  5250                           ;tmr_drv.c: 261: else
  5251                           ;tmr_drv.c: 262: {
  5252                           ;tmr_drv.c: 264: TmrBPrCfgSts = CfgError;
  5253  03D8  01BD               	clrf	Tmr_TmrBPrSet@TmrBPrCfgSts
  5254  03D9  0ABD               	incf	Tmr_TmrBPrSet@TmrBPrCfgSts,f
  5255  03DA                     l3551:	
  5256                           
  5257                           ;tmr_drv.c: 265: }
  5258                           ;tmr_drv.c: 268: return TmrBPrCfgSts;
  5259  03DA  083D               	movf	Tmr_TmrBPrSet@TmrBPrCfgSts,w
  5260  03DB  0008               	return
  5261  03DC                     __end_of_Tmr_TmrBPrSet:	
  5262                           
  5263                           	psect	text7
  5264  0DEE                     __ptext7:	
  5265 ;; *************** function ___wmul *****************
  5266 ;; Defined at:
  5267 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5270 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  product         2    4[COMMON] unsigned int 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  2    0[BANK0 ] unsigned int 
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5282 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5283 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5286 ;;Total ram usage:        6 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    2
  5289 ;; This function calls:
  5290 ;;		Nothing
  5291 ;; This function is called by:
  5292 ;;		_Tmr_TmrBPrSet
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           
  5297                           ;psect for function ___wmul
  5298  0DEE                     ___wmul:	
  5299                           
  5300                           ;incstack = 0
  5301                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5302  0DEE  01F4               	clrf	___wmul@product
  5303  0DEF  01F5               	clrf	___wmul@product+1
  5304  0DF0                     l3341:	
  5305  0DF0  0020               	movlb	0	; select bank0
  5306  0DF1  1C20               	btfss	___wmul@multiplier,0
  5307  0DF2  2DF7               	goto	l918
  5308  0DF3  0822               	movf	___wmul@multiplicand,w
  5309  0DF4  07F4               	addwf	___wmul@product,f
  5310  0DF5  0823               	movf	___wmul@multiplicand+1,w
  5311  0DF6  3DF5               	addwfc	___wmul@product+1,f
  5312  0DF7                     l918:	
  5313  0DF7  3001               	movlw	1
  5314  0DF8                     u2555:	
  5315  0DF8  35A2               	lslf	___wmul@multiplicand,f
  5316  0DF9  0DA3               	rlf	___wmul@multiplicand+1,f
  5317  0DFA  0B89               	decfsz	9,f
  5318  0DFB  2DF8               	goto	u2555
  5319  0DFC  3001               	movlw	1
  5320  0DFD                     u2565:	
  5321  0DFD  36A1               	lsrf	___wmul@multiplier+1,f
  5322  0DFE  0CA0               	rrf	___wmul@multiplier,f
  5323  0DFF  0B89               	decfsz	9,f
  5324  0E00  2DFD               	goto	u2565
  5325  0E01  0820               	movf	___wmul@multiplier,w
  5326  0E02  0421               	iorwf	___wmul@multiplier+1,w
  5327  0E03  1D03               	btfss	3,2
  5328  0E04  2DF0               	goto	l3341
  5329  0E05  0875               	movf	___wmul@product+1,w
  5330  0E06  00A1               	movwf	?___wmul+1
  5331  0E07  0874               	movf	___wmul@product,w
  5332  0E08  00A0               	movwf	?___wmul
  5333  0E09  0008               	return
  5334  0E0A                     __end_of___wmul:	
  5335                           
  5336                           	psect	text8
  5337  0F9B                     __ptext8:	
  5338 ;; *************** function ___lmul *****************
  5339 ;; Defined at:
  5340 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  multiplier      4    4[BANK0 ] unsigned long 
  5343 ;;  multiplicand    4    8[BANK0 ] unsigned long 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  product         4   12[BANK0 ] unsigned long 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  4    4[BANK0 ] unsigned long 
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5355 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5358 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5359 ;;Total ram usage:       12 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    2
  5362 ;; This function calls:
  5363 ;;		Nothing
  5364 ;; This function is called by:
  5365 ;;		_Tmr_TmrBPrSet
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           
  5370                           ;psect for function ___lmul
  5371  0F9B                     ___lmul:	
  5372                           
  5373                           ;incstack = 0
  5374                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5375  0F9B  3000               	movlw	0
  5376  0F9C  0020               	movlb	0	; select bank0
  5377  0F9D  00AF               	movwf	___lmul@product+3
  5378  0F9E  3000               	movlw	0
  5379  0F9F  00AE               	movwf	___lmul@product+2
  5380  0FA0  3000               	movlw	0
  5381  0FA1  00AD               	movwf	___lmul@product+1
  5382  0FA2  3000               	movlw	0
  5383  0FA3  00AC               	movwf	___lmul@product
  5384  0FA4                     l3355:	
  5385  0FA4  1C24               	btfss	___lmul@multiplier,0
  5386  0FA5  2FAE               	goto	l3359
  5387  0FA6  0828               	movf	___lmul@multiplicand,w
  5388  0FA7  07AC               	addwf	___lmul@product,f
  5389  0FA8  0829               	movf	___lmul@multiplicand+1,w
  5390  0FA9  3DAD               	addwfc	___lmul@product+1,f
  5391  0FAA  082A               	movf	___lmul@multiplicand+2,w
  5392  0FAB  3DAE               	addwfc	___lmul@product+2,f
  5393  0FAC  082B               	movf	___lmul@multiplicand+3,w
  5394  0FAD  3DAF               	addwfc	___lmul@product+3,f
  5395  0FAE                     l3359:	
  5396  0FAE  3001               	movlw	1
  5397  0FAF                     u2595:	
  5398  0FAF  35A8               	lslf	___lmul@multiplicand,f
  5399  0FB0  0DA9               	rlf	___lmul@multiplicand+1,f
  5400  0FB1  0DAA               	rlf	___lmul@multiplicand+2,f
  5401  0FB2  0DAB               	rlf	___lmul@multiplicand+3,f
  5402  0FB3  0B89               	decfsz	9,f
  5403  0FB4  2FAF               	goto	u2595
  5404  0FB5  3001               	movlw	1
  5405  0FB6                     u2605:	
  5406  0FB6  36A7               	lsrf	___lmul@multiplier+3,f
  5407  0FB7  0CA6               	rrf	___lmul@multiplier+2,f
  5408  0FB8  0CA5               	rrf	___lmul@multiplier+1,f
  5409  0FB9  0CA4               	rrf	___lmul@multiplier,f
  5410  0FBA  0B89               	decfsz	9,f
  5411  0FBB  2FB6               	goto	u2605
  5412  0FBC  0827               	movf	___lmul@multiplier+3,w
  5413  0FBD  0426               	iorwf	___lmul@multiplier+2,w
  5414  0FBE  0425               	iorwf	___lmul@multiplier+1,w
  5415  0FBF  0424               	iorwf	___lmul@multiplier,w
  5416  0FC0  1D03               	skipz
  5417  0FC1  2FA4               	goto	l3355
  5418  0FC2  082F               	movf	___lmul@product+3,w
  5419  0FC3  00A7               	movwf	?___lmul+3
  5420  0FC4  082E               	movf	___lmul@product+2,w
  5421  0FC5  00A6               	movwf	?___lmul+2
  5422  0FC6  082D               	movf	___lmul@product+1,w
  5423  0FC7  00A5               	movwf	?___lmul+1
  5424  0FC8  082C               	movf	___lmul@product,w
  5425  0FC9  00A4               	movwf	?___lmul
  5426  0FCA  0008               	return
  5427  0FCB                     __end_of___lmul:	
  5428                           
  5429                           	psect	text9
  5430  071D                     __ptext9:	
  5431 ;; *************** function ___lldiv *****************
  5432 ;; Defined at:
  5433 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  divisor         4    0[BANK0 ] unsigned long 
  5436 ;;  dividend        4    4[BANK0 ] unsigned long 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  quotient        4    8[BANK0 ] unsigned long 
  5439 ;;  counter         1   12[BANK0 ] unsigned char 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  4    0[BANK0 ] unsigned long 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5449 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5452 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5453 ;;Total ram usage:       14 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    2
  5456 ;; This function calls:
  5457 ;;		Nothing
  5458 ;; This function is called by:
  5459 ;;		_Tmr_TmrBPrSet
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           
  5464                           ;psect for function ___lldiv
  5465  071D                     ___lldiv:	
  5466                           
  5467                           ;incstack = 0
  5468                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5469  071D  3000               	movlw	0
  5470  071E  0020               	movlb	0	; select bank0
  5471  071F  00AB               	movwf	___lldiv@quotient+3
  5472  0720  3000               	movlw	0
  5473  0721  00AA               	movwf	___lldiv@quotient+2
  5474  0722  3000               	movlw	0
  5475  0723  00A9               	movwf	___lldiv@quotient+1
  5476  0724  3000               	movlw	0
  5477  0725  00A8               	movwf	___lldiv@quotient
  5478  0726  0823               	movf	___lldiv@divisor+3,w
  5479  0727  0422               	iorwf	___lldiv@divisor+2,w
  5480  0728  0421               	iorwf	___lldiv@divisor+1,w
  5481  0729  0420               	iorwf	___lldiv@divisor,w
  5482  072A  1903               	skipnz
  5483  072B  2F67               	goto	l3387
  5484  072C  01AC               	clrf	___lldiv@counter
  5485  072D  0AAC               	incf	___lldiv@counter,f
  5486  072E                     l3373:	
  5487  072E  1BA3               	btfsc	___lldiv@divisor+3,7
  5488  072F  2F3C               	goto	l3375
  5489  0730  3001               	movlw	1
  5490  0731                     u2635:	
  5491  0731  35A0               	lslf	___lldiv@divisor,f
  5492  0732  0DA1               	rlf	___lldiv@divisor+1,f
  5493  0733  0DA2               	rlf	___lldiv@divisor+2,f
  5494  0734  0DA3               	rlf	___lldiv@divisor+3,f
  5495  0735  0B89               	decfsz	9,f
  5496  0736  2F31               	goto	u2635
  5497  0737  3001               	movlw	1
  5498  0738  00F4               	movwf	??___lldiv
  5499  0739  0874               	movf	??___lldiv,w
  5500  073A  07AC               	addwf	___lldiv@counter,f
  5501  073B  2F2E               	goto	l3373
  5502  073C                     l3375:	
  5503  073C  3001               	movlw	1
  5504  073D                     u2655:	
  5505  073D  35A8               	lslf	___lldiv@quotient,f
  5506  073E  0DA9               	rlf	___lldiv@quotient+1,f
  5507  073F  0DAA               	rlf	___lldiv@quotient+2,f
  5508  0740  0DAB               	rlf	___lldiv@quotient+3,f
  5509  0741  0B89               	decfsz	9,f
  5510  0742  2F3D               	goto	u2655
  5511  0743  0823               	movf	___lldiv@divisor+3,w
  5512  0744  0227               	subwf	___lldiv@dividend+3,w
  5513  0745  1D03               	skipz
  5514  0746  2F51               	goto	u2665
  5515  0747  0822               	movf	___lldiv@divisor+2,w
  5516  0748  0226               	subwf	___lldiv@dividend+2,w
  5517  0749  1D03               	skipz
  5518  074A  2F51               	goto	u2665
  5519  074B  0821               	movf	___lldiv@divisor+1,w
  5520  074C  0225               	subwf	___lldiv@dividend+1,w
  5521  074D  1D03               	skipz
  5522  074E  2F51               	goto	u2665
  5523  074F  0820               	movf	___lldiv@divisor,w
  5524  0750  0224               	subwf	___lldiv@dividend,w
  5525  0751                     u2665:	
  5526  0751  1C03               	skipc
  5527  0752  2F5C               	goto	l3383
  5528  0753  0820               	movf	___lldiv@divisor,w
  5529  0754  02A4               	subwf	___lldiv@dividend,f
  5530  0755  0821               	movf	___lldiv@divisor+1,w
  5531  0756  3BA5               	subwfb	___lldiv@dividend+1,f
  5532  0757  0822               	movf	___lldiv@divisor+2,w
  5533  0758  3BA6               	subwfb	___lldiv@dividend+2,f
  5534  0759  0823               	movf	___lldiv@divisor+3,w
  5535  075A  3BA7               	subwfb	___lldiv@dividend+3,f
  5536  075B  1428               	bsf	___lldiv@quotient,0
  5537  075C                     l3383:	
  5538  075C  3001               	movlw	1
  5539  075D                     u2675:	
  5540  075D  36A3               	lsrf	___lldiv@divisor+3,f
  5541  075E  0CA2               	rrf	___lldiv@divisor+2,f
  5542  075F  0CA1               	rrf	___lldiv@divisor+1,f
  5543  0760  0CA0               	rrf	___lldiv@divisor,f
  5544  0761  0B89               	decfsz	9,f
  5545  0762  2F5D               	goto	u2675
  5546  0763  3001               	movlw	1
  5547  0764  02AC               	subwf	___lldiv@counter,f
  5548  0765  1D03               	btfss	3,2
  5549  0766  2F3C               	goto	l3375
  5550  0767                     l3387:	
  5551  0767  082B               	movf	___lldiv@quotient+3,w
  5552  0768  00A3               	movwf	?___lldiv+3
  5553  0769  082A               	movf	___lldiv@quotient+2,w
  5554  076A  00A2               	movwf	?___lldiv+2
  5555  076B  0829               	movf	___lldiv@quotient+1,w
  5556  076C  00A1               	movwf	?___lldiv+1
  5557  076D  0828               	movf	___lldiv@quotient,w
  5558  076E  00A0               	movwf	?___lldiv
  5559  076F  0008               	return
  5560  0770                     __end_of___lldiv:	
  5561                           
  5562                           	psect	text10
  5563  0F1B                     __ptext10:	
  5564 ;; *************** function _Tmr_TmrBIrqSet *****************
  5565 ;; Defined at:
  5566 ;;		line 182 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;  TmrNumb         1    wreg     unsigned char 
  5569 ;;  TmrIrqSts       1    4[COMMON] unsigned char 
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;  TmrNumb         1    5[COMMON] unsigned char 
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1    wreg      void 
  5574 ;; Registers used:
  5575 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5581 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5584 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;Total ram usage:        2 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:    2
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_Tmr_TmrBConfig
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           
  5596                           ;psect for function _Tmr_TmrBIrqSet
  5597  0F1B                     _Tmr_TmrBIrqSet:	
  5598                           
  5599                           ;incstack = 0
  5600                           ; Regs used in _Tmr_TmrBIrqSet: [wreg-fsr0h+status,2+status,0]
  5601                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  5602  0F1B  00F5               	movwf	Tmr_TmrBIrqSet@TmrNumb
  5603                           
  5604                           ;tmr_drv.c: 185: switch (TmrNumb)
  5605  0F1C  2F38               	goto	l3529
  5606  0F1D                     l391:	
  5607                           ;tmr_drv.c: 186: {
  5608                           ;tmr_drv.c: 187: case ((UINT8)(2)):
  5609                           
  5610                           
  5611                           ;tmr_drv.c: 189: PIR1bits.TMR2IF = 0u;
  5612  0F1D  0020               	movlb	0	; select bank0
  5613  0F1E  1091               	bcf	17,1	;volatile
  5614                           
  5615                           ;tmr_drv.c: 191: PIE1bits.TMR2IE = TmrIrqSts;
  5616  0F1F  0C74               	rrf	Tmr_TmrBIrqSet@TmrIrqSts,w
  5617  0F20  0021               	movlb	1	; select bank1
  5618  0F21  1C03               	skipc
  5619  0F22  1091               	bcf	17,1	;volatile
  5620  0F23  1803               	skipnc
  5621  0F24  1491               	bsf	17,1	;volatile
  5622                           
  5623                           ;tmr_drv.c: 192: break;
  5624  0F25  0008               	return
  5625  0F26                     l393:	
  5626                           ;tmr_drv.c: 194: case ((UINT8)(4)):
  5627                           
  5628                           
  5629                           ;tmr_drv.c: 196: PIR3bits.TMR4IF = 0u;
  5630  0F26  0020               	movlb	0	; select bank0
  5631  0F27  1093               	bcf	19,1	;volatile
  5632                           
  5633                           ;tmr_drv.c: 198: PIE3bits.TMR4IE = TmrIrqSts;
  5634  0F28  0C74               	rrf	Tmr_TmrBIrqSet@TmrIrqSts,w
  5635  0F29  0021               	movlb	1	; select bank1
  5636  0F2A  1C03               	skipc
  5637  0F2B  1093               	bcf	19,1	;volatile
  5638  0F2C  1803               	skipnc
  5639  0F2D  1493               	bsf	19,1	;volatile
  5640                           
  5641                           ;tmr_drv.c: 199: break;
  5642  0F2E  0008               	return
  5643  0F2F                     l394:	
  5644                           ;tmr_drv.c: 201: case ((UINT8)(6)):
  5645                           
  5646                           
  5647                           ;tmr_drv.c: 203: PIR3bits.TMR6IF = 0u;
  5648  0F2F  0020               	movlb	0	; select bank0
  5649  0F30  1193               	bcf	19,3	;volatile
  5650                           
  5651                           ;tmr_drv.c: 205: PIE3bits.TMR6IE = TmrIrqSts;
  5652  0F31  0C74               	rrf	Tmr_TmrBIrqSet@TmrIrqSts,w
  5653  0F32  0021               	movlb	1	; select bank1
  5654  0F33  1C03               	skipc
  5655  0F34  1193               	bcf	19,3	;volatile
  5656  0F35  1803               	skipnc
  5657  0F36  1593               	bsf	19,3	;volatile
  5658                           
  5659                           ;tmr_drv.c: 210: }
  5660                           
  5661                           ;tmr_drv.c: 209: break;
  5662                           
  5663                           ;tmr_drv.c: 208: default:
  5664                           
  5665                           ;tmr_drv.c: 206: break;
  5666  0F37  0008               	return
  5667  0F38                     l3529:	
  5668  0F38  0875               	movf	Tmr_TmrBIrqSet@TmrNumb,w
  5669                           
  5670                           ; Switch size 1, requested type "space"
  5671                           ; Number of cases is 3, Range of values is 2 to 6
  5672                           ; switch strategies available:
  5673                           ; Name         Instructions Cycles
  5674                           ; simple_byte           10     6 (average)
  5675                           ; direct_byte           19     9 (fixed)
  5676                           ; jumptable            263     9 (fixed)
  5677                           ;	Chosen strategy is simple_byte
  5678  0F39  3A02               	xorlw	2	; case 2
  5679  0F3A  1903               	skipnz
  5680  0F3B  2F1D               	goto	l391
  5681  0F3C  3A06               	xorlw	6	; case 4
  5682  0F3D  1903               	skipnz
  5683  0F3E  2F26               	goto	l393
  5684  0F3F  3A02               	xorlw	2	; case 6
  5685  0F40  1903               	skipnz
  5686  0F41  2F2F               	goto	l394
  5687  0F42  2F43               	goto	l396
  5688  0F43                     l396:	
  5689  0F43  0008               	return
  5690  0F44                     __end_of_Tmr_TmrBIrqSet:	
  5691                           
  5692                           	psect	text11
  5693  0DBE                     __ptext11:	
  5694 ;; *************** function _Tmr_StartTmr *****************
  5695 ;; Defined at:
  5696 ;;		line 279 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  TmrNumb         1    wreg     unsigned char 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;  TmrNumb         1    4[COMMON] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5714 ;;Total ram usage:        1 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    2
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_Tmr_TmrBConfig
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           
  5725                           ;psect for function _Tmr_StartTmr
  5726  0DBE                     _Tmr_StartTmr:	
  5727                           
  5728                           ;incstack = 0
  5729                           ; Regs used in _Tmr_StartTmr: [wreg-fsr0h+status,2+status,0]
  5730                           ;Tmr_StartTmr@TmrNumb stored from wreg
  5731  0DBE  00F4               	movwf	Tmr_StartTmr@TmrNumb
  5732                           
  5733                           ;tmr_drv.c: 282: switch (TmrNumb)
  5734  0DBF  2DC9               	goto	l3559
  5735  0DC0                     l411:	
  5736                           ;tmr_drv.c: 283: {
  5737                           ;tmr_drv.c: 284: case ((UINT8)(2)):
  5738                           
  5739                           
  5740                           ;tmr_drv.c: 286: T2CONbits.TMR2ON = 1u;
  5741  0DC0  0020               	movlb	0	; select bank0
  5742  0DC1  151C               	bsf	28,2	;volatile
  5743                           
  5744                           ;tmr_drv.c: 287: break;
  5745  0DC2  0008               	return
  5746  0DC3                     l413:	
  5747                           ;tmr_drv.c: 289: case ((UINT8)(4)):
  5748                           
  5749                           
  5750                           ;tmr_drv.c: 291: T4CONbits.TMR4ON = 1u;
  5751  0DC3  0028               	movlb	8	; select bank8
  5752  0DC4  1517               	bsf	23,2	;volatile
  5753                           
  5754                           ;tmr_drv.c: 292: break;
  5755  0DC5  0008               	return
  5756  0DC6                     l414:	
  5757                           ;tmr_drv.c: 294: case ((UINT8)(6)):
  5758                           
  5759                           
  5760                           ;tmr_drv.c: 296: T6CONbits.TMR6ON = 1u;
  5761  0DC6  0028               	movlb	8	; select bank8
  5762  0DC7  151E               	bsf	30,2	;volatile
  5763                           
  5764                           ;tmr_drv.c: 301: }
  5765                           
  5766                           ;tmr_drv.c: 300: break;
  5767                           
  5768                           ;tmr_drv.c: 299: default:
  5769                           
  5770                           ;tmr_drv.c: 297: break;
  5771  0DC8  0008               	return
  5772  0DC9                     l3559:	
  5773  0DC9  0874               	movf	Tmr_StartTmr@TmrNumb,w
  5774                           
  5775                           ; Switch size 1, requested type "space"
  5776                           ; Number of cases is 3, Range of values is 2 to 6
  5777                           ; switch strategies available:
  5778                           ; Name         Instructions Cycles
  5779                           ; simple_byte           10     6 (average)
  5780                           ; direct_byte           19     9 (fixed)
  5781                           ; jumptable            263     9 (fixed)
  5782                           ;	Chosen strategy is simple_byte
  5783  0DCA  3A02               	xorlw	2	; case 2
  5784  0DCB  1903               	skipnz
  5785  0DCC  2DC0               	goto	l411
  5786  0DCD  3A06               	xorlw	6	; case 4
  5787  0DCE  1903               	skipnz
  5788  0DCF  2DC3               	goto	l413
  5789  0DD0  3A02               	xorlw	2	; case 6
  5790  0DD1  1903               	skipnz
  5791  0DD2  2DC6               	goto	l414
  5792  0DD3  2DD4               	goto	l416
  5793  0DD4                     l416:	
  5794  0DD4  0008               	return
  5795  0DD5                     __end_of_Tmr_StartTmr:	
  5796                           
  5797                           	psect	text12
  5798  0504                     __ptext12:	
  5799 ;; *************** function _TmrBInit *****************
  5800 ;; Defined at:
  5801 ;;		line 72 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  TmrNumb         1    wreg     unsigned char 
  5804 ;;  Prescaler       1    4[COMMON] unsigned char 
  5805 ;;  Postscaler      1    5[COMMON] unsigned char 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  TmrNumb         1    1[BANK0 ] unsigned char 
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      void 
  5810 ;; Registers used:
  5811 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5819 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;Total ram usage:        4 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    2
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		_Tmr_TmrBConfig
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           
  5832                           ;psect for function _TmrBInit
  5833  0504                     _TmrBInit:	
  5834                           
  5835                           ;incstack = 0
  5836                           ; Regs used in _TmrBInit: [wreg-fsr0h+status,2+status,0]
  5837                           ;TmrBInit@TmrNumb stored from wreg
  5838  0504  0020               	movlb	0	; select bank0
  5839  0505  00A1               	movwf	TmrBInit@TmrNumb
  5840                           
  5841                           ;tmr_drv.c: 75: switch (TmrNumb)
  5842  0506  2D72               	goto	l3517
  5843  0507                     l366:	
  5844                           ;tmr_drv.c: 80: {
  5845                           ;tmr_drv.c: 81: case ((UINT8)(1)):
  5846                           
  5847                           ;tmr_drv.c: 79: switch (Prescaler)
  5848                           
  5849                           ;tmr_drv.c: 76: {
  5850                           ;tmr_drv.c: 77: case ((UINT8)(2)):
  5851                           
  5852                           
  5853                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5854  0507  101C               	bcf	28,0	;volatile
  5855  0508  2D0A               	goto	L2
  5856  0509                     l368:	
  5857                           ;tmr_drv.c: 87: case ((UINT8)(4)):
  5858                           
  5859                           ;tmr_drv.c: 85: break;
  5860                           
  5861                           ;tmr_drv.c: 84: T2CONbits.T2CKPS1 = 0u;
  5862                           
  5863                           
  5864                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5865  0509  141C               	bsf	28,0	;volatile
  5866  050A                     L2:	
  5867                           
  5868                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5869  050A  109C               	bcf	28,1	;volatile
  5870                           
  5871                           ;tmr_drv.c: 91: break;
  5872  050B  2D1A               	goto	l3501
  5873  050C                     l369:	
  5874                           ;tmr_drv.c: 93: case ((UINT8)(16)):
  5875                           
  5876                           
  5877                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 0u;
  5878  050C  101C               	bcf	28,0	;volatile
  5879                           
  5880                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5881  050D  149C               	bsf	28,1	;volatile
  5882                           
  5883                           ;tmr_drv.c: 100: }
  5884                           
  5885                           ;tmr_drv.c: 99: break;
  5886                           
  5887                           ;tmr_drv.c: 98: default:
  5888                           
  5889                           ;tmr_drv.c: 96: break;
  5890  050E  2D1A               	goto	l3501
  5891  050F                     l3499:	
  5892  050F  0874               	movf	TmrBInit@Prescaler,w
  5893                           
  5894                           ; Switch size 1, requested type "space"
  5895                           ; Number of cases is 3, Range of values is 1 to 16
  5896                           ; switch strategies available:
  5897                           ; Name         Instructions Cycles
  5898                           ; simple_byte           10     6 (average)
  5899                           ; direct_byte           41     9 (fixed)
  5900                           ; jumptable            263     9 (fixed)
  5901                           ;	Chosen strategy is simple_byte
  5902  0510  3A01               	xorlw	1	; case 1
  5903  0511  1903               	skipnz
  5904  0512  2D07               	goto	l366
  5905  0513  3A05               	xorlw	5	; case 4
  5906  0514  1903               	skipnz
  5907  0515  2D09               	goto	l368
  5908  0516  3A14               	xorlw	20	; case 16
  5909  0517  1903               	skipnz
  5910  0518  2D0C               	goto	l369
  5911  0519  2D1A               	goto	l3501
  5912  051A                     l3501:	
  5913                           
  5914                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5915  051A  0875               	movf	TmrBInit@Postscaler,w
  5916  051B  3EFF               	addlw	255
  5917  051C  00A0               	movwf	??_TmrBInit
  5918  051D  0DA0               	rlf	??_TmrBInit,f
  5919  051E  0DA0               	rlf	??_TmrBInit,f
  5920  051F  0DA0               	rlf	??_TmrBInit,f
  5921  0520  081C               	movf	28,w	;volatile
  5922  0521  0620               	xorwf	??_TmrBInit,w
  5923  0522  3987               	andlw	-121
  5924  0523  0620               	xorwf	??_TmrBInit,w
  5925  0524  009C               	movwf	28	;volatile
  5926                           
  5927                           ;tmr_drv.c: 104: break;
  5928  0525  0008               	return
  5929  0526                     l374:	
  5930                           ;tmr_drv.c: 109: {
  5931                           ;tmr_drv.c: 110: case ((UINT8)(1)):
  5932                           
  5933                           ;tmr_drv.c: 108: switch (Prescaler)
  5934                           
  5935                           ;tmr_drv.c: 106: case ((UINT8)(4)):
  5936                           
  5937                           
  5938                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5939  0526  0028               	movlb	8	; select bank8
  5940  0527  1017               	bcf	23,0	;volatile
  5941  0528  2D2B               	goto	L3
  5942  0529                     l376:	
  5943                           ;tmr_drv.c: 116: case ((UINT8)(4)):
  5944                           
  5945                           ;tmr_drv.c: 114: break;
  5946                           
  5947                           ;tmr_drv.c: 113: T4CONbits.T4CKPS1 = 0u;
  5948                           
  5949                           
  5950                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5951  0529  0028               	movlb	8	; select bank8
  5952  052A  1417               	bsf	23,0	;volatile
  5953  052B                     L3:	
  5954                           
  5955                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5956  052B  1097               	bcf	23,1	;volatile
  5957                           
  5958                           ;tmr_drv.c: 120: break;
  5959  052C  2D3C               	goto	l3507
  5960  052D                     l377:	
  5961                           ;tmr_drv.c: 122: case ((UINT8)(16)):
  5962                           
  5963                           
  5964                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 0u;
  5965  052D  0028               	movlb	8	; select bank8
  5966  052E  1017               	bcf	23,0	;volatile
  5967                           
  5968                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5969  052F  1497               	bsf	23,1	;volatile
  5970                           
  5971                           ;tmr_drv.c: 129: }
  5972                           
  5973                           ;tmr_drv.c: 128: break;
  5974                           
  5975                           ;tmr_drv.c: 127: default:
  5976                           
  5977                           ;tmr_drv.c: 125: break;
  5978  0530  2D3C               	goto	l3507
  5979  0531                     l3505:	
  5980  0531  0874               	movf	TmrBInit@Prescaler,w
  5981                           
  5982                           ; Switch size 1, requested type "space"
  5983                           ; Number of cases is 3, Range of values is 1 to 16
  5984                           ; switch strategies available:
  5985                           ; Name         Instructions Cycles
  5986                           ; simple_byte           10     6 (average)
  5987                           ; direct_byte           41     9 (fixed)
  5988                           ; jumptable            263     9 (fixed)
  5989                           ;	Chosen strategy is simple_byte
  5990  0532  3A01               	xorlw	1	; case 1
  5991  0533  1903               	skipnz
  5992  0534  2D26               	goto	l374
  5993  0535  3A05               	xorlw	5	; case 4
  5994  0536  1903               	skipnz
  5995  0537  2D29               	goto	l376
  5996  0538  3A14               	xorlw	20	; case 16
  5997  0539  1903               	skipnz
  5998  053A  2D2D               	goto	l377
  5999  053B  2D3C               	goto	l3507
  6000  053C                     l3507:	
  6001                           
  6002                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  6003  053C  0875               	movf	TmrBInit@Postscaler,w
  6004  053D  3EFF               	addlw	255
  6005  053E  0020               	movlb	0	; select bank0
  6006  053F  00A0               	movwf	??_TmrBInit
  6007  0540  0DA0               	rlf	??_TmrBInit,f
  6008  0541  0DA0               	rlf	??_TmrBInit,f
  6009  0542  0DA0               	rlf	??_TmrBInit,f
  6010  0543  0028               	movlb	8	; select bank8
  6011  0544  0817               	movf	23,w	;volatile
  6012  0545  0020               	movlb	0	; select bank0
  6013  0546  0620               	xorwf	??_TmrBInit,w
  6014  0547  3987               	andlw	-121
  6015  0548  0620               	xorwf	??_TmrBInit,w
  6016  0549  0028               	movlb	8	; select bank8
  6017  054A  0097               	movwf	23	;volatile
  6018                           
  6019                           ;tmr_drv.c: 133: break;
  6020  054B  0008               	return
  6021  054C                     l381:	
  6022                           ;tmr_drv.c: 138: {
  6023                           ;tmr_drv.c: 139: case ((UINT8)(1)):
  6024                           
  6025                           ;tmr_drv.c: 137: switch (Prescaler)
  6026                           
  6027                           ;tmr_drv.c: 135: case ((UINT8)(6)):
  6028                           
  6029                           
  6030                           ;tmr_drv.c: 141: T6CONbits.T6CKPS0 = 0u;
  6031  054C  0028               	movlb	8	; select bank8
  6032  054D  101E               	bcf	30,0	;volatile
  6033  054E  2D51               	goto	L4
  6034  054F                     l383:	
  6035                           ;tmr_drv.c: 145: case ((UINT8)(4)):
  6036                           
  6037                           ;tmr_drv.c: 143: break;
  6038                           
  6039                           ;tmr_drv.c: 142: T6CONbits.T6CKPS1 = 0u;
  6040                           
  6041                           
  6042                           ;tmr_drv.c: 147: T6CONbits.T6CKPS0 = 1u;
  6043  054F  0028               	movlb	8	; select bank8
  6044  0550  141E               	bsf	30,0	;volatile
  6045  0551                     L4:	
  6046                           
  6047                           ;tmr_drv.c: 148: T6CONbits.T6CKPS1 = 0u;
  6048  0551  109E               	bcf	30,1	;volatile
  6049                           
  6050                           ;tmr_drv.c: 149: break;
  6051  0552  2D62               	goto	l3513
  6052  0553                     l384:	
  6053                           ;tmr_drv.c: 151: case ((UINT8)(16)):
  6054                           
  6055                           
  6056                           ;tmr_drv.c: 152: T6CONbits.T6CKPS0 = 0u;
  6057  0553  0028               	movlb	8	; select bank8
  6058  0554  101E               	bcf	30,0	;volatile
  6059                           
  6060                           ;tmr_drv.c: 153: T6CONbits.T6CKPS1 = 1u;
  6061  0555  149E               	bsf	30,1	;volatile
  6062                           
  6063                           ;tmr_drv.c: 158: }
  6064                           
  6065                           ;tmr_drv.c: 157: break;
  6066                           
  6067                           ;tmr_drv.c: 156: default:
  6068                           
  6069                           ;tmr_drv.c: 154: break;
  6070  0556  2D62               	goto	l3513
  6071  0557                     l3511:	
  6072  0557  0874               	movf	TmrBInit@Prescaler,w
  6073                           
  6074                           ; Switch size 1, requested type "space"
  6075                           ; Number of cases is 3, Range of values is 1 to 16
  6076                           ; switch strategies available:
  6077                           ; Name         Instructions Cycles
  6078                           ; simple_byte           10     6 (average)
  6079                           ; direct_byte           41     9 (fixed)
  6080                           ; jumptable            263     9 (fixed)
  6081                           ;	Chosen strategy is simple_byte
  6082  0558  3A01               	xorlw	1	; case 1
  6083  0559  1903               	skipnz
  6084  055A  2D4C               	goto	l381
  6085  055B  3A05               	xorlw	5	; case 4
  6086  055C  1903               	skipnz
  6087  055D  2D4F               	goto	l383
  6088  055E  3A14               	xorlw	20	; case 16
  6089  055F  1903               	skipnz
  6090  0560  2D53               	goto	l384
  6091  0561  2D62               	goto	l3513
  6092  0562                     l3513:	
  6093                           
  6094                           ;tmr_drv.c: 161: T6CONbits.T6OUTPS = (Postscaler - 1);
  6095  0562  0875               	movf	TmrBInit@Postscaler,w
  6096  0563  3EFF               	addlw	255
  6097  0564  0020               	movlb	0	; select bank0
  6098  0565  00A0               	movwf	??_TmrBInit
  6099  0566  0DA0               	rlf	??_TmrBInit,f
  6100  0567  0DA0               	rlf	??_TmrBInit,f
  6101  0568  0DA0               	rlf	??_TmrBInit,f
  6102  0569  0028               	movlb	8	; select bank8
  6103  056A  081E               	movf	30,w	;volatile
  6104  056B  0020               	movlb	0	; select bank0
  6105  056C  0620               	xorwf	??_TmrBInit,w
  6106  056D  3987               	andlw	-121
  6107  056E  0620               	xorwf	??_TmrBInit,w
  6108  056F  0028               	movlb	8	; select bank8
  6109  0570  009E               	movwf	30	;volatile
  6110                           
  6111                           ;tmr_drv.c: 166: }
  6112                           
  6113                           ;tmr_drv.c: 165: break;
  6114                           
  6115                           ;tmr_drv.c: 164: default:
  6116                           
  6117                           ;tmr_drv.c: 162: break;
  6118  0571  0008               	return
  6119  0572                     l3517:	
  6120  0572  0020               	movlb	0	; select bank0
  6121  0573  0821               	movf	TmrBInit@TmrNumb,w
  6122                           
  6123                           ; Switch size 1, requested type "space"
  6124                           ; Number of cases is 3, Range of values is 2 to 6
  6125                           ; switch strategies available:
  6126                           ; Name         Instructions Cycles
  6127                           ; simple_byte           10     6 (average)
  6128                           ; direct_byte           19     9 (fixed)
  6129                           ; jumptable            263     9 (fixed)
  6130                           ;	Chosen strategy is simple_byte
  6131  0574  3A02               	xorlw	2	; case 2
  6132  0575  1903               	skipnz
  6133  0576  2D0F               	goto	l3499
  6134  0577  3A06               	xorlw	6	; case 4
  6135  0578  1903               	skipnz
  6136  0579  2D31               	goto	l3505
  6137  057A  3A02               	xorlw	2	; case 6
  6138  057B  1903               	skipnz
  6139  057C  2D57               	goto	l3511
  6140  057D  2D7E               	goto	l387
  6141  057E                     l387:	
  6142  057E  0008               	return
  6143  057F                     __end_of_TmrBInit:	
  6144                           
  6145                           	psect	text13
  6146  0D70                     __ptext13:	
  6147 ;; *************** function _MainScheduler *****************
  6148 ;; Defined at:
  6149 ;;		line 79 in file "../../../../Framework/MercuryFwk/Source/c/02_Osl/os_sched.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;		None
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;Total ram usage:        0 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    9
  6170 ;; This function calls:
  6171 ;;		_InitializeTasks
  6172 ;;		_ScheduleTasks
  6173 ;; This function is called by:
  6174 ;;		_main
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           
  6179                           ;psect for function _MainScheduler
  6180  0D70                     _MainScheduler:	
  6181                           
  6182                           ;os_sched.c: 82: InitializeTasks();
  6183                           
  6184                           ;incstack = 0
  6185                           ; Regs used in _MainScheduler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6186  0D70  3187  27BB  318D   	fcall	_InitializeTasks
  6187                           
  6188                           ;os_sched.c: 84: SystemState = RunningState;
  6189  0D73  0020               	movlb	0	; select bank0
  6190  0D74  01DD               	clrf	_SystemState
  6191  0D75  0ADD               	incf	_SystemState,f
  6192  0D76                     l3835:	
  6193                           ;os_sched.c: 91: while(((UINT8)(1)))
  6194                           
  6195                           
  6196                           ;os_sched.c: 92: {
  6197                           ;os_sched.c: 94: if (MainSystemTimebaseFlag == CallTaskPhase)
  6198  0D76  0867               	movf	_MainSystemTimebaseFlag,w
  6199  0D77  1D03               	btfss	3,2
  6200  0D78  2D76               	goto	l3835
  6201                           
  6202                           ;os_sched.c: 95: {
  6203                           ;os_sched.c: 97: ScheduleTasks();
  6204  0D79  3182  226A  318D   	fcall	_ScheduleTasks
  6205                           
  6206                           ;os_sched.c: 99: MainSystemTimebaseFlag = WaitTriggerPhase;
  6207  0D7C  0020               	movlb	0	; select bank0
  6208  0D7D  01E7               	clrf	_MainSystemTimebaseFlag
  6209  0D7E  0AE7               	incf	_MainSystemTimebaseFlag,f
  6210  0D7F  2D76               	goto	l3835
  6211  0D80                     __end_of_MainScheduler:	
  6212                           
  6213                           	psect	text14
  6214  026A                     __ptext14:	
  6215 ;; *************** function _ScheduleTasks *****************
  6216 ;; Defined at:
  6217 ;;		line 130 in file "../../../../Framework/MercuryFwk/Source/c/02_Osl/os_sched.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;		None
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;  ActiveTaskIn    1    0[BANK1 ] unsigned char 
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  1    wreg      void 
  6224 ;; Registers used:
  6225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;      Totals:         0       6       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;Total ram usage:        7 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; Hardware stack levels required when called:    8
  6238 ;; This function calls:
  6239 ;;		_App_MainTask
  6240 ;;		_I2cSlv_MainTask
  6241 ;;		_I2c_DataReceiveSm
  6242 ;;		_Led_MainTask
  6243 ;;		_Wdg_MainTask
  6244 ;; This function is called by:
  6245 ;;		_MainScheduler
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           
  6250                           ;psect for function _ScheduleTasks
  6251  026A                     _ScheduleTasks:	
  6252                           
  6253                           ;os_sched.c: 133: UINT8 ActiveTaskIndex = 0u;
  6254                           
  6255                           ;incstack = 0
  6256                           ; Regs used in _ScheduleTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6257  026A  0021               	movlb	1	; select bank1
  6258  026B  01DF               	clrf	ScheduleTasks@ActiveTaskIndex^(0+128)
  6259                           
  6260                           ;os_sched.c: 136: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  6261  026C  01DF               	clrf	ScheduleTasks@ActiveTaskIndex^(0+128)
  6262  026D  300A               	movlw	low (_TaskNumber| (0+32768))
  6263  026E  0084               	movwf	4
  6264  026F  3090               	movlw	high (_TaskNumber| (0+32768))
  6265  0270  0085               	movwf	5
  6266  0271  3F00               	moviw [0]fsr0
  6267  0272  0020               	movlb	0	; select bank0
  6268  0273  00C4               	movwf	??_ScheduleTasks
  6269  0274  3F01               	moviw [1]fsr0
  6270  0275                     L5:	
  6271  0275  00C5               	movwf	??_ScheduleTasks+1
  6272  0276  0021               	movlb	1	; select bank1
  6273  0277  085F               	movf	ScheduleTasks@ActiveTaskIndex^(0+128),w
  6274  0278  0020               	movlb	0	; select bank0
  6275  0279  00C6               	movwf	??_ScheduleTasks+2
  6276  027A  01C7               	clrf	??_ScheduleTasks+3
  6277  027B  0845               	movf	??_ScheduleTasks+1,w
  6278  027C  0247               	subwf	??_ScheduleTasks+3,w
  6279  027D  1D03               	skipz
  6280  027E  2A81               	goto	u3135
  6281  027F  0844               	movf	??_ScheduleTasks,w
  6282  0280  0246               	subwf	??_ScheduleTasks+2,w
  6283  0281                     u3135:	
  6284  0281  1803               	btfsc	3,0
  6285  0282  0008               	return
  6286                           
  6287                           ;os_sched.c: 137: {
  6288                           ;os_sched.c: 138: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((UINT16)(1))))
  6289  0283  0021               	movlb	1	; select bank1
  6290  0284  085F               	movf	ScheduleTasks@ActiveTaskIndex^(0+128),w
  6291  0285  0020               	movlb	0	; select bank0
  6292  0286  00C4               	movwf	??_ScheduleTasks
  6293  0287  3002               	movlw	2
  6294  0288                     u3145:	
  6295  0288  35C4               	lslf	??_ScheduleTasks,f
  6296  0289  3EFF               	addlw	-1
  6297  028A  1D03               	skipz
  6298  028B  2A88               	goto	u3145
  6299  028C  3544               	lslf	??_ScheduleTasks,w
  6300  028D  3E05               	addlw	5
  6301  028E  3EA0               	addlw	(low (_TaskTable| 0))& (0+255)
  6302  028F  0086               	movwf	6
  6303  0290  0187               	clrf	7
  6304  0291  3F40               	moviw [0]fsr1
  6305  0292  00C5               	movwf	??_ScheduleTasks+1
  6306  0293  3F41               	moviw [1]fsr1
  6307  0294  00C6               	movwf	??_ScheduleTasks+2
  6308  0295  0021               	movlb	1	; select bank1
  6309  0296  085F               	movf	ScheduleTasks@ActiveTaskIndex^(0+128),w
  6310  0297  0020               	movlb	0	; select bank0
  6311  0298  00C7               	movwf	??_ScheduleTasks+3
  6312  0299  3002               	movlw	2
  6313  029A                     u3155:	
  6314  029A  35C7               	lslf	??_ScheduleTasks+3,f
  6315  029B  3EFF               	addlw	-1
  6316  029C  1D03               	skipz
  6317  029D  2A9A               	goto	u3155
  6318  029E  3547               	lslf	??_ScheduleTasks+3,w
  6319  029F  3E03               	addlw	3
  6320  02A0  3EA0               	addlw	(low (_TaskTable| 0))& (0+255)
  6321  02A1  0086               	movwf	6
  6322  02A2  0187               	clrf	7
  6323  02A3  3F40               	moviw [0]fsr1
  6324  02A4  00C8               	movwf	??_ScheduleTasks+4
  6325  02A5  3F41               	moviw [1]fsr1
  6326  02A6  00C9               	movwf	??_ScheduleTasks+5
  6327  02A7  0846               	movf	??_ScheduleTasks+2,w
  6328  02A8  0249               	subwf	??_ScheduleTasks+5,w
  6329  02A9  1D03               	skipz
  6330  02AA  2AAD               	goto	u3165
  6331  02AB  0845               	movf	??_ScheduleTasks+1,w
  6332  02AC  0248               	subwf	??_ScheduleTasks+4,w
  6333  02AD                     u3165:	
  6334  02AD  1C03               	skipc
  6335  02AE  2AF5               	goto	l3819
  6336                           
  6337                           ;os_sched.c: 139: {
  6338                           ;os_sched.c: 140: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  6339  02AF  0021               	movlb	1	; select bank1
  6340  02B0  085F               	movf	ScheduleTasks@ActiveTaskIndex^(0+128),w
  6341  02B1  0020               	movlb	0	; select bank0
  6342  02B2  00C4               	movwf	??_ScheduleTasks
  6343  02B3  3002               	movlw	2
  6344  02B4                     u3175:	
  6345  02B4  35C4               	lslf	??_ScheduleTasks,f
  6346  02B5  3EFF               	addlw	-1
  6347  02B6  1D03               	skipz
  6348  02B7  2AB4               	goto	u3175
  6349  02B8  3544               	lslf	??_ScheduleTasks,w
  6350  02B9  3E03               	addlw	3
  6351  02BA  3EA0               	addlw	(low (_TaskTable| 0))& (0+255)
  6352  02BB  0086               	movwf	6
  6353  02BC  0187               	clrf	7
  6354  02BD  3000               	movlw	0
  6355  02BE  3FC0               	movwi [0]fsr1
  6356  02BF  3FC1               	movwi [1]fsr1
  6357                           
  6358                           ;os_sched.c: 141: TaskTable[ActiveTaskIndex].State = TaskRunning;
  6359  02C0  0021               	movlb	1	; select bank1
  6360  02C1  085F               	movf	ScheduleTasks@ActiveTaskIndex^(0+128),w
  6361  02C2  0020               	movlb	0	; select bank0
  6362  02C3  00C4               	movwf	??_ScheduleTasks
  6363  02C4  3002               	movlw	2
  6364  02C5                     u3185:	
  6365  02C5  35C4               	lslf	??_ScheduleTasks,f
  6366  02C6  3EFF               	addlw	-1
  6367  02C7  1D03               	skipz
  6368  02C8  2AC5               	goto	u3185
  6369  02C9  3544               	lslf	??_ScheduleTasks,w
  6370  02CA  3E02               	addlw	2
  6371  02CB  3EA0               	addlw	(low (_TaskTable| 0))& (0+255)
  6372  02CC  0086               	movwf	6
  6373  02CD  0187               	clrf	7
  6374  02CE  0181               	clrf	1
  6375  02CF  0A81               	incf	1,f
  6376                           
  6377                           ;os_sched.c: 142: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  6378  02D0  0021               	movlb	1	; select bank1
  6379  02D1  085F               	movf	ScheduleTasks@ActiveTaskIndex^(0+128),w
  6380  02D2  0020               	movlb	0	; select bank0
  6381  02D3  00C4               	movwf	??_ScheduleTasks
  6382  02D4  3002               	movlw	2
  6383  02D5                     u3195:	
  6384  02D5  35C4               	lslf	??_ScheduleTasks,f
  6385  02D6  3EFF               	addlw	-1
  6386  02D7  1D03               	skipz
  6387  02D8  2AD5               	goto	u3195
  6388  02D9  3544               	lslf	??_ScheduleTasks,w
  6389  02DA  3E07               	addlw	7
  6390  02DB  3EA0               	addlw	(low (_TaskTable| 0))& (0+255)
  6391  02DC  0086               	movwf	6
  6392  02DD  0187               	clrf	7
  6393  02DE  0801               	movf	1,w
  6394  02DF  00C5               	movwf	??_ScheduleTasks+1
  6395  02E0  0845               	movf	??_ScheduleTasks+1,w
  6396  02E1  00BB               	movwf	Led_MainTask@Options
  6397  02E2  0021               	movlb	1	; select bank1
  6398  02E3  085F               	movf	ScheduleTasks@ActiveTaskIndex^(0+128),w
  6399  02E4  0020               	movlb	0	; select bank0
  6400  02E5  00C6               	movwf	??_ScheduleTasks+2
  6401  02E6  3002               	movlw	2
  6402  02E7                     u3205:	
  6403  02E7  35C6               	lslf	??_ScheduleTasks+2,f
  6404  02E8  3EFF               	addlw	-1
  6405  02E9  1D03               	skipz
  6406  02EA  2AE7               	goto	u3205
  6407  02EB  3546               	lslf	??_ScheduleTasks+2,w
  6408  02EC  3EA0               	addlw	(low (_TaskTable| 0))& (0+255)
  6409  02ED  0086               	movwf	6
  6410  02EE  0187               	clrf	7
  6411  02EF  3F41               	moviw [1]fsr1
  6412  02F0  008A               	movwf	10
  6413  02F1  3F40               	moviw [0]fsr1
  6414  02F2  000A               	callw
  6415  02F3  3182               	pagesel	$
  6416                           
  6417                           ;os_sched.c: 143: }
  6418  02F4  2B17               	goto	l3821
  6419  02F5                     l3819:	
  6420                           
  6421                           ;os_sched.c: 144: else
  6422                           ;os_sched.c: 145: {
  6423                           ;os_sched.c: 146: TaskTable[ActiveTaskIndex].Counter++;
  6424  02F5  0021               	movlb	1	; select bank1
  6425  02F6  085F               	movf	ScheduleTasks@ActiveTaskIndex^(0+128),w
  6426  02F7  0020               	movlb	0	; select bank0
  6427  02F8  00C4               	movwf	??_ScheduleTasks
  6428  02F9  3002               	movlw	2
  6429  02FA                     u3215:	
  6430  02FA  35C4               	lslf	??_ScheduleTasks,f
  6431  02FB  3EFF               	addlw	-1
  6432  02FC  1D03               	skipz
  6433  02FD  2AFA               	goto	u3215
  6434  02FE  3544               	lslf	??_ScheduleTasks,w
  6435  02FF  3E03               	addlw	3
  6436  0300  3EA0               	addlw	(low (_TaskTable| 0))& (0+255)
  6437  0301  0086               	movwf	6
  6438  0302  0187               	clrf	7
  6439  0303  3001               	movlw	1
  6440  0304  0781               	addwf	1,f
  6441  0305  3141               	addfsr 1,1
  6442  0306  1803               	skipnc
  6443  0307  0A81               	incf	1,f
  6444                           
  6445                           ;os_sched.c: 147: TaskTable[ActiveTaskIndex].State = TaskIdle;
  6446  0308  0021               	movlb	1	; select bank1
  6447  0309  085F               	movf	ScheduleTasks@ActiveTaskIndex^(0+128),w
  6448  030A  0020               	movlb	0	; select bank0
  6449  030B  00C4               	movwf	??_ScheduleTasks
  6450  030C  3002               	movlw	2
  6451  030D                     u3225:	
  6452  030D  35C4               	lslf	??_ScheduleTasks,f
  6453  030E  3EFF               	addlw	-1
  6454  030F  1D03               	skipz
  6455  0310  2B0D               	goto	u3225
  6456  0311  3544               	lslf	??_ScheduleTasks,w
  6457  0312  3E02               	addlw	2
  6458  0313  3EA0               	addlw	(low (_TaskTable| 0))& (0+255)
  6459  0314  0086               	movwf	6
  6460  0315  0187               	clrf	7
  6461  0316  0181               	clrf	1
  6462  0317                     l3821:	
  6463  0317  3001               	movlw	1
  6464  0318  0020               	movlb	0	; select bank0
  6465  0319  00C4               	movwf	??_ScheduleTasks
  6466  031A  0844               	movf	??_ScheduleTasks,w
  6467  031B  0021               	movlb	1	; select bank1
  6468  031C  07DF               	addwf	ScheduleTasks@ActiveTaskIndex^(0+128),f
  6469  031D  300A               	movlw	low (_TaskNumber| (0+32768))
  6470  031E  0084               	movwf	4
  6471  031F  3090               	movlw	high (_TaskNumber| (0+32768))
  6472  0320  0085               	movwf	5
  6473  0321  3F00               	moviw [0]fsr0
  6474  0322  0020               	movlb	0	; select bank0
  6475  0323  00C4               	movwf	??_ScheduleTasks
  6476  0324  3F01               	moviw [1]fsr0
  6477  0325  2A75               	goto	L5
  6478  0326                     __end_of_ScheduleTasks:	
  6479                           
  6480                           	psect	text15
  6481  07BB                     __ptext15:	
  6482 ;; *************** function _InitializeTasks *****************
  6483 ;; Defined at:
  6484 ;;		line 111 in file "../../../../Framework/MercuryFwk/Source/c/02_Osl/os_sched.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;  ActiveTaskIn    1   40[BANK0 ] unsigned char 
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  1    wreg      void 
  6491 ;; Registers used:
  6492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6500 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6501 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6502 ;;Total ram usage:        5 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    8
  6505 ;; This function calls:
  6506 ;;		_App_MainTask
  6507 ;;		_I2cSlv_MainTask
  6508 ;;		_I2c_DataReceiveSm
  6509 ;;		_Led_MainTask
  6510 ;;		_Wdg_MainTask
  6511 ;; This function is called by:
  6512 ;;		_MainScheduler
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           
  6517                           ;psect for function _InitializeTasks
  6518  07BB                     _InitializeTasks:	
  6519                           
  6520                           ;os_sched.c: 114: UINT8 ActiveTaskIndex = 0u;
  6521                           
  6522                           ;incstack = 0
  6523                           ; Regs used in _InitializeTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6524  07BB  0020               	movlb	0	; select bank0
  6525  07BC  01C8               	clrf	InitializeTasks@ActiveTaskIndex
  6526                           
  6527                           ;os_sched.c: 117: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  6528  07BD  01C8               	clrf	InitializeTasks@ActiveTaskIndex
  6529  07BE  300A               	movlw	low (_TaskNumber| (0+32768))
  6530  07BF  0084               	movwf	4
  6531  07C0  3090               	movlw	high (_TaskNumber| (0+32768))
  6532  07C1  0085               	movwf	5
  6533  07C2  3F00               	moviw [0]fsr0
  6534  07C3  00C4               	movwf	??_InitializeTasks
  6535  07C4  3F01               	moviw [1]fsr0
  6536  07C5                     L6:	
  6537  07C5  00C5               	movwf	??_InitializeTasks+1
  6538  07C6  0848               	movf	InitializeTasks@ActiveTaskIndex,w
  6539  07C7  00C6               	movwf	??_InitializeTasks+2
  6540  07C8  01C7               	clrf	??_InitializeTasks+3
  6541  07C9  0845               	movf	??_InitializeTasks+1,w
  6542  07CA  0247               	subwf	??_InitializeTasks+3,w
  6543  07CB  1D03               	skipz
  6544  07CC  2FCF               	goto	u3095
  6545  07CD  0844               	movf	??_InitializeTasks,w
  6546  07CE  0246               	subwf	??_InitializeTasks+2,w
  6547  07CF                     u3095:	
  6548  07CF  1803               	btfsc	3,0
  6549  07D0  0008               	return
  6550                           
  6551                           ;os_sched.c: 118: {
  6552                           ;os_sched.c: 119: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  6553  07D1  0848               	movf	InitializeTasks@ActiveTaskIndex,w
  6554  07D2  00C4               	movwf	??_InitializeTasks
  6555  07D3  3002               	movlw	2
  6556  07D4                     u3105:	
  6557  07D4  35C4               	lslf	??_InitializeTasks,f
  6558  07D5  3EFF               	addlw	-1
  6559  07D6  1D03               	skipz
  6560  07D7  2FD4               	goto	u3105
  6561  07D8  3544               	lslf	??_InitializeTasks,w
  6562  07D9  3E07               	addlw	7
  6563  07DA  3EA0               	addlw	(low (_TaskTable| 0))& (0+255)
  6564  07DB  0086               	movwf	6
  6565  07DC  0187               	clrf	7
  6566  07DD  0801               	movf	1,w
  6567  07DE  00C5               	movwf	??_InitializeTasks+1
  6568  07DF  0845               	movf	??_InitializeTasks+1,w
  6569  07E0  00BB               	movwf	Led_MainTask@Options
  6570  07E1  0848               	movf	InitializeTasks@ActiveTaskIndex,w
  6571  07E2  00C6               	movwf	??_InitializeTasks+2
  6572  07E3  3002               	movlw	2
  6573  07E4                     u3115:	
  6574  07E4  35C6               	lslf	??_InitializeTasks+2,f
  6575  07E5  3EFF               	addlw	-1
  6576  07E6  1D03               	skipz
  6577  07E7  2FE4               	goto	u3115
  6578  07E8  3546               	lslf	??_InitializeTasks+2,w
  6579  07E9  3EA0               	addlw	(low (_TaskTable| 0))& (0+255)
  6580  07EA  0086               	movwf	6
  6581  07EB  0187               	clrf	7
  6582  07EC  3F41               	moviw [1]fsr1
  6583  07ED  008A               	movwf	10
  6584  07EE  3F40               	moviw [0]fsr1
  6585  07EF  000A               	callw
  6586  07F0  3187               	pagesel	$
  6587  07F1  3001               	movlw	1
  6588  07F2  0020               	movlb	0	; select bank0
  6589  07F3  00C4               	movwf	??_InitializeTasks
  6590  07F4  0844               	movf	??_InitializeTasks,w
  6591  07F5  07C8               	addwf	InitializeTasks@ActiveTaskIndex,f
  6592  07F6  300A               	movlw	low (_TaskNumber| (0+32768))
  6593  07F7  0084               	movwf	4
  6594  07F8  3090               	movlw	high (_TaskNumber| (0+32768))
  6595  07F9  0085               	movwf	5
  6596  07FA  3F00               	moviw [0]fsr0
  6597  07FB  00C4               	movwf	??_InitializeTasks
  6598  07FC  3F01               	moviw [1]fsr0
  6599  07FD  2FC5               	goto	L6
  6600  07FE                     __end_of_InitializeTasks:	
  6601                           
  6602                           	psect	text16
  6603  0ECB                     __ptext16:	
  6604 ;; *************** function _Led_MainTask *****************
  6605 ;; Defined at:
  6606 ;;		line 76 in file "../../../../Framework/MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  Options         1   27[BANK0 ] unsigned char 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;		None
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  1    wreg      void 
  6613 ;; Registers used:
  6614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6620 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;Total ram usage:        2 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    3
  6627 ;; This function calls:
  6628 ;;		_LedBlinkStateMachine
  6629 ;; This function is called by:
  6630 ;;		_InitializeTasks
  6631 ;;		_ScheduleTasks
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           
  6636                           ;psect for function _Led_MainTask
  6637  0ECB                     _Led_MainTask:	
  6638                           
  6639                           ;led.c: 78: switch (SystemState)
  6640                           
  6641                           ;incstack = 0
  6642                           ; Regs used in _Led_MainTask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6643  0ECB  2EE9               	goto	l3775
  6644  0ECC                     l628:	
  6645                           ;led.c: 79: {
  6646                           ;led.c: 81: case InitializationState:
  6647                           
  6648                           
  6649                           ;led.c: 83: TRISCbits.TRISC2 = ((UINT8)(0));
  6650  0ECC  0021               	movlb	1	; select bank1
  6651  0ECD  110E               	bcf	14,2	;volatile
  6652                           
  6653                           ;led.c: 84: LATCbits.LATC2 = ((UINT8)(0));
  6654  0ECE  0022               	movlb	2	; select bank2
  6655  0ECF  110E               	bcf	14,2	;volatile
  6656                           
  6657                           ;led.c: 85: break;
  6658  0ED0  0008               	return
  6659  0ED1                     l3769:	
  6660                           ;led.c: 88: case RunningState:
  6661                           
  6662                           
  6663                           ;led.c: 90: if (LedBlinkSts == ((UINT8)(1)))
  6664  0ED1  0020               	movlb	0	; select bank0
  6665  0ED2  0366               	decf	_LedBlinkSts,w
  6666  0ED3  1D03               	btfss	3,2
  6667  0ED4  2EE6               	goto	l631
  6668                           
  6669                           ;led.c: 91: {
  6670                           ;led.c: 93: LATCbits.LATC2 = LedBlinkStateMachine(&Led1,OffState);
  6671  0ED5  01F4               	clrf	LedBlinkStateMachine@LedInitStatus
  6672  0ED6  3068               	movlw	(low (_Led1| 0))& (0+255)
  6673  0ED7  3184  2488         	fcall	_LedBlinkStateMachine
  6674  0ED9  0020               	movlb	0	; select bank0
  6675  0EDA  00BC               	movwf	??_Led_MainTask
  6676  0EDB  0DBC               	rlf	??_Led_MainTask,f
  6677  0EDC  0DBC               	rlf	??_Led_MainTask,f
  6678  0EDD  0022               	movlb	2	; select bank2
  6679  0EDE  080E               	movf	14,w	;volatile
  6680  0EDF  0020               	movlb	0	; select bank0
  6681  0EE0  063C               	xorwf	??_Led_MainTask,w
  6682  0EE1  39FB               	andlw	-5
  6683  0EE2  063C               	xorwf	??_Led_MainTask,w
  6684  0EE3  0022               	movlb	2	; select bank2
  6685  0EE4  008E               	movwf	14	;volatile
  6686                           
  6687                           ;led.c: 94: }
  6688  0EE5  0008               	return
  6689  0EE6                     l631:	
  6690                           
  6691                           ;led.c: 95: else
  6692                           ;led.c: 96: {
  6693                           ;led.c: 98: LATCbits.LATC2 = ((UINT8)(0));
  6694  0EE6  0022               	movlb	2	; select bank2
  6695  0EE7  110E               	bcf	14,2	;volatile
  6696                           
  6697                           ;led.c: 105: }
  6698                           
  6699                           ;led.c: 104: break;
  6700                           
  6701                           ;led.c: 103: default:
  6702                           
  6703                           ;led.c: 99: }
  6704                           ;led.c: 100: break;
  6705  0EE8  0008               	return
  6706  0EE9                     l3775:	
  6707  0EE9  0020               	movlb	0	; select bank0
  6708  0EEA  085D               	movf	_SystemState,w
  6709                           
  6710                           ; Switch size 1, requested type "space"
  6711                           ; Number of cases is 2, Range of values is 0 to 1
  6712                           ; switch strategies available:
  6713                           ; Name         Instructions Cycles
  6714                           ; simple_byte            7     4 (average)
  6715                           ; direct_byte           10     6 (fixed)
  6716                           ; jumptable            260     6 (fixed)
  6717                           ;	Chosen strategy is simple_byte
  6718  0EEB  3A00               	xorlw	0	; case 0
  6719  0EEC  1903               	skipnz
  6720  0EED  2ECC               	goto	l628
  6721  0EEE  3A01               	xorlw	1	; case 1
  6722  0EEF  1903               	skipnz
  6723  0EF0  2ED1               	goto	l3769
  6724  0EF1  2EF2               	goto	l634
  6725  0EF2                     l634:	
  6726  0EF2  0008               	return
  6727  0EF3                     __end_of_Led_MainTask:	
  6728                           
  6729                           	psect	text17
  6730  0D93                     __ptext17:	
  6731 ;; *************** function _I2cSlv_MainTask *****************
  6732 ;; Defined at:
  6733 ;;		line 109 in file "../../../../Framework/MercuryFwk/Source/c/03_Sml/01_Pml/01_SlvI2c/i2c_slv.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;  Options         1   27[BANK0 ] unsigned char 
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;		None
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  1    wreg      void 
  6740 ;; Registers used:
  6741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6747 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6750 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6751 ;;Total ram usage:        1 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:    4
  6754 ;; This function calls:
  6755 ;;		_I2cSlv_I2cDrvHandle
  6756 ;;		_I2c_InitI2cModule
  6757 ;;		_I2c_SetConfig
  6758 ;; This function is called by:
  6759 ;;		_InitializeTasks
  6760 ;;		_ScheduleTasks
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           
  6765                           ;psect for function _I2cSlv_MainTask
  6766  0D93                     _I2cSlv_MainTask:	
  6767                           
  6768                           ;i2c_slv.c: 111: switch (SystemState)
  6769                           
  6770                           ;incstack = 0
  6771                           ; Regs used in _I2cSlv_MainTask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6772  0D93  2D9E               	goto	l3765
  6773  0D94                     l3757:	
  6774                           ;i2c_slv.c: 112: {
  6775                           ;i2c_slv.c: 114: case InitializationState:
  6776                           
  6777                           
  6778                           ;i2c_slv.c: 116: I2c_SetConfig();
  6779  0D94  318D  2580  318D   	fcall	_I2c_SetConfig
  6780                           
  6781                           ;i2c_slv.c: 118: I2c_InitI2cModule(&I2cConfig);
  6782  0D97  30D4               	movlw	(low (_I2cConfig| 0))& (0+255)
  6783  0D98  3183  23DC         	fcall	_I2c_InitI2cModule
  6784                           
  6785                           ;i2c_slv.c: 119: break;
  6786  0D9A  0008               	return
  6787  0D9B                     l3761:	
  6788                           ;i2c_slv.c: 122: case RunningState:
  6789                           
  6790                           
  6791                           ;i2c_slv.c: 124: I2cSlv_I2cDrvHandle();
  6792  0D9B  3185  257F         	fcall	_I2cSlv_I2cDrvHandle
  6793                           
  6794                           ;i2c_slv.c: 130: }
  6795                           
  6796                           ;i2c_slv.c: 129: break;
  6797                           
  6798                           ;i2c_slv.c: 128: default:
  6799                           
  6800                           ;i2c_slv.c: 125: break;
  6801  0D9D  0008               	return
  6802  0D9E                     l3765:	
  6803  0D9E  0020               	movlb	0	; select bank0
  6804  0D9F  085D               	movf	_SystemState,w
  6805                           
  6806                           ; Switch size 1, requested type "space"
  6807                           ; Number of cases is 2, Range of values is 0 to 1
  6808                           ; switch strategies available:
  6809                           ; Name         Instructions Cycles
  6810                           ; simple_byte            7     4 (average)
  6811                           ; direct_byte           10     6 (fixed)
  6812                           ; jumptable            260     6 (fixed)
  6813                           ;	Chosen strategy is simple_byte
  6814  0DA0  3A00               	xorlw	0	; case 0
  6815  0DA1  1903               	skipnz
  6816  0DA2  2D94               	goto	l3757
  6817  0DA3  3A01               	xorlw	1	; case 1
  6818  0DA4  1903               	skipnz
  6819  0DA5  2D9B               	goto	l3761
  6820  0DA6  2DA7               	goto	l584
  6821  0DA7                     l584:	
  6822  0DA7  0008               	return
  6823  0DA8                     __end_of_I2cSlv_MainTask:	
  6824                           
  6825                           	psect	text18
  6826  0188                     __ptext18:	
  6827 ;; *************** function _I2c_DataReceiveSm *****************
  6828 ;; Defined at:
  6829 ;;		line 297 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/i2c_slv_drv.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  Options         1   27[BANK0 ] unsigned char 
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;  Index           1   35[BANK0 ] unsigned char 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  1    wreg      void 
  6836 ;; Registers used:
  6837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6843 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6844 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6845 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6846 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6847 ;;Total ram usage:        9 bytes
  6848 ;; Hardware stack levels used:    1
  6849 ;; Hardware stack levels required when called:    3
  6850 ;; This function calls:
  6851 ;;		_CheckAckStatus
  6852 ;;		_CheckByteStatus
  6853 ;;		_CheckStopBitStatus
  6854 ;;		_ClearRxBuffer
  6855 ;;		_ClearTxBuffer
  6856 ;;		_GenerateEvt
  6857 ;;		_ReceiveEvt
  6858 ;; This function is called by:
  6859 ;;		_InitializeTasks
  6860 ;;		_ScheduleTasks
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           
  6865                           ;psect for function _I2c_DataReceiveSm
  6866  0188                     _I2c_DataReceiveSm:	
  6867                           
  6868                           ;i2c_slv_drv.c: 300: static I2cRxStateType I2cRxState = CheckRxByte;
  6869                           ;i2c_slv_drv.c: 301: static UINT8 I2cRxAddress;
  6870                           ;i2c_slv_drv.c: 302: static UINT8 I2cRxFlag = ((UINT8)(0));
  6871                           ;i2c_slv_drv.c: 303: static UINT8 OpType;
  6872                           ;i2c_slv_drv.c: 304: static UINT8 RxCounter = 0;
  6873                           ;i2c_slv_drv.c: 305: static UINT8 TxCounter = 0;
  6874                           ;i2c_slv_drv.c: 306: UINT8 Index;
  6875                           ;i2c_slv_drv.c: 308: switch (I2cRxState)
  6876                           
  6877                           ;incstack = 0
  6878                           ; Regs used in _I2c_DataReceiveSm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6879  0188  2A5E               	goto	l3749
  6880  0189                     l3673:	
  6881                           ;i2c_slv_drv.c: 309: {
  6882                           ;i2c_slv_drv.c: 310: case CheckRxByte:
  6883                           
  6884                           
  6885                           ;i2c_slv_drv.c: 312: if (ReceiveEvt(&I2cNewTxNotification))
  6886  0189  3060               	movlw	(low (_I2cNewTxNotification| 0))& (0+255)
  6887  018A  318E  2665  3181   	fcall	_ReceiveEvt
  6888  018D  3A00               	xorlw	0
  6889  018E  1903               	skipnz
  6890  018F  0008               	return
  6891                           
  6892                           ;i2c_slv_drv.c: 313: {
  6893                           ;i2c_slv_drv.c: 315: if (CheckByteStatus() == ((UINT8)(0)))
  6894  0190  318C  24DB  3181   	fcall	_CheckByteStatus
  6895  0193  3A00               	xorlw	0
  6896  0194  1D03               	skipz
  6897  0195  299C               	goto	l3679
  6898                           
  6899                           ;i2c_slv_drv.c: 316: {
  6900                           ;i2c_slv_drv.c: 318: I2cRxFlag = ((UINT8)(1));
  6901  0196  0020               	movlb	0	; select bank0
  6902  0197  01D8               	clrf	I2c_DataReceiveSm@I2cRxFlag
  6903  0198  0AD8               	incf	I2c_DataReceiveSm@I2cRxFlag,f
  6904                           
  6905                           ;i2c_slv_drv.c: 320: I2cRxState = StoreAddrByte;
  6906  0199  01D9               	clrf	I2c_DataReceiveSm@I2cRxState
  6907  019A  0AD9               	incf	I2c_DataReceiveSm@I2cRxState,f
  6908                           
  6909                           ;i2c_slv_drv.c: 321: }
  6910  019B  0008               	return
  6911  019C                     l3679:	
  6912                           
  6913                           ;i2c_slv_drv.c: 322: else if ((CheckByteStatus() == ((UINT8)(1))) && (I2cRxFlag == ((UIN
      +                          T8)(1))))
  6914  019C  318C  24DB  3181   	fcall	_CheckByteStatus
  6915  019F  3A01               	xorlw	1
  6916  01A0  1D03               	skipz
  6917  01A1  0008               	return
  6918  01A2  0020               	movlb	0	; select bank0
  6919  01A3  0358               	decf	I2c_DataReceiveSm@I2cRxFlag,w
  6920  01A4  1D03               	btfss	3,2
  6921  01A5  0008               	return
  6922                           
  6923                           ;i2c_slv_drv.c: 323: {
  6924                           ;i2c_slv_drv.c: 324: if (OpType == ((UINT8)(0)))
  6925  01A6  085A               	movf	I2c_DataReceiveSm@OpType,w
  6926  01A7  1D03               	btfss	3,2
  6927  01A8  29AE               	goto	l3687
  6928                           
  6929                           ;i2c_slv_drv.c: 325: {
  6930                           ;i2c_slv_drv.c: 327: I2cRxState = HandleWrite;
  6931  01A9  3002               	movlw	2
  6932  01AA  00BC               	movwf	??_I2c_DataReceiveSm
  6933  01AB  083C               	movf	??_I2c_DataReceiveSm,w
  6934  01AC  00D9               	movwf	I2c_DataReceiveSm@I2cRxState
  6935                           
  6936                           ;i2c_slv_drv.c: 328: }
  6937  01AD  0008               	return
  6938  01AE                     l3687:	
  6939                           
  6940                           ;i2c_slv_drv.c: 329: else
  6941                           ;i2c_slv_drv.c: 330: {
  6942                           ;i2c_slv_drv.c: 332: I2cRxState = HandleRead;
  6943  01AE  3003               	movlw	3
  6944  01AF  00BC               	movwf	??_I2c_DataReceiveSm
  6945  01B0  083C               	movf	??_I2c_DataReceiveSm,w
  6946  01B1  00D9               	movwf	I2c_DataReceiveSm@I2cRxState
  6947                           
  6948                           ;i2c_slv_drv.c: 338: }
  6949                           ;i2c_slv_drv.c: 339: }
  6950                           ;i2c_slv_drv.c: 340: break;
  6951                           
  6952                           ;i2c_slv_drv.c: 335: else
  6953                           ;i2c_slv_drv.c: 336: {
  6954                           
  6955                           ;i2c_slv_drv.c: 333: }
  6956                           ;i2c_slv_drv.c: 334: }
  6957  01B2  0008               	return
  6958  01B3                     l3689:	
  6959                           ;i2c_slv_drv.c: 342: case StoreAddrByte:
  6960                           
  6961                           
  6962                           ;i2c_slv_drv.c: 344: I2cRxAddress = SSP1BUF;
  6963  01B3  0024               	movlb	4	; select bank4
  6964  01B4  0811               	movf	17,w	;volatile
  6965  01B5  0020               	movlb	0	; select bank0
  6966  01B6  00BC               	movwf	??_I2c_DataReceiveSm
  6967  01B7  083C               	movf	??_I2c_DataReceiveSm,w
  6968  01B8  00D7               	movwf	I2c_DataReceiveSm@I2cRxAddress
  6969                           
  6970                           ;i2c_slv_drv.c: 346: I2cRxAddress = (I2cRxAddress >> ((UINT8)(1)));
  6971  01B9  3657               	lsrf	I2c_DataReceiveSm@I2cRxAddress,w
  6972  01BA  00BC               	movwf	??_I2c_DataReceiveSm
  6973  01BB  083C               	movf	??_I2c_DataReceiveSm,w
  6974  01BC  00D7               	movwf	I2c_DataReceiveSm@I2cRxAddress
  6975                           
  6976                           ;i2c_slv_drv.c: 348: OpType = (SSP1BUF & ((UINT8)(0x01)));
  6977  01BD  0024               	movlb	4	; select bank4
  6978  01BE  0811               	movf	17,w	;volatile
  6979  01BF  3901               	andlw	1
  6980  01C0  0020               	movlb	0	; select bank0
  6981  01C1  00BC               	movwf	??_I2c_DataReceiveSm
  6982  01C2  083C               	movf	??_I2c_DataReceiveSm,w
  6983  01C3  00DA               	movwf	I2c_DataReceiveSm@OpType
  6984                           
  6985                           ;i2c_slv_drv.c: 350: if (OpType == ((UINT8)(1)))
  6986  01C4  035A               	decf	I2c_DataReceiveSm@OpType,w
  6987  01C5  1D03               	btfss	3,2
  6988  01C6  29D4               	goto	l3701
  6989                           
  6990                           ;i2c_slv_drv.c: 351: {
  6991                           ;i2c_slv_drv.c: 353: SSP1BUF = I2cTxBuffer[TxCounter];
  6992  01C7  085C               	movf	I2c_DataReceiveSm@TxCounter,w
  6993  01C8  3E20               	addlw	(low (_I2cTxBuffer| (0+512)))& (0+255)
  6994  01C9  0086               	movwf	6
  6995  01CA  3002               	movlw	2	; select bank4/5
  6996  01CB  0087               	movwf	7
  6997  01CC  0801               	movf	1,w
  6998  01CD  0024               	movlb	4	; select bank4
  6999  01CE  0091               	movwf	17	;volatile
  7000                           
  7001                           ;i2c_slv_drv.c: 355: TxCounter++;
  7002  01CF  3001               	movlw	1
  7003  01D0  0020               	movlb	0	; select bank0
  7004  01D1  00BC               	movwf	??_I2c_DataReceiveSm
  7005  01D2  083C               	movf	??_I2c_DataReceiveSm,w
  7006  01D3  07DC               	addwf	I2c_DataReceiveSm@TxCounter,f
  7007  01D4                     l3701:	
  7008                           ;i2c_slv_drv.c: 357: else
  7009                           ;i2c_slv_drv.c: 358: {
  7010                           
  7011                           ;i2c_slv_drv.c: 356: }
  7012                           
  7013                           
  7014                           ;i2c_slv_drv.c: 360: }
  7015                           ;i2c_slv_drv.c: 362: I2cRxState = StopClkStretch;
  7016  01D4  3004               	movlw	4
  7017  01D5  00BC               	movwf	??_I2c_DataReceiveSm
  7018  01D6  083C               	movf	??_I2c_DataReceiveSm,w
  7019  01D7  00D9               	movwf	I2c_DataReceiveSm@I2cRxState
  7020                           
  7021                           ;i2c_slv_drv.c: 363: break;
  7022  01D8  0008               	return
  7023  01D9                     l3703:	
  7024                           ;i2c_slv_drv.c: 365: case HandleWrite:
  7025                           
  7026                           
  7027                           ;i2c_slv_drv.c: 367: if (CheckStopBitStatus() == ((UINT8)(1)))
  7028  01D9  318C  24E5  3181   	fcall	_CheckStopBitStatus
  7029  01DC  3A01               	xorlw	1
  7030  01DD  1D03               	skipz
  7031  01DE  2A24               	goto	l3727
  7032                           
  7033                           ;i2c_slv_drv.c: 368: {
  7034                           ;i2c_slv_drv.c: 370: I2cRxFlag = ((UINT8)(0));
  7035  01DF  0020               	movlb	0	; select bank0
  7036  01E0  01D8               	clrf	I2c_DataReceiveSm@I2cRxFlag
  7037                           
  7038                           ;i2c_slv_drv.c: 372: I2cPacket.Lenght = RxCounter;
  7039  01E1  30EF               	movlw	239
  7040  01E2  0086               	movwf	6
  7041  01E3  3023               	movlw	35
  7042  01E4  0087               	movwf	7
  7043  01E5  085B               	movf	I2c_DataReceiveSm@RxCounter,w
  7044  01E6  0081               	movwf	1
  7045                           
  7046                           ;i2c_slv_drv.c: 373: I2cPacket.ReadWrite = ((UINT8)(0));
  7047  01E7  309D               	movlw	157
  7048  01E8  0086               	movwf	6
  7049  01E9  3023               	movlw	35
  7050  01EA  0087               	movwf	7
  7051  01EB  3141               	addfsr 1,1
  7052  01EC  0181               	clrf	1
  7053                           
  7054                           ;i2c_slv_drv.c: 374: I2cPacket.SlaveAddress = I2cRxAddress;
  7055  01ED  309D               	movlw	157
  7056  01EE  0086               	movwf	6
  7057  01EF  3023               	movlw	35
  7058  01F0  0087               	movwf	7
  7059  01F1  0857               	movf	I2c_DataReceiveSm@I2cRxAddress,w
  7060  01F2  3FC0               	movwi [0]fsr1
  7061                           
  7062                           ;i2c_slv_drv.c: 375: for (Index = 0; Index < ((UINT8)(80)); Index++)
  7063  01F3  01C3               	clrf	I2c_DataReceiveSm@Index
  7064  01F4  3050               	movlw	80
  7065  01F5  0243               	subwf	I2c_DataReceiveSm@Index,w
  7066  01F6  1803               	btfsc	3,0
  7067  01F7  2A1A               	goto	l3721
  7068  01F8                     l3715:	
  7069                           
  7070                           ;i2c_slv_drv.c: 376: {
  7071                           ;i2c_slv_drv.c: 377: I2cPacket.Buffer[Index] = I2cRxBuffer[Index];
  7072  01F8  0843               	movf	I2c_DataReceiveSm@Index,w
  7073  01F9  3EA0               	addlw	(low (_I2cRxBuffer| (0+512)))& (0+255)
  7074  01FA  0086               	movwf	6
  7075  01FB  3002               	movlw	2	; select bank5/6
  7076  01FC  0087               	movwf	7
  7077  01FD  0801               	movf	1,w
  7078  01FE  00BC               	movwf	??_I2c_DataReceiveSm
  7079  01FF  0843               	movf	I2c_DataReceiveSm@Index,w
  7080  0200  00BD               	movwf	??_I2c_DataReceiveSm+1
  7081  0201  01BE               	clrf	??_I2c_DataReceiveSm+2
  7082  0202  309F               	movlw	159
  7083  0203  00BF               	movwf	??_I2c_DataReceiveSm+3
  7084  0204  3023               	movlw	35
  7085  0205  00C0               	movwf	??_I2c_DataReceiveSm+4
  7086  0206  083D               	movf	??_I2c_DataReceiveSm+1,w
  7087  0207  073F               	addwf	??_I2c_DataReceiveSm+3,w
  7088  0208  00C1               	movwf	??_I2c_DataReceiveSm+5
  7089  0209  083E               	movf	??_I2c_DataReceiveSm+2,w
  7090  020A  3D40               	addwfc	??_I2c_DataReceiveSm+4,w
  7091  020B  00C2               	movwf	??_I2c_DataReceiveSm+6
  7092  020C  0841               	movf	??_I2c_DataReceiveSm+5,w
  7093  020D  0086               	movwf	6
  7094  020E  0842               	movf	??_I2c_DataReceiveSm+6,w
  7095  020F  0087               	movwf	7
  7096  0210  083C               	movf	??_I2c_DataReceiveSm,w
  7097  0211  0081               	movwf	1
  7098  0212  3001               	movlw	1
  7099  0213  00BC               	movwf	??_I2c_DataReceiveSm
  7100  0214  083C               	movf	??_I2c_DataReceiveSm,w
  7101  0215  07C3               	addwf	I2c_DataReceiveSm@Index,f
  7102  0216  3050               	movlw	80
  7103  0217  0243               	subwf	I2c_DataReceiveSm@Index,w
  7104  0218  1C03               	skipc
  7105  0219  29F8               	goto	l3715
  7106  021A                     l3721:	
  7107                           
  7108                           ;i2c_slv_drv.c: 378: }
  7109                           ;i2c_slv_drv.c: 381: GenerateEvt(&I2cNewPacketNotification);
  7110  021A  305E               	movlw	(low (_I2cNewPacketNotification| 0))& (0+255)
  7111  021B  318E  2686  3181   	fcall	_GenerateEvt
  7112                           
  7113                           ;i2c_slv_drv.c: 384: RxCounter = 0;
  7114  021E  0020               	movlb	0	; select bank0
  7115  021F  01DB               	clrf	I2c_DataReceiveSm@RxCounter
  7116                           
  7117                           ;i2c_slv_drv.c: 386: ClearRxBuffer();
  7118  0220  318D  2550  3181   	fcall	_ClearRxBuffer
  7119                           
  7120                           ;i2c_slv_drv.c: 387: }
  7121  0223  2A33               	goto	l3731
  7122  0224                     l3727:	
  7123                           
  7124                           ;i2c_slv_drv.c: 388: else
  7125                           ;i2c_slv_drv.c: 389: {
  7126                           ;i2c_slv_drv.c: 391: I2cRxBuffer[RxCounter] = SSP1BUF;
  7127  0224  0024               	movlb	4	; select bank4
  7128  0225  0811               	movf	17,w	;volatile
  7129  0226  0020               	movlb	0	; select bank0
  7130  0227  00BC               	movwf	??_I2c_DataReceiveSm
  7131  0228  085B               	movf	I2c_DataReceiveSm@RxCounter,w
  7132  0229  3EA0               	addlw	(low (_I2cRxBuffer| (0+512)))& (0+255)
  7133  022A  0086               	movwf	6
  7134  022B  3002               	movlw	2	; select bank5/6
  7135  022C  0087               	movwf	7
  7136  022D  083C               	movf	??_I2c_DataReceiveSm,w
  7137  022E  0081               	movwf	1
  7138                           
  7139                           ;i2c_slv_drv.c: 393: RxCounter++;
  7140  022F  3001               	movlw	1
  7141  0230  00BC               	movwf	??_I2c_DataReceiveSm
  7142  0231  083C               	movf	??_I2c_DataReceiveSm,w
  7143  0232  07DB               	addwf	I2c_DataReceiveSm@RxCounter,f
  7144  0233                     l3731:	
  7145                           
  7146                           ;i2c_slv_drv.c: 394: }
  7147                           ;i2c_slv_drv.c: 396: I2cRxState = StopClkStretch;
  7148  0233  3004               	movlw	4
  7149  0234  0020               	movlb	0	; select bank0
  7150  0235  00BC               	movwf	??_I2c_DataReceiveSm
  7151  0236  083C               	movf	??_I2c_DataReceiveSm,w
  7152  0237  00D9               	movwf	I2c_DataReceiveSm@I2cRxState
  7153                           
  7154                           ;i2c_slv_drv.c: 397: break;
  7155  0238  0008               	return
  7156  0239                     l3733:	
  7157                           ;i2c_slv_drv.c: 399: case HandleRead:
  7158                           
  7159                           
  7160                           ;i2c_slv_drv.c: 401: if (CheckAckStatus() == ((UINT8)(0)))
  7161  0239  318C  24D1  3181   	fcall	_CheckAckStatus
  7162  023C  3A00               	xorlw	0
  7163  023D  1D03               	skipz
  7164  023E  2A4E               	goto	l3739
  7165                           
  7166                           ;i2c_slv_drv.c: 402: {
  7167                           ;i2c_slv_drv.c: 404: SSP1BUF = I2cTxBuffer[TxCounter];
  7168  023F  0020               	movlb	0	; select bank0
  7169  0240  085C               	movf	I2c_DataReceiveSm@TxCounter,w
  7170  0241  3E20               	addlw	(low (_I2cTxBuffer| (0+512)))& (0+255)
  7171  0242  0086               	movwf	6
  7172  0243  3002               	movlw	2	; select bank4/5
  7173  0244  0087               	movwf	7
  7174  0245  0801               	movf	1,w
  7175  0246  0024               	movlb	4	; select bank4
  7176  0247  0091               	movwf	17	;volatile
  7177                           
  7178                           ;i2c_slv_drv.c: 406: TxCounter++;
  7179  0248  3001               	movlw	1
  7180  0249  0020               	movlb	0	; select bank0
  7181  024A  00BC               	movwf	??_I2c_DataReceiveSm
  7182  024B  083C               	movf	??_I2c_DataReceiveSm,w
  7183  024C  07DC               	addwf	I2c_DataReceiveSm@TxCounter,f
  7184                           
  7185                           ;i2c_slv_drv.c: 407: }
  7186  024D  2A53               	goto	l3743
  7187  024E                     l3739:	
  7188                           
  7189                           ;i2c_slv_drv.c: 408: else
  7190                           ;i2c_slv_drv.c: 409: {
  7191                           ;i2c_slv_drv.c: 411: TxCounter = 0;
  7192  024E  0020               	movlb	0	; select bank0
  7193  024F  01DC               	clrf	I2c_DataReceiveSm@TxCounter
  7194                           
  7195                           ;i2c_slv_drv.c: 413: I2cRxFlag = ((UINT8)(0));
  7196  0250  01D8               	clrf	I2c_DataReceiveSm@I2cRxFlag
  7197                           
  7198                           ;i2c_slv_drv.c: 415: ClearTxBuffer();
  7199  0251  318D  2560         	fcall	_ClearTxBuffer
  7200  0253                     l3743:	
  7201                           
  7202                           ;i2c_slv_drv.c: 417: }
  7203                           ;i2c_slv_drv.c: 419: I2cRxState = StopClkStretch;
  7204  0253  3004               	movlw	4
  7205  0254  0020               	movlb	0	; select bank0
  7206  0255  00BC               	movwf	??_I2c_DataReceiveSm
  7207  0256  083C               	movf	??_I2c_DataReceiveSm,w
  7208  0257  00D9               	movwf	I2c_DataReceiveSm@I2cRxState
  7209                           
  7210                           ;i2c_slv_drv.c: 420: break;
  7211  0258  0008               	return
  7212  0259                     l256:	
  7213                           ;i2c_slv_drv.c: 422: case StopClkStretch:
  7214                           
  7215                           
  7216                           ;i2c_slv_drv.c: 424: SSP1CON1bits.CKP = ((UINT8)(1));
  7217  0259  0024               	movlb	4	; select bank4
  7218  025A  1615               	bsf	21,4	;volatile
  7219                           
  7220                           ;i2c_slv_drv.c: 426: I2cRxState = CheckRxByte;
  7221  025B  0020               	movlb	0	; select bank0
  7222  025C  01D9               	clrf	I2c_DataReceiveSm@I2cRxState
  7223                           
  7224                           ;i2c_slv_drv.c: 431: }
  7225                           
  7226                           ;i2c_slv_drv.c: 430: break;
  7227                           
  7228                           ;i2c_slv_drv.c: 429: default:
  7229                           
  7230                           ;i2c_slv_drv.c: 427: break;
  7231  025D  0008               	return
  7232  025E                     l3749:	
  7233  025E  0020               	movlb	0	; select bank0
  7234  025F  0859               	movf	I2c_DataReceiveSm@I2cRxState,w
  7235                           
  7236                           ; Switch size 1, requested type "space"
  7237                           ; Number of cases is 5, Range of values is 0 to 4
  7238                           ; switch strategies available:
  7239                           ; Name         Instructions Cycles
  7240                           ; direct_byte           16     6 (fixed)
  7241                           ; simple_byte           16     9 (average)
  7242                           ; jumptable            260     6 (fixed)
  7243                           ;	Chosen strategy is direct_byte
  7244  0260  0084               	movwf	4
  7245  0261  3005               	movlw	5
  7246  0262  0204               	subwf	4,w
  7247  0263  1803               	skipnc
  7248  0264  0008               	return
  7249  0265  3188               	movlp	high S3865
  7250  0266  3504               	lslf	4,w
  7251  0267  3E00               	addlw	low S3865
  7252  0268  0082               	movwf	2
  7253  0269  0008               	return
  7254  026A                     __end_of_I2c_DataReceiveSm:	
  7255                           
  7256                           	psect	swtext1
  7257  0800                     __pswtext1:	
  7258  0800                     S3865:	
  7259  0800  3181  2989         	ljmp	l3673
  7260  0802  3181  29B3         	ljmp	l3689
  7261  0804  3181  29D9         	ljmp	l3703
  7262  0806  3182  2A39         	ljmp	l3733
  7263  0808  3182  2A59         	ljmp	l256
  7264                           
  7265                           	psect	text19
  7266  0F44                     __ptext19:	
  7267 ;; *************** function _App_MainTask *****************
  7268 ;; Defined at:
  7269 ;;		line 177 in file "../Source/c/04_App/sb810_app.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  Options         1   27[BANK0 ] unsigned char 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;		None
  7274 ;; Return value:  Size  Location     Type
  7275 ;;                  1    wreg      void 
  7276 ;; Registers used:
  7277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7278 ;; Tracked objects:
  7279 ;;		On entry : 0/0
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7283 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7286 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7287 ;;Total ram usage:        1 bytes
  7288 ;; Hardware stack levels used:    1
  7289 ;; Hardware stack levels required when called:    7
  7290 ;; This function calls:
  7291 ;;		_Adc_ConfigAnCh
  7292 ;;		_AppSm
  7293 ;; This function is called by:
  7294 ;;		_InitializeTasks
  7295 ;;		_ScheduleTasks
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           
  7300                           ;psect for function _App_MainTask
  7301  0F44                     _App_MainTask:	
  7302                           
  7303                           ;sb810_app.c: 179: static AnalogChSelType AnalogChSel;
  7304                           ;sb810_app.c: 181: switch (SystemState)
  7305                           
  7306                           ;incstack = 0
  7307                           ; Regs used in _App_MainTask: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7308  0F44  2F64               	goto	l3655
  7309  0F45                     l66:	
  7310                           ;sb810_app.c: 182: {
  7311                           ;sb810_app.c: 184: case InitializationState:
  7312                           
  7313                           
  7314                           ;sb810_app.c: 186: TRISCbits.TRISC5 = ((UINT8)(1));
  7315  0F45  0021               	movlb	1	; select bank1
  7316  0F46  168E               	bsf	14,5	;volatile
  7317                           
  7318                           ;sb810_app.c: 187: TRISCbits.TRISC4 = ((UINT8)(1));
  7319  0F47  160E               	bsf	14,4	;volatile
  7320                           
  7321                           ;sb810_app.c: 188: TRISCbits.TRISC3 = ((UINT8)(1));
  7322  0F48  158E               	bsf	14,3	;volatile
  7323                           
  7324                           ;sb810_app.c: 189: TRISCbits.TRISC6 = ((UINT8)(1));
  7325  0F49  170E               	bsf	14,6	;volatile
  7326                           
  7327                           ;sb810_app.c: 192: OPTION_REGbits.nWPUEN = 0;
  7328  0F4A  1395               	bcf	21,7	;volatile
  7329                           
  7330                           ;sb810_app.c: 193: WPUA = 0xFF;
  7331  0F4B  30FF               	movlw	255
  7332  0F4C  0024               	movlb	4	; select bank4
  7333  0F4D  008C               	movwf	12	;volatile
  7334                           
  7335                           ;sb810_app.c: 194: WPUC = 0xFF;
  7336  0F4E  30FF               	movlw	255
  7337  0F4F  008E               	movwf	14	;volatile
  7338                           
  7339                           ;sb810_app.c: 197: AnalogChSel.AnSelA0An0 = ((UINT8)(0));
  7340  0F50  0021               	movlb	1	; select bank1
  7341  0F51  01C8               	clrf	App_MainTask@AnalogChSel^(0+128)
  7342                           
  7343                           ;sb810_app.c: 198: AnalogChSel.AnSelA1An1 = ((UINT8)(0));
  7344  0F52  01C9               	clrf	(App_MainTask@AnalogChSel^(0+128)+1)
  7345                           
  7346                           ;sb810_app.c: 199: AnalogChSel.AnSelA2An2 = ((UINT8)(0));
  7347  0F53  01CA               	clrf	(App_MainTask@AnalogChSel^(0+128)+2)
  7348                           
  7349                           ;sb810_app.c: 200: AnalogChSel.AnSelA4An3 = ((UINT8)(0));
  7350  0F54  01CB               	clrf	(App_MainTask@AnalogChSel^(0+128)+3)
  7351                           
  7352                           ;sb810_app.c: 201: AnalogChSel.AnSelC0An4 = ((UINT8)(0));
  7353  0F55  01CE               	clrf	(App_MainTask@AnalogChSel^(0+128)+6)
  7354                           
  7355                           ;sb810_app.c: 202: AnalogChSel.AnSelC1An5 = ((UINT8)(0));
  7356  0F56  01CF               	clrf	(App_MainTask@AnalogChSel^(0+128)+7)
  7357                           
  7358                           ;sb810_app.c: 203: AnalogChSel.AnSelC2An6 = ((UINT8)(0));
  7359  0F57  01D0               	clrf	(App_MainTask@AnalogChSel^(0+128)+8)
  7360                           
  7361                           ;sb810_app.c: 204: AnalogChSel.AnSelC3An7 = ((UINT8)(0));
  7362  0F58  01D1               	clrf	(App_MainTask@AnalogChSel^(0+128)+9)
  7363                           
  7364                           ;sb810_app.c: 205: AnalogChSel.AnSelC6An8 = ((UINT8)(0));
  7365  0F59  01D2               	clrf	(App_MainTask@AnalogChSel^(0+128)+10)
  7366                           
  7367                           ;sb810_app.c: 206: AnalogChSel.AnSelC7An9 = ((UINT8)(0));
  7368  0F5A  01D3               	clrf	(App_MainTask@AnalogChSel^(0+128)+11)
  7369                           
  7370                           ;sb810_app.c: 207: AnalogChSel.AnSelB4An10 = ((UINT8)(0));
  7371  0F5B  01CC               	clrf	(App_MainTask@AnalogChSel^(0+128)+4)
  7372                           
  7373                           ;sb810_app.c: 208: AnalogChSel.AnSelB5An11 = ((UINT8)(0));
  7374  0F5C  01CD               	clrf	(App_MainTask@AnalogChSel^(0+128)+5)
  7375                           
  7376                           ;sb810_app.c: 209: Adc_ConfigAnCh(&AnalogChSel);
  7377  0F5D  30C8               	movlw	(low (App_MainTask@AnalogChSel| 0))& (0+255)
  7378  0F5E  3185  25F4         	fcall	_Adc_ConfigAnCh
  7379                           
  7380                           ;sb810_app.c: 211: break;
  7381  0F60  0008               	return
  7382  0F61                     l3651:	
  7383                           ;sb810_app.c: 214: case RunningState:
  7384                           
  7385                           
  7386                           ;sb810_app.c: 217: AppSm();
  7387  0F61  3186  26C6         	fcall	_AppSm
  7388                           
  7389                           ;sb810_app.c: 223: }
  7390                           
  7391                           ;sb810_app.c: 222: break;
  7392                           
  7393                           ;sb810_app.c: 221: default:
  7394                           
  7395                           ;sb810_app.c: 218: break;
  7396  0F63  0008               	return
  7397  0F64                     l3655:	
  7398  0F64  0020               	movlb	0	; select bank0
  7399  0F65  085D               	movf	_SystemState,w
  7400                           
  7401                           ; Switch size 1, requested type "space"
  7402                           ; Number of cases is 2, Range of values is 0 to 1
  7403                           ; switch strategies available:
  7404                           ; Name         Instructions Cycles
  7405                           ; simple_byte            7     4 (average)
  7406                           ; direct_byte           10     6 (fixed)
  7407                           ; jumptable            260     6 (fixed)
  7408                           ;	Chosen strategy is simple_byte
  7409  0F66  3A00               	xorlw	0	; case 0
  7410  0F67  1903               	skipnz
  7411  0F68  2F45               	goto	l66
  7412  0F69  3A01               	xorlw	1	; case 1
  7413  0F6A  1903               	skipnz
  7414  0F6B  2F61               	goto	l3651
  7415  0F6C  2F6D               	goto	l70
  7416  0F6D                     l70:	
  7417  0F6D  0008               	return
  7418  0F6E                     __end_of_App_MainTask:	
  7419                           
  7420                           	psect	text20
  7421  0DA8                     __ptext20:	
  7422 ;; *************** function _Wdg_MainTask *****************
  7423 ;; Defined at:
  7424 ;;		line 73 in file "../../../../Framework/MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  Options         1   27[BANK0 ] unsigned char 
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;		None
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      void 
  7431 ;; Registers used:
  7432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7438 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7441 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7442 ;;Total ram usage:        1 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:    3
  7445 ;; This function calls:
  7446 ;;		_Mcu_ClearWdg
  7447 ;;		_Mcu_SetWdgPeriod
  7448 ;;		_Mcu_SetWdgSts
  7449 ;; This function is called by:
  7450 ;;		_InitializeTasks
  7451 ;;		_ScheduleTasks
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           
  7455                           
  7456                           ;psect for function _Wdg_MainTask
  7457  0DA8                     _Wdg_MainTask:	
  7458                           
  7459                           ;wdg.c: 75: switch (SystemState)
  7460                           
  7461                           ;incstack = 0
  7462                           ; Regs used in _Wdg_MainTask: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7463  0DA8  2DB4               	goto	l3785
  7464  0DA9                     l3779:	
  7465                           ;wdg.c: 76: {
  7466                           ;wdg.c: 78: case InitializationState:
  7467                           
  7468                           
  7469                           ;wdg.c: 80: Mcu_SetWdgPeriod(WdgPer_2s);
  7470  0DA9  300B               	movlw	11
  7471  0DAA  318D  2504  318D   	fcall	_Mcu_SetWdgPeriod
  7472                           
  7473                           ;wdg.c: 82: Mcu_SetWdgSts(((UINT8)(1)));
  7474  0DAD  3001               	movlw	1
  7475  0DAE  318C  24AC         	fcall	_Mcu_SetWdgSts
  7476                           
  7477                           ;wdg.c: 83: break;
  7478  0DB0  0008               	return
  7479  0DB1                     l3781:	
  7480                           ;wdg.c: 86: case RunningState:
  7481                           
  7482                           
  7483                           ;wdg.c: 88: Mcu_ClearWdg();
  7484  0DB1  3187  27FE         	fcall	_Mcu_ClearWdg
  7485                           
  7486                           ;wdg.c: 94: }
  7487                           
  7488                           ;wdg.c: 93: break;
  7489                           
  7490                           ;wdg.c: 92: default:
  7491                           
  7492                           ;wdg.c: 89: break;
  7493  0DB3  0008               	return
  7494  0DB4                     l3785:	
  7495  0DB4  0020               	movlb	0	; select bank0
  7496  0DB5  085D               	movf	_SystemState,w
  7497                           
  7498                           ; Switch size 1, requested type "space"
  7499                           ; Number of cases is 2, Range of values is 0 to 1
  7500                           ; switch strategies available:
  7501                           ; Name         Instructions Cycles
  7502                           ; simple_byte            7     4 (average)
  7503                           ; direct_byte           10     6 (fixed)
  7504                           ; jumptable            260     6 (fixed)
  7505                           ;	Chosen strategy is simple_byte
  7506  0DB6  3A00               	xorlw	0	; case 0
  7507  0DB7  1903               	skipnz
  7508  0DB8  2DA9               	goto	l3779
  7509  0DB9  3A01               	xorlw	1	; case 1
  7510  0DBA  1903               	skipnz
  7511  0DBB  2DB1               	goto	l3781
  7512  0DBC  2DBD               	goto	l780
  7513  0DBD                     l780:	
  7514  0DBD  0008               	return
  7515  0DBE                     __end_of_Wdg_MainTask:	
  7516                           
  7517                           	psect	text21
  7518  0D04                     __ptext21:	
  7519 ;; *************** function _Mcu_SetWdgPeriod *****************
  7520 ;; Defined at:
  7521 ;;		line 197 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  WdgPeriod       1    wreg     enum E3675
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;  WdgPeriod       1    5[COMMON] enum E3675
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1    wreg      void 
  7528 ;; Registers used:
  7529 ;;		wreg, status,2, status,0
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7537 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7538 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7539 ;;Total ram usage:        2 bytes
  7540 ;; Hardware stack levels used:    1
  7541 ;; Hardware stack levels required when called:    2
  7542 ;; This function calls:
  7543 ;;		Nothing
  7544 ;; This function is called by:
  7545 ;;		_Wdg_MainTask
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           
  7550                           ;psect for function _Mcu_SetWdgPeriod
  7551  0D04                     _Mcu_SetWdgPeriod:	
  7552                           
  7553                           ;incstack = 0
  7554                           ; Regs used in _Mcu_SetWdgPeriod: [wreg+status,2+status,0]
  7555                           ;Mcu_SetWdgPeriod@WdgPeriod stored from wreg
  7556  0D04  00F5               	movwf	Mcu_SetWdgPeriod@WdgPeriod
  7557                           
  7558                           ;mcu_drv.c: 200: WDTCONbits.WDTPS = WdgPeriod;
  7559  0D05  0875               	movf	Mcu_SetWdgPeriod@WdgPeriod,w
  7560  0D06  00F4               	movwf	??_Mcu_SetWdgPeriod
  7561  0D07  0DF4               	rlf	??_Mcu_SetWdgPeriod,f
  7562  0D08  0021               	movlb	1	; select bank1
  7563  0D09  0817               	movf	23,w	;volatile
  7564  0D0A  0674               	xorwf	??_Mcu_SetWdgPeriod,w
  7565  0D0B  39C1               	andlw	-63
  7566  0D0C  0674               	xorwf	??_Mcu_SetWdgPeriod,w
  7567  0D0D  0097               	movwf	23	;volatile
  7568  0D0E  0008               	return
  7569  0D0F                     __end_of_Mcu_SetWdgPeriod:	
  7570                           
  7571                           	psect	text22
  7572  07FE                     __ptext22:	
  7573 ;; *************** function _Mcu_ClearWdg *****************
  7574 ;; Defined at:
  7575 ;;		line 225 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;		None
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;		None
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  1    wreg      void 
  7582 ;; Registers used:
  7583 ;;		None
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7593 ;;Total ram usage:        0 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; Hardware stack levels required when called:    2
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_Wdg_MainTask
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           
  7604                           ;psect for function _Mcu_ClearWdg
  7605  07FE                     _Mcu_ClearWdg:	
  7606                           
  7607                           ;incstack = 0
  7608                           ; Regs used in _Mcu_ClearWdg: []
  7609  07FE  0064               	clrwdt	;# 
  7610  07FF  0008               	return
  7611  0800                     __end_of_Mcu_ClearWdg:	
  7612                           
  7613                           	psect	text23
  7614  0488                     __ptext23:	
  7615 ;; *************** function _LedBlinkStateMachine *****************
  7616 ;; Defined at:
  7617 ;;		line 74 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/led_drv.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  LedBlink        1    wreg     PTR struct LedBlinkStr
  7620 ;;		 -> Led1(8), 
  7621 ;;  LedInitStatu    1    4[COMMON] enum E3655
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;  LedBlink        1    5[COMMON] PTR struct LedBlinkStr
  7624 ;;		 -> Led1(8), 
  7625 ;; Return value:  Size  Location     Type
  7626 ;;                  1    wreg      unsigned char 
  7627 ;; Registers used:
  7628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7629 ;; Tracked objects:
  7630 ;;		On entry : 0/0
  7631 ;;		On exit  : 0/0
  7632 ;;		Unchanged: 0/0
  7633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7634 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7637 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;Total ram usage:        6 bytes
  7639 ;; Hardware stack levels used:    1
  7640 ;; Hardware stack levels required when called:    2
  7641 ;; This function calls:
  7642 ;;		Nothing
  7643 ;; This function is called by:
  7644 ;;		_Led_MainTask
  7645 ;; This function uses a non-reentrant model
  7646 ;;
  7647                           
  7648                           
  7649                           ;psect for function _LedBlinkStateMachine
  7650  0488                     _LedBlinkStateMachine:	
  7651                           
  7652                           ;incstack = 0
  7653                           ; Regs used in _LedBlinkStateMachine: [wreg-fsr1h+status,2+status,0]
  7654                           ;LedBlinkStateMachine@LedBlink stored from wreg
  7655  0488  00F5               	movwf	LedBlinkStateMachine@LedBlink
  7656                           
  7657                           ;led_drv.c: 77: switch (LedBlink->LedBlinkState)
  7658  0489  2CF4               	goto	l3485
  7659  048A                     l3465:	
  7660                           ;led_drv.c: 78: {
  7661                           ;led_drv.c: 79: case LedBlinkInit:
  7662                           
  7663                           
  7664                           ;led_drv.c: 81: LedBlink->LedOutState = LedInitStatus;
  7665  048A  0874               	movf	LedBlinkStateMachine@LedInitStatus,w
  7666  048B  0020               	movlb	0	; select bank0
  7667  048C  00A0               	movwf	??_LedBlinkStateMachine
  7668  048D  0A75               	incf	LedBlinkStateMachine@LedBlink,w
  7669  048E  0086               	movwf	6
  7670  048F  0187               	clrf	7
  7671  0490  0820               	movf	??_LedBlinkStateMachine,w
  7672  0491  0081               	movwf	1
  7673                           
  7674                           ;led_drv.c: 83: LedBlink->LedBlinkState = LedBlinkRunning;
  7675  0492  0875               	movf	LedBlinkStateMachine@LedBlink,w
  7676  0493  2CC4               	goto	L7
  7677  0494                     l3467:	
  7678                           ;led_drv.c: 86: case LedBlinkRunning:
  7679                           
  7680                           ;led_drv.c: 84: break;
  7681                           
  7682                           
  7683                           ;led_drv.c: 88: LedBlink->LedBlinkCounter++;
  7684  0494  0875               	movf	LedBlinkStateMachine@LedBlink,w
  7685  0495  3E02               	addlw	2
  7686  0496  0086               	movwf	6
  7687  0497  0187               	clrf	7
  7688  0498  3001               	movlw	1
  7689  0499  0781               	addwf	1,f
  7690  049A  3141               	addfsr 1,1
  7691  049B  1803               	skipnc
  7692  049C  0A81               	incf	1,f
  7693                           
  7694                           ;led_drv.c: 90: if (LedBlink->LedOutState == OffState)
  7695  049D  0A75               	incf	LedBlinkStateMachine@LedBlink,w
  7696  049E  0086               	movwf	6
  7697  049F  0187               	clrf	7
  7698  04A0  0801               	movf	1,w
  7699  04A1  1D03               	btfss	3,2
  7700  04A2  2CC9               	goto	l3475
  7701                           
  7702                           ;led_drv.c: 91: {
  7703                           ;led_drv.c: 93: if (LedBlink->LedBlinkCounter >= LedBlink->LedOffTimeMs)
  7704  04A3  0875               	movf	LedBlinkStateMachine@LedBlink,w
  7705  04A4  3E06               	addlw	6
  7706  04A5  0086               	movwf	6
  7707  04A6  0187               	clrf	7
  7708  04A7  3F40               	moviw [0]fsr1
  7709  04A8  0020               	movlb	0	; select bank0
  7710  04A9  00A0               	movwf	??_LedBlinkStateMachine
  7711  04AA  3F41               	moviw [1]fsr1
  7712  04AB  00A1               	movwf	??_LedBlinkStateMachine+1
  7713  04AC  0875               	movf	LedBlinkStateMachine@LedBlink,w
  7714  04AD  3E02               	addlw	2
  7715  04AE  0086               	movwf	6
  7716  04AF  0187               	clrf	7
  7717  04B0  3F40               	moviw [0]fsr1
  7718  04B1  00A2               	movwf	??_LedBlinkStateMachine+2
  7719  04B2  3F41               	moviw [1]fsr1
  7720  04B3  00A3               	movwf	??_LedBlinkStateMachine+3
  7721  04B4  0821               	movf	??_LedBlinkStateMachine+1,w
  7722  04B5  0223               	subwf	??_LedBlinkStateMachine+3,w
  7723  04B6  1D03               	skipz
  7724  04B7  2CBA               	goto	u2835
  7725  04B8  0820               	movf	??_LedBlinkStateMachine,w
  7726  04B9  0222               	subwf	??_LedBlinkStateMachine+2,w
  7727  04BA                     u2835:	
  7728  04BA  1C03               	skipc
  7729  04BB  2CFF               	goto	l3487
  7730                           
  7731                           ;led_drv.c: 94: {
  7732                           ;led_drv.c: 96: LedBlink->LedBlinkCounter = 0;
  7733  04BC  0875               	movf	LedBlinkStateMachine@LedBlink,w
  7734  04BD  3E02               	addlw	2
  7735  04BE  0086               	movwf	6
  7736  04BF  0187               	clrf	7
  7737  04C0  3000               	movlw	0
  7738  04C1  3FC0               	movwi [0]fsr1
  7739  04C2  3FC1               	movwi [1]fsr1
  7740                           
  7741                           ;led_drv.c: 98: LedBlink->LedOutState = OnState;
  7742  04C3  0A75               	incf	LedBlinkStateMachine@LedBlink,w
  7743  04C4                     L7:	
  7744  04C4  0086               	movwf	6
  7745  04C5  0187               	clrf	7
  7746  04C6  0181               	clrf	1
  7747  04C7  0A81               	incf	1,f
  7748                           
  7749                           ;led_drv.c: 99: }
  7750                           ;led_drv.c: 100: }
  7751  04C8  2CFF               	goto	l3487
  7752  04C9                     l3475:	
  7753                           
  7754                           ;led_drv.c: 101: else if (LedBlink->LedOutState == OnState)
  7755  04C9  0A75               	incf	LedBlinkStateMachine@LedBlink,w
  7756  04CA  0086               	movwf	6
  7757  04CB  0187               	clrf	7
  7758  04CC  0301               	decf	1,w
  7759  04CD  1D03               	btfss	3,2
  7760  04CE  2CFF               	goto	l3487
  7761                           
  7762                           ;led_drv.c: 102: {
  7763                           ;led_drv.c: 104: if (LedBlink->LedBlinkCounter >= LedBlink->LedOnTimeMs)
  7764  04CF  0875               	movf	LedBlinkStateMachine@LedBlink,w
  7765  04D0  3E04               	addlw	4
  7766  04D1  0086               	movwf	6
  7767  04D2  0187               	clrf	7
  7768  04D3  3F40               	moviw [0]fsr1
  7769  04D4  0020               	movlb	0	; select bank0
  7770  04D5  00A0               	movwf	??_LedBlinkStateMachine
  7771  04D6  3F41               	moviw [1]fsr1
  7772  04D7  00A1               	movwf	??_LedBlinkStateMachine+1
  7773  04D8  0875               	movf	LedBlinkStateMachine@LedBlink,w
  7774  04D9  3E02               	addlw	2
  7775  04DA  0086               	movwf	6
  7776  04DB  0187               	clrf	7
  7777  04DC  3F40               	moviw [0]fsr1
  7778  04DD  00A2               	movwf	??_LedBlinkStateMachine+2
  7779  04DE  3F41               	moviw [1]fsr1
  7780  04DF  00A3               	movwf	??_LedBlinkStateMachine+3
  7781  04E0  0821               	movf	??_LedBlinkStateMachine+1,w
  7782  04E1  0223               	subwf	??_LedBlinkStateMachine+3,w
  7783  04E2  1D03               	skipz
  7784  04E3  2CE6               	goto	u2855
  7785  04E4  0820               	movf	??_LedBlinkStateMachine,w
  7786  04E5  0222               	subwf	??_LedBlinkStateMachine+2,w
  7787  04E6                     u2855:	
  7788  04E6  1C03               	skipc
  7789  04E7  2CFF               	goto	l3487
  7790                           
  7791                           ;led_drv.c: 105: {
  7792                           ;led_drv.c: 107: LedBlink->LedBlinkCounter = 0;
  7793  04E8  0875               	movf	LedBlinkStateMachine@LedBlink,w
  7794  04E9  3E02               	addlw	2
  7795  04EA  0086               	movwf	6
  7796  04EB  0187               	clrf	7
  7797  04EC  3000               	movlw	0
  7798  04ED  3FC0               	movwi [0]fsr1
  7799  04EE  3FC1               	movwi [1]fsr1
  7800                           
  7801                           ;led_drv.c: 109: LedBlink->LedOutState = OffState;
  7802  04EF  0A75               	incf	LedBlinkStateMachine@LedBlink,w
  7803  04F0  0086               	movwf	6
  7804  04F1  0187               	clrf	7
  7805  04F2  0181               	clrf	1
  7806                           
  7807                           ;led_drv.c: 116: }
  7808                           
  7809                           ;led_drv.c: 115: break;
  7810                           
  7811                           ;led_drv.c: 114: default:
  7812                           
  7813                           ;led_drv.c: 110: }
  7814                           ;led_drv.c: 111: }
  7815                           ;led_drv.c: 112: break;
  7816  04F3  2CFF               	goto	l3487
  7817  04F4                     l3485:	
  7818  04F4  0875               	movf	LedBlinkStateMachine@LedBlink,w
  7819  04F5  0086               	movwf	6
  7820  04F6  0187               	clrf	7
  7821  04F7  0801               	movf	1,w
  7822                           
  7823                           ; Switch size 1, requested type "space"
  7824                           ; Number of cases is 2, Range of values is 0 to 1
  7825                           ; switch strategies available:
  7826                           ; Name         Instructions Cycles
  7827                           ; simple_byte            7     4 (average)
  7828                           ; direct_byte           10     6 (fixed)
  7829                           ; jumptable            260     6 (fixed)
  7830                           ;	Chosen strategy is simple_byte
  7831  04F8  3A00               	xorlw	0	; case 0
  7832  04F9  1903               	skipnz
  7833  04FA  2C8A               	goto	l3465
  7834  04FB  3A01               	xorlw	1	; case 1
  7835  04FC  1903               	skipnz
  7836  04FD  2C94               	goto	l3467
  7837  04FE  2CFF               	goto	l3487
  7838  04FF                     l3487:	
  7839                           
  7840                           ;led_drv.c: 118: return (LedBlink->LedOutState);
  7841  04FF  0A75               	incf	LedBlinkStateMachine@LedBlink,w
  7842  0500  0086               	movwf	6
  7843  0501  0187               	clrf	7
  7844  0502  0801               	movf	1,w
  7845  0503  0008               	return
  7846  0504                     __end_of_LedBlinkStateMachine:	
  7847                           
  7848                           	psect	text24
  7849  0CE5                     __ptext24:	
  7850 ;; *************** function _CheckStopBitStatus *****************
  7851 ;; Defined at:
  7852 ;;		line 150 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/i2c_slv_drv.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;		None
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;		None
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1    wreg      unsigned char 
  7859 ;; Registers used:
  7860 ;;		wreg, status,2, status,0
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;Total ram usage:        1 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:    2
  7873 ;; This function calls:
  7874 ;;		Nothing
  7875 ;; This function is called by:
  7876 ;;		_I2c_DataReceiveSm
  7877 ;; This function uses a non-reentrant model
  7878 ;;
  7879                           
  7880                           
  7881                           ;psect for function _CheckStopBitStatus
  7882  0CE5                     _CheckStopBitStatus:	
  7883                           
  7884                           ;i2c_slv_drv.c: 153: return ((SSP1STAT & ((UINT8)(0x10))) >> ((UINT8)(4)));
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in _CheckStopBitStatus: [wreg+status,2+status,0]
  7888  0CE5  0024               	movlb	4	; select bank4
  7889  0CE6  0814               	movf	20,w	;volatile
  7890  0CE7  00F4               	movwf	??_CheckStopBitStatus
  7891  0CE8  3004               	movlw	4
  7892  0CE9                     u2745:	
  7893  0CE9  36F4               	lsrf	??_CheckStopBitStatus,f
  7894  0CEA  0B89               	decfsz	9,f
  7895  0CEB  2CE9               	goto	u2745
  7896  0CEC  0874               	movf	??_CheckStopBitStatus,w
  7897  0CED  3901               	andlw	1
  7898  0CEE  0008               	return
  7899  0CEF                     __end_of_CheckStopBitStatus:	
  7900                           
  7901                           	psect	text25
  7902  0CDB                     __ptext25:	
  7903 ;; *************** function _CheckByteStatus *****************
  7904 ;; Defined at:
  7905 ;;		line 136 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/i2c_slv_drv.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;		None
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;		None
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  1    wreg      unsigned char 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;Total ram usage:        1 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    2
  7926 ;; This function calls:
  7927 ;;		Nothing
  7928 ;; This function is called by:
  7929 ;;		_I2c_DataReceiveSm
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           
  7934                           ;psect for function _CheckByteStatus
  7935  0CDB                     _CheckByteStatus:	
  7936                           
  7937                           ;i2c_slv_drv.c: 139: return ((SSP1STAT & ((UINT8)(0x20))) >> ((UINT8)(5)));
  7938                           
  7939                           ;incstack = 0
  7940                           ; Regs used in _CheckByteStatus: [wreg+status,2+status,0]
  7941  0CDB  0024               	movlb	4	; select bank4
  7942  0CDC  0814               	movf	20,w	;volatile
  7943  0CDD  00F4               	movwf	??_CheckByteStatus
  7944  0CDE  3005               	movlw	5
  7945  0CDF                     u2735:	
  7946  0CDF  36F4               	lsrf	??_CheckByteStatus,f
  7947  0CE0  0B89               	decfsz	9,f
  7948  0CE1  2CDF               	goto	u2735
  7949  0CE2  0874               	movf	??_CheckByteStatus,w
  7950  0CE3  3901               	andlw	1
  7951  0CE4  0008               	return
  7952  0CE5                     __end_of_CheckByteStatus:	
  7953                           
  7954                           	psect	text26
  7955  0CD1                     __ptext26:	
  7956 ;; *************** function _CheckAckStatus *****************
  7957 ;; Defined at:
  7958 ;;		line 108 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/i2c_slv_drv.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;		None
  7961 ;; Auto vars:     Size  Location     Type
  7962 ;;		None
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  1    wreg      unsigned char 
  7965 ;; Registers used:
  7966 ;;		wreg, status,2, status,0
  7967 ;; Tracked objects:
  7968 ;;		On entry : 0/0
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;Total ram usage:        1 bytes
  7977 ;; Hardware stack levels used:    1
  7978 ;; Hardware stack levels required when called:    2
  7979 ;; This function calls:
  7980 ;;		Nothing
  7981 ;; This function is called by:
  7982 ;;		_I2c_DataReceiveSm
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           
  7987                           ;psect for function _CheckAckStatus
  7988  0CD1                     _CheckAckStatus:	
  7989                           
  7990                           ;i2c_slv_drv.c: 111: return ((SSP1CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
  7991                           
  7992                           ;incstack = 0
  7993                           ; Regs used in _CheckAckStatus: [wreg+status,2+status,0]
  7994  0CD1  0024               	movlb	4	; select bank4
  7995  0CD2  0816               	movf	22,w	;volatile
  7996  0CD3  00F4               	movwf	??_CheckAckStatus
  7997  0CD4  3006               	movlw	6
  7998  0CD5                     u2725:	
  7999  0CD5  36F4               	lsrf	??_CheckAckStatus,f
  8000  0CD6  0B89               	decfsz	9,f
  8001  0CD7  2CD5               	goto	u2725
  8002  0CD8  0874               	movf	??_CheckAckStatus,w
  8003  0CD9  3901               	andlw	1
  8004  0CDA  0008               	return
  8005  0CDB                     __end_of_CheckAckStatus:	
  8006                           
  8007                           	psect	text27
  8008  0D80                     __ptext27:	
  8009 ;; *************** function _I2c_SetConfig *****************
  8010 ;; Defined at:
  8011 ;;		line 82 in file "../../../../Framework/MercuryFwk/Source/c/03_Sml/01_Pml/01_SlvI2c/i2c_slv.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;		None
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;		None
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  1    wreg      void 
  8018 ;; Registers used:
  8019 ;;		wreg, status,2
  8020 ;; Tracked objects:
  8021 ;;		On entry : 0/0
  8022 ;;		On exit  : 0/0
  8023 ;;		Unchanged: 0/0
  8024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8029 ;;Total ram usage:        1 bytes
  8030 ;; Hardware stack levels used:    1
  8031 ;; Hardware stack levels required when called:    2
  8032 ;; This function calls:
  8033 ;;		Nothing
  8034 ;; This function is called by:
  8035 ;;		_I2cSlv_MainTask
  8036 ;; This function uses a non-reentrant model
  8037 ;;
  8038                           
  8039                           
  8040                           ;psect for function _I2c_SetConfig
  8041  0D80                     _I2c_SetConfig:	
  8042                           
  8043                           ;i2c_slv.c: 84: I2cConfig.I2cModuleMode = ((UINT8)(0b0110));
  8044                           
  8045                           ;incstack = 0
  8046                           ; Regs used in _I2c_SetConfig: [wreg+status,2]
  8047  0D80  3006               	movlw	6
  8048  0D81  00F4               	movwf	??_I2c_SetConfig
  8049  0D82  0874               	movf	??_I2c_SetConfig,w
  8050  0D83  0021               	movlb	1	; select bank1
  8051  0D84  00D4               	movwf	_I2cConfig^(0+128)
  8052                           
  8053                           ;i2c_slv.c: 85: I2cConfig.I2cReceiverEnable = ((UINT8)(0));
  8054  0D85  01D5               	clrf	(_I2cConfig^(0+128)+1)
  8055                           
  8056                           ;i2c_slv.c: 86: I2cConfig.EnableI2cModule = ((UINT8)(1));
  8057  0D86  01D6               	clrf	(_I2cConfig^(0+128)+2)
  8058  0D87  0AD6               	incf	(_I2cConfig^(0+128)+2),f
  8059                           
  8060                           ;i2c_slv.c: 87: I2cConfig.ClockStretchEnable = ((UINT8)(0));
  8061  0D88  01D7               	clrf	(_I2cConfig^(0+128)+3)
  8062                           
  8063                           ;i2c_slv.c: 88: I2cConfig.StopCondIntEnable = ((UINT8)(1));
  8064  0D89  01D8               	clrf	(_I2cConfig^(0+128)+4)
  8065  0D8A  0AD8               	incf	(_I2cConfig^(0+128)+4),f
  8066                           
  8067                           ;i2c_slv.c: 89: I2cConfig.StartCondIntEnable = ((UINT8)(1));
  8068  0D8B  01D9               	clrf	(_I2cConfig^(0+128)+5)
  8069  0D8C  0AD9               	incf	(_I2cConfig^(0+128)+5),f
  8070                           
  8071                           ;i2c_slv.c: 90: I2cConfig.BufferOverwriteEnable = ((UINT8)(0));
  8072  0D8D  01DA               	clrf	(_I2cConfig^(0+128)+6)
  8073                           
  8074                           ;i2c_slv.c: 91: I2cConfig.BusCollisionDetectEnable = ((UINT8)(0));
  8075  0D8E  01DB               	clrf	(_I2cConfig^(0+128)+7)
  8076                           
  8077                           ;i2c_slv.c: 92: I2cConfig.AddrHoldEnable = ((UINT8)(0));
  8078  0D8F  01DC               	clrf	(_I2cConfig^(0+128)+8)
  8079                           
  8080                           ;i2c_slv.c: 93: I2cConfig.DataHoldEnable = ((UINT8)(0));
  8081  0D90  01DD               	clrf	(_I2cConfig^(0+128)+9)
  8082                           
  8083                           ;i2c_slv.c: 94: I2cConfig.GeneralCallEnable = ((UINT8)(0));
  8084  0D91  01DE               	clrf	(_I2cConfig^(0+128)+10)
  8085  0D92  0008               	return
  8086  0D93                     __end_of_I2c_SetConfig:	
  8087                           
  8088                           	psect	text28
  8089  03DC                     __ptext28:	
  8090 ;; *************** function _I2c_InitI2cModule *****************
  8091 ;; Defined at:
  8092 ;;		line 206 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/i2c_slv_drv.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;  I2cConfig       1    wreg     PTR struct _I2cConfig
  8095 ;;		 -> I2cConfig(11), 
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;  I2cConfig       1    2[BANK0 ] PTR struct _I2cConfig
  8098 ;;		 -> I2cConfig(11), 
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1    wreg      void 
  8101 ;; Registers used:
  8102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8109 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8110 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8111 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8112 ;;Total ram usage:        3 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; Hardware stack levels required when called:    3
  8115 ;; This function calls:
  8116 ;;		_ClearRxBuffer
  8117 ;;		_ClearTxBuffer
  8118 ;; This function is called by:
  8119 ;;		_I2cSlv_MainTask
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           
  8124                           ;psect for function _I2c_InitI2cModule
  8125  03DC                     _I2c_InitI2cModule:	
  8126                           
  8127                           ;incstack = 0
  8128                           ; Regs used in _I2c_InitI2cModule: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8129                           ;I2c_InitI2cModule@I2cConfig stored from wreg
  8130  03DC  0020               	movlb	0	; select bank0
  8131  03DD  00A2               	movwf	I2c_InitI2cModule@I2cConfig
  8132                           
  8133                           ;i2c_slv_drv.c: 209: TRISBbits.TRISB6 = ((UINT8)(1));
  8134  03DE  0021               	movlb	1	; select bank1
  8135  03DF  170D               	bsf	13,6	;volatile
  8136                           
  8137                           ;i2c_slv_drv.c: 210: TRISBbits.TRISB4 = ((UINT8)(1));
  8138  03E0  160D               	bsf	13,4	;volatile
  8139                           
  8140                           ;i2c_slv_drv.c: 214: SSP1CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
  8141  03E1  0020               	movlb	0	; select bank0
  8142  03E2  0822               	movf	I2c_InitI2cModule@I2cConfig,w
  8143  03E3  0086               	movwf	6
  8144  03E4  0187               	clrf	7
  8145  03E5  0801               	movf	1,w
  8146  03E6  00A0               	movwf	??_I2c_InitI2cModule
  8147  03E7  0820               	movf	??_I2c_InitI2cModule,w
  8148  03E8  0024               	movlb	4	; select bank4
  8149  03E9  0495               	iorwf	21,f	;volatile
  8150                           
  8151                           ;i2c_slv_drv.c: 217: SSP1CON2 |= (I2cConfig->I2cReceiverEnable) << ((UINT8)(3));
  8152  03EA  0020               	movlb	0	; select bank0
  8153  03EB  0A22               	incf	I2c_InitI2cModule@I2cConfig,w
  8154  03EC  0086               	movwf	6
  8155  03ED  0187               	clrf	7
  8156  03EE  0801               	movf	1,w
  8157  03EF  00A0               	movwf	??_I2c_InitI2cModule
  8158  03F0  3002               	movlw	2
  8159  03F1                     u2755:	
  8160  03F1  35A0               	lslf	??_I2c_InitI2cModule,f
  8161  03F2  3EFF               	addlw	-1
  8162  03F3  1D03               	skipz
  8163  03F4  2BF1               	goto	u2755
  8164  03F5  3520               	lslf	??_I2c_InitI2cModule,w
  8165  03F6  00A1               	movwf	??_I2c_InitI2cModule+1
  8166  03F7  0821               	movf	??_I2c_InitI2cModule+1,w
  8167  03F8  0024               	movlb	4	; select bank4
  8168  03F9  0496               	iorwf	22,f	;volatile
  8169                           
  8170                           ;i2c_slv_drv.c: 218: SSP1CON2 |= (I2cConfig->ClockStretchEnable) << ((UINT8)(0));
  8171  03FA  0020               	movlb	0	; select bank0
  8172  03FB  0822               	movf	I2c_InitI2cModule@I2cConfig,w
  8173  03FC  3E03               	addlw	3
  8174  03FD  0086               	movwf	6
  8175  03FE  0187               	clrf	7
  8176  03FF  0801               	movf	1,w
  8177  0400  00A0               	movwf	??_I2c_InitI2cModule
  8178  0401  0820               	movf	??_I2c_InitI2cModule,w
  8179  0402  0024               	movlb	4	; select bank4
  8180  0403  0496               	iorwf	22,f	;volatile
  8181                           
  8182                           ;i2c_slv_drv.c: 219: SSP1CON2 |= (I2cConfig->GeneralCallEnable) << ((UINT8)(7));
  8183  0404  0020               	movlb	0	; select bank0
  8184  0405  0822               	movf	I2c_InitI2cModule@I2cConfig,w
  8185  0406  3E0A               	addlw	10
  8186  0407  0086               	movwf	6
  8187  0408  0187               	clrf	7
  8188  0409  0801               	movf	1,w
  8189  040A  00A0               	movwf	??_I2c_InitI2cModule
  8190  040B  3006               	movlw	6
  8191  040C                     u2765:	
  8192  040C  35A0               	lslf	??_I2c_InitI2cModule,f
  8193  040D  3EFF               	addlw	-1
  8194  040E  1D03               	skipz
  8195  040F  2C0C               	goto	u2765
  8196  0410  3520               	lslf	??_I2c_InitI2cModule,w
  8197  0411  00A1               	movwf	??_I2c_InitI2cModule+1
  8198  0412  0821               	movf	??_I2c_InitI2cModule+1,w
  8199  0413  0024               	movlb	4	; select bank4
  8200  0414  0496               	iorwf	22,f	;volatile
  8201                           
  8202                           ;i2c_slv_drv.c: 222: SSP1CON3 |= (I2cConfig->StopCondIntEnable) << ((UINT8)(6));
  8203  0415  0020               	movlb	0	; select bank0
  8204  0416  0822               	movf	I2c_InitI2cModule@I2cConfig,w
  8205  0417  3E04               	addlw	4
  8206  0418  0086               	movwf	6
  8207  0419  0187               	clrf	7
  8208  041A  0801               	movf	1,w
  8209  041B  00A0               	movwf	??_I2c_InitI2cModule
  8210  041C  3005               	movlw	5
  8211  041D                     u2775:	
  8212  041D  35A0               	lslf	??_I2c_InitI2cModule,f
  8213  041E  3EFF               	addlw	-1
  8214  041F  1D03               	skipz
  8215  0420  2C1D               	goto	u2775
  8216  0421  3520               	lslf	??_I2c_InitI2cModule,w
  8217  0422  00A1               	movwf	??_I2c_InitI2cModule+1
  8218  0423  0821               	movf	??_I2c_InitI2cModule+1,w
  8219  0424  0024               	movlb	4	; select bank4
  8220  0425  0497               	iorwf	23,f	;volatile
  8221                           
  8222                           ;i2c_slv_drv.c: 223: SSP1CON3 |= (I2cConfig->StartCondIntEnable) << ((UINT8)(5));
  8223  0426  0020               	movlb	0	; select bank0
  8224  0427  0822               	movf	I2c_InitI2cModule@I2cConfig,w
  8225  0428  3E05               	addlw	5
  8226  0429  0086               	movwf	6
  8227  042A  0187               	clrf	7
  8228  042B  0801               	movf	1,w
  8229  042C  00A0               	movwf	??_I2c_InitI2cModule
  8230  042D  3004               	movlw	4
  8231  042E                     u2785:	
  8232  042E  35A0               	lslf	??_I2c_InitI2cModule,f
  8233  042F  3EFF               	addlw	-1
  8234  0430  1D03               	skipz
  8235  0431  2C2E               	goto	u2785
  8236  0432  3520               	lslf	??_I2c_InitI2cModule,w
  8237  0433  00A1               	movwf	??_I2c_InitI2cModule+1
  8238  0434  0821               	movf	??_I2c_InitI2cModule+1,w
  8239  0435  0024               	movlb	4	; select bank4
  8240  0436  0497               	iorwf	23,f	;volatile
  8241                           
  8242                           ;i2c_slv_drv.c: 224: SSP1CON3 |= (I2cConfig->BufferOverwriteEnable) << ((UINT8)(4));
  8243  0437  0020               	movlb	0	; select bank0
  8244  0438  0822               	movf	I2c_InitI2cModule@I2cConfig,w
  8245  0439  3E06               	addlw	6
  8246  043A  0086               	movwf	6
  8247  043B  0187               	clrf	7
  8248  043C  0801               	movf	1,w
  8249  043D  00A0               	movwf	??_I2c_InitI2cModule
  8250  043E  3003               	movlw	3
  8251  043F                     u2795:	
  8252  043F  35A0               	lslf	??_I2c_InitI2cModule,f
  8253  0440  3EFF               	addlw	-1
  8254  0441  1D03               	skipz
  8255  0442  2C3F               	goto	u2795
  8256  0443  3520               	lslf	??_I2c_InitI2cModule,w
  8257  0444  00A1               	movwf	??_I2c_InitI2cModule+1
  8258  0445  0821               	movf	??_I2c_InitI2cModule+1,w
  8259  0446  0024               	movlb	4	; select bank4
  8260  0447  0497               	iorwf	23,f	;volatile
  8261                           
  8262                           ;i2c_slv_drv.c: 225: SSP1CON3 |= (I2cConfig->BusCollisionDetectEnable) << ((UINT8)(2));
  8263  0448  0020               	movlb	0	; select bank0
  8264  0449  0822               	movf	I2c_InitI2cModule@I2cConfig,w
  8265  044A  3E07               	addlw	7
  8266  044B  0086               	movwf	6
  8267  044C  0187               	clrf	7
  8268  044D  0801               	movf	1,w
  8269  044E  00A0               	movwf	??_I2c_InitI2cModule
  8270  044F  3001               	movlw	1
  8271  0450                     u2805:	
  8272  0450  35A0               	lslf	??_I2c_InitI2cModule,f
  8273  0451  3EFF               	addlw	-1
  8274  0452  1D03               	skipz
  8275  0453  2C50               	goto	u2805
  8276  0454  3520               	lslf	??_I2c_InitI2cModule,w
  8277  0455  00A1               	movwf	??_I2c_InitI2cModule+1
  8278  0456  0821               	movf	??_I2c_InitI2cModule+1,w
  8279  0457  0024               	movlb	4	; select bank4
  8280  0458  0497               	iorwf	23,f	;volatile
  8281                           
  8282                           ;i2c_slv_drv.c: 226: SSP1CON3 |= (I2cConfig->AddrHoldEnable) << ((UINT8)(1));
  8283  0459  0020               	movlb	0	; select bank0
  8284  045A  0822               	movf	I2c_InitI2cModule@I2cConfig,w
  8285  045B  3E08               	addlw	8
  8286  045C  0086               	movwf	6
  8287  045D  0187               	clrf	7
  8288  045E  3501               	lslf	1,w
  8289  045F  00A0               	movwf	??_I2c_InitI2cModule
  8290  0460  0820               	movf	??_I2c_InitI2cModule,w
  8291  0461  0024               	movlb	4	; select bank4
  8292  0462  0497               	iorwf	23,f	;volatile
  8293                           
  8294                           ;i2c_slv_drv.c: 227: SSP1CON3 |= (I2cConfig->DataHoldEnable) << ((UINT8)(0));
  8295  0463  0020               	movlb	0	; select bank0
  8296  0464  0822               	movf	I2c_InitI2cModule@I2cConfig,w
  8297  0465  3E09               	addlw	9
  8298  0466  0086               	movwf	6
  8299  0467  0187               	clrf	7
  8300  0468  0801               	movf	1,w
  8301  0469  00A0               	movwf	??_I2c_InitI2cModule
  8302  046A  0820               	movf	??_I2c_InitI2cModule,w
  8303  046B  0024               	movlb	4	; select bank4
  8304  046C  0497               	iorwf	23,f	;volatile
  8305                           
  8306                           ;i2c_slv_drv.c: 230: SSP1CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
  8307  046D  0020               	movlb	0	; select bank0
  8308  046E  0822               	movf	I2c_InitI2cModule@I2cConfig,w
  8309  046F  3E02               	addlw	2
  8310  0470  0086               	movwf	6
  8311  0471  0187               	clrf	7
  8312  0472  0801               	movf	1,w
  8313  0473  00A0               	movwf	??_I2c_InitI2cModule
  8314  0474  3004               	movlw	4
  8315  0475                     u2815:	
  8316  0475  35A0               	lslf	??_I2c_InitI2cModule,f
  8317  0476  3EFF               	addlw	-1
  8318  0477  1D03               	skipz
  8319  0478  2C75               	goto	u2815
  8320  0479  3520               	lslf	??_I2c_InitI2cModule,w
  8321  047A  00A1               	movwf	??_I2c_InitI2cModule+1
  8322  047B  0821               	movf	??_I2c_InitI2cModule+1,w
  8323  047C  0024               	movlb	4	; select bank4
  8324  047D  0495               	iorwf	21,f	;volatile
  8325                           
  8326                           ;i2c_slv_drv.c: 233: PIR1bits.SSP1IF = ((UINT8)(0));
  8327  047E  0020               	movlb	0	; select bank0
  8328  047F  1191               	bcf	17,3	;volatile
  8329                           
  8330                           ;i2c_slv_drv.c: 234: PIE1bits.SSP1IE = ((UINT8)(1));
  8331  0480  0021               	movlb	1	; select bank1
  8332  0481  1591               	bsf	17,3	;volatile
  8333                           
  8334                           ;i2c_slv_drv.c: 237: ClearRxBuffer();
  8335  0482  318D  2550  3183   	fcall	_ClearRxBuffer
  8336                           
  8337                           ;i2c_slv_drv.c: 238: ClearTxBuffer();
  8338  0485  318D  2560         	fcall	_ClearTxBuffer
  8339  0487  0008               	return
  8340  0488                     __end_of_I2c_InitI2cModule:	
  8341                           
  8342                           	psect	text29
  8343  0D60                     __ptext29:	
  8344 ;; *************** function _ClearTxBuffer *****************
  8345 ;; Defined at:
  8346 ;;		line 183 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/i2c_slv_drv.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;		None
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;  Index           1    5[COMMON] unsigned char 
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;Total ram usage:        2 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:    2
  8367 ;; This function calls:
  8368 ;;		Nothing
  8369 ;; This function is called by:
  8370 ;;		_I2c_InitI2cModule
  8371 ;;		_I2c_DataReceiveSm
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           
  8376                           ;psect for function _ClearTxBuffer
  8377  0D60                     _ClearTxBuffer:	
  8378                           
  8379                           ;i2c_slv_drv.c: 185: UINT8 Index;
  8380                           ;i2c_slv_drv.c: 188: for (Index = 0; Index < ((UINT8)(80)); Index++)
  8381                           
  8382                           ;incstack = 0
  8383                           ; Regs used in _ClearTxBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  8384  0D60  01F5               	clrf	ClearTxBuffer@Index
  8385  0D61                     L8:	
  8386  0D61  3050               	movlw	80
  8387  0D62  0275               	subwf	ClearTxBuffer@Index,w
  8388  0D63  1803               	btfsc	3,0
  8389  0D64  0008               	return
  8390                           
  8391                           ;i2c_slv_drv.c: 189: {
  8392                           ;i2c_slv_drv.c: 190: I2cTxBuffer[Index] = 0x00;
  8393  0D65  0875               	movf	ClearTxBuffer@Index,w
  8394  0D66  3E20               	addlw	(low (_I2cTxBuffer| (0+512)))& (0+255)
  8395  0D67  0086               	movwf	6
  8396  0D68  3002               	movlw	2	; select bank4/5
  8397  0D69  0087               	movwf	7
  8398  0D6A  0181               	clrf	1
  8399  0D6B  3001               	movlw	1
  8400  0D6C  00F4               	movwf	??_ClearTxBuffer
  8401  0D6D  0874               	movf	??_ClearTxBuffer,w
  8402  0D6E  07F5               	addwf	ClearTxBuffer@Index,f
  8403  0D6F  2D61               	goto	L8
  8404  0D70                     __end_of_ClearTxBuffer:	
  8405                           
  8406                           	psect	text30
  8407  0D50                     __ptext30:	
  8408 ;; *************** function _ClearRxBuffer *****************
  8409 ;; Defined at:
  8410 ;;		line 164 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/i2c_slv_drv.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;		None
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;  Index           1    5[COMMON] unsigned char 
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  1    wreg      void 
  8417 ;; Registers used:
  8418 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;Total ram usage:        2 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; Hardware stack levels required when called:    2
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		_I2c_InitI2cModule
  8435 ;;		_I2c_DataReceiveSm
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           
  8440                           ;psect for function _ClearRxBuffer
  8441  0D50                     _ClearRxBuffer:	
  8442                           
  8443                           ;i2c_slv_drv.c: 166: UINT8 Index;
  8444                           ;i2c_slv_drv.c: 169: for (Index = 0; Index < ((UINT8)(80)); Index++)
  8445                           
  8446                           ;incstack = 0
  8447                           ; Regs used in _ClearRxBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  8448  0D50  01F5               	clrf	ClearRxBuffer@Index
  8449  0D51                     L9:	
  8450  0D51  3050               	movlw	80
  8451  0D52  0275               	subwf	ClearRxBuffer@Index,w
  8452  0D53  1803               	btfsc	3,0
  8453  0D54  0008               	return
  8454                           
  8455                           ;i2c_slv_drv.c: 170: {
  8456                           ;i2c_slv_drv.c: 171: I2cRxBuffer[Index] = 0x00;
  8457  0D55  0875               	movf	ClearRxBuffer@Index,w
  8458  0D56  3EA0               	addlw	(low (_I2cRxBuffer| (0+512)))& (0+255)
  8459  0D57  0086               	movwf	6
  8460  0D58  3002               	movlw	2	; select bank5/6
  8461  0D59  0087               	movwf	7
  8462  0D5A  0181               	clrf	1
  8463  0D5B  3001               	movlw	1
  8464  0D5C  00F4               	movwf	??_ClearRxBuffer
  8465  0D5D  0874               	movf	??_ClearRxBuffer,w
  8466  0D5E  07F5               	addwf	ClearRxBuffer@Index,f
  8467  0D5F  2D51               	goto	L9
  8468  0D60                     __end_of_ClearRxBuffer:	
  8469                           
  8470                           	psect	text31
  8471  057F                     __ptext31:	
  8472 ;; *************** function _I2cSlv_I2cDrvHandle *****************
  8473 ;; Defined at:
  8474 ;;		line 141 in file "../../../../Framework/MercuryFwk/Source/c/03_Sml/01_Pml/01_SlvI2c/i2c_slv.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;		None
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;  Index           1    9[BANK0 ] unsigned char 
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  1    wreg      void 
  8481 ;; Registers used:
  8482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8489 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8490 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8491 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8492 ;;Total ram usage:        6 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; Hardware stack levels required when called:    3
  8495 ;; This function calls:
  8496 ;;		_GenerateEvt
  8497 ;;		_I2c_SetI2cAddress
  8498 ;;		_I2c_SetI2cAddressMask
  8499 ;;		_I2c_UpdateTxBuffer
  8500 ;;		_ReceiveEvt
  8501 ;; This function is called by:
  8502 ;;		_I2cSlv_MainTask
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506                           
  8507                           ;psect for function _I2cSlv_I2cDrvHandle
  8508  057F                     _I2cSlv_I2cDrvHandle:	
  8509                           
  8510                           ;i2c_slv.c: 143: static I2cReceiveMsgStateType I2cReceiveMsgState = I2cSetSlaveAddres;
  8511                           ;i2c_slv.c: 144: UINT8 Index = 0;
  8512                           
  8513                           ;incstack = 0
  8514                           ; Regs used in _I2cSlv_I2cDrvHandle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8515  057F  0020               	movlb	0	; select bank0
  8516  0580  01A9               	clrf	I2cSlv_I2cDrvHandle@Index
  8517                           
  8518                           ;i2c_slv.c: 146: switch (I2cReceiveMsgState)
  8519  0581  2DEA               	goto	l3619
  8520  0582                     l3585:	
  8521                           ;i2c_slv.c: 147: {
  8522                           ;i2c_slv.c: 148: case I2cSetSlaveAddres:
  8523                           
  8524                           
  8525                           ;i2c_slv.c: 150: if (ReceiveEvt(&I2cSetAddress))
  8526  0582  3062               	movlw	(low (_I2cSetAddress| 0))& (0+255)
  8527  0583  318E  2665  3185   	fcall	_ReceiveEvt
  8528  0586  3A00               	xorlw	0
  8529  0587  1903               	skipnz
  8530  0588  0008               	return
  8531                           
  8532                           ;i2c_slv.c: 151: {
  8533                           ;i2c_slv.c: 153: I2c_SetI2cAddress(I2cSlaveAddress);
  8534  0589  0876               	movf	_I2cSlaveAddress,w
  8535  058A  318C  2494  3185   	fcall	_I2c_SetI2cAddress
  8536                           
  8537                           ;i2c_slv.c: 154: I2c_SetI2cAddressMask(((UINT8)(0x7F)));
  8538  058D  307F               	movlw	127
  8539  058E  318C  2499         	fcall	_I2c_SetI2cAddressMask
  8540                           
  8541                           ;i2c_slv.c: 156: I2cReceiveMsgState = I2cReceiveData;
  8542  0590  0020               	movlb	0	; select bank0
  8543  0591  01D6               	clrf	I2cSlv_I2cDrvHandle@I2cReceiveMsgState
  8544  0592  0AD6               	incf	I2cSlv_I2cDrvHandle@I2cReceiveMsgState,f
  8545                           
  8546                           ;i2c_slv.c: 157: }
  8547                           ;i2c_slv.c: 158: break;
  8548  0593  0008               	return
  8549  0594                     l3591:	
  8550                           ;i2c_slv.c: 160: case I2cReceiveData:
  8551                           
  8552                           
  8553                           ;i2c_slv.c: 162: if (ReceiveEvt(&I2cNewPacketNotification))
  8554  0594  305E               	movlw	(low (_I2cNewPacketNotification| 0))& (0+255)
  8555  0595  318E  2665  3185   	fcall	_ReceiveEvt
  8556  0598  3A00               	xorlw	0
  8557  0599  1903               	skipnz
  8558  059A  2DDA               	goto	l3613
  8559                           
  8560                           ;i2c_slv.c: 163: {
  8561                           ;i2c_slv.c: 165: if ((I2cPacket.SlaveAddress == I2cSlaveAddress) || (I2cPacket.SlaveAddr
      +                          ess == ((UINT8)(0x00))))
  8562  059B  309D               	movlw	157
  8563  059C  0086               	movwf	6
  8564  059D  3023               	movlw	35
  8565  059E  0087               	movwf	7
  8566  059F  0801               	movf	1,w
  8567  05A0  0676               	xorwf	_I2cSlaveAddress,w
  8568  05A1  1903               	skipnz
  8569  05A2  2DAA               	goto	l3597
  8570  05A3  309D               	movlw	157
  8571  05A4  0086               	movwf	6
  8572  05A5  3023               	movlw	35
  8573  05A6  0087               	movwf	7
  8574  05A7  0801               	movf	1,w
  8575  05A8  1D03               	btfss	3,2
  8576  05A9  0008               	return
  8577  05AA                     l3597:	
  8578                           
  8579                           ;i2c_slv.c: 166: {
  8580                           ;i2c_slv.c: 167: if (I2cPacket.ReadWrite == ((UINT8)(0)))
  8581  05AA  309D               	movlw	157
  8582  05AB  0086               	movwf	6
  8583  05AC  3023               	movlw	35
  8584  05AD  0087               	movwf	7
  8585  05AE  3141               	addfsr 1,1
  8586  05AF  0801               	movf	1,w
  8587  05B0  1D03               	btfss	3,2
  8588  05B1  0008               	return
  8589                           
  8590                           ;i2c_slv.c: 168: {
  8591                           ;i2c_slv.c: 170: for (Index = 0; Index < ((UINT8)(80));Index++)
  8592  05B2  0020               	movlb	0	; select bank0
  8593  05B3  01A9               	clrf	I2cSlv_I2cDrvHandle@Index
  8594  05B4  3050               	movlw	80
  8595  05B5  0229               	subwf	I2cSlv_I2cDrvHandle@Index,w
  8596  05B6  1803               	btfsc	3,0
  8597  05B7  2DD6               	goto	l3611
  8598  05B8                     l3605:	
  8599                           
  8600                           ;i2c_slv.c: 171: {
  8601                           ;i2c_slv.c: 172: CmdBuffer[Index] = I2cPacket.Buffer[Index];
  8602  05B8  0829               	movf	I2cSlv_I2cDrvHandle@Index,w
  8603  05B9  00A4               	movwf	??_I2cSlv_I2cDrvHandle
  8604  05BA  01A5               	clrf	??_I2cSlv_I2cDrvHandle+1
  8605  05BB  309F               	movlw	159
  8606  05BC  00A6               	movwf	??_I2cSlv_I2cDrvHandle+2
  8607  05BD  3023               	movlw	35
  8608  05BE  00A7               	movwf	??_I2cSlv_I2cDrvHandle+3
  8609  05BF  0824               	movf	??_I2cSlv_I2cDrvHandle,w
  8610  05C0  0726               	addwf	??_I2cSlv_I2cDrvHandle+2,w
  8611  05C1  0086               	movwf	6
  8612  05C2  0825               	movf	??_I2cSlv_I2cDrvHandle+1,w
  8613  05C3  3D27               	addwfc	??_I2cSlv_I2cDrvHandle+3,w
  8614  05C4  0087               	movwf	7
  8615  05C5  0801               	movf	1,w
  8616  05C6  00A8               	movwf	??_I2cSlv_I2cDrvHandle+4
  8617  05C7  0829               	movf	I2cSlv_I2cDrvHandle@Index,w
  8618  05C8  3EA0               	addlw	(low (_CmdBuffer| (0+256)))& (0+255)
  8619  05C9  0086               	movwf	6
  8620  05CA  3001               	movlw	1	; select bank3/4
  8621  05CB  0087               	movwf	7
  8622  05CC  0828               	movf	??_I2cSlv_I2cDrvHandle+4,w
  8623  05CD  0081               	movwf	1
  8624  05CE  3001               	movlw	1
  8625  05CF  00A4               	movwf	??_I2cSlv_I2cDrvHandle
  8626  05D0  0824               	movf	??_I2cSlv_I2cDrvHandle,w
  8627  05D1  07A9               	addwf	I2cSlv_I2cDrvHandle@Index,f
  8628  05D2  3050               	movlw	80
  8629  05D3  0229               	subwf	I2cSlv_I2cDrvHandle@Index,w
  8630  05D4  1C03               	skipc
  8631  05D5  2DB8               	goto	l3605
  8632  05D6                     l3611:	
  8633                           
  8634                           ;i2c_slv.c: 173: }
  8635                           ;i2c_slv.c: 175: GenerateEvt(&I2cWriteRequest);
  8636  05D6  3064               	movlw	(low (_I2cWriteRequest| 0))& (0+255)
  8637  05D7  318E  2686         	fcall	_GenerateEvt
  8638                           
  8639                           ;i2c_slv.c: 176: }
  8640                           ;i2c_slv.c: 177: }
  8641                           ;i2c_slv.c: 178: }
  8642  05D9  0008               	return
  8643  05DA                     l3613:	
  8644                           
  8645                           ;i2c_slv.c: 180: else if (ReceiveEvt(&I2cReplyPacketReady))
  8646  05DA  3078               	movlw	(low (_I2cReplyPacketReady| 0))& (0+255)
  8647  05DB  318E  2665  3185   	fcall	_ReceiveEvt
  8648  05DE  3A00               	xorlw	0
  8649  05DF  1903               	skipnz
  8650  05E0  0008               	return
  8651                           
  8652                           ;i2c_slv.c: 181: {
  8653                           ;i2c_slv.c: 183: I2c_UpdateTxBuffer(RepBuffer,RepBufferLen);
  8654  05E1  0877               	movf	_RepBufferLen,w
  8655  05E2  0020               	movlb	0	; select bank0
  8656  05E3  00A4               	movwf	??_I2cSlv_I2cDrvHandle
  8657  05E4  0824               	movf	??_I2cSlv_I2cDrvHandle,w
  8658  05E5  00F4               	movwf	I2c_UpdateTxBuffer@Length
  8659  05E6  3020               	movlw	(low (_RepBuffer| (0+256)))& (0+255)
  8660  05E7  318E  260A         	fcall	_I2c_UpdateTxBuffer
  8661                           
  8662                           ;i2c_slv.c: 189: }
  8663                           
  8664                           ;i2c_slv.c: 188: break;
  8665                           
  8666                           ;i2c_slv.c: 187: default:
  8667                           
  8668                           ;i2c_slv.c: 184: }
  8669                           ;i2c_slv.c: 185: break;
  8670  05E9  0008               	return
  8671  05EA                     l3619:	
  8672  05EA  0020               	movlb	0	; select bank0
  8673  05EB  0856               	movf	I2cSlv_I2cDrvHandle@I2cReceiveMsgState,w
  8674                           
  8675                           ; Switch size 1, requested type "space"
  8676                           ; Number of cases is 2, Range of values is 0 to 1
  8677                           ; switch strategies available:
  8678                           ; Name         Instructions Cycles
  8679                           ; simple_byte            7     4 (average)
  8680                           ; direct_byte           10     6 (fixed)
  8681                           ; jumptable            260     6 (fixed)
  8682                           ;	Chosen strategy is simple_byte
  8683  05EC  3A00               	xorlw	0	; case 0
  8684  05ED  1903               	skipnz
  8685  05EE  2D82               	goto	l3585
  8686  05EF  3A01               	xorlw	1	; case 1
  8687  05F0  1903               	skipnz
  8688  05F1  2D94               	goto	l3591
  8689  05F2  2DF3               	goto	l604
  8690  05F3                     l604:	
  8691  05F3  0008               	return
  8692  05F4                     __end_of_I2cSlv_I2cDrvHandle:	
  8693                           
  8694                           	psect	text32
  8695  0E0A                     __ptext32:	
  8696 ;; *************** function _I2c_UpdateTxBuffer *****************
  8697 ;; Defined at:
  8698 ;;		line 278 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/i2c_slv_drv.c"
  8699 ;; Parameters:    Size  Location     Type
  8700 ;;  DataBuffer      1    wreg     PTR unsigned char 
  8701 ;;		 -> RepBuffer(80), 
  8702 ;;  Length          1    4[COMMON] unsigned char 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  DataBuffer      1    2[BANK0 ] PTR unsigned char 
  8705 ;;		 -> RepBuffer(80), 
  8706 ;;  Index           1    3[BANK0 ] unsigned char 
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  1    wreg      void 
  8709 ;; Registers used:
  8710 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8711 ;; Tracked objects:
  8712 ;;		On entry : 0/0
  8713 ;;		On exit  : 0/0
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8716 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8720 ;;Total ram usage:        5 bytes
  8721 ;; Hardware stack levels used:    1
  8722 ;; Hardware stack levels required when called:    2
  8723 ;; This function calls:
  8724 ;;		Nothing
  8725 ;; This function is called by:
  8726 ;;		_I2cSlv_I2cDrvHandle
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           
  8731                           ;psect for function _I2c_UpdateTxBuffer
  8732  0E0A                     _I2c_UpdateTxBuffer:	
  8733                           
  8734                           ;incstack = 0
  8735                           ; Regs used in _I2c_UpdateTxBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  8736                           ;I2c_UpdateTxBuffer@DataBuffer stored from wreg
  8737  0E0A  0020               	movlb	0	; select bank0
  8738  0E0B  00A2               	movwf	I2c_UpdateTxBuffer@DataBuffer
  8739                           
  8740                           ;i2c_slv_drv.c: 280: UINT8 Index = 0;
  8741  0E0C  01A3               	clrf	I2c_UpdateTxBuffer@Index
  8742                           
  8743                           ;i2c_slv_drv.c: 283: for (Index = 0; Index < Length; Index++)
  8744  0E0D  01A3               	clrf	I2c_UpdateTxBuffer@Index
  8745  0E0E                     l3337:	
  8746  0E0E  0874               	movf	I2c_UpdateTxBuffer@Length,w
  8747  0E0F  0223               	subwf	I2c_UpdateTxBuffer@Index,w
  8748  0E10  1803               	btfsc	3,0
  8749  0E11  0008               	return
  8750                           
  8751                           ;i2c_slv_drv.c: 284: {
  8752                           ;i2c_slv_drv.c: 285: I2cTxBuffer[Index] = *(DataBuffer + Index);
  8753  0E12  0823               	movf	I2c_UpdateTxBuffer@Index,w
  8754  0E13  0722               	addwf	I2c_UpdateTxBuffer@DataBuffer,w
  8755  0E14  00A0               	movwf	??_I2c_UpdateTxBuffer
  8756  0E15  0820               	movf	??_I2c_UpdateTxBuffer,w
  8757  0E16  0086               	movwf	6
  8758  0E17  3001               	movlw	1	; select bank2/3
  8759  0E18  0087               	movwf	7
  8760  0E19  0801               	movf	1,w
  8761  0E1A  00A1               	movwf	??_I2c_UpdateTxBuffer+1
  8762  0E1B  0823               	movf	I2c_UpdateTxBuffer@Index,w
  8763  0E1C  3E20               	addlw	(low (_I2cTxBuffer| (0+512)))& (0+255)
  8764  0E1D  0086               	movwf	6
  8765  0E1E  3002               	movlw	2	; select bank4/5
  8766  0E1F  0087               	movwf	7
  8767  0E20  0821               	movf	??_I2c_UpdateTxBuffer+1,w
  8768  0E21  0081               	movwf	1
  8769  0E22  3001               	movlw	1
  8770  0E23  00A0               	movwf	??_I2c_UpdateTxBuffer
  8771  0E24  0820               	movf	??_I2c_UpdateTxBuffer,w
  8772  0E25  07A3               	addwf	I2c_UpdateTxBuffer@Index,f
  8773  0E26  2E0E               	goto	l3337
  8774  0E27                     __end_of_I2c_UpdateTxBuffer:	
  8775                           
  8776                           	psect	text33
  8777  0C99                     __ptext33:	
  8778 ;; *************** function _I2c_SetI2cAddressMask *****************
  8779 ;; Defined at:
  8780 ;;		line 263 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/i2c_slv_drv.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;  SlaveAddress    1    wreg     unsigned char 
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;  SlaveAddress    1    4[COMMON] unsigned char 
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1    wreg      void 
  8787 ;; Registers used:
  8788 ;;		wreg, status,2, status,0
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8798 ;;Total ram usage:        1 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:    2
  8801 ;; This function calls:
  8802 ;;		Nothing
  8803 ;; This function is called by:
  8804 ;;		_I2cSlv_I2cDrvHandle
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           
  8809                           ;psect for function _I2c_SetI2cAddressMask
  8810  0C99                     _I2c_SetI2cAddressMask:	
  8811                           
  8812                           ;incstack = 0
  8813                           ; Regs used in _I2c_SetI2cAddressMask: [wreg+status,2+status,0]
  8814                           ;I2c_SetI2cAddressMask@SlaveAddressMask stored from wreg
  8815  0C99  00F4               	movwf	I2c_SetI2cAddressMask@SlaveAddressMask
  8816                           
  8817                           ;i2c_slv_drv.c: 266: SSP1MSK = (SlaveAddressMask << ((UINT8)(1)));
  8818  0C9A  3574               	lslf	I2c_SetI2cAddressMask@SlaveAddressMask,w
  8819  0C9B  0024               	movlb	4	; select bank4
  8820  0C9C  0093               	movwf	19	;volatile
  8821  0C9D  0008               	return
  8822  0C9E                     __end_of_I2c_SetI2cAddressMask:	
  8823                           
  8824                           	psect	text34
  8825  0C94                     __ptext34:	
  8826 ;; *************** function _I2c_SetI2cAddress *****************
  8827 ;; Defined at:
  8828 ;;		line 249 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/i2c_slv_drv.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  SlaveAddress    1    wreg     unsigned char 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  SlaveAddress    1    4[COMMON] unsigned char 
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  1    wreg      void 
  8835 ;; Registers used:
  8836 ;;		wreg, status,2, status,0
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;Total ram usage:        1 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; Hardware stack levels required when called:    2
  8849 ;; This function calls:
  8850 ;;		Nothing
  8851 ;; This function is called by:
  8852 ;;		_I2cSlv_I2cDrvHandle
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           
  8857                           ;psect for function _I2c_SetI2cAddress
  8858  0C94                     _I2c_SetI2cAddress:	
  8859                           
  8860                           ;incstack = 0
  8861                           ; Regs used in _I2c_SetI2cAddress: [wreg+status,2+status,0]
  8862                           ;I2c_SetI2cAddress@SlaveAddress stored from wreg
  8863  0C94  00F4               	movwf	I2c_SetI2cAddress@SlaveAddress
  8864                           
  8865                           ;i2c_slv_drv.c: 252: SSP1ADD = (SlaveAddress << ((UINT8)(1)));
  8866  0C95  3574               	lslf	I2c_SetI2cAddress@SlaveAddress,w
  8867  0C96  0024               	movlb	4	; select bank4
  8868  0C97  0092               	movwf	18	;volatile
  8869  0C98  0008               	return
  8870  0C99                     __end_of_I2c_SetI2cAddress:	
  8871                           
  8872                           	psect	text35
  8873  06C6                     __ptext35:	
  8874 ;; *************** function _AppSm *****************
  8875 ;; Defined at:
  8876 ;;		line 112 in file "../Source/c/04_App/sb810_app.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;		None
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8893 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;Total ram usage:        3 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    6
  8897 ;; This function calls:
  8898 ;;		_GenerateEvt
  8899 ;;		_ManageProtocol
  8900 ;; This function is called by:
  8901 ;;		_App_MainTask
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           
  8906                           ;psect for function _AppSm
  8907  06C6                     _AppSm:	
  8908                           
  8909                           ;sb810_app.c: 114: static AppStateType AppState = GetI2cAddressState;
  8910                           ;sb810_app.c: 115: static UINT8 WpuSetCounter = 0;
  8911                           ;sb810_app.c: 117: switch (AppState)
  8912                           
  8913                           ;incstack = 0
  8914                           ; Regs used in _AppSm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8915  06C6  2F0D               	goto	l3411
  8916  06C7                     l3393:	
  8917                           ;sb810_app.c: 118: {
  8918                           ;sb810_app.c: 119: case GetI2cAddressState:
  8919                           
  8920                           
  8921                           ;sb810_app.c: 122: I2cSlaveAddress |= (PORTCbits.RC6 << 3);
  8922  06C7  0020               	movlb	0	; select bank0
  8923  06C8  0E0E               	swapf	14,w	;volatile
  8924  06C9  0C89               	rrf	9,f
  8925  06CA  0C89               	rrf	9,f
  8926  06CB  3901               	andlw	1
  8927  06CC  00B8               	movwf	??_AppSm
  8928  06CD  3002               	movlw	2
  8929  06CE                     u2695:	
  8930  06CE  35B8               	lslf	??_AppSm,f
  8931  06CF  3EFF               	addlw	-1
  8932  06D0  1D03               	skipz
  8933  06D1  2ECE               	goto	u2695
  8934  06D2  3538               	lslf	??_AppSm,w
  8935  06D3  00B9               	movwf	??_AppSm+1
  8936  06D4  0839               	movf	??_AppSm+1,w
  8937  06D5  04F6               	iorwf	_I2cSlaveAddress,f
  8938                           
  8939                           ;sb810_app.c: 123: I2cSlaveAddress |= (PORTCbits.RC3 << 2);
  8940  06D6  0C0E               	rrf	14,w	;volatile
  8941  06D7  00B8               	movwf	??_AppSm
  8942  06D8  0CB8               	rrf	??_AppSm,f
  8943  06D9  0C38               	rrf	??_AppSm,w
  8944  06DA  3901               	andlw	1
  8945  06DB  00B9               	movwf	??_AppSm+1
  8946  06DC  3001               	movlw	1
  8947  06DD                     u2705:	
  8948  06DD  35B9               	lslf	??_AppSm+1,f
  8949  06DE  3EFF               	addlw	-1
  8950  06DF  1D03               	skipz
  8951  06E0  2EDD               	goto	u2705
  8952  06E1  3539               	lslf	??_AppSm+1,w
  8953  06E2  00BA               	movwf	??_AppSm+2
  8954  06E3  083A               	movf	??_AppSm+2,w
  8955  06E4  04F6               	iorwf	_I2cSlaveAddress,f
  8956                           
  8957                           ;sb810_app.c: 124: I2cSlaveAddress |= (PORTCbits.RC4 << 1);
  8958  06E5  0E0E               	swapf	14,w	;volatile
  8959  06E6  3901               	andlw	1
  8960  06E7  0709               	addwf	9,w
  8961  06E8  00B8               	movwf	??_AppSm
  8962  06E9  0838               	movf	??_AppSm,w
  8963  06EA  04F6               	iorwf	_I2cSlaveAddress,f
  8964                           
  8965                           ;sb810_app.c: 125: I2cSlaveAddress |= (PORTCbits.RC5 << 0);
  8966  06EB  0E0E               	swapf	14,w	;volatile
  8967  06EC  0C89               	rrf	9,f
  8968  06ED  3901               	andlw	1
  8969  06EE  00B8               	movwf	??_AppSm
  8970  06EF  0838               	movf	??_AppSm,w
  8971  06F0  04F6               	iorwf	_I2cSlaveAddress,f
  8972                           
  8973                           ;sb810_app.c: 134: AppState = WaitWpuSetState;
  8974  06F1  01D4               	clrf	AppSm@AppState
  8975  06F2  0AD4               	incf	AppSm@AppState,f
  8976                           
  8977                           ;sb810_app.c: 135: break;
  8978  06F3  0008               	return
  8979  06F4                     l3397:	
  8980                           ;sb810_app.c: 137: case WaitWpuSetState:
  8981                           
  8982                           
  8983                           ;sb810_app.c: 139: WpuSetCounter++;
  8984  06F4  3001               	movlw	1
  8985  06F5  00B8               	movwf	??_AppSm
  8986  06F6  0838               	movf	??_AppSm,w
  8987  06F7  07D5               	addwf	AppSm@WpuSetCounter,f
  8988                           
  8989                           ;sb810_app.c: 141: if (WpuSetCounter >= ((UINT16)(100)/((UINT16)(20))))
  8990  06F8  3005               	movlw	5
  8991  06F9  0255               	subwf	AppSm@WpuSetCounter,w
  8992  06FA  1C03               	skipc
  8993  06FB  0008               	return
  8994                           
  8995                           ;sb810_app.c: 142: {
  8996                           ;sb810_app.c: 144: AppState = SendI2cAddrState;
  8997  06FC  3002               	movlw	2
  8998  06FD  00B8               	movwf	??_AppSm
  8999  06FE  0838               	movf	??_AppSm,w
  9000  06FF  00D4               	movwf	AppSm@AppState
  9001                           
  9002                           ;sb810_app.c: 145: }
  9003                           ;sb810_app.c: 146: break;
  9004  0700  0008               	return
  9005  0701                     l3403:	
  9006                           ;sb810_app.c: 148: case SendI2cAddrState:
  9007                           
  9008                           
  9009                           ;sb810_app.c: 150: GenerateEvt(&I2cSetAddress);
  9010  0701  3062               	movlw	(low (_I2cSetAddress| 0))& (0+255)
  9011  0702  318E  2686         	fcall	_GenerateEvt
  9012                           
  9013                           ;sb810_app.c: 152: AppState = ManageProtocolState;
  9014  0704  3003               	movlw	3
  9015  0705  0020               	movlb	0	; select bank0
  9016  0706  00B8               	movwf	??_AppSm
  9017  0707  0838               	movf	??_AppSm,w
  9018  0708  00D4               	movwf	AppSm@AppState
  9019                           
  9020                           ;sb810_app.c: 153: break;
  9021  0709  0008               	return
  9022  070A                     l3407:	
  9023                           ;sb810_app.c: 155: case ManageProtocolState:
  9024                           
  9025                           
  9026                           ;sb810_app.c: 157: ManageProtocol();
  9027  070A  318C  24C7         	fcall	_ManageProtocol
  9028                           
  9029                           ;sb810_app.c: 162: }
  9030                           
  9031                           ;sb810_app.c: 161: break;
  9032                           
  9033                           ;sb810_app.c: 160: default:
  9034                           
  9035                           ;sb810_app.c: 158: break;
  9036  070C  0008               	return
  9037  070D                     l3411:	
  9038  070D  0020               	movlb	0	; select bank0
  9039  070E  0854               	movf	AppSm@AppState,w
  9040                           
  9041                           ; Switch size 1, requested type "space"
  9042                           ; Number of cases is 4, Range of values is 0 to 3
  9043                           ; switch strategies available:
  9044                           ; Name         Instructions Cycles
  9045                           ; simple_byte           13     7 (average)
  9046                           ; direct_byte           14     6 (fixed)
  9047                           ; jumptable            260     6 (fixed)
  9048                           ;	Chosen strategy is simple_byte
  9049  070F  3A00               	xorlw	0	; case 0
  9050  0710  1903               	skipnz
  9051  0711  2EC7               	goto	l3393
  9052  0712  3A01               	xorlw	1	; case 1
  9053  0713  1903               	skipnz
  9054  0714  2EF4               	goto	l3397
  9055  0715  3A03               	xorlw	3	; case 2
  9056  0716  1903               	skipnz
  9057  0717  2F01               	goto	l3403
  9058  0718  3A01               	xorlw	1	; case 3
  9059  0719  1903               	skipnz
  9060  071A  2F0A               	goto	l3407
  9061  071B  2F1C               	goto	l60
  9062  071C                     l60:	
  9063  071C  0008               	return
  9064  071D                     __end_of_AppSm:	
  9065                           
  9066                           	psect	text36
  9067  0CC7                     __ptext36:	
  9068 ;; *************** function _ManageProtocol *****************
  9069 ;; Defined at:
  9070 ;;		line 82 in file "../Source/c/04_App/sb810_app.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;		None
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;  Index           1    0        unsigned char 
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  1    wreg      void 
  9077 ;; Registers used:
  9078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9079 ;; Tracked objects:
  9080 ;;		On entry : 0/0
  9081 ;;		On exit  : 0/0
  9082 ;;		Unchanged: 0/0
  9083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;Total ram usage:        0 bytes
  9089 ;; Hardware stack levels used:    1
  9090 ;; Hardware stack levels required when called:    5
  9091 ;; This function calls:
  9092 ;;		_ReceiveEvt
  9093 ;;		_StdS_ManageStdServices
  9094 ;; This function is called by:
  9095 ;;		_AppSm
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           
  9100                           ;psect for function _ManageProtocol
  9101  0CC7                     _ManageProtocol:	
  9102                           
  9103                           ;sb810_app.c: 84: UINT8 Index;
  9104                           ;sb810_app.c: 87: if (ReceiveEvt(&I2cWriteRequest))
  9105                           
  9106                           ;incstack = 0
  9107                           ; Regs used in _ManageProtocol: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9108  0CC7  3064               	movlw	(low (_I2cWriteRequest| 0))& (0+255)
  9109  0CC8  318E  2665  318C   	fcall	_ReceiveEvt
  9110  0CCB  3A00               	xorlw	0
  9111  0CCC  1903               	skipnz
  9112  0CCD  0008               	return
  9113                           
  9114                           ;sb810_app.c: 88: {
  9115                           ;sb810_app.c: 90: StdS_ManageStdServices();
  9116  0CCE  3180  209C         	fcall	_StdS_ManageStdServices
  9117                           
  9118                           ;sb810_app.c: 100: }
  9119                           
  9120                           ;sb810_app.c: 99: break;
  9121                           
  9122                           ;sb810_app.c: 93: {
  9123                           ;sb810_app.c: 98: default:
  9124                           
  9125                           ;sb810_app.c: 92: switch (CmdBuffer[((UINT8)(0))])
  9126  0CD0  0008               	return
  9127  0CD1                     __end_of_ManageProtocol:	
  9128                           
  9129                           	psect	text37
  9130  009C                     __ptext37:	
  9131 ;; *************** function _StdS_ManageStdServices *****************
  9132 ;; Defined at:
  9133 ;;		line 182 in file "../../../../Framework/MercuryFwk/Source/c/03_Sml/02_Ssl/std_ser.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;		None
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;  DieTempStr      4   18[BANK0 ] unsigned char [4]
  9138 ;;  DieTemp         2   22[BANK0 ] unsigned short 
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  1    wreg      void 
  9141 ;; Registers used:
  9142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9149 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9152 ;;Total ram usage:        8 bytes
  9153 ;; Hardware stack levels used:    1
  9154 ;; Hardware stack levels required when called:    4
  9155 ;; This function calls:
  9156 ;;		_BoardReset
  9157 ;;		_ControlLedDirect
  9158 ;;		_GenerateEvt
  9159 ;;		_GetDieTemperature
  9160 ;;		_LowPowerMode
  9161 ;;		_StringCopy
  9162 ;;		_UpdateLebBlinkSts
  9163 ;;		_utoa
  9164 ;; This function is called by:
  9165 ;;		_ManageProtocol
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           
  9170                           ;psect for function _StdS_ManageStdServices
  9171  009C                     _StdS_ManageStdServices:	
  9172                           
  9173                           ;std_ser.c: 184: UINT16 DieTemp;
  9174                           ;std_ser.c: 185: UINT8 DieTempStr[4];
  9175                           ;std_ser.c: 188: switch (CmdBuffer[((UINT8)(0))])
  9176                           
  9177                           ;incstack = 0
  9178                           ; Regs used in _StdS_ManageStdServices: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9179  009C  2966               	goto	l3295
  9180  009D                     l3239:	
  9181                           ;std_ser.c: 189: {
  9182                           ;std_ser.c: 190: case ((UINT8)(0x10)):
  9183                           
  9184                           
  9185                           ;std_ser.c: 192: StringCopy((void*)("ECHO"),RepBuffer,((UINT8)(4)));
  9186  009D  3023               	movlw	low (STR_2| (0+32768))
  9187  009E  0020               	movlb	0	; select bank0
  9188  009F  00A0               	movwf	StringCopy@SourceStr
  9189  00A0  3090               	movlw	high (STR_2| (0+32768))
  9190  00A1  00A1               	movwf	StringCopy@SourceStr+1
  9191  00A2  3020               	movlw	(low (_RepBuffer| (0+256)))& (0+255)
  9192  00A3  00B0               	movwf	??_StdS_ManageStdServices
  9193  00A4  0830               	movf	??_StdS_ManageStdServices,w
  9194  00A5  00A2               	movwf	StringCopy@DestStr
  9195  00A6  3004               	movlw	4
  9196  00A7  00B1               	movwf	??_StdS_ManageStdServices+1
  9197  00A8  0831               	movf	??_StdS_ManageStdServices+1,w
  9198  00A9  00A3               	movwf	StringCopy@Len
  9199  00AA  318E  26A8  3180   	fcall	_StringCopy
  9200                           
  9201                           ;std_ser.c: 194: RepBufferLen = ((UINT8)(4));
  9202  00AD  3004               	movlw	4
  9203  00AE  0020               	movlb	0	; select bank0
  9204  00AF  00B0               	movwf	??_StdS_ManageStdServices
  9205  00B0  0830               	movf	??_StdS_ManageStdServices,w
  9206  00B1  00F7               	movwf	_RepBufferLen
  9207                           
  9208                           ;std_ser.c: 196: GenerateEvt(&I2cReplyPacketReady);
  9209  00B2  3078               	movlw	(low (_I2cReplyPacketReady| 0))& (0+255)
  9210  00B3  318E  2686         	fcall	_GenerateEvt
  9211                           
  9212                           ;std_ser.c: 197: break;
  9213  00B5  0008               	return
  9214  00B6                     l3245:	
  9215                           ;std_ser.c: 199: case ((UINT8)(0x20)):
  9216                           
  9217                           
  9218                           ;std_ser.c: 201: StringCopy((void*)"SB810",RepBuffer,((UINT8)(5)));
  9219  00B6  301D               	movlw	low (STR_3| (0+32768))
  9220  00B7  0020               	movlb	0	; select bank0
  9221  00B8  00A0               	movwf	StringCopy@SourceStr
  9222  00B9  3090               	movlw	high (STR_3| (0+32768))
  9223  00BA  00A1               	movwf	StringCopy@SourceStr+1
  9224  00BB  3020               	movlw	(low (_RepBuffer| (0+256)))& (0+255)
  9225  00BC  00B0               	movwf	??_StdS_ManageStdServices
  9226  00BD  0830               	movf	??_StdS_ManageStdServices,w
  9227  00BE  00A2               	movwf	StringCopy@DestStr
  9228  00BF  3005               	movlw	5
  9229  00C0  00B1               	movwf	??_StdS_ManageStdServices+1
  9230  00C1  0831               	movf	??_StdS_ManageStdServices+1,w
  9231  00C2  00A3               	movwf	StringCopy@Len
  9232  00C3  318E  26A8  3180   	fcall	_StringCopy
  9233                           
  9234                           ;std_ser.c: 203: RepBufferLen = ((UINT8)(5));
  9235  00C6  3005               	movlw	5
  9236  00C7  0020               	movlb	0	; select bank0
  9237  00C8  00B0               	movwf	??_StdS_ManageStdServices
  9238  00C9  0830               	movf	??_StdS_ManageStdServices,w
  9239  00CA  00F7               	movwf	_RepBufferLen
  9240                           
  9241                           ;std_ser.c: 205: GenerateEvt(&I2cReplyPacketReady);
  9242  00CB  3078               	movlw	(low (_I2cReplyPacketReady| 0))& (0+255)
  9243  00CC  318E  2686         	fcall	_GenerateEvt
  9244                           
  9245                           ;std_ser.c: 206: break;
  9246  00CE  0008               	return
  9247  00CF                     l3251:	
  9248                           ;std_ser.c: 208: case ((UINT8)(0x21)):
  9249                           
  9250                           
  9251                           ;std_ser.c: 210: StringCopy((void*)"01.00.00",RepBuffer,((UINT8)(8)));
  9252  00CF  300C               	movlw	low (STR_4| (0+32768))
  9253  00D0  0020               	movlb	0	; select bank0
  9254  00D1  00A0               	movwf	StringCopy@SourceStr
  9255  00D2  3090               	movlw	high (STR_4| (0+32768))
  9256  00D3  00A1               	movwf	StringCopy@SourceStr+1
  9257  00D4  3020               	movlw	(low (_RepBuffer| (0+256)))& (0+255)
  9258  00D5  00B0               	movwf	??_StdS_ManageStdServices
  9259  00D6  0830               	movf	??_StdS_ManageStdServices,w
  9260  00D7  00A2               	movwf	StringCopy@DestStr
  9261  00D8  3008               	movlw	8
  9262  00D9  00B1               	movwf	??_StdS_ManageStdServices+1
  9263  00DA  0831               	movf	??_StdS_ManageStdServices+1,w
  9264  00DB  00A3               	movwf	StringCopy@Len
  9265  00DC  318E  26A8  3180   	fcall	_StringCopy
  9266                           
  9267                           ;std_ser.c: 212: RepBufferLen = ((UINT8)(8));
  9268  00DF  3008               	movlw	8
  9269  00E0  0020               	movlb	0	; select bank0
  9270  00E1  00B0               	movwf	??_StdS_ManageStdServices
  9271  00E2  0830               	movf	??_StdS_ManageStdServices,w
  9272  00E3  00F7               	movwf	_RepBufferLen
  9273                           
  9274                           ;std_ser.c: 214: GenerateEvt(&I2cReplyPacketReady);
  9275  00E4  3078               	movlw	(low (_I2cReplyPacketReady| 0))& (0+255)
  9276  00E5  318E  2686         	fcall	_GenerateEvt
  9277                           
  9278                           ;std_ser.c: 215: break;
  9279  00E7  0008               	return
  9280  00E8                     l3257:	
  9281                           ;std_ser.c: 217: case ((UINT8)(0x22)):
  9282                           
  9283                           
  9284                           ;std_ser.c: 219: StringCopy((void*)"01.00.00",RepBuffer,((UINT8)(8)));
  9285  00E8  300C               	movlw	low (STR_4| (0+32768))
  9286  00E9  0020               	movlb	0	; select bank0
  9287  00EA  00A0               	movwf	StringCopy@SourceStr
  9288  00EB  3090               	movlw	high (STR_4| (0+32768))
  9289  00EC  00A1               	movwf	StringCopy@SourceStr+1
  9290  00ED  3020               	movlw	(low (_RepBuffer| (0+256)))& (0+255)
  9291  00EE  00B0               	movwf	??_StdS_ManageStdServices
  9292  00EF  0830               	movf	??_StdS_ManageStdServices,w
  9293  00F0  00A2               	movwf	StringCopy@DestStr
  9294  00F1  3008               	movlw	8
  9295  00F2  00B1               	movwf	??_StdS_ManageStdServices+1
  9296  00F3  0831               	movf	??_StdS_ManageStdServices+1,w
  9297  00F4  00A3               	movwf	StringCopy@Len
  9298  00F5  318E  26A8  3180   	fcall	_StringCopy
  9299                           
  9300                           ;std_ser.c: 221: RepBufferLen = ((UINT8)(8));
  9301  00F8  3008               	movlw	8
  9302  00F9  0020               	movlb	0	; select bank0
  9303  00FA  00B0               	movwf	??_StdS_ManageStdServices
  9304  00FB  0830               	movf	??_StdS_ManageStdServices,w
  9305  00FC  00F7               	movwf	_RepBufferLen
  9306                           
  9307                           ;std_ser.c: 223: GenerateEvt(&I2cReplyPacketReady);
  9308  00FD  3078               	movlw	(low (_I2cReplyPacketReady| 0))& (0+255)
  9309  00FE  318E  2686         	fcall	_GenerateEvt
  9310                           
  9311                           ;std_ser.c: 225: break;
  9312  0100  0008               	return
  9313  0101                     l3263:	
  9314                           ;std_ser.c: 227: case ((UINT8)(0x30)):
  9315                           
  9316                           
  9317                           ;std_ser.c: 229: BoardReset();
  9318  0101  3180  2002         	fcall	_BoardReset
  9319                           
  9320                           ;std_ser.c: 230: break;
  9321  0103  0008               	return
  9322  0104                     l3265:	
  9323                           ;std_ser.c: 232: case ((UINT8)(0x31)):
  9324                           
  9325                           
  9326                           ;std_ser.c: 234: LowPowerMode();
  9327  0104  318D  2533         	fcall	_LowPowerMode
  9328                           
  9329                           ;std_ser.c: 235: break;
  9330  0106  0008               	return
  9331  0107                     l3267:	
  9332                           ;std_ser.c: 237: case ((UINT8)(0x41)):
  9333                           
  9334                           
  9335                           ;std_ser.c: 239: UpdateLebBlinkSts();
  9336  0107  318C  24F9         	fcall	_UpdateLebBlinkSts
  9337                           
  9338                           ;std_ser.c: 240: break;
  9339  0109  0008               	return
  9340  010A                     l3269:	
  9341                           ;std_ser.c: 242: case ((UINT8)(0x42)):
  9342                           
  9343                           
  9344                           ;std_ser.c: 244: ControlLedDirect();
  9345  010A  318C  24BD         	fcall	_ControlLedDirect
  9346                           
  9347                           ;std_ser.c: 245: break;
  9348  010C  0008               	return
  9349  010D                     l3271:	
  9350                           ;std_ser.c: 247: case ((UINT8)(0x45)):
  9351                           
  9352                           
  9353                           ;std_ser.c: 249: DieTemp = GetDieTemperature();
  9354  010D  318D  25D5  3180   	fcall	_GetDieTemperature
  9355  0110  0020               	movlb	0	; select bank0
  9356  0111  0824               	movf	?_GetDieTemperature+1,w
  9357  0112  00B7               	movwf	StdS_ManageStdServices@DieTemp+1
  9358  0113  0823               	movf	?_GetDieTemperature,w
  9359  0114  00B6               	movwf	StdS_ManageStdServices@DieTemp
  9360                           
  9361                           ;std_ser.c: 251: RepBuffer[0] = ((DieTemp & 0xFF00) >> 8);
  9362  0115  0837               	movf	StdS_ManageStdServices@DieTemp+1,w
  9363  0116  00B0               	movwf	??_StdS_ManageStdServices
  9364  0117  0830               	movf	??_StdS_ManageStdServices,w
  9365  0118  0022               	movlb	2	; select bank2
  9366  0119  00A0               	movwf	_RepBuffer^(0+256)
  9367                           
  9368                           ;std_ser.c: 252: RepBuffer[1] = (DieTemp & 0x00FF);
  9369  011A  0020               	movlb	0	; select bank0
  9370  011B  0836               	movf	StdS_ManageStdServices@DieTemp,w
  9371  011C  00B0               	movwf	??_StdS_ManageStdServices
  9372  011D  0830               	movf	??_StdS_ManageStdServices,w
  9373  011E  0022               	movlb	2	; select bank2
  9374  011F  00A1               	movwf	(_RepBuffer^(0+256)+1)
  9375                           
  9376                           ;std_ser.c: 254: RepBufferLen = ((UINT8)(2));
  9377  0120  3002               	movlw	2
  9378  0121  0020               	movlb	0	; select bank0
  9379  0122  00B0               	movwf	??_StdS_ManageStdServices
  9380  0123  0830               	movf	??_StdS_ManageStdServices,w
  9381  0124  00F7               	movwf	_RepBufferLen
  9382                           
  9383                           ;std_ser.c: 256: GenerateEvt(&I2cReplyPacketReady);
  9384  0125  3078               	movlw	(low (_I2cReplyPacketReady| 0))& (0+255)
  9385  0126  318E  2686         	fcall	_GenerateEvt
  9386                           
  9387                           ;std_ser.c: 257: break;
  9388  0128  0008               	return
  9389  0129                     l3281:	
  9390                           ;std_ser.c: 259: case ((UINT8)(0x46)):
  9391                           
  9392                           
  9393                           ;std_ser.c: 261: DieTemp = GetDieTemperature();
  9394  0129  318D  25D5  3180   	fcall	_GetDieTemperature
  9395  012C  0020               	movlb	0	; select bank0
  9396  012D  0824               	movf	?_GetDieTemperature+1,w
  9397  012E  00B7               	movwf	StdS_ManageStdServices@DieTemp+1
  9398  012F  0823               	movf	?_GetDieTemperature,w
  9399  0130  00B6               	movwf	StdS_ManageStdServices@DieTemp
  9400                           
  9401                           ;std_ser.c: 263: DieTemp = (DieTemp/8) - 40;
  9402  0131  0837               	movf	StdS_ManageStdServices@DieTemp+1,w
  9403  0132  00B1               	movwf	??_StdS_ManageStdServices+1
  9404  0133  0836               	movf	StdS_ManageStdServices@DieTemp,w
  9405  0134  00B0               	movwf	??_StdS_ManageStdServices
  9406  0135  36B1               	lsrf	??_StdS_ManageStdServices+1,f
  9407  0136  0CB0               	rrf	??_StdS_ManageStdServices,f
  9408  0137  36B1               	lsrf	??_StdS_ManageStdServices+1,f
  9409  0138  0CB0               	rrf	??_StdS_ManageStdServices,f
  9410  0139  36B1               	lsrf	??_StdS_ManageStdServices+1,f
  9411  013A  0CB0               	rrf	??_StdS_ManageStdServices,f
  9412  013B  0830               	movf	??_StdS_ManageStdServices,w
  9413  013C  3ED8               	addlw	216
  9414  013D  00B6               	movwf	StdS_ManageStdServices@DieTemp
  9415  013E  30FF               	movlw	255
  9416  013F  3D31               	addwfc	??_StdS_ManageStdServices+1,w
  9417  0140  00B7               	movwf	StdS_ManageStdServices@DieTemp+1
  9418                           
  9419                           ;std_ser.c: 265: utoa(DieTempStr,DieTemp,10);
  9420  0141  0837               	movf	StdS_ManageStdServices@DieTemp+1,w
  9421  0142  00A8               	movwf	utoa@val+1
  9422  0143  0836               	movf	StdS_ManageStdServices@DieTemp,w
  9423  0144  00A7               	movwf	utoa@val
  9424  0145  300A               	movlw	10
  9425  0146  00A9               	movwf	utoa@base
  9426  0147  3000               	movlw	0
  9427  0148  00AA               	movwf	utoa@base+1
  9428  0149  3032               	movlw	(low (StdS_ManageStdServices@DieTempStr| 0))& (0+255)
  9429  014A  3186  2664  3180   	fcall	_utoa
  9430                           
  9431                           ;std_ser.c: 267: StringCopy(DieTempStr,RepBuffer,((UINT8)(2)));
  9432  014D  3032               	movlw	low StdS_ManageStdServices@DieTempStr
  9433  014E  0020               	movlb	0	; select bank0
  9434  014F  00A0               	movwf	StringCopy@SourceStr
  9435  0150  3000               	movlw	high StdS_ManageStdServices@DieTempStr
  9436  0151  00A1               	movwf	StringCopy@SourceStr+1
  9437  0152  3020               	movlw	(low (_RepBuffer| (0+256)))& (0+255)
  9438  0153  00B0               	movwf	??_StdS_ManageStdServices
  9439  0154  0830               	movf	??_StdS_ManageStdServices,w
  9440  0155  00A2               	movwf	StringCopy@DestStr
  9441  0156  3002               	movlw	2
  9442  0157  00B1               	movwf	??_StdS_ManageStdServices+1
  9443  0158  0831               	movf	??_StdS_ManageStdServices+1,w
  9444  0159  00A3               	movwf	StringCopy@Len
  9445  015A  318E  26A8  3180   	fcall	_StringCopy
  9446                           
  9447                           ;std_ser.c: 269: RepBufferLen = ((UINT8)(2));
  9448  015D  3002               	movlw	2
  9449  015E  0020               	movlb	0	; select bank0
  9450  015F  00B0               	movwf	??_StdS_ManageStdServices
  9451  0160  0830               	movf	??_StdS_ManageStdServices,w
  9452  0161  00F7               	movwf	_RepBufferLen
  9453                           
  9454                           ;std_ser.c: 271: GenerateEvt(&I2cReplyPacketReady);
  9455  0162  3078               	movlw	(low (_I2cReplyPacketReady| 0))& (0+255)
  9456  0163  318E  2686         	fcall	_GenerateEvt
  9457                           
  9458                           ;std_ser.c: 276: }
  9459                           
  9460                           ;std_ser.c: 275: break;
  9461                           
  9462                           ;std_ser.c: 274: default:
  9463                           
  9464                           ;std_ser.c: 272: break;
  9465  0165  0008               	return
  9466  0166                     l3295:	
  9467  0166  0023               	movlb	3	; select bank3
  9468  0167  0820               	movf	_CmdBuffer^(0+384),w
  9469                           
  9470                           ; Switch size 1, requested type "space"
  9471                           ; Number of cases is 10, Range of values is 16 to 70
  9472                           ; switch strategies available:
  9473                           ; Name         Instructions Cycles
  9474                           ; simple_byte           31    16 (average)
  9475                           ; direct_byte          119     9 (fixed)
  9476                           ; jumptable            263     9 (fixed)
  9477                           ;	Chosen strategy is simple_byte
  9478  0168  3A10               	xorlw	16	; case 16
  9479  0169  1903               	skipnz
  9480  016A  289D               	goto	l3239
  9481  016B  3A30               	xorlw	48	; case 32
  9482  016C  1903               	skipnz
  9483  016D  28B6               	goto	l3245
  9484  016E  3A01               	xorlw	1	; case 33
  9485  016F  1903               	skipnz
  9486  0170  28CF               	goto	l3251
  9487  0171  3A03               	xorlw	3	; case 34
  9488  0172  1903               	skipnz
  9489  0173  28E8               	goto	l3257
  9490  0174  3A12               	xorlw	18	; case 48
  9491  0175  1903               	skipnz
  9492  0176  2901               	goto	l3263
  9493  0177  3A01               	xorlw	1	; case 49
  9494  0178  1903               	skipnz
  9495  0179  2904               	goto	l3265
  9496  017A  3A70               	xorlw	112	; case 65
  9497  017B  1903               	skipnz
  9498  017C  2907               	goto	l3267
  9499  017D  3A03               	xorlw	3	; case 66
  9500  017E  1903               	skipnz
  9501  017F  290A               	goto	l3269
  9502  0180  3A07               	xorlw	7	; case 69
  9503  0181  1903               	skipnz
  9504  0182  290D               	goto	l3271
  9505  0183  3A03               	xorlw	3	; case 70
  9506  0184  1903               	skipnz
  9507  0185  2929               	goto	l3281
  9508  0186  2987               	goto	l742
  9509  0187                     l742:	
  9510  0187  0008               	return
  9511  0188                     __end_of_StdS_ManageStdServices:	
  9512                           
  9513                           	psect	text38
  9514  0664                     __ptext38:	
  9515 ;; *************** function _utoa *****************
  9516 ;; Defined at:
  9517 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\itoa.c"
  9518 ;; Parameters:    Size  Location     Type
  9519 ;;  buf             1    wreg     PTR unsigned char 
  9520 ;;		 -> StdS_ManageStdServices@DieTempStr(4), 
  9521 ;;  val             2    7[BANK0 ] unsigned int 
  9522 ;;  base            2    9[BANK0 ] int 
  9523 ;; Auto vars:     Size  Location     Type
  9524 ;;  buf             1   15[BANK0 ] PTR unsigned char 
  9525 ;;		 -> StdS_ManageStdServices@DieTempStr(4), 
  9526 ;;  v               2   12[BANK0 ] unsigned int 
  9527 ;;  c               1   14[BANK0 ] unsigned char 
  9528 ;; Return value:  Size  Location     Type
  9529 ;;                  1    wreg      PTR unsigned char 
  9530 ;; Registers used:
  9531 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9532 ;; Tracked objects:
  9533 ;;		On entry : 0/0
  9534 ;;		On exit  : 0/0
  9535 ;;		Unchanged: 0/0
  9536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9537 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9538 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9539 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9540 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9541 ;;Total ram usage:        9 bytes
  9542 ;; Hardware stack levels used:    1
  9543 ;; Hardware stack levels required when called:    3
  9544 ;; This function calls:
  9545 ;;		___lwdiv
  9546 ;;		___lwmod
  9547 ;; This function is called by:
  9548 ;;		_StdS_ManageStdServices
  9549 ;; This function uses a non-reentrant model
  9550 ;;
  9551                           
  9552                           
  9553                           ;psect for function _utoa
  9554  0664                     _utoa:	
  9555                           
  9556                           ;incstack = 0
  9557                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9558                           ;utoa@buf stored from wreg
  9559  0664  0020               	movlb	0	; select bank0
  9560  0665  00AF               	movwf	utoa@buf
  9561  0666  0828               	movf	utoa@val+1,w
  9562  0667  00AD               	movwf	utoa@v+1
  9563  0668  0827               	movf	utoa@val,w
  9564  0669  00AC               	movwf	utoa@v
  9565  066A                     l3191:	
  9566  066A  082A               	movf	utoa@base+1,w
  9567  066B  00A1               	movwf	___lwdiv@divisor+1
  9568  066C  0829               	movf	utoa@base,w
  9569  066D  00A0               	movwf	___lwdiv@divisor
  9570  066E  082D               	movf	utoa@v+1,w
  9571  066F  00A3               	movwf	___lwdiv@dividend+1
  9572  0670  082C               	movf	utoa@v,w
  9573  0671  00A2               	movwf	___lwdiv@dividend
  9574  0672  318F  27CB  3186   	fcall	___lwdiv
  9575  0675  0020               	movlb	0	; select bank0
  9576  0676  0821               	movf	?___lwdiv+1,w
  9577  0677  00AD               	movwf	utoa@v+1
  9578  0678  0820               	movf	?___lwdiv,w
  9579  0679  00AC               	movwf	utoa@v
  9580  067A  3001               	movlw	1
  9581  067B  00AB               	movwf	??_utoa
  9582  067C  082B               	movf	??_utoa,w
  9583  067D  07AF               	addwf	utoa@buf,f
  9584  067E  082C               	movf	utoa@v,w
  9585  067F  042D               	iorwf	utoa@v+1,w
  9586  0680  1D03               	btfss	3,2
  9587  0681  2E6A               	goto	l3191
  9588  0682  082F               	movf	utoa@buf,w
  9589  0683  0086               	movwf	6
  9590  0684  0187               	clrf	7
  9591  0685  0181               	clrf	1
  9592  0686  3001               	movlw	1
  9593  0687  02AF               	subwf	utoa@buf,f
  9594  0688                     l3201:	
  9595  0688  082A               	movf	utoa@base+1,w
  9596  0689  00A1               	movwf	___lwmod@divisor+1
  9597  068A  0829               	movf	utoa@base,w
  9598  068B  00A0               	movwf	___lwmod@divisor
  9599  068C  0828               	movf	utoa@val+1,w
  9600  068D  00A3               	movwf	___lwmod@dividend+1
  9601  068E  0827               	movf	utoa@val,w
  9602  068F  00A2               	movwf	___lwmod@dividend
  9603  0690  318F  276E  3186   	fcall	___lwmod
  9604  0693  0020               	movlb	0	; select bank0
  9605  0694  0820               	movf	?___lwmod,w
  9606  0695  00AB               	movwf	??_utoa
  9607  0696  082B               	movf	??_utoa,w
  9608  0697  00AE               	movwf	utoa@c
  9609  0698  082A               	movf	utoa@base+1,w
  9610  0699  00A1               	movwf	___lwdiv@divisor+1
  9611  069A  0829               	movf	utoa@base,w
  9612  069B  00A0               	movwf	___lwdiv@divisor
  9613  069C  0828               	movf	utoa@val+1,w
  9614  069D  00A3               	movwf	___lwdiv@dividend+1
  9615  069E  0827               	movf	utoa@val,w
  9616  069F  00A2               	movwf	___lwdiv@dividend
  9617  06A0  318F  27CB  3186   	fcall	___lwdiv
  9618  06A3  0020               	movlb	0	; select bank0
  9619  06A4  0821               	movf	?___lwdiv+1,w
  9620  06A5  00A8               	movwf	utoa@val+1
  9621  06A6  0820               	movf	?___lwdiv,w
  9622  06A7  00A7               	movwf	utoa@val
  9623  06A8  300A               	movlw	10
  9624  06A9  022E               	subwf	utoa@c,w
  9625  06AA  1C03               	skipc
  9626  06AB  2EB0               	goto	l1190
  9627  06AC  3007               	movlw	7
  9628  06AD  00AB               	movwf	??_utoa
  9629  06AE  082B               	movf	??_utoa,w
  9630  06AF  07AE               	addwf	utoa@c,f
  9631  06B0                     l1190:	
  9632  06B0  3030               	movlw	48
  9633  06B1  00AB               	movwf	??_utoa
  9634  06B2  082B               	movf	??_utoa,w
  9635  06B3  07AE               	addwf	utoa@c,f
  9636  06B4  082E               	movf	utoa@c,w
  9637  06B5  00AB               	movwf	??_utoa
  9638  06B6  082F               	movf	utoa@buf,w
  9639  06B7  0086               	movwf	6
  9640  06B8  0187               	clrf	7
  9641  06B9  082B               	movf	??_utoa,w
  9642  06BA  0081               	movwf	1
  9643  06BB  3001               	movlw	1
  9644  06BC  02AF               	subwf	utoa@buf,f
  9645  06BD  0827               	movf	utoa@val,w
  9646  06BE  0428               	iorwf	utoa@val+1,w
  9647  06BF  1D03               	btfss	3,2
  9648  06C0  2E88               	goto	l3201
  9649                           
  9650                           ;	Return value of _utoa is never used
  9651  06C1  3001               	movlw	1
  9652  06C2  00AB               	movwf	??_utoa
  9653  06C3  082B               	movf	??_utoa,w
  9654  06C4  07AF               	addwf	utoa@buf,f
  9655  06C5  0008               	return
  9656  06C6                     __end_of_utoa:	
  9657                           
  9658                           	psect	text39
  9659  0F6E                     __ptext39:	
  9660 ;; *************** function ___lwmod *****************
  9661 ;; Defined at:
  9662 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;  divisor         2    0[BANK0 ] unsigned int 
  9665 ;;  dividend        2    2[BANK0 ] unsigned int 
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;  counter         1    5[COMMON] unsigned char 
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  2    0[BANK0 ] unsigned int 
  9670 ;; Registers used:
  9671 ;;		wreg, status,2, status,0
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9677 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9679 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9680 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9681 ;;Total ram usage:        6 bytes
  9682 ;; Hardware stack levels used:    1
  9683 ;; Hardware stack levels required when called:    2
  9684 ;; This function calls:
  9685 ;;		Nothing
  9686 ;; This function is called by:
  9687 ;;		_utoa
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690                           
  9691                           
  9692                           ;psect for function ___lwmod
  9693  0F6E                     ___lwmod:	
  9694                           
  9695                           ;incstack = 0
  9696                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9697  0F6E  0020               	movlb	0	; select bank0
  9698  0F6F  0820               	movf	___lwmod@divisor,w
  9699  0F70  0421               	iorwf	___lwmod@divisor+1,w
  9700  0F71  1903               	btfsc	3,2
  9701  0F72  2F96               	goto	l3133
  9702  0F73  01F5               	clrf	___lwmod@counter
  9703  0F74  0AF5               	incf	___lwmod@counter,f
  9704  0F75                     l3123:	
  9705  0F75  1BA1               	btfsc	___lwmod@divisor+1,7
  9706  0F76  2F81               	goto	l3125
  9707  0F77  3001               	movlw	1
  9708  0F78                     u2315:	
  9709  0F78  35A0               	lslf	___lwmod@divisor,f
  9710  0F79  0DA1               	rlf	___lwmod@divisor+1,f
  9711  0F7A  0B89               	decfsz	9,f
  9712  0F7B  2F78               	goto	u2315
  9713  0F7C  3001               	movlw	1
  9714  0F7D  00F4               	movwf	??___lwmod
  9715  0F7E  0874               	movf	??___lwmod,w
  9716  0F7F  07F5               	addwf	___lwmod@counter,f
  9717  0F80  2F75               	goto	l3123
  9718  0F81                     l3125:	
  9719  0F81  0821               	movf	___lwmod@divisor+1,w
  9720  0F82  0223               	subwf	___lwmod@dividend+1,w
  9721  0F83  1D03               	skipz
  9722  0F84  2F87               	goto	u2335
  9723  0F85  0820               	movf	___lwmod@divisor,w
  9724  0F86  0222               	subwf	___lwmod@dividend,w
  9725  0F87                     u2335:	
  9726  0F87  1C03               	skipc
  9727  0F88  2F8D               	goto	l3129
  9728  0F89  0820               	movf	___lwmod@divisor,w
  9729  0F8A  02A2               	subwf	___lwmod@dividend,f
  9730  0F8B  0821               	movf	___lwmod@divisor+1,w
  9731  0F8C  3BA3               	subwfb	___lwmod@dividend+1,f
  9732  0F8D                     l3129:	
  9733  0F8D  3001               	movlw	1
  9734  0F8E                     u2345:	
  9735  0F8E  36A1               	lsrf	___lwmod@divisor+1,f
  9736  0F8F  0CA0               	rrf	___lwmod@divisor,f
  9737  0F90  0B89               	decfsz	9,f
  9738  0F91  2F8E               	goto	u2345
  9739  0F92  3001               	movlw	1
  9740  0F93  02F5               	subwf	___lwmod@counter,f
  9741  0F94  1D03               	btfss	3,2
  9742  0F95  2F81               	goto	l3125
  9743  0F96                     l3133:	
  9744  0F96  0823               	movf	___lwmod@dividend+1,w
  9745  0F97  00A1               	movwf	?___lwmod+1
  9746  0F98  0822               	movf	___lwmod@dividend,w
  9747  0F99  00A0               	movwf	?___lwmod
  9748  0F9A  0008               	return
  9749  0F9B                     __end_of___lwmod:	
  9750                           
  9751                           	psect	text40
  9752  0FCB                     __ptext40:	
  9753 ;; *************** function ___lwdiv *****************
  9754 ;; Defined at:
  9755 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  9756 ;; Parameters:    Size  Location     Type
  9757 ;;  divisor         2    0[BANK0 ] unsigned int 
  9758 ;;  dividend        2    2[BANK0 ] unsigned int 
  9759 ;; Auto vars:     Size  Location     Type
  9760 ;;  quotient        2    5[BANK0 ] unsigned int 
  9761 ;;  counter         1    4[BANK0 ] unsigned char 
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  2    0[BANK0 ] unsigned int 
  9764 ;; Registers used:
  9765 ;;		wreg, status,2, status,0
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9771 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9772 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9774 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9775 ;;Total ram usage:        8 bytes
  9776 ;; Hardware stack levels used:    1
  9777 ;; Hardware stack levels required when called:    2
  9778 ;; This function calls:
  9779 ;;		Nothing
  9780 ;; This function is called by:
  9781 ;;		_utoa
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           
  9786                           ;psect for function ___lwdiv
  9787  0FCB                     ___lwdiv:	
  9788                           
  9789                           ;incstack = 0
  9790                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9791  0FCB  0020               	movlb	0	; select bank0
  9792  0FCC  01A5               	clrf	___lwdiv@quotient
  9793  0FCD  01A6               	clrf	___lwdiv@quotient+1
  9794  0FCE  0820               	movf	___lwdiv@divisor,w
  9795  0FCF  0421               	iorwf	___lwdiv@divisor+1,w
  9796  0FD0  1903               	btfsc	3,2
  9797  0FD1  2FFB               	goto	l3111
  9798  0FD2  01A4               	clrf	___lwdiv@counter
  9799  0FD3  0AA4               	incf	___lwdiv@counter,f
  9800  0FD4                     l3099:	
  9801  0FD4  1BA1               	btfsc	___lwdiv@divisor+1,7
  9802  0FD5  2FE0               	goto	l3101
  9803  0FD6  3001               	movlw	1
  9804  0FD7                     u2245:	
  9805  0FD7  35A0               	lslf	___lwdiv@divisor,f
  9806  0FD8  0DA1               	rlf	___lwdiv@divisor+1,f
  9807  0FD9  0B89               	decfsz	9,f
  9808  0FDA  2FD7               	goto	u2245
  9809  0FDB  3001               	movlw	1
  9810  0FDC  00F4               	movwf	??___lwdiv
  9811  0FDD  0874               	movf	??___lwdiv,w
  9812  0FDE  07A4               	addwf	___lwdiv@counter,f
  9813  0FDF  2FD4               	goto	l3099
  9814  0FE0                     l3101:	
  9815  0FE0  3001               	movlw	1
  9816  0FE1                     u2265:	
  9817  0FE1  35A5               	lslf	___lwdiv@quotient,f
  9818  0FE2  0DA6               	rlf	___lwdiv@quotient+1,f
  9819  0FE3  0B89               	decfsz	9,f
  9820  0FE4  2FE1               	goto	u2265
  9821  0FE5  0821               	movf	___lwdiv@divisor+1,w
  9822  0FE6  0223               	subwf	___lwdiv@dividend+1,w
  9823  0FE7  1D03               	skipz
  9824  0FE8  2FEB               	goto	u2275
  9825  0FE9  0820               	movf	___lwdiv@divisor,w
  9826  0FEA  0222               	subwf	___lwdiv@dividend,w
  9827  0FEB                     u2275:	
  9828  0FEB  1C03               	skipc
  9829  0FEC  2FF2               	goto	l3107
  9830  0FED  0820               	movf	___lwdiv@divisor,w
  9831  0FEE  02A2               	subwf	___lwdiv@dividend,f
  9832  0FEF  0821               	movf	___lwdiv@divisor+1,w
  9833  0FF0  3BA3               	subwfb	___lwdiv@dividend+1,f
  9834  0FF1  1425               	bsf	___lwdiv@quotient,0
  9835  0FF2                     l3107:	
  9836  0FF2  3001               	movlw	1
  9837  0FF3                     u2285:	
  9838  0FF3  36A1               	lsrf	___lwdiv@divisor+1,f
  9839  0FF4  0CA0               	rrf	___lwdiv@divisor,f
  9840  0FF5  0B89               	decfsz	9,f
  9841  0FF6  2FF3               	goto	u2285
  9842  0FF7  3001               	movlw	1
  9843  0FF8  02A4               	subwf	___lwdiv@counter,f
  9844  0FF9  1D03               	btfss	3,2
  9845  0FFA  2FE0               	goto	l3101
  9846  0FFB                     l3111:	
  9847  0FFB  0826               	movf	___lwdiv@quotient+1,w
  9848  0FFC  00A1               	movwf	?___lwdiv+1
  9849  0FFD  0825               	movf	___lwdiv@quotient,w
  9850  0FFE  00A0               	movwf	?___lwdiv
  9851  0FFF  0008               	return
  9852  1000                     __end_of___lwdiv:	
  9853                           
  9854                           	psect	text41
  9855  0CF9                     __ptext41:	
  9856 ;; *************** function _UpdateLebBlinkSts *****************
  9857 ;; Defined at:
  9858 ;;		line 75 in file "../../../../Framework/MercuryFwk/Source/c/03_Sml/02_Ssl/std_ser.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;		None
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;		None
  9863 ;; Return value:  Size  Location     Type
  9864 ;;                  1    wreg      void 
  9865 ;; Registers used:
  9866 ;;		wreg, status,2, status,0
  9867 ;; Tracked objects:
  9868 ;;		On entry : 0/0
  9869 ;;		On exit  : 0/0
  9870 ;;		Unchanged: 0/0
  9871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9876 ;;Total ram usage:        0 bytes
  9877 ;; Hardware stack levels used:    1
  9878 ;; Hardware stack levels required when called:    2
  9879 ;; This function calls:
  9880 ;;		Nothing
  9881 ;; This function is called by:
  9882 ;;		_StdS_ManageStdServices
  9883 ;; This function uses a non-reentrant model
  9884 ;;
  9885                           
  9886                           
  9887                           ;psect for function _UpdateLebBlinkSts
  9888  0CF9                     _UpdateLebBlinkSts:	
  9889                           
  9890                           ;std_ser.c: 78: if (CmdBuffer[((UINT8)(1))] == ((UINT8)(1)))
  9891                           
  9892                           ;incstack = 0
  9893                           ; Regs used in _UpdateLebBlinkSts: [wreg+status,2+status,0]
  9894  0CF9  0023               	movlb	3	; select bank3
  9895  0CFA  0321               	decf	(_CmdBuffer^(0+384)+1),w
  9896  0CFB  1D03               	btfss	3,2
  9897  0CFC  2D01               	goto	l3163
  9898                           
  9899                           ;std_ser.c: 79: {
  9900                           ;std_ser.c: 80: LedBlinkSts = ((UINT8)(1));
  9901  0CFD  0020               	movlb	0	; select bank0
  9902  0CFE  01E6               	clrf	_LedBlinkSts
  9903  0CFF  0AE6               	incf	_LedBlinkSts,f
  9904                           
  9905                           ;std_ser.c: 81: }
  9906  0D00  0008               	return
  9907  0D01                     l3163:	
  9908                           
  9909                           ;std_ser.c: 82: else
  9910                           ;std_ser.c: 83: {
  9911                           ;std_ser.c: 84: LedBlinkSts = ((UINT8)(0));
  9912  0D01  0020               	movlb	0	; select bank0
  9913  0D02  01E6               	clrf	_LedBlinkSts
  9914  0D03  0008               	return
  9915  0D04                     __end_of_UpdateLebBlinkSts:	
  9916                           
  9917                           	psect	text42
  9918  0EA8                     __ptext42:	
  9919 ;; *************** function _StringCopy *****************
  9920 ;; Defined at:
  9921 ;;		line 104 in file "../../../../Framework/MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
  9922 ;; Parameters:    Size  Location     Type
  9923 ;;  SourceStr       2    0[BANK0 ] PTR unsigned char 
  9924 ;;		 -> StdS_ManageStdServices@DieTempStr(4), STR_5(9), STR_4(9), STR_3(6), 
  9925 ;;		 -> STR_2(5), 
  9926 ;;  DestStr         1    2[BANK0 ] PTR unsigned char 
  9927 ;;		 -> RepBuffer(80), 
  9928 ;;  Len             1    3[BANK0 ] unsigned char 
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;  Index           1    4[COMMON] unsigned char 
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  1    wreg      void 
  9933 ;; Registers used:
  9934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9935 ;; Tracked objects:
  9936 ;;		On entry : 0/0
  9937 ;;		On exit  : 0/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9940 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;Total ram usage:        9 bytes
  9945 ;; Hardware stack levels used:    1
  9946 ;; Hardware stack levels required when called:    2
  9947 ;; This function calls:
  9948 ;;		Nothing
  9949 ;; This function is called by:
  9950 ;;		_StdS_ManageStdServices
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           
  9955                           ;psect for function _StringCopy
  9956  0EA8                     _StringCopy:	
  9957                           
  9958                           ;sf.c: 106: UINT8 Index = 0;
  9959                           
  9960                           ;incstack = 0
  9961                           ; Regs used in _StringCopy: [wreg-fsr1h+status,2+status,0+pclath]
  9962  0EA8  01F4               	clrf	StringCopy@Index
  9963                           
  9964                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
  9965  0EA9  01F4               	clrf	StringCopy@Index
  9966  0EAA                     l3157:	
  9967  0EAA  0020               	movlb	0	; select bank0
  9968  0EAB  0823               	movf	StringCopy@Len,w
  9969  0EAC  0274               	subwf	StringCopy@Index,w
  9970  0EAD  1803               	btfsc	3,0
  9971  0EAE  0008               	return
  9972                           
  9973                           ;sf.c: 110: {
  9974                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
  9975  0EAF  0020               	movlb	0	; select bank0
  9976  0EB0  0821               	movf	StringCopy@SourceStr+1,w
  9977  0EB1  00A5               	movwf	??_StringCopy+1
  9978  0EB2  0820               	movf	StringCopy@SourceStr,w
  9979  0EB3  00A4               	movwf	??_StringCopy
  9980  0EB4  0874               	movf	StringCopy@Index,w
  9981  0EB5  0724               	addwf	??_StringCopy,w
  9982  0EB6  0084               	movwf	4
  9983  0EB7  0825               	movf	??_StringCopy+1,w
  9984  0EB8  1803               	skipnc
  9985  0EB9  0A25               	incf	??_StringCopy+1,w
  9986  0EBA  0085               	movwf	5
  9987  0EBB  0800               	movf	0,w	;code access
  9988  0EBC  00A6               	movwf	??_StringCopy+2
  9989  0EBD  0874               	movf	StringCopy@Index,w
  9990  0EBE  0722               	addwf	StringCopy@DestStr,w
  9991  0EBF  00A7               	movwf	??_StringCopy+3
  9992  0EC0  0827               	movf	??_StringCopy+3,w
  9993  0EC1  0086               	movwf	6
  9994  0EC2  3001               	movlw	1	; select bank2/3
  9995  0EC3  0087               	movwf	7
  9996  0EC4  0826               	movf	??_StringCopy+2,w
  9997  0EC5  0081               	movwf	1
  9998  0EC6  3001               	movlw	1
  9999  0EC7  00A4               	movwf	??_StringCopy
 10000  0EC8  0824               	movf	??_StringCopy,w
 10001  0EC9  07F4               	addwf	StringCopy@Index,f
 10002  0ECA  2EAA               	goto	l3157
 10003  0ECB                     __end_of_StringCopy:	
 10004                           
 10005                           	psect	text43
 10006  0D33                     __ptext43:	
 10007 ;; *************** function _LowPowerMode *****************
 10008 ;; Defined at:
 10009 ;;		line 131 in file "../../../../Framework/MercuryFwk/Source/c/03_Sml/02_Ssl/std_ser.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;		None
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;		None
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1    wreg      void 
 10016 ;; Registers used:
 10017 ;;		wreg, status,2, status,0, pclath, cstack
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;Total ram usage:        0 bytes
 10028 ;; Hardware stack levels used:    1
 10029 ;; Hardware stack levels required when called:    3
 10030 ;; This function calls:
 10031 ;;		_Mcu_SetWdgSts
 10032 ;; This function is called by:
 10033 ;;		_StdS_ManageStdServices
 10034 ;; This function uses a non-reentrant model
 10035 ;;
 10036                           
 10037                           
 10038                           ;psect for function _LowPowerMode
 10039  0D33                     _LowPowerMode:	
 10040                           
 10041                           ;std_ser.c: 134: LATA = 0x00;
 10042                           
 10043                           ;incstack = 0
 10044                           ; Regs used in _LowPowerMode: [wreg+status,2+status,0+pclath+cstack]
 10045  0D33  0022               	movlb	2	; select bank2
 10046  0D34  018C               	clrf	12	;volatile
 10047                           
 10048                           ;std_ser.c: 136: LATB = 0x00;
 10049  0D35  018D               	clrf	13	;volatile
 10050                           
 10051                           ;std_ser.c: 138: LATC = 0x00;
 10052  0D36  018E               	clrf	14	;volatile
 10053                           
 10054                           ;std_ser.c: 140: Mcu_SetWdgSts(((UINT8)(0)));
 10055  0D37  3000               	movlw	0
 10056  0D38  318C  24AC  318D   	fcall	_Mcu_SetWdgSts
 10057  0D3B  0063               	sleep	;# 
 10058                           
 10059                           ;std_ser.c: 147: Mcu_SetWdgSts(((UINT8)(1)));
 10060  0D3C  3001               	movlw	1
 10061  0D3D  318C  24AC         	fcall	_Mcu_SetWdgSts
 10062  0D3F  0008               	return
 10063  0D40                     __end_of_LowPowerMode:	
 10064                           
 10065                           	psect	text44
 10066  0CAC                     __ptext44:	
 10067 ;; *************** function _Mcu_SetWdgSts *****************
 10068 ;; Defined at:
 10069 ;;		line 211 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;  WdgSts          1    wreg     unsigned char 
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;  WdgSts          1    4[COMMON] unsigned char 
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  1    wreg      void 
 10076 ;; Registers used:
 10077 ;;		wreg, status,0
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10086 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10087 ;;Total ram usage:        1 bytes
 10088 ;; Hardware stack levels used:    1
 10089 ;; Hardware stack levels required when called:    2
 10090 ;; This function calls:
 10091 ;;		Nothing
 10092 ;; This function is called by:
 10093 ;;		_LowPowerMode
 10094 ;;		_Wdg_MainTask
 10095 ;; This function uses a non-reentrant model
 10096 ;;
 10097                           
 10098                           
 10099                           ;psect for function _Mcu_SetWdgSts
 10100  0CAC                     _Mcu_SetWdgSts:	
 10101                           
 10102                           ;incstack = 0
 10103                           ; Regs used in _Mcu_SetWdgSts: [wreg+status,0]
 10104                           ;Mcu_SetWdgSts@WdgSts stored from wreg
 10105  0CAC  00F4               	movwf	Mcu_SetWdgSts@WdgSts
 10106                           
 10107                           ;mcu_drv.c: 214: WDTCONbits.SWDTEN = WdgSts;
 10108  0CAD  0C74               	rrf	Mcu_SetWdgSts@WdgSts,w
 10109  0CAE  0021               	movlb	1	; select bank1
 10110  0CAF  1C03               	skipc
 10111  0CB0  1017               	bcf	23,0	;volatile
 10112  0CB1  1803               	skipnc
 10113  0CB2  1417               	bsf	23,0	;volatile
 10114  0CB3  0008               	return
 10115  0CB4                     __end_of_Mcu_SetWdgSts:	
 10116                           
 10117                           	psect	text45
 10118  0DD5                     __ptext45:	
 10119 ;; *************** function _GetDieTemperature *****************
 10120 ;; Defined at:
 10121 ;;		line 158 in file "../../../../Framework/MercuryFwk/Source/c/03_Sml/02_Ssl/std_ser.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;		None
 10124 ;; Auto vars:     Size  Location     Type
 10125 ;;  DieTempRes      2    5[BANK0 ] unsigned short 
 10126 ;; Return value:  Size  Location     Type
 10127 ;;                  2    3[BANK0 ] unsigned short 
 10128 ;; Registers used:
 10129 ;;		wreg, status,2, status,0, pclath, cstack
 10130 ;; Tracked objects:
 10131 ;;		On entry : 0/0
 10132 ;;		On exit  : 0/0
 10133 ;;		Unchanged: 0/0
 10134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10135 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10136 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10138 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;Total ram usage:        4 bytes
 10140 ;; Hardware stack levels used:    1
 10141 ;; Hardware stack levels required when called:    3
 10142 ;; This function calls:
 10143 ;;		_Adc_GetConvResult
 10144 ;;		_Adc_GetConvSts
 10145 ;;		_Adc_SelectChannel
 10146 ;;		_Adc_StartConversion
 10147 ;; This function is called by:
 10148 ;;		_StdS_ManageStdServices
 10149 ;; This function uses a non-reentrant model
 10150 ;;
 10151                           
 10152                           
 10153                           ;psect for function _GetDieTemperature
 10154  0DD5                     _GetDieTemperature:	
 10155                           
 10156                           ;std_ser.c: 160: UINT16 DieTempRes;
 10157                           ;std_ser.c: 163: Adc_SelectChannel(((UINT8)(29)));
 10158                           
 10159                           ;incstack = 0
 10160                           ; Regs used in _GetDieTemperature: [wreg+status,2+status,0+pclath+cstack]
 10161  0DD5  301D               	movlw	29
 10162  0DD6  318D  250F  318D   	fcall	_Adc_SelectChannel
 10163                           
 10164                           ;std_ser.c: 165: Adc_StartConversion();
 10165  0DD9  318C  248A  318D   	fcall	_Adc_StartConversion
 10166  0DDC                     l3181:	
 10167                           ;std_ser.c: 167: while (Adc_GetConvSts() == AdcConvInProgress);
 10168                           
 10169  0DDC  318C  2490  318D   	fcall	_Adc_GetConvSts
 10170  0DDF  3A00               	xorlw	0
 10171  0DE0  1903               	skipnz
 10172  0DE1  2DDC               	goto	l3181
 10173                           
 10174                           ;std_ser.c: 169: DieTempRes = Adc_GetConvResult();
 10175  0DE2  318D  2540         	fcall	_Adc_GetConvResult
 10176  0DE4  0875               	movf	?_Adc_GetConvResult+1,w
 10177  0DE5  0020               	movlb	0	; select bank0
 10178  0DE6  00A6               	movwf	GetDieTemperature@DieTempRes+1
 10179  0DE7  0874               	movf	?_Adc_GetConvResult,w
 10180  0DE8  00A5               	movwf	GetDieTemperature@DieTempRes
 10181                           
 10182                           ;std_ser.c: 171: return DieTempRes;
 10183  0DE9  0826               	movf	GetDieTemperature@DieTempRes+1,w
 10184  0DEA  00A4               	movwf	?_GetDieTemperature+1
 10185  0DEB  0825               	movf	GetDieTemperature@DieTempRes,w
 10186  0DEC  00A3               	movwf	?_GetDieTemperature
 10187  0DED  0008               	return
 10188  0DEE                     __end_of_GetDieTemperature:	
 10189                           
 10190                           	psect	text46
 10191  0C8A                     __ptext46:	
 10192 ;; *************** function _Adc_StartConversion *****************
 10193 ;; Defined at:
 10194 ;;		line 144 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/adc_drv.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;		None
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;		None
 10199 ;; Return value:  Size  Location     Type
 10200 ;;                  1    wreg      void 
 10201 ;; Registers used:
 10202 ;;		None
 10203 ;; Tracked objects:
 10204 ;;		On entry : 0/0
 10205 ;;		On exit  : 0/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;Total ram usage:        0 bytes
 10213 ;; Hardware stack levels used:    1
 10214 ;; Hardware stack levels required when called:    2
 10215 ;; This function calls:
 10216 ;;		Nothing
 10217 ;; This function is called by:
 10218 ;;		_GetDieTemperature
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           
 10223                           ;psect for function _Adc_StartConversion
 10224  0C8A                     _Adc_StartConversion:	
 10225                           
 10226                           ;adc_drv.c: 147: ADCON0bits.GO_nDONE = ((UINT8)(1));
 10227                           
 10228                           ;incstack = 0
 10229                           ; Regs used in _Adc_StartConversion: []
 10230  0C8A  0021               	movlb	1	; select bank1
 10231  0C8B  149D               	bsf	29,1	;volatile
 10232  0C8C  0008               	return
 10233  0C8D                     __end_of_Adc_StartConversion:	
 10234                           
 10235                           	psect	text47
 10236  0D0F                     __ptext47:	
 10237 ;; *************** function _Adc_SelectChannel *****************
 10238 ;; Defined at:
 10239 ;;		line 130 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/adc_drv.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;  SelCh           1    wreg     unsigned char 
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;  SelCh           1    5[COMMON] unsigned char 
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      void 
 10246 ;; Registers used:
 10247 ;;		wreg, status,2, status,0
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10255 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;Total ram usage:        2 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    2
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_GetDieTemperature
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           
 10268                           ;psect for function _Adc_SelectChannel
 10269  0D0F                     _Adc_SelectChannel:	
 10270                           
 10271                           ;incstack = 0
 10272                           ; Regs used in _Adc_SelectChannel: [wreg+status,2+status,0]
 10273                           ;Adc_SelectChannel@SelCh stored from wreg
 10274  0D0F  00F5               	movwf	Adc_SelectChannel@SelCh
 10275                           
 10276                           ;adc_drv.c: 133: ADCON0bits.CHS = SelCh;
 10277  0D10  0875               	movf	Adc_SelectChannel@SelCh,w
 10278  0D11  00F4               	movwf	??_Adc_SelectChannel
 10279  0D12  0DF4               	rlf	??_Adc_SelectChannel,f
 10280  0D13  0DF4               	rlf	??_Adc_SelectChannel,f
 10281  0D14  0021               	movlb	1	; select bank1
 10282  0D15  081D               	movf	29,w	;volatile
 10283  0D16  0674               	xorwf	??_Adc_SelectChannel,w
 10284  0D17  3983               	andlw	-125
 10285  0D18  0674               	xorwf	??_Adc_SelectChannel,w
 10286  0D19  009D               	movwf	29	;volatile
 10287  0D1A  0008               	return
 10288  0D1B                     __end_of_Adc_SelectChannel:	
 10289                           
 10290                           	psect	text48
 10291  0C90                     __ptext48:	
 10292 ;; *************** function _Adc_GetConvSts *****************
 10293 ;; Defined at:
 10294 ;;		line 158 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/adc_drv.c"
 10295 ;; Parameters:    Size  Location     Type
 10296 ;;		None
 10297 ;; Auto vars:     Size  Location     Type
 10298 ;;		None
 10299 ;; Return value:  Size  Location     Type
 10300 ;;                  1    wreg      enum E3651
 10301 ;; Registers used:
 10302 ;;		wreg, status,2, status,0
 10303 ;; Tracked objects:
 10304 ;;		On entry : 0/0
 10305 ;;		On exit  : 0/0
 10306 ;;		Unchanged: 0/0
 10307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10312 ;;Total ram usage:        0 bytes
 10313 ;; Hardware stack levels used:    1
 10314 ;; Hardware stack levels required when called:    2
 10315 ;; This function calls:
 10316 ;;		Nothing
 10317 ;; This function is called by:
 10318 ;;		_GetDieTemperature
 10319 ;; This function uses a non-reentrant model
 10320 ;;
 10321                           
 10322                           
 10323                           ;psect for function _Adc_GetConvSts
 10324  0C90                     _Adc_GetConvSts:	
 10325                           
 10326                           ;adc_drv.c: 161: return ((AdcConvStsType)(ADCON0bits.GO_nDONE));
 10327                           
 10328                           ;incstack = 0
 10329                           ; Regs used in _Adc_GetConvSts: [wreg+status,2+status,0]
 10330  0C90  0021               	movlb	1	; select bank1
 10331  0C91  0C1D               	rrf	29,w	;volatile
 10332  0C92  3901               	andlw	1
 10333  0C93  0008               	return
 10334  0C94                     __end_of_Adc_GetConvSts:	
 10335                           
 10336                           	psect	text49
 10337  0D40                     __ptext49:	
 10338 ;; *************** function _Adc_GetConvResult *****************
 10339 ;; Defined at:
 10340 ;;		line 172 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/adc_drv.c"
 10341 ;; Parameters:    Size  Location     Type
 10342 ;;		None
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;  AdcResult       2    1[BANK0 ] unsigned short 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  2    4[COMMON] unsigned short 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10355 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10358 ;;Total ram usage:        5 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; Hardware stack levels required when called:    2
 10361 ;; This function calls:
 10362 ;;		Nothing
 10363 ;; This function is called by:
 10364 ;;		_GetDieTemperature
 10365 ;; This function uses a non-reentrant model
 10366 ;;
 10367                           
 10368                           
 10369                           ;psect for function _Adc_GetConvResult
 10370  0D40                     _Adc_GetConvResult:	
 10371                           
 10372                           ;adc_drv.c: 174: UINT16 AdcResult;
 10373                           ;adc_drv.c: 177: AdcResult = (((ADRESH & 0x03) << 8) | ADRESL);
 10374                           
 10375                           ;incstack = 0
 10376                           ; Regs used in _Adc_GetConvResult: [wreg+status,2+status,0]
 10377  0D40  3003               	movlw	3
 10378  0D41  0021               	movlb	1	; select bank1
 10379  0D42  051C               	andwf	28,w	;volatile
 10380  0D43  0020               	movlb	0	; select bank0
 10381  0D44  00A0               	movwf	??_Adc_GetConvResult
 10382  0D45  0820               	movf	??_Adc_GetConvResult,w
 10383  0D46  00A2               	movwf	Adc_GetConvResult@AdcResult+1
 10384  0D47  0021               	movlb	1	; select bank1
 10385  0D48  081B               	movf	27,w	;volatile
 10386  0D49  0020               	movlb	0	; select bank0
 10387  0D4A  00A1               	movwf	Adc_GetConvResult@AdcResult
 10388                           
 10389                           ;adc_drv.c: 179: return AdcResult;
 10390  0D4B  0822               	movf	Adc_GetConvResult@AdcResult+1,w
 10391  0D4C  00F5               	movwf	?_Adc_GetConvResult+1
 10392  0D4D  0821               	movf	Adc_GetConvResult@AdcResult,w
 10393  0D4E  00F4               	movwf	?_Adc_GetConvResult
 10394  0D4F  0008               	return
 10395  0D50                     __end_of_Adc_GetConvResult:	
 10396                           
 10397                           	psect	text50
 10398  0E86                     __ptext50:	
 10399 ;; *************** function _GenerateEvt *****************
 10400 ;; Defined at:
 10401 ;;		line 73 in file "../../../../Framework/MercuryFwk/Source/c/02_Osl/os_ser.c"
 10402 ;; Parameters:    Size  Location     Type
 10403 ;;  Event           1    wreg     PTR struct _EventStructu
 10404 ;;		 -> I2cReplyPacketReady(2), I2cNewTxNotification(2), I2cNewPacketNotification(2), I2cSetAddress(2), 
 10405 ;;		 -> I2cWriteRequest(2), 
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;  Event           1    1[BANK0 ] PTR struct _EventStructu
 10408 ;;		 -> I2cReplyPacketReady(2), I2cNewTxNotification(2), I2cNewPacketNotification(2), I2cSetAddress(2), 
 10409 ;;		 -> I2cWriteRequest(2), 
 10410 ;;  EventStatus     1    0[BANK0 ] enum E3629
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  1    wreg      enum E3625
 10413 ;; Registers used:
 10414 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10424 ;;Total ram usage:        3 bytes
 10425 ;; Hardware stack levels used:    1
 10426 ;; Hardware stack levels required when called:    2
 10427 ;; This function calls:
 10428 ;;		Nothing
 10429 ;; This function is called by:
 10430 ;;		_AppSm
 10431 ;;		_I2c_DataReceiveSm
 10432 ;;		_I2cSlv_I2cDrvHandle
 10433 ;;		_StdS_ManageStdServices
 10434 ;; This function uses a non-reentrant model
 10435 ;;
 10436                           
 10437                           
 10438                           ;psect for function _GenerateEvt
 10439  0E86                     _GenerateEvt:	
 10440                           
 10441                           ;incstack = 0
 10442                           ; Regs used in _GenerateEvt: [wreg+fsr1l+fsr1h+status,2+status,0]
 10443                           ;GenerateEvt@Event stored from wreg
 10444  0E86  0020               	movlb	0	; select bank0
 10445  0E87  00A1               	movwf	GenerateEvt@Event
 10446                           
 10447                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 10448  0E88  01A0               	clrf	GenerateEvt@EventStatus
 10449                           
 10450                           ;os_ser.c: 78: if ((Event->EventOptions != ((UINT8)(2))) && (Event->EventOptions != ((UI
      +                          NT8)(3))))
 10451  0E89  0821               	movf	GenerateEvt@Event,w
 10452  0E8A  0086               	movwf	6
 10453  0E8B  0187               	clrf	7
 10454  0E8C  3002               	movlw	2
 10455  0E8D  0601               	xorwf	1,w
 10456  0E8E  1903               	btfsc	3,2
 10457  0E8F  2EA3               	goto	l3147
 10458  0E90  0821               	movf	GenerateEvt@Event,w
 10459  0E91  0086               	movwf	6
 10460  0E92  0187               	clrf	7
 10461  0E93  3003               	movlw	3
 10462  0E94  0601               	xorwf	1,w
 10463  0E95  1903               	btfsc	3,2
 10464  0E96  2EA3               	goto	l3147
 10465                           
 10466                           ;os_ser.c: 79: {
 10467                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 10468  0E97  3002               	movlw	2
 10469  0E98  00F4               	movwf	??_GenerateEvt
 10470  0E99  0A21               	incf	GenerateEvt@Event,w
 10471  0E9A  0086               	movwf	6
 10472  0E9B  0187               	clrf	7
 10473  0E9C  0874               	movf	??_GenerateEvt,w
 10474  0E9D  0081               	movwf	1
 10475                           
 10476                           ;os_ser.c: 83: EventStatus = EventSent;
 10477  0E9E  3002               	movlw	2
 10478  0E9F  00F4               	movwf	??_GenerateEvt
 10479  0EA0  0874               	movf	??_GenerateEvt,w
 10480  0EA1  00A0               	movwf	GenerateEvt@EventStatus
 10481                           
 10482                           ;os_ser.c: 84: }
 10483  0EA2  0008               	return
 10484  0EA3                     l3147:	
 10485                           
 10486                           ;os_ser.c: 85: else
 10487                           ;os_ser.c: 86: {
 10488                           ;os_ser.c: 88: EventStatus = EventNotSent;
 10489  0EA3  3003               	movlw	3
 10490  0EA4  00F4               	movwf	??_GenerateEvt
 10491  0EA5  0874               	movf	??_GenerateEvt,w
 10492  0EA6  00A0               	movwf	GenerateEvt@EventStatus
 10493  0EA7  0008               	return
 10494  0EA8                     __end_of_GenerateEvt:	
 10495                           ;os_ser.c: 89: }
 10496                           ;os_ser.c: 92: return(EventStatus);
 10497                           ;	Return value of _GenerateEvt is never used
 10498                           
 10499                           
 10500                           	psect	text51
 10501  0CBD                     __ptext51:	
 10502 ;; *************** function _ControlLedDirect *****************
 10503 ;; Defined at:
 10504 ;;		line 96 in file "../../../../Framework/MercuryFwk/Source/c/03_Sml/02_Ssl/std_ser.c"
 10505 ;; Parameters:    Size  Location     Type
 10506 ;;		None
 10507 ;; Auto vars:     Size  Location     Type
 10508 ;;		None
 10509 ;; Return value:  Size  Location     Type
 10510 ;;                  1    wreg      void 
 10511 ;; Registers used:
 10512 ;;		wreg, status,2, status,0
 10513 ;; Tracked objects:
 10514 ;;		On entry : 0/0
 10515 ;;		On exit  : 0/0
 10516 ;;		Unchanged: 0/0
 10517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10522 ;;Total ram usage:        0 bytes
 10523 ;; Hardware stack levels used:    1
 10524 ;; Hardware stack levels required when called:    2
 10525 ;; This function calls:
 10526 ;;		Nothing
 10527 ;; This function is called by:
 10528 ;;		_StdS_ManageStdServices
 10529 ;; This function uses a non-reentrant model
 10530 ;;
 10531                           
 10532                           
 10533                           ;psect for function _ControlLedDirect
 10534  0CBD                     _ControlLedDirect:	
 10535                           
 10536                           ;std_ser.c: 99: if (CmdBuffer[((UINT8)(1))] == ((UINT8)(1)))
 10537                           
 10538                           ;incstack = 0
 10539                           ; Regs used in _ControlLedDirect: [wreg+status,2+status,0]
 10540  0CBD  0023               	movlb	3	; select bank3
 10541  0CBE  0321               	decf	(_CmdBuffer^(0+384)+1),w
 10542  0CBF  1D03               	btfss	3,2
 10543  0CC0  2CC4               	goto	l712
 10544                           
 10545                           ;std_ser.c: 100: {
 10546                           ;std_ser.c: 101: LATCbits.LATC2 = ((UINT8)(1));
 10547  0CC1  0022               	movlb	2	; select bank2
 10548  0CC2  150E               	bsf	14,2	;volatile
 10549                           
 10550                           ;std_ser.c: 102: }
 10551  0CC3  0008               	return
 10552  0CC4                     l712:	
 10553                           
 10554                           ;std_ser.c: 103: else
 10555                           ;std_ser.c: 104: {
 10556                           ;std_ser.c: 105: LATCbits.LATC2 = ((UINT8)(0));
 10557  0CC4  0022               	movlb	2	; select bank2
 10558  0CC5  110E               	bcf	14,2	;volatile
 10559  0CC6  0008               	return
 10560  0CC7                     __end_of_ControlLedDirect:	
 10561                           
 10562                           	psect	text52
 10563  0002                     __ptext52:	
 10564 ;; *************** function _BoardReset *****************
 10565 ;; Defined at:
 10566 ;;		line 117 in file "../../../../Framework/MercuryFwk/Source/c/03_Sml/02_Ssl/std_ser.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;		None
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;		None
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  1    wreg      void 
 10573 ;; Registers used:
 10574 ;;		None
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10584 ;;Total ram usage:        0 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:    2
 10587 ;; This function calls:
 10588 ;;		Nothing
 10589 ;; This function is called by:
 10590 ;;		_StdS_ManageStdServices
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           
 10595                           ;psect for function _BoardReset
 10596  0002                     _BoardReset:	
 10597                           
 10598                           ;incstack = 0
 10599                           ; Regs used in _BoardReset: []
 10600  0002  0001               	reset	;# 
 10601  0003  0008               	return
 10602  0004                     __end_of_BoardReset:	
 10603                           
 10604                           	psect	text53
 10605  0E65                     __ptext53:	
 10606 ;; *************** function _ReceiveEvt *****************
 10607 ;; Defined at:
 10608 ;;		line 103 in file "../../../../Framework/MercuryFwk/Source/c/02_Osl/os_ser.c"
 10609 ;; Parameters:    Size  Location     Type
 10610 ;;  Event           1    wreg     PTR struct _EventStructu
 10611 ;;		 -> I2cReplyPacketReady(2), I2cNewTxNotification(2), I2cNewPacketNotification(2), I2cSetAddress(2), 
 10612 ;;		 -> I2cWriteRequest(2), 
 10613 ;; Auto vars:     Size  Location     Type
 10614 ;;  Event           1    5[COMMON] PTR struct _EventStructu
 10615 ;;		 -> I2cReplyPacketReady(2), I2cNewTxNotification(2), I2cNewPacketNotification(2), I2cSetAddress(2), 
 10616 ;;		 -> I2cWriteRequest(2), 
 10617 ;;  EventStatus     1    4[COMMON] enum E3629
 10618 ;; Return value:  Size  Location     Type
 10619 ;;                  1    wreg      enum E3625
 10620 ;; Registers used:
 10621 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10622 ;; Tracked objects:
 10623 ;;		On entry : 0/0
 10624 ;;		On exit  : 0/0
 10625 ;;		Unchanged: 0/0
 10626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10631 ;;Total ram usage:        2 bytes
 10632 ;; Hardware stack levels used:    1
 10633 ;; Hardware stack levels required when called:    2
 10634 ;; This function calls:
 10635 ;;		Nothing
 10636 ;; This function is called by:
 10637 ;;		_ManageProtocol
 10638 ;;		_I2c_DataReceiveSm
 10639 ;;		_I2cSlv_I2cDrvHandle
 10640 ;; This function uses a non-reentrant model
 10641 ;;
 10642                           
 10643                           
 10644                           ;psect for function _ReceiveEvt
 10645  0E65                     _ReceiveEvt:	
 10646                           
 10647                           ;incstack = 0
 10648                           ; Regs used in _ReceiveEvt: [wreg+fsr1l+fsr1h+status,2+status,0]
 10649                           ;ReceiveEvt@Event stored from wreg
 10650  0E65  00F5               	movwf	ReceiveEvt@Event
 10651                           
 10652                           ;os_ser.c: 106: EventStatusType EventStatus = EventIdle;
 10653  0E66  01F4               	clrf	ReceiveEvt@EventStatus
 10654                           
 10655                           ;os_ser.c: 108: if ((Event->EventOptions != ((UINT8)(1))) && (Event->EventOptions != ((U
      +                          INT8)(3))))
 10656  0E67  0875               	movf	ReceiveEvt@Event,w
 10657  0E68  0086               	movwf	6
 10658  0E69  0187               	clrf	7
 10659  0E6A  0301               	decf	1,w
 10660  0E6B  1903               	btfsc	3,2
 10661  0E6C  2E84               	goto	l3233
 10662  0E6D  0875               	movf	ReceiveEvt@Event,w
 10663  0E6E  0086               	movwf	6
 10664  0E6F  0187               	clrf	7
 10665  0E70  3003               	movlw	3
 10666  0E71  0601               	xorwf	1,w
 10667  0E72  1903               	btfsc	3,2
 10668  0E73  2E84               	goto	l3233
 10669                           
 10670                           ;os_ser.c: 109: {
 10671                           ;os_ser.c: 111: if (Event->EventStatus == EventSent)
 10672  0E74  0A75               	incf	ReceiveEvt@Event,w
 10673  0E75  0086               	movwf	6
 10674  0E76  0187               	clrf	7
 10675  0E77  3002               	movlw	2
 10676  0E78  0601               	xorwf	1,w
 10677  0E79  1D03               	btfss	3,2
 10678  0E7A  2E83               	goto	l3231
 10679                           
 10680                           ;os_ser.c: 112: {
 10681                           ;os_ser.c: 114: Event->EventStatus = EventReceived;
 10682  0E7B  0A75               	incf	ReceiveEvt@Event,w
 10683  0E7C  0086               	movwf	6
 10684  0E7D  0187               	clrf	7
 10685  0E7E  0181               	clrf	1
 10686  0E7F  0A81               	incf	1,f
 10687                           
 10688                           ;os_ser.c: 116: EventStatus = EventReceived;
 10689  0E80  01F4               	clrf	ReceiveEvt@EventStatus
 10690  0E81  0AF4               	incf	ReceiveEvt@EventStatus,f
 10691                           
 10692                           ;os_ser.c: 117: }
 10693  0E82  2E84               	goto	l3233
 10694  0E83                     l3231:	
 10695                           
 10696                           ;os_ser.c: 118: else
 10697                           ;os_ser.c: 119: {
 10698                           ;os_ser.c: 121: EventStatus = EventIdle;
 10699  0E83  01F4               	clrf	ReceiveEvt@EventStatus
 10700  0E84                     l3233:	
 10701                           
 10702                           ;os_ser.c: 122: }
 10703                           ;os_ser.c: 123: }
 10704                           ;os_ser.c: 126: return(EventStatus);
 10705  0E84  0874               	movf	ReceiveEvt@EventStatus,w
 10706  0E85  0008               	return
 10707  0E86                     __end_of_ReceiveEvt:	
 10708                           
 10709                           	psect	text54
 10710  05F4                     __ptext54:	
 10711 ;; *************** function _Adc_ConfigAnCh *****************
 10712 ;; Defined at:
 10713 ;;		line 73 in file "../../../../Framework/MercuryFwk/Source/c/01_Hal/02_Drv/adc_drv.c"
 10714 ;; Parameters:    Size  Location     Type
 10715 ;;  AnChSel         1    wreg     PTR struct _AnalogChSelT
 10716 ;;		 -> App_MainTask@AnalogChSel(12), 
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;  AnChSel         1    4[COMMON] PTR struct _AnalogChSelT
 10719 ;;		 -> App_MainTask@AnalogChSel(12), 
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      void 
 10722 ;; Registers used:
 10723 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;Total ram usage:        1 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:    2
 10736 ;; This function calls:
 10737 ;;		Nothing
 10738 ;; This function is called by:
 10739 ;;		_App_MainTask
 10740 ;; This function uses a non-reentrant model
 10741 ;;
 10742                           
 10743                           
 10744                           ;psect for function _Adc_ConfigAnCh
 10745  05F4                     _Adc_ConfigAnCh:	
 10746                           
 10747                           ;incstack = 0
 10748                           ; Regs used in _Adc_ConfigAnCh: [wreg+fsr1l+fsr1h+status,2+status,0]
 10749                           ;Adc_ConfigAnCh@AnChSel stored from wreg
 10750  05F4  00F4               	movwf	Adc_ConfigAnCh@AnChSel
 10751                           
 10752                           ;adc_drv.c: 76: ANSELA = 0x00;
 10753  05F5  0023               	movlb	3	; select bank3
 10754  05F6  018C               	clrf	12	;volatile
 10755                           
 10756                           ;adc_drv.c: 77: ANSELAbits.ANSA0 = AnChSel->AnSelA0An0;
 10757  05F7  0874               	movf	Adc_ConfigAnCh@AnChSel,w
 10758  05F8  0086               	movwf	6
 10759  05F9  0187               	clrf	7
 10760  05FA  0C01               	rrf	1,w
 10761  05FB  1C03               	skipc
 10762  05FC  100C               	bcf	12,0	;volatile
 10763  05FD  1803               	skipnc
 10764  05FE  140C               	bsf	12,0	;volatile
 10765                           
 10766                           ;adc_drv.c: 78: ANSELAbits.ANSA1 = AnChSel->AnSelA1An1;
 10767  05FF  0A74               	incf	Adc_ConfigAnCh@AnChSel,w
 10768  0600  0086               	movwf	6
 10769  0601  0187               	clrf	7
 10770  0602  0C01               	rrf	1,w
 10771  0603  1C03               	skipc
 10772  0604  108C               	bcf	12,1	;volatile
 10773  0605  1803               	skipnc
 10774  0606  148C               	bsf	12,1	;volatile
 10775                           
 10776                           ;adc_drv.c: 79: ANSELAbits.ANSA2 = AnChSel->AnSelA2An2;
 10777  0607  0874               	movf	Adc_ConfigAnCh@AnChSel,w
 10778  0608  3E02               	addlw	2
 10779  0609  0086               	movwf	6
 10780  060A  0187               	clrf	7
 10781  060B  0C01               	rrf	1,w
 10782  060C  1C03               	skipc
 10783  060D  110C               	bcf	12,2	;volatile
 10784  060E  1803               	skipnc
 10785  060F  150C               	bsf	12,2	;volatile
 10786                           
 10787                           ;adc_drv.c: 80: ANSELAbits.ANSA4 = AnChSel->AnSelA4An3;
 10788  0610  0874               	movf	Adc_ConfigAnCh@AnChSel,w
 10789  0611  3E03               	addlw	3
 10790  0612  0086               	movwf	6
 10791  0613  0187               	clrf	7
 10792  0614  0C01               	rrf	1,w
 10793  0615  1C03               	skipc
 10794  0616  120C               	bcf	12,4	;volatile
 10795  0617  1803               	skipnc
 10796  0618  160C               	bsf	12,4	;volatile
 10797                           
 10798                           ;adc_drv.c: 83: ANSELB = 0x00;
 10799  0619  018D               	clrf	13	;volatile
 10800                           
 10801                           ;adc_drv.c: 84: ANSELBbits.ANSB4 = AnChSel->AnSelB4An10;
 10802  061A  0874               	movf	Adc_ConfigAnCh@AnChSel,w
 10803  061B  3E04               	addlw	4
 10804  061C  0086               	movwf	6
 10805  061D  0187               	clrf	7
 10806  061E  0C01               	rrf	1,w
 10807  061F  1C03               	skipc
 10808  0620  120D               	bcf	13,4	;volatile
 10809  0621  1803               	skipnc
 10810  0622  160D               	bsf	13,4	;volatile
 10811                           
 10812                           ;adc_drv.c: 85: ANSELBbits.ANSB5 = AnChSel->AnSelB5An11;
 10813  0623  0874               	movf	Adc_ConfigAnCh@AnChSel,w
 10814  0624  3E05               	addlw	5
 10815  0625  0086               	movwf	6
 10816  0626  0187               	clrf	7
 10817  0627  0C01               	rrf	1,w
 10818  0628  1C03               	skipc
 10819  0629  128D               	bcf	13,5	;volatile
 10820  062A  1803               	skipnc
 10821  062B  168D               	bsf	13,5	;volatile
 10822                           
 10823                           ;adc_drv.c: 88: ANSELC = 0x00;
 10824  062C  018E               	clrf	14	;volatile
 10825                           
 10826                           ;adc_drv.c: 89: ANSELCbits.ANSC0 = AnChSel->AnSelC0An4;
 10827  062D  0874               	movf	Adc_ConfigAnCh@AnChSel,w
 10828  062E  3E06               	addlw	6
 10829  062F  0086               	movwf	6
 10830  0630  0187               	clrf	7
 10831  0631  0C01               	rrf	1,w
 10832  0632  1C03               	skipc
 10833  0633  100E               	bcf	14,0	;volatile
 10834  0634  1803               	skipnc
 10835  0635  140E               	bsf	14,0	;volatile
 10836                           
 10837                           ;adc_drv.c: 90: ANSELCbits.ANSC1 = AnChSel->AnSelC1An5;
 10838  0636  0874               	movf	Adc_ConfigAnCh@AnChSel,w
 10839  0637  3E07               	addlw	7
 10840  0638  0086               	movwf	6
 10841  0639  0187               	clrf	7
 10842  063A  0C01               	rrf	1,w
 10843  063B  1C03               	skipc
 10844  063C  108E               	bcf	14,1	;volatile
 10845  063D  1803               	skipnc
 10846  063E  148E               	bsf	14,1	;volatile
 10847                           
 10848                           ;adc_drv.c: 91: ANSELCbits.ANSC2 = AnChSel->AnSelC2An6;
 10849  063F  0874               	movf	Adc_ConfigAnCh@AnChSel,w
 10850  0640  3E08               	addlw	8
 10851  0641  0086               	movwf	6
 10852  0642  0187               	clrf	7
 10853  0643  0C01               	rrf	1,w
 10854  0644  1C03               	skipc
 10855  0645  110E               	bcf	14,2	;volatile
 10856  0646  1803               	skipnc
 10857  0647  150E               	bsf	14,2	;volatile
 10858                           
 10859                           ;adc_drv.c: 92: ANSELCbits.ANSC3 = AnChSel->AnSelC3An7;
 10860  0648  0874               	movf	Adc_ConfigAnCh@AnChSel,w
 10861  0649  3E09               	addlw	9
 10862  064A  0086               	movwf	6
 10863  064B  0187               	clrf	7
 10864  064C  0C01               	rrf	1,w
 10865  064D  1C03               	skipc
 10866  064E  118E               	bcf	14,3	;volatile
 10867  064F  1803               	skipnc
 10868  0650  158E               	bsf	14,3	;volatile
 10869                           
 10870                           ;adc_drv.c: 94: ANSELCbits.ANSC6 = AnChSel->AnSelC6An8;
 10871  0651  0874               	movf	Adc_ConfigAnCh@AnChSel,w
 10872  0652  3E0A               	addlw	10
 10873  0653  0086               	movwf	6
 10874  0654  0187               	clrf	7
 10875  0655  0C01               	rrf	1,w
 10876  0656  1C03               	skipc
 10877  0657  130E               	bcf	14,6	;volatile
 10878  0658  1803               	skipnc
 10879  0659  170E               	bsf	14,6	;volatile
 10880                           
 10881                           ;adc_drv.c: 95: ANSELCbits.ANSC7 = AnChSel->AnSelC7An9;
 10882  065A  0874               	movf	Adc_ConfigAnCh@AnChSel,w
 10883  065B  3E0B               	addlw	11
 10884  065C  0086               	movwf	6
 10885  065D  0187               	clrf	7
 10886  065E  0C01               	rrf	1,w
 10887  065F  1C03               	skipc
 10888  0660  138E               	bcf	14,7	;volatile
 10889  0661  1803               	skipnc
 10890  0662  178E               	bsf	14,7	;volatile
 10891  0663  0008               	return
 10892  0664                     __end_of_Adc_ConfigAnCh:	
 10893                           
 10894                           	psect	intentry
 10895  0004                     __pintentry:	
 10896 ;; *************** function _MainInterrupt *****************
 10897 ;; Defined at:
 10898 ;;		line 50 in file "../../../../Framework/MercuryFwk/Source/c/02_Osl/interrupts.c"
 10899 ;; Parameters:    Size  Location     Type
 10900 ;;		None
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;		None
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  1    wreg      void 
 10905 ;; Registers used:
 10906 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10907 ;; Tracked objects:
 10908 ;;		On entry : 0/0
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10916 ;;Total ram usage:        1 bytes
 10917 ;; Hardware stack levels used:    1
 10918 ;; Hardware stack levels required when called:    1
 10919 ;; This function calls:
 10920 ;;		i1_GenerateEvt
 10921 ;; This function is called by:
 10922 ;;		Interrupt level 1
 10923 ;; This function uses a non-reentrant model
 10924 ;;
 10925                           
 10926  0004                     _MainInterrupt:	
 10927                           
 10928                           ;incstack = 0
 10929  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10930                           
 10931                           ; Regs used in _MainInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10932  0005  3180               	pagesel	$
 10933  0006  0020               	movlb	0	; select bank0
 10934  0007  087F               	movf	127,w
 10935  0008  00F3               	movwf	??_MainInterrupt
 10936                           
 10937                           ;interrupts.c: 53: if (PIR1bits.TMR2IF == ((UINT8)(1)) && PIE1bits.TMR2IE == ((UINT8)(1)
      +                          ))
 10938  0009  1C91               	btfss	17,1	;volatile
 10939  000A  281B               	goto	i1l3039
 10940  000B  0021               	movlb	1	; select bank1
 10941  000C  1C91               	btfss	17,1	;volatile
 10942  000D  281B               	goto	i1l3039
 10943                           
 10944                           ;interrupts.c: 54: {
 10945                           ;interrupts.c: 56: PIR1bits.TMR2IF = ((UINT8)(0));
 10946  000E  0020               	movlb	0	; select bank0
 10947  000F  1091               	bcf	17,1	;volatile
 10948                           
 10949                           ;interrupts.c: 58: InterruptCounter++;
 10950  0010  3001               	movlw	1
 10951  0011  07CC               	addwf	_InterruptCounter,f
 10952  0012  3000               	movlw	0
 10953  0013  3DCD               	addwfc	_InterruptCounter+1,f
 10954                           
 10955                           ;interrupts.c: 60: if (InterruptCounter >= ((UINT16)(1)))
 10956  0014  084C               	movf	_InterruptCounter,w
 10957  0015  044D               	iorwf	_InterruptCounter+1,w
 10958  0016  1903               	btfsc	3,2
 10959  0017  281B               	goto	i1l3039
 10960                           
 10961                           ;interrupts.c: 61: {
 10962                           ;interrupts.c: 63: InterruptCounter = 0;
 10963  0018  01CC               	clrf	_InterruptCounter
 10964  0019  01CD               	clrf	_InterruptCounter+1
 10965                           
 10966                           ;interrupts.c: 65: MainSystemTimebaseFlag = CallTaskPhase;
 10967  001A  01E7               	clrf	_MainSystemTimebaseFlag
 10968  001B                     i1l3039:	
 10969                           
 10970                           ;interrupts.c: 66: }
 10971                           ;interrupts.c: 67: }
 10972                           ;interrupts.c: 70: if(PIE1bits.SSP1IE == ((UINT8)(1)) && PIR1bits.SSP1IF == ((UINT8)(1))
      +                          )
 10973  001B  0021               	movlb	1	; select bank1
 10974  001C  1D91               	btfss	17,3	;volatile
 10975  001D  2825               	goto	i1l451
 10976  001E  0020               	movlb	0	; select bank0
 10977  001F  1D91               	btfss	17,3	;volatile
 10978  0020  2825               	goto	i1l451
 10979                           
 10980                           ;interrupts.c: 71: {
 10981                           ;interrupts.c: 73: PIR1bits.SSP1IF = ((UINT8)(0));
 10982  0021  1191               	bcf	17,3	;volatile
 10983                           
 10984                           ;interrupts.c: 75: GenerateEvt(&I2cNewTxNotification);
 10985  0022  3060               	movlw	(low (_I2cNewTxNotification| 0))& (0+255)
 10986  0023  318E  2644         	fcall	i1_GenerateEvt
 10987  0025                     i1l451:	
 10988  0025  0873               	movf	??_MainInterrupt,w
 10989  0026  0020               	movlb	0	; select bank0
 10990  0027  00FF               	movwf	127
 10991  0028  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10992  0029  0009               	retfie
 10993  002A                     __end_of_MainInterrupt:	
 10994                           
 10995                           	psect	text56
 10996  0E44                     __ptext56:	
 10997 ;; *************** function i1_GenerateEvt *****************
 10998 ;; Defined at:
 10999 ;;		line 73 in file "../../../../Framework/MercuryFwk/Source/c/02_Osl/os_ser.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;  Event           1    wreg     PTR struct _EventStructu
 11002 ;;		 -> I2cReplyPacketReady(2), I2cNewTxNotification(2), I2cNewPacketNotification(2), I2cSetAddress(2), 
 11003 ;;		 -> I2cWriteRequest(2), 
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;  Event           1    1[COMMON] PTR struct _EventStructu
 11006 ;;		 -> I2cReplyPacketReady(2), I2cNewTxNotification(2), I2cNewPacketNotification(2), I2cSetAddress(2), 
 11007 ;;		 -> I2cWriteRequest(2), 
 11008 ;;  GenerateEvt     1    2[COMMON] enum E3629
 11009 ;; Return value:  Size  Location     Type
 11010 ;;                  1    wreg      enum E3625
 11011 ;; Registers used:
 11012 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11013 ;; Tracked objects:
 11014 ;;		On entry : 0/0
 11015 ;;		On exit  : 0/0
 11016 ;;		Unchanged: 0/0
 11017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11021 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11022 ;;Total ram usage:        3 bytes
 11023 ;; Hardware stack levels used:    1
 11024 ;; This function calls:
 11025 ;;		Nothing
 11026 ;; This function is called by:
 11027 ;;		_MainInterrupt
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           
 11032                           ;psect for function i1_GenerateEvt
 11033  0E44                     i1_GenerateEvt:	
 11034                           
 11035                           ;incstack = 0
 11036                           ; Regs used in i1_GenerateEvt: [wreg+fsr1l+fsr1h+status,2+status,0]
 11037                           ;i1GenerateEvt@Event stored from wreg
 11038  0E44  00F1               	movwf	i1GenerateEvt@Event
 11039                           
 11040                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 11041  0E45  01F2               	clrf	i1GenerateEvt@EventStatus
 11042                           
 11043                           ;os_ser.c: 78: if ((Event->EventOptions != ((UINT8)(2))) && (Event->EventOptions != ((UI
      +                          NT8)(3))))
 11044  0E46  0871               	movf	i1GenerateEvt@Event,w
 11045  0E47  0086               	movwf	6
 11046  0E48  0187               	clrf	7
 11047  0E49  3002               	movlw	2
 11048  0E4A  0601               	xorwf	1,w
 11049  0E4B  1903               	btfsc	3,2
 11050  0E4C  2E60               	goto	i1l3019
 11051  0E4D  0871               	movf	i1GenerateEvt@Event,w
 11052  0E4E  0086               	movwf	6
 11053  0E4F  0187               	clrf	7
 11054  0E50  3003               	movlw	3
 11055  0E51  0601               	xorwf	1,w
 11056  0E52  1903               	btfsc	3,2
 11057  0E53  2E60               	goto	i1l3019
 11058                           
 11059                           ;os_ser.c: 79: {
 11060                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 11061  0E54  3002               	movlw	2
 11062  0E55  00F0               	movwf	??i1_GenerateEvt
 11063  0E56  0A71               	incf	i1GenerateEvt@Event,w
 11064  0E57  0086               	movwf	6
 11065  0E58  0187               	clrf	7
 11066  0E59  0870               	movf	??i1_GenerateEvt,w
 11067  0E5A  0081               	movwf	1
 11068                           
 11069                           ;os_ser.c: 83: EventStatus = EventSent;
 11070  0E5B  3002               	movlw	2
 11071  0E5C  00F0               	movwf	??i1_GenerateEvt
 11072  0E5D  0870               	movf	??i1_GenerateEvt,w
 11073  0E5E  00F2               	movwf	i1GenerateEvt@EventStatus
 11074                           
 11075                           ;os_ser.c: 84: }
 11076  0E5F  0008               	return
 11077  0E60                     i1l3019:	
 11078                           
 11079                           ;os_ser.c: 85: else
 11080                           ;os_ser.c: 86: {
 11081                           ;os_ser.c: 88: EventStatus = EventNotSent;
 11082  0E60  3003               	movlw	3
 11083  0E61  00F0               	movwf	??i1_GenerateEvt
 11084  0E62  0870               	movf	??i1_GenerateEvt,w
 11085  0E63  00F2               	movwf	i1GenerateEvt@EventStatus
 11086  0E64  0008               	return
 11087  0E65                     __end_ofi1_GenerateEvt:	
 11088                           ;os_ser.c: 89: }
 11089                           ;os_ser.c: 92: return(EventStatus);
 11090                           ;	Return value of i1_GenerateEvt is never used
 11091                           
 11092  007E                     btemp	set	126	;btemp
 11093  007E                     int$flags	set	126
 11094  007E                     wtemp	set	126
 11095  007E                     wtemp0	set	126
 11096  0080                     wtemp1	set	128
 11097  0082                     wtemp2	set	130
 11098  0084                     wtemp3	set	132
 11099  0086                     wtemp4	set	134
 11100  0088                     wtemp5	set	136
 11101  007F                     wtemp6	set	127
 11102  007E                     ttemp	set	126
 11103  007E                     ttemp0	set	126
 11104  0081                     ttemp1	set	129
 11105  0084                     ttemp2	set	132
 11106  0087                     ttemp3	set	135
 11107  007F                     ttemp4	set	127
 11108  007E                     ltemp	set	126
 11109  007E                     ltemp0	set	126
 11110  0082                     ltemp1	set	130
 11111  0086                     ltemp2	set	134
 11112  0080                     ltemp3	set	128


Data Sizes:
    Strings     28
    Constant    12
    Data        50
    BSS         375
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     42      80
    BANK1            80      6      69
    BANK2            80      0      80
    BANK3            80      0      80
    BANK4            80      0      80
    BANK5            80      0      80
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           45      0       0
    BANK12            0      0       0

Pointer List with Targets:

    Tmr6IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 4
		 -> StdS_ManageStdServices@DieTempStr(BANK0[4]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    sp__utoa	PTR unsigned char  size(1) Largest target is 4
		 -> StdS_ManageStdServices@DieTempStr(BANK0[4]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 9
		 -> StdS_ManageStdServices@DieTempStr(BANK0[4]), STR_5(CODE[9]), STR_4(CODE[9]), STR_3(CODE[6]), 
		 -> STR_2(CODE[5]), 

    StringCopy@DestStr	PTR unsigned char  size(1) Largest target is 80
		 -> RepBuffer(BANK2[80]), 

    ReceiveEvt@Event	PTR struct _EventStructure size(1) Largest target is 2
		 -> I2cReplyPacketReady(COMMON[2]), I2cNewTxNotification(BANK0[2]), I2cNewPacketNotification(BANK0[2]), I2cSetAddress(BANK0[2]), 
		 -> I2cWriteRequest(BANK0[2]), 

    GenerateEvt@Event	PTR struct _EventStructure size(1) Largest target is 2
		 -> I2cReplyPacketReady(COMMON[2]), I2cNewTxNotification(BANK0[2]), I2cNewPacketNotification(BANK0[2]), I2cSetAddress(BANK0[2]), 
		 -> I2cWriteRequest(BANK0[2]), 

    S1386_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Led_MainTask(), Wdg_MainTask(), I2cSlv_MainTask(), I2c_DataReceiveSm(), 
		 -> App_MainTask(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Led_MainTask(), Wdg_MainTask(), I2cSlv_MainTask(), I2c_DataReceiveSm(), 
		 -> App_MainTask(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(1) Largest target is 6
		 -> InitSchTimer@TmrBConfig(BANK1[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct LedBlinkStr size(1) Largest target is 8
		 -> Led1(BANK0[8]), 

    I2c_UpdateTxBuffer@DataBuffer	PTR unsigned char  size(1) Largest target is 80
		 -> RepBuffer(BANK2[80]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(1) Largest target is 11
		 -> I2cConfig(BANK1[11]), 

    Adc_ConfigAnCh@AnChSel	PTR struct _AnalogChSelType size(1) Largest target is 12
		 -> App_MainTask@AnalogChSel(BANK1[12]), 


Critical Paths under _main in COMMON

    _Tmr_TmrBConfig->_TmrBInit
    _Tmr_TmrBConfig->_Tmr_TmrBIrqSet
    _Tmr_TmrBPrSet->___wmul
    ___lmul->___wmul
    _Wdg_MainTask->_Mcu_SetWdgPeriod
    _Led_MainTask->_LedBlinkStateMachine
    _I2c_DataReceiveSm->_ClearRxBuffer
    _I2c_DataReceiveSm->_ClearTxBuffer
    _I2c_DataReceiveSm->_ReceiveEvt
    _I2c_InitI2cModule->_ClearRxBuffer
    _I2c_InitI2cModule->_ClearTxBuffer
    _I2cSlv_I2cDrvHandle->_ReceiveEvt
    _ManageProtocol->_ReceiveEvt
    _utoa->___lwmod
    _LowPowerMode->_Mcu_SetWdgSts
    _GetDieTemperature->_Adc_GetConvResult
    _GetDieTemperature->_Adc_SelectChannel

Critical Paths under _MainInterrupt in COMMON

    _MainInterrupt->i1_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchTimer
    _InitSchTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lmul
    ___lmul->___wmul
    _MainScheduler->_ScheduleTasks
    _ScheduleTasks->_I2c_DataReceiveSm
    _InitializeTasks->_I2c_DataReceiveSm
    _I2cSlv_I2cDrvHandle->_I2c_UpdateTxBuffer
    _App_MainTask->_AppSm
    _ManageProtocol->_StdS_ManageStdServices
    _StdS_ManageStdServices->_utoa
    _utoa->___lwdiv
    _GetDieTemperature->_Adc_GetConvResult

Critical Paths under _MainInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _SystemInit->_InitSchTimer
    _MainScheduler->_ScheduleTasks

Critical Paths under _MainInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _MainInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _MainInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _MainInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _MainInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _MainInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _MainInterrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _MainInterrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _MainInterrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _MainInterrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _MainInterrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _MainInterrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21697
                      _MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    3405
                       _InitSchTimer
               _Mcu_EnableInterrupts
                     _Mcu_InitIntOsc
 ---------------------------------------------------------------------------------
 (2) _Mcu_InitIntOsc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_EnableInterrupts                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitSchTimer                                         7     7      0    3405
                                             37 BANK0      1     1      0
                                              0 BANK1      6     6      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       3     2      1    3202
                                             34 BANK0      3     2      1
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       18    14      4    2073
                                             16 BANK0     18    14      4
                            ___lldiv
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     404
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     290
                                              4 BANK0     12     4      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     857
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       2     1      1     278
                                              4 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     371
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _MainScheduler                                        0     0      0   18292
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        7     7      0    9239
                                             36 BANK0      6     6      0
                                              0 BANK1      1     1      0
                       _App_MainTask *
                    _I2cSlv_MainTask *
                  _I2c_DataReceiveSm *
                       _Led_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      5     5      0    9053
                                             36 BANK0      5     5      0
                       _App_MainTask *
                    _I2cSlv_MainTask *
                  _I2c_DataReceiveSm *
                       _Led_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     0      1      62
                                             27 BANK0      1     0      1
                       _Mcu_ClearWdg
                   _Mcu_SetWdgPeriod
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgPeriod                                     2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     1      1     714
                                             27 BANK0      2     1      1
               _LedBlinkStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedBlinkStateMachine                                 6     5      1     606
                                              4 COMMON     2     1      1
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _I2c_DataReceiveSm                                    9     8      1    1096
                                             27 BANK0      9     8      1
                     _CheckAckStatus
                    _CheckByteStatus
                 _CheckStopBitStatus
                      _ClearRxBuffer
                      _ClearTxBuffer
                        _GenerateEvt
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _CheckStopBitStatus                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _CheckByteStatus                                      1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _CheckAckStatus                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     0      1    1809
                                             27 BANK0      1     0      1
                _I2cSlv_I2cDrvHandle
                  _I2c_InitI2cModule
                      _I2c_SetConfig
 ---------------------------------------------------------------------------------
 (4) _I2c_SetConfig                                        1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    3     3      0     572
                                              0 BANK0      3     3      0
                      _ClearRxBuffer
                      _ClearTxBuffer
 ---------------------------------------------------------------------------------
 (4) _ClearTxBuffer                                        2     2      0      99
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _ClearRxBuffer                                        2     2      0      99
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _I2cSlv_I2cDrvHandle                                  6     6      0    1237
                                              4 BANK0      6     6      0
                        _GenerateEvt
                  _I2c_SetI2cAddress
              _I2c_SetI2cAddressMask
                 _I2c_UpdateTxBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _I2c_UpdateTxBuffer                                   5     4      1     274
                                              4 COMMON     1     0      1
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) _I2c_SetI2cAddressMask                                1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2c_SetI2cAddress                                    1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _App_MainTask                                         1     0      1    5239
                                             27 BANK0      1     0      1
                     _Adc_ConfigAnCh
                              _AppSm
 ---------------------------------------------------------------------------------
 (4) _AppSm                                                3     3      0    4834
                                             24 BANK0      3     3      0
                        _GenerateEvt
                     _ManageProtocol
 ---------------------------------------------------------------------------------
 (5) _ManageProtocol                                       1     1      0    4395
                         _ReceiveEvt
             _StdS_ManageStdServices
 ---------------------------------------------------------------------------------
 (6) _StdS_ManageStdServices                               8     8      0    4066
                                             16 BANK0      8     8      0
                         _BoardReset
                   _ControlLedDirect
                        _GenerateEvt
                  _GetDieTemperature
                       _LowPowerMode
                         _StringCopy
                  _UpdateLebBlinkSts
                               _utoa
 ---------------------------------------------------------------------------------
 (7) _utoa                                                 9     5      4    1937
                                              7 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     500
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     663
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (7) _UpdateLebBlinkSts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _StringCopy                                           9     5      4    1350
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (7) _LowPowerMode                                         0     0      0      31
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _GetDieTemperature                                    4     2      2      99
                                              3 BANK0      4     2      2
                  _Adc_GetConvResult
                     _Adc_GetConvSts
                  _Adc_SelectChannel
                _Adc_StartConversion
 ---------------------------------------------------------------------------------
 (8) _Adc_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Adc_SelectChannel                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _Adc_GetConvSts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Adc_GetConvResult                                    5     3      2      34
                                              4 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _GenerateEvt                                          3     3      0     439
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ControlLedDirect                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _BoardReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ReceiveEvt                                           2     2      0     329
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Adc_ConfigAnCh                                       1     1      0     405
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _MainInterrupt                                        1     1      0      75
                                              3 COMMON     1     1      0
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (10) i1_GenerateEvt                                       3     3      0      75
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MainScheduler
     _InitializeTasks
       _App_MainTask *
         _Adc_ConfigAnCh
         _AppSm
           _GenerateEvt
           _ManageProtocol
             _ReceiveEvt
             _StdS_ManageStdServices
               _BoardReset
               _ControlLedDirect
               _GenerateEvt
               _GetDieTemperature
                 _Adc_GetConvResult
                 _Adc_GetConvSts
                 _Adc_SelectChannel
                 _Adc_StartConversion
               _LowPowerMode
                 _Mcu_SetWdgSts
               _StringCopy
               _UpdateLebBlinkSts
               _utoa
                 ___lwdiv
                 ___lwmod
       _I2cSlv_MainTask *
         _I2cSlv_I2cDrvHandle
           _GenerateEvt
           _I2c_SetI2cAddress
           _I2c_SetI2cAddressMask
           _I2c_UpdateTxBuffer
           _ReceiveEvt
         _I2c_InitI2cModule
           _ClearRxBuffer
           _ClearTxBuffer
         _I2c_SetConfig
       _I2c_DataReceiveSm *
         _CheckAckStatus
         _CheckByteStatus
         _CheckStopBitStatus
         _ClearRxBuffer
         _ClearTxBuffer
         _GenerateEvt
         _ReceiveEvt
       _Led_MainTask *
         _LedBlinkStateMachine
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgPeriod
         _Mcu_SetWdgSts
     _ScheduleTasks
       _App_MainTask *
         _Adc_ConfigAnCh
         _AppSm
           _GenerateEvt
           _ManageProtocol
             _ReceiveEvt
             _StdS_ManageStdServices
               _BoardReset
               _ControlLedDirect
               _GenerateEvt
               _GetDieTemperature
                 _Adc_GetConvResult
                 _Adc_GetConvSts
                 _Adc_SelectChannel
                 _Adc_StartConversion
               _LowPowerMode
                 _Mcu_SetWdgSts
               _StringCopy
               _UpdateLebBlinkSts
               _utoa
                 ___lwdiv
                 ___lwmod
       _I2cSlv_MainTask *
         _I2cSlv_I2cDrvHandle
           _GenerateEvt
           _I2c_SetI2cAddress
           _I2c_SetI2cAddressMask
           _I2c_UpdateTxBuffer
           _ReceiveEvt
         _I2c_InitI2cModule
           _ClearRxBuffer
           _ClearTxBuffer
         _I2c_SetConfig
       _I2c_DataReceiveSm *
         _CheckAckStatus
         _CheckByteStatus
         _CheckStopBitStatus
         _ClearRxBuffer
         _ClearTxBuffer
         _GenerateEvt
         _ReceiveEvt
       _Led_MainTask *
         _LedBlinkStateMachine
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgPeriod
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
           ___lmul
             ___wmul (ARG)
           ___wmul
     _Mcu_EnableInterrupts
     _Mcu_InitIntOsc

 _MainInterrupt (ROOT)
   i1_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      6      45       7       86.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      50      15      100.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1DF      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              2D      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1DF      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue May 01 20:01:13 2018

                                    pc 0002                       _Mcu_SetWdgPeriod 0D04  
                    _UpdateLebBlinkSts 0CF9                            __CFG_CP$OFF 0000  
           __end_of_I2c_UpdateTxBuffer 0E27                                     l60 071C  
                                   l70 0F6D                                     l66 0F45  
               __end_of_Mcu_InitIntOsc 0CA5             __size_of_GetDieTemperature 0019  
               ??_LedBlinkStateMachine 0020                    ___wmul@multiplicand 0022  
          __size_of_CheckStopBitStatus 000A                     ?_UpdateLebBlinkSts 0070  
                 __end_of_App_MainTask 0F6E                                    l301 0CA2  
                                  l411 0DC0                                    l413 0DC3  
       __end_of_StdS_ManageStdServices 0188                                    l414 0DC6  
                                  l423 07AE                                    l256 0259  
                                  l416 0DD4                                    l604 05F3  
                                  l381 054C                                    l374 0526  
                                  l366 0507                                    l631 0EE6  
                                  l383 054F                                    l391 0F1D  
                                  l712 0CC4                                    l384 0553  
                                  l376 0529                                    l368 0509  
                                  l377 052D                                    l369 050C  
                                  l393 0F26                                    l634 0EF2  
                                  l394 0F2F                                    l387 057E  
                                  l628 0ECC                                    l396 0F43  
                                  l742 0187                                    l399 03D8  
                                  l584 0DA7                                    l780 0DBD  
                                  l918 0DF7                                    _PR2 001B  
                                  _PR4 0416                           __CFG_CPD$OFF 0000  
                                  _PR6 041D                           __CFG_BORV$LO 0000  
                                  wreg 0009                           __CFG_IESO$ON 0000  
                  ??_UpdateLebBlinkSts 0074                                   S3865 0800  
                      ??_MainInterrupt 0073                           __CFG_LVP$OFF 0000  
                      ??_MainScheduler 0076                                   l3101 0FE0  
                                 l1190 06B0                                   l3111 0FFB  
                                 l3201 0688                                   l3107 0FF2  
                                 l3123 0F75                                   l3125 0F81  
                                 l3133 0F96                                   l3231 0E83  
                                 l3233 0E84                                   l3129 0F8D  
                                 l3147 0EA3                                   l3163 0D01  
                                 l3251 00CF                                   l3403 0701  
                                 l3411 070D                                   l3181 0DDC  
                                 l3157 0EAA                                   l3245 00B6  
                                 l3501 051A                                   l3341 0DF0  
                                 l3191 066A                                   l3271 010D  
                                 l3263 0101                                   l3239 009D  
                                 l3407 070A                                   l3511 0557  
                                 l3281 0129                                   l3265 0104  
                                 l3257 00E8                                   l3337 0E0E  
                                 l3513 0562                                   l3505 0531  
                                 l3099 0FD4                                   l3267 0107  
                                 l3611 05D6                                   l3507 053C  
                                 l3355 0FA4                                   l3269 010A  
                                 l3605 05B8                                   l3613 05DA  
                                 l3701 01D4                                   l3517 0572  
                                 l3373 072E                                   l3541 0398  
                                 l3295 0166                                   l3703 01D9  
                                 l3383 075C                                   l3375 073C  
                                 l3359 0FAE                                   l3551 03DA  
                                 l3543 03B0                                   l3393 06C7  
                                 l3465 048A                                   l3721 021A  
                                 l3529 0F38                                   l3619 05EA  
                                 l3475 04C9                                   l3467 0494  
                                 l3651 0F61                                   l3731 0233  
                                 l3715 01F8                                   l3387 0767  
                                 l3539 0381                                   l3547 03C9  
                                 l3397 06F4                                   l3485 04F4  
                                 l3733 0239                                   l3821 0317  
                                 l3549 03D5                                   l3591 0594  
                                 l3487 04FF                                   l3655 0F64  
                                 l3743 0253                                   l3727 0224  
                                 l3559 0DC9                                   l3663 078D  
                                 l3585 0582                                   l3673 0189  
                                 l3761 0D9B                                   l3739 024E  
                                 l3819 02F5                                   l3835 0D76  
                                 l3499 050F                                   l3597 05AA  
                                 l3781 0DB1                                   l3749 025E  
                                 l3757 0D94                                   l3765 0D9E  
                                 l3687 01AE                                   l3679 019C  
                                 l3775 0EE9                                   l3785 0DB4  
                                 l3689 01B3                                   l3769 0ED1  
                                 l3779 0DA9                                   STR_1 1015  
                                 STR_2 1023                                   STR_3 101D  
                                 STR_4 100C                                   STR_5 100C  
                                 _LATA 010C                                   _LATB 010D  
                                 _LATC 010E                                   u3105 07D4  
                                 u2315 0F78                                   u3115 07E4  
                                 u2245 0FD7                                   u3205 02E7  
                                 u2335 0F87                                   u3215 02FA  
                                 u3135 0281                                   u2265 0FE1  
                                 u2345 0F8E                                   u3225 030D  
                                 u3145 0288                                   u2275 0FEB  
                                 u3155 029A                                   u2285 0FF3  
                                 u3165 02AD                                   u2605 0FB6  
                                 u3095 07CF                                   u3175 02B4  
                                 u2705 06DD                                   u3185 02C5  
                                 u3195 02D5                                   u2635 0731  
                                 u2555 0DF8                                   u2805 0450  
                                 u2725 0CD5                                   u2565 0DFD  
                                 u2815 0475                                   u2735 0CDF  
                                 u2655 073D                                   u2745 0CE9  
                                 u2665 0751                                   u2755 03F1  
                                 u2835 04BA                                   u2675 075D  
                                 u2595 0FAF                                   u2765 040C  
                                 u2695 06CE                                   u2775 041D  
                                 u2855 04E6                                   u2785 042E  
                                 u2795 043F                                   _WPUA 020C  
                                 _WPUB 020D                                   _WPUC 020E  
                                 _Led1 0068                           __CFG_WRT$OFF 0000  
                        __CFG_FCMEN$ON 0000                                   _main 0CA5  
                                 fsr0h 0005                                   fsr1h 0007  
                                 fsr0l 0004                                   indf0 0000  
                                 indf1 0001                                   fsr1l 0006  
                                 btemp 007E                        _I2cSlaveAddress 0076  
                                 _utoa 0664                          __CFG_BOREN$ON 0000  
                                 ltemp 007E                                   start 002A  
                                 ttemp 007E                                   wtemp 007E  
                   AppSm@WpuSetCounter 0055                    __end_of_GenerateEvt 0EA8  
                        ?_InitSchTimer 0070                         ??_Mcu_ClearWdg 0074  
                       ?_Mcu_SetWdgSts 0070                             _BoardReset 0002  
                        __CFG_MCLRE$ON 0000              __end_of_UpdateLebBlinkSts 0D04  
                  StringCopy@SourceStr 0020                        ?_Mcu_InitIntOsc 0070  
                        __CFG_PLLEN$ON 0000                                  ?_main 0070  
                      __end_of___lldiv 0770                                  ?_utoa 0027  
                      __end_of___lwdiv 1000                        __end_of___lwmod 0F9B  
                                i1l451 0025              Mcu_SetWdgPeriod@WdgPeriod 0075  
                                _AppSm 06C6                    ___lmul@multiplicand 0028  
           __size_of_I2c_SetI2cAddress 0005                       ??_Adc_GetConvSts 0074  
                 __end_of_Led_MainTask 0EF3                        __end_of_dpowers 100A  
                                pclath 000A                                  ltemp0 007E  
                                ltemp1 0082                                  ltemp2 0086  
                                ltemp3 0080                                  ttemp0 007E  
                                ttemp1 0081                                  ttemp2 0084  
                                ttemp3 0087                                  ttemp4 007F  
                                utoa@c 002E                                  utoa@v 002C  
                                status 0003                        _I2cSlv_MainTask 0D93  
                                wtemp0 007E                                  wtemp1 0080  
                                wtemp2 0082                                  wtemp3 0084  
                                wtemp4 0086                                  wtemp5 0088  
                                wtemp6 007F                       ??_Adc_ConfigAnCh 0074  
                       ??_InitSchTimer 0045                        __initialization 002C  
                    _I2c_DataReceiveSm 0188       StdS_ManageStdServices@DieTempStr 0032  
                         __end_of_main 0CAC                           __end_of_utoa 06C6  
                        AppSm@AppState 0054                     ?_I2c_DataReceiveSm 003B  
                          _LedBlinkSts 0066                                 ??_main 0076  
                               ??_utoa 002B         __size_of_I2c_SetI2cAddressMask 0005  
                     __end_of_TmrBInit 057F                             _ReceiveEvt 0E65  
        __end_of_I2c_SetI2cAddressMask 0C9E                    ??_I2c_DataReceiveSm 003C  
                               ?_AppSm 0070               I2cSlv_I2cDrvHandle@Index 0029  
                      ReceiveEvt@Event 0075                                 _ADRESH 009C  
                               _ADRESL 009B                       ??_ManageProtocol 0076  
                               _ANSELA 018C                                 _ANSELB 018D  
                               _ANSELC 018E                                 i1l3019 0E60  
                               i1l3039 001B                            _GenerateEvt 0E86  
                           _TaskNumber 100A                    App_MainTask@Options 003B  
                      ??_Mcu_SetWdgSts 0074          I2c_DataReceiveSm@I2cRxAddress 0057  
            __end_of_I2c_DataReceiveSm 026A                         __CFG_PWRTE$OFF 0000  
                          ?_BoardReset 0070           __end_of_Mcu_EnableInterrupts 0C90  
           __size_of_UpdateLebBlinkSts 000B                  __size_of_App_MainTask 002A  
                               ___lmul 0F9B                                 ___wmul 0DEE  
                       __CFG_STVREN$ON 0000                              ??___lldiv 0074  
                            ??___lwdiv 0074                 Tmr_TmrBPrSet@IntFreqHz 0030  
                            ??___lwmod 0074            GetDieTemperature@DieTempRes 0025  
            __size_of_ControlLedDirect 000A                        _CheckByteStatus 0CDB  
          __end_of_I2cSlv_I2cDrvHandle 05F4                          ?_LowPowerMode 0070  
               Adc_SelectChannel@SelCh 0075                   __end_of_Mcu_ClearWdg 0800  
              __end_of_I2cSlv_MainTask 0DA8                 __size_of_ScheduleTasks 00BC  
             __end_of_Mcu_SetWdgPeriod 0D0F                  __end_ofi1_GenerateEvt 0E65  
                        ?_Wdg_MainTask 003B                __end_of__initialization 0098  
               Tmr_TmrBPrSet@Prescaler 0032                           _App_MainTask 0F44  
               InitSchTimer@TmrBConfig 00DF                            _InitCounter 004A  
                           _StringCopy 0EA8                          __end_of_AppSm 071D  
                       __pcstackCOMMON 0070           __size_of_Adc_StartConversion 0003  
                         __pidataBANK0 0CEF                           __pidataBANK1 0EF3  
             __size_of_InitializeTasks 0043                  __size_of_Led_MainTask 0028  
                __end_of_I2c_SetConfig 0D93                            ?_ReceiveEvt 0070  
             _I2cNewPacketNotification 005E                         ??_LowPowerMode 0075  
                       _OPTION_REGbits 0095                             _SystemInit 0CB4  
                 __end_of_InitSchTimer 0E44                                ??_AppSm 0038  
        StdS_ManageStdServices@DieTemp 0036                  __end_of_Tmr_TmrBPrSet 03DC  
                  __size_of_BoardReset 0002                     _I2c_UpdateTxBuffer 0E0A  
                           __pbssBANK0 004A                             __pbssBANK1 00C8  
                           __pbssBANK2 0120                             __pbssBANK3 01A0  
                           __pbssBANK4 0220                             __pbssBANK5 02A0  
                       ??_Wdg_MainTask 0076                    ?_I2c_UpdateTxBuffer 0074  
           __size_of_I2c_DataReceiveSm 00E2                              ?_TmrBInit 0074  
                     ??_Mcu_InitIntOsc 0074                __size_of_Tmr_TmrBConfig 004B  
                           __pmaintext 0CA5                __end_of_CheckByteStatus 0CE5  
              __size_of_Tmr_TmrBIrqSet 0029                                ?___lmul 0024  
                         _Led_MainTask 0ECB                                ?___wmul 0020  
                        _ScheduleTasks 026A             __end_of_CheckStopBitStatus 0CEF  
                           __pintentry 0004                     ClearRxBuffer@Index 0075  
                       ___lmul@product 002C                __size_of_CheckAckStatus 000A  
                 ??_I2c_UpdateTxBuffer 0020               i1GenerateEvt@EventStatus 0072  
        __size_of_LedBlinkStateMachine 007C                    Wdg_MainTask@Options 003B  
               __size_of_ClearRxBuffer 0010                                _SSP1ADD 0212  
                 _Mcu_EnableInterrupts 0C8D                 __size_of_ClearTxBuffer 0010  
                              _SSP1BUF 0211                                _SSP1MSK 0213  
                     ?_I2cSlv_MainTask 003B                        _I2cWriteRequest 0064  
                __end_of_MainInterrupt 002A                  __end_of_MainScheduler 0D80  
                          ?_StringCopy 0020                    __size_of_ReceiveEvt 0021  
                           ??_TmrBInit 0020                         ?_ScheduleTasks 0070  
                      __size_of___lmul 0030                                ___lldiv 071D  
                      __size_of___wmul 001C                                ___lwdiv 0FCB  
                              ___lwmod 0F6E                       _ControlLedDirect 0CBD  
                            _I2cConfig 00D4                              _I2cPacket 239D  
                Tmr_TmrBIrqSet@TmrNumb 0075                                __ptext1 0CB4  
                              __ptext2 0C9E                                __ptext3 0C8D  
                              __ptext4 0E27                                __ptext5 0770  
                              __ptext6 0326                                __ptext7 0DEE  
                              __ptext8 0F9B                                __ptext9 071D  
                __size_of_Mcu_ClearWdg 0002                                _dpowers 1000  
                            _T2CONbits 001C                          ?_Tmr_StartTmr 0070  
                          ?_SystemInit 0070                      ??_InitializeTasks 0044  
                            _T4CONbits 0417                        _Tmr2IsrCallback 004E  
                ?_Mcu_EnableInterrupts 0070                              _T6CONbits 041E  
        I2c_SetI2cAddress@SlaveAddress 0074                    Mcu_SetWdgSts@WdgSts 0074  
                              clrloop0 0D1C                   end_of_initialization 0098  
                         ?_GenerateEvt 0070                 _MainSystemTimebaseFlag 0067  
                              init_ram 0D27                                initloop 0D28  
                      ___lldiv@divisor 0020                   __end_of_LowPowerMode 0D40  
                         ??_BoardReset 0074                        ___lldiv@counter 002C  
                        _ClearRxBuffer 0D50                          _ClearTxBuffer 0D60  
                        StringCopy@Len 0023                       ?_CheckByteStatus 0070  
                         _Mcu_ClearWdg 07FE               ??_StdS_ManageStdServices 0030  
                         __pstringtext 1000                                utoa@buf 002F  
                              utoa@val 0027                  __size_of_InitSchTimer 001D  
                 __end_of_Wdg_MainTask 0DBE                              _PORTCbits 000E  
                       ??_Tmr_StartTmr 0074                       _InterruptCounter 004C  
    LedBlinkStateMachine@LedInitStatus 0074                       __CFG_FOSC$INTOSC 0000  
                    StringCopy@DestStr 0022                        _Tmr4IsrCallback 0050  
                            _TRISBbits 008D                              _TRISCbits 008E  
                  __size_of_StringCopy 0023                  _I2c_SetI2cAddressMask 0C99  
                  _Adc_StartConversion 0C8A                     __end_of_BoardReset 0004  
          I2c_DataReceiveSm@I2cRxState 0059                      ?_Mcu_SetWdgPeriod 0070  
            Tmr_TmrBPrSet@TmrBPrCfgSts 003D                              _CmdBuffer 01A0  
                   ??_Mcu_SetWdgPeriod 0074                __size_of_Adc_GetConvSts 0004  
                       ?_ClearRxBuffer 0070                        ??_ScheduleTasks 0044  
                       _Tmr_TmrBConfig 0770                Tmr_TmrBPrSet@Postscaler 0033  
                __end_of_Mcu_SetWdgSts 0CB4                           _InitSchTimer 0E27  
                       ?_ClearTxBuffer 0070                    __size_of_SystemInit 0009  
                       _Tmr_TmrBIrqSet 0F1B                   ?_Adc_StartConversion 0070  
                       __end_of___lmul 0FCB                         _CheckAckStatus 0CD1  
                       __end_of___wmul 0E0A                __size_of_Adc_ConfigAnCh 0070  
                         ??_ReceiveEvt 0074                 ??_Mcu_EnableInterrupts 0074  
                  start_initialization 002C                        _Tmr6IsrCallback 0052  
                            _RepBuffer 0120             I2c_InitI2cModule@I2cConfig 0022  
         __size_of_I2cSlv_I2cDrvHandle 0075                 __end_of_Tmr_TmrBConfig 07BB  
               __end_of_Tmr_TmrBIrqSet 0F44                              _TaskTable 00A0  
                          _SystemState 005D                     __end_of_ReceiveEvt 0E86  
              __size_of_ManageProtocol 000A                  ??_Adc_StartConversion 0074  
                Tmr_TmrBConfig@TmrNumb 0044                 __end_of_CheckAckStatus 0CDB  
                             ??___lmul 0076                               ??___wmul 0074  
                    __size_of_TmrBInit 007B                           _RepBufferLen 0077  
      __size_of_StdS_ManageStdServices 00EC                            __pdataBANK0 0066  
                          __pdataBANK1 00A0                     ClearTxBuffer@Index 0075  
               __size_ofi1_GenerateEvt 0021                    Tmr_StartTmr@TmrNumb 0074  
                          __pbssBIGRAM 239D                     __end_of_TaskNumber 100C  
               ?_I2c_SetI2cAddressMask 0070                            __pbssCOMMON 0076  
                            ___latbits 0002                          __pcstackBANK0 0020  
                        __pcstackBANK1 00DF                     _CheckStopBitStatus 0CE5  
               GenerateEvt@EventStatus 0020               __end_of_ControlLedDirect 0CC7  
                __size_of_LowPowerMode 000D                    ?_CheckStopBitStatus 0070  
         __end_of_LedBlinkStateMachine 0504                        ??_ClearRxBuffer 0074  
                 __size_of_GenerateEvt 0022                        ?_Tmr_TmrBConfig 0042  
                      ??_ClearTxBuffer 0074                        ?_Tmr_TmrBIrqSet 0074  
                 __end_of_Tmr_StartTmr 0DD5                           ??_StringCopy 0024  
               __size_of_I2c_SetConfig 0013                       ___lwdiv@dividend 0022  
                     GenerateEvt@Event 0021                 __size_of_Tmr_TmrBPrSet 00B6  
                __size_of_Wdg_MainTask 0016                      _Adc_SelectChannel 0D0F  
              App_MainTask@AnalogChSel 00C8                        ?_CheckAckStatus 0070  
              Tmr_TmrBIrqSet@TmrIrqSts 0074                        _InitializeTasks 07BB  
                             ?___lldiv 0020                    _I2cReplyPacketReady 0078  
                             ?___lwdiv 0020                               ?___lwmod 0020  
                   ?_Adc_SelectChannel 0070                   ??_CheckStopBitStatus 0074  
                            __pswtext1 0800            __size_of_I2c_UpdateTxBuffer 001D  
                          _I2cRxBuffer 02A0               I2c_DataReceiveSm@Options 003B  
                Adc_ConfigAnCh@AnChSel 0074                            _I2cTxBuffer 0220  
                         ??_SystemInit 0076         InitializeTasks@ActiveTaskIndex 0048  
                  ??_Adc_SelectChannel 0074                         __size_of_AppSm 0057  
                         _LowPowerMode 0D33                       __CFG_WDTE$SWDTEN 0000  
                   __end_of_StringCopy 0ECB                       ___lwdiv@quotient 0025  
               _StdS_ManageStdServices 009C                          i1_GenerateEvt 0E44  
                         _Wdg_MainTask 0DA8                         ___wmul@product 0074  
                             _LATCbits 010E                         _Adc_GetConvSts 0C90  
                            clear_ram0 0D1B               __size_of_I2cSlv_MainTask 0015  
                             _PIE1bits 0091                               _PIE3bits 0093  
                        _I2cSetAddress 0062              __end_of_Adc_SelectChannel 0D1B  
                    _I2c_InitI2cModule 03DC                               _PIR1bits 0011  
                             _PIR3bits 0013             Adc_GetConvResult@AdcResult 0021  
                   __end_of_SystemInit 0CBD                     ?_I2c_InitI2cModule 0070  
                             _SSP1CON1 0215                               _SSP1CON2 0216  
                             _SSP1CON3 0217                               _SSP1STAT 0214  
                       _Adc_ConfigAnCh 05F4                 __size_of_MainInterrupt 0026  
           I2c_DataReceiveSm@I2cRxFlag 0058                 __size_of_MainScheduler 0010  
                           _ADCON0bits 009D                             _ADCON1bits 009E  
                    ___wmul@multiplier 0020                    ??_I2c_InitI2cModule 0020  
              __size_of_Mcu_InitIntOsc 0007                               _WPUAbits 020C  
                             _WPUBbits 020D                               _WPUCbits 020E  
                        _I2c_SetConfig 0D80                          _Tmr_TmrBPrSet 0326  
                    ___lmul@multiplier 0024                 I2cSlv_MainTask@Options 003B  
                       ?i1_GenerateEvt 0070               Tmr_TmrBConfig@TmrBConfig 0042  
               __end_of_Adc_GetConvSts 0C94           LedBlinkStateMachine@LedBlink 0075  
                        ?_App_MainTask 003B              __end_of_I2c_InitI2cModule 0488  
                    _Adc_GetConvResult 0D40                __end_of_InitializeTasks 07FE  
                             _TmrBInit 0504                     ?_Adc_GetConvResult 0074  
                       _ManageProtocol 0CC7                   Tmr_TmrBPrSet@Divisor 003E  
               __end_of_Adc_ConfigAnCh 0664              __size_of_Mcu_SetWdgPeriod 000B  
                     __size_of___lldiv 0053                    ??_Adc_GetConvResult 0020  
                  _I2cSlv_I2cDrvHandle 057F                       __size_of___lwdiv 0035  
                 Tmr_TmrBPrSet@TmrNumb 003C                       __size_of___lwmod 002D  
                    _GetDieTemperature 0DD5                             _ANSELAbits 018C  
                           _ANSELBbits 018D                             _ANSELCbits 018E  
             __size_of_CheckByteStatus 000A                   _LedBlinkStateMachine 0488  
                       ?_I2c_SetConfig 0070                     ?_GetDieTemperature 0023  
                       ?_Tmr_TmrBPrSet 0030                        ___lwdiv@divisor 0020  
                      ___lwdiv@counter 0024                               __ptext10 0F1B  
                             __ptext11 0DBE                               __ptext20 0DA8  
                             __ptext12 0504                               __ptext21 0D04  
                             __ptext13 0D70                               __ptext30 0D50  
                             __ptext22 07FE                               __ptext14 026A  
                             __ptext31 057F                               __ptext23 0488  
                             __ptext15 07BB                               __ptext40 0FCB  
                             __ptext32 0E0A                               __ptext24 0CE5  
                             __ptext16 0ECB                               __ptext41 0CF9  
                             __ptext33 0C99                               __ptext25 0CDB  
                             __ptext17 0D93                               __ptext50 0E86  
                             __ptext42 0EA8                               __ptext34 0C94  
                             __ptext26 0CD1                               __ptext18 0188  
                             __ptext51 0CBD                               __ptext43 0D33  
                             __ptext35 06C6                               __ptext27 0D80  
                             __ptext19 0F44                               __ptext52 0002  
                             __ptext44 0CAC                               __ptext36 0CC7  
                             __ptext28 03DC                               __ptext53 0E65  
                             __ptext45 0DD5                               __ptext37 009C  
                             __ptext29 0D60                               __ptext54 05F4  
                             __ptext46 0C8A                               __ptext38 0664  
                             __ptext47 0D0F                               __ptext39 0F6E  
                             __ptext56 0E44                               __ptext48 0C90  
                             __ptext49 0D40                           _SSP1CON1bits 0215  
              I2c_DataReceiveSm@OpType 005A                    ??_GetDieTemperature 0076  
                 ?_I2cSlv_I2cDrvHandle 0070                  __size_of_Tmr_StartTmr 0017  
            __end_of_Adc_GetConvResult 0D50                         ??_App_MainTask 0076  
                        _MainInterrupt 0004                     i1GenerateEvt@Event 0071  
                      ?_Adc_GetConvSts 0070                          _MainScheduler 0D70  
                   TmrBInit@Postscaler 0075                          __size_of_main 0007  
                        __size_of_utoa 0062                    Led_MainTask@Options 003B  
               __end_of_ManageProtocol 0CD1           I2c_UpdateTxBuffer@DataBuffer 0022  
           __size_of_Adc_SelectChannel 000C                  __end_of_ScheduleTasks 0326  
                        ?_Led_MainTask 003B                        ?_Adc_ConfigAnCh 0070  
                             int$flags 007E                      ??_I2cSlv_MainTask 0076  
                      StringCopy@Index 0074           ScheduleTasks@ActiveTaskIndex 00DF  
            __end_of_GetDieTemperature 0DEE                ??_I2c_SetI2cAddressMask 0074  
                ?_LedBlinkStateMachine 0074                            _OSCSTATbits 009A  
                           _INTCONbits 000B                           _Tmr_StartTmr 0DBE  
                           _FVRCONbits 0117                   _I2cNewTxNotification 0060  
        __size_of_Mcu_EnableInterrupts 0003                 __size_of_Mcu_SetWdgSts 0008  
                      ??i1_GenerateEvt 0070                      _I2c_SetI2cAddress 0C94  
                     ??_Tmr_TmrBConfig 0043                  ??_I2cSlv_I2cDrvHandle 0024  
                     ??_Tmr_TmrBIrqSet 0075                               intlevel1 0000  
                       ?_MainInterrupt 0070                      TmrBInit@Prescaler 0074  
                       ?_MainScheduler 0070                     ?_I2c_SetI2cAddress 0070  
             I2c_UpdateTxBuffer@Length 0074                      ?_ControlLedDirect 0070  
                     ___lwmod@dividend 0022                 I2c_DataReceiveSm@Index 0043  
          __end_of_Adc_StartConversion 0C8D                       ___lldiv@dividend 0024  
           __size_of_I2c_InitI2cModule 00AC                      __CFG_CLKOUTEN$OFF 0000  
                     ??_CheckAckStatus 0074                        ?_ManageProtocol 0070  
                   ??_ControlLedDirect 0074             I2c_DataReceiveSm@RxCounter 005B  
                     ?_InitializeTasks 0070                             _OSCCONbits 0099  
                  ??_I2c_SetI2cAddress 0074                         ??_Led_MainTask 003C  
           I2c_DataReceiveSm@TxCounter 005C                        ??_I2c_SetConfig 0074  
                             utoa@base 0029                         _Mcu_InitIntOsc 0C9E  
                      ??_Tmr_TmrBPrSet 0034                I2c_UpdateTxBuffer@Index 0023  
                     ___lldiv@quotient 0028                        ___lwmod@divisor 0020  
              ?_StdS_ManageStdServices 0070                        ___lwmod@counter 0075  
            __end_of_I2c_SetI2cAddress 0C99                  ReceiveEvt@EventStatus 0074  
                           _WDTCONbits 0097                      ??_CheckByteStatus 0074  
                        ??_GenerateEvt 0074                        TmrBInit@TmrNumb 0021  
           __size_of_Adc_GetConvResult 0010  I2c_SetI2cAddressMask@SlaveAddressMask 0074  
I2cSlv_I2cDrvHandle@I2cReceiveMsgState 0056                  __end_of_ClearRxBuffer 0D60  
                __end_of_ClearTxBuffer 0D70                          ?_Mcu_ClearWdg 0070  
                        _Mcu_SetWdgSts 0CAC  
